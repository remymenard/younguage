---
- :url: https://medium.com/thrive-global/how-technology-hijacks-peoples-minds-from-a-magician-and-google-s-design-ethicist-56d62ef5edf3?source=search_post---------0
  :title: How Technology is Hijacking Your Mind — from a Former Insider
  :content: '<p>Estimated reading time: 15 minutes.</p><blockquote><p>“It’s easier
    to fool people than to convince them that they’ve been fooled.” — Unknown.</p></blockquote><p>I’m
    an expert on how technology hijacks our psychological vulnerabilities. That’s
    why I spent the last three years as a Design Ethicist at Google caring about how
    to design things in a way that defends a billion people’s minds from getting hijacked.</p><p>When
    using technology, we often focus <em>optimistically</em> on all the things it
    does for us. But I want to show you where it might do the opposite.</p><p><em>Where
    does technology exploit our minds’ weaknesses</em>?</p><p>I learned to think this
    way when I was a magician. Magicians start by looking for <em>blind spots, edges,
    vulnerabilities and</em> <em>limits</em> of people’s perception, so they can influence
    what people do without them even realizing it. Once you know how to push people’s
    buttons, you can play them like a piano.</p><p><img src="https://cdn-images-1.medium.com/max/2892/1*IG2MfhS05JjHryBHnXLXwA.png"
    alt="That’s me performing sleight of hand magic at my mother’s birthday party"><em>That’s
    me performing sleight of hand magic at my mother’s birthday party</em></p><p>And
    this is exactly what product designers do to your mind. They play your psychological
    vulnerabilities (consciously and unconsciously) against you in the race to grab
    your attention.</p><p>I want to show you how they do it.</p><h3>Hijack #1: If
    You Control the Menu, You Control the Choices</h3><p><img src="https://cdn-images-1.medium.com/max/2000/1*kW01thCZaWQyq0A08hSj5Q.png"
    alt=""></p><p>Western Culture is built around ideals of individual choice and
    freedom. Millions of us fiercely defend our right to make “free” choices, while
    we ignore how those choices are manipulated upstream by menus we didn’t choose
    in the first place.</p><p>This is exactly what magicians do. They give people
    the illusion of free choice while architecting the menu so that they win, no matter
    what you choose. I can’t emphasize enough how deep this insight is.</p><p>When
    people are given a menu of choices, they rarely ask:</p><ul><li><p>“what’s not
    on the menu?”</p></li><li><p>“why am I being given <em>these options</em> and
    not others?”</p></li><li><p>“do I know the menu provider’s goals?”</p></li><li><p>“is
    this menu <em>empowering</em> for my original need, or are the choices actually
    a distraction?” (e.g. an overwhelmingly array of toothpastes)</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*-h0aCLf8EH5OxCIdMXERgA.jpeg" alt="How
    *empowering is this menu* of choices for the need, “I ran out of toothpaste”?"><em>How
    *empowering is this menu</em> of choices for the need, “I ran out of toothpaste”?*</p><p>For
    example, imagine you’re out with friends on a Tuesday night and want to keep the
    conversation going. You open Yelp to find nearby recommendations and see a list
    of bars. The group turns into a huddle of faces staring down at their phones *comparing
    bars. *They scrutinize the photos of each, comparing cocktail drinks. Is this
    menu still relevant to the original desire of the group?</p><p>It’s not that bars
    aren’t a good choice, it’s that Yelp substituted the group’s original question
    (“where can we go to keep talking?”) with a different question (“what’s a bar
    with good photos of cocktails?”) all by shaping the menu.</p><p>Moreover, the
    group falls for the illusion that Yelp’s menu represents a <em>complete set of
    choices</em> for where to go. While looking down at their phones, they don’t see
    the park across the street with a band playing live music. They miss the pop-up
    gallery on the other side of the street serving crepes and coffee. Neither of
    those show up on Yelp’s menu.</p><p><img src="https://cdn-images-1.medium.com/max/2218/1*Ih_bIVQ12Ibu076252-bKA.png"
    alt="Yelp subtly reframes the group’s need “where can we go to keep talking?”
    in terms of photos of cocktails served."><em>Yelp subtly reframes the group’s
    need “where can we go to keep talking?” in terms of photos of cocktails served.</em></p><p>The
    more choices technology gives us in nearly every domain of our lives (information,
    events, places to go, friends, dating, jobs) — <em>the more we assume that our
    phone is always the most empowering and useful menu to pick from</em>. Is it?</p><p><em>**The
    “most empowering” menu is different than the menu that has the most choices</em>*.
    *But when we blindly surrender to the menus we’re given, it’s easy to lose track
    of the difference:</p><ul><li><p>“Who’s free tonight to hang out?” becomes a menu
    of *most recent people who texted us *(who we could ping).</p></li><li><p>“What’s
    happening in the world?” becomes a menu of news feed stories.</p></li><li><p>“Who’s
    single to go on a date?” becomes a menu* *of faces to swipe on Tinder (instead
    of local events with friends, or urban adventures nearby).</p></li><li><p>“I have
    to respond to this email.” becomes a menu of <em>keys to type a response</em>
    (instead of empowering ways to communicate with a person).</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*LsgYHAM-xhnkYGSkocOmew.png" alt="All
    user interfaces are menus. What if your email client gave you *empowering choices
    of ways to respond, instead of “what message do you want to type back?” (Design
    by Tristan Harris)*"><em>All user interfaces are menus. What if your email client
    gave you *empowering choices of ways to respond, instead of “what message do you
    want to type back?” (Design by Tristan Harris)</em>*</p><p>When we wake up in
    the morning and turn our phone over to see a list of notifications — it frames
    the experience of “waking up in the morning” around a menu of “all the things
    I’ve missed since yesterday.” (for more examples, see <a href="https://vimeo.com/123488311">Joe
    Edelman’s Empowering Design talk</a>)</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*iDMEQ0vQrx2ep_Z4G-mY1w.png"
    alt="A list of notifications when we wake up in the morning — how *empowering
    is this menu of choices when we wake up? Does it reflect what we care about? (from
    [Joe Edelman’s Empowering Design Talk](https://vimeo.com/123488311))*"><em>A list
    of notifications when we wake up in the morning — how *empowering is this menu
    of choices when we wake up? Does it reflect what we care about? (from <a href="https://vimeo.com/123488311">Joe
    Edelman’s Empowering Design Talk</a>)</em>*</p><p>By shaping the menus we pick
    from, technology hijacks the way we perceive our choices and replaces them with
    new ones. But the closer we pay attention to the options we’re given, the more
    we’ll notice when they don’t actually align with our true needs.</p><h3><strong>Hijack
    #2: Put a Slot Machine In a Billion Pockets</strong></h3><p>If you’re an app,
    how do you keep people hooked? Turn yourself into a slot machine.</p><p>The average
    person checks their phone 150 times a day. Why do we do this? Are we making <em>150</em>
    <em>conscious</em> <em>choices</em>?</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*BNOfmUQ2nTRVPVe0CHx7ew.png"
    alt="How often do you check your email per day?"><em>How often do you check your
    email per day?</em></p><p>One major reason why is the #1 psychological ingredient
    in slot machines: <a href="https://en.wikipedia.org/wiki/Reinforcement#Intermittent_reinforcement.3B_schedules">**intermittent
    variable rewards</a>**.</p><p>If you want to maximize addictiveness, all tech
    designers need to do is link a user’s action (like pulling a lever) with a <em>variable
    reward</em>. You pull a lever and immediately receive either an enticing reward
    (a match, a prize!) or nothing. Addictiveness is maximized when the rate of reward
    is most variable.</p><p>Does this effect really work on people? Yes. <strong>Slot
    machines make more money in the United States than baseball, movies, and theme
    parks <a href="http://www.cbsnews.com/news/slot-machines-the-big-gamble-07-01-2011/">combined</a>*.</strong>*
    Relative to other kinds of gambling, people get ‘problematically involved’ with
    slot machines <a href="http://99percentinvisible.org/episode/episode-78-no-armed-bandit/">**3–4x
    faster</a>*** <em>according to NYU professor Natasha Dow Schull, author of *Addiction
    by Design.</em></p><p><img src="https://cdn-images-1.medium.com/max/5184/1*jv-w56ymDBTwsiqx7YdIdQ.jpeg"
    alt="Image courtesy of Jopwell"><em>Image courtesy of Jopwell</em></p><p><strong>But
    here’s the unfortunate truth — several billion people have a slot machine their
    pocket:</strong></p><ul><li><p>When we pull our phone out of our pocket, we’re
    <em>playing a slot machine</em> to see what notifications we got.</p></li><li><p>When
    we pull to refresh our email, we’re *playing a slot machine *to see what new email
    we got.</p></li><li><p>When we swipe down our finger to scroll the Instagram feed,
    we’re <em>playing a slot machine</em> to see what photo comes next.</p></li><li><p>When
    we swipe faces left/right on dating apps like Tinder, we’re <em>playing a slot
    machine</em> to see if we got a match.</p></li><li><p>When we tap the # of red
    notifications, we’re *playing a slot machine *to what’s underneath.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*IoBUUcjfeAUnmY2ccu75Ww.png" alt=""></p><p>Apps
    and websites sprinkle intermittent variable rewards all over their products because
    it’s good for business.</p><p>But in other cases, slot machines emerge by accident.
    For example, there is no malicious corporation behind <em>all of email</em> who
    consciously chose to make it a slot machine. No one profits when millions check
    their email and nothing’s there. Neither did Apple and Google’s designers <em>want</em>
    phones to work like slot machines. It emerged by accident.</p><p>But now companies
    like Apple and Google have a responsibility to reduce these effects by <em>converting
    intermittent variable rewards into less addictive, more predictable ones</em>
    with better design. For example, they could empower people to set predictable
    times during the day or week for when they want to check “slot machine” apps,
    and correspondingly adjust when new messages are delivered to align with those
    times.</p><h3>Hijack #3: Fear of Missing Something Important (FOMSI)</h3><p>Another
    way apps and websites hijack people’s minds is by inducing a “1% chance you could
    be missing something important.”</p><p>If I convince you that I’m a channel for
    important information, messages, friendships, or potential sexual opportunities
    — it will be hard for you to turn me off, unsubscribe, or remove your account
    — because (aha, I win) you might miss something important:</p><ul><li><p>This
    keeps us subscribed to newsletters even after they haven’t delivered recent benefits
    (“what if I miss a future announcement?”)</p></li><li><p>This keeps us “friended”
    to people with whom we haven’t spoke in ages (“what if I miss something important
    from them?”)</p></li><li><p>This keeps us swiping faces on dating apps, even when
    we haven’t even met up with anyone in a while (“what if I miss that <em>one hot
    match</em> who likes me?”)</p></li><li><p>This keeps us using social media (“what
    if I miss that important news story or fall behind what my friends are talking
    about?”)</p></li></ul><p>But if we zoom into that fear, we’ll discover that it’s
    unbounded*: we’ll always miss something important *at any point when we stop using
    something.</p><ul><li><p>There are magic moments on Facebook we’ll miss by not
    using it for the 6th hour (e.g. an old friend who’s visiting town <em>right now</em>).</p></li><li><p>There
    are magic moments we’ll miss on Tinder (e.g. our dream romantic partner) by not
    swiping our 700th match.</p></li><li><p>There are emergency phone calls we’ll
    miss if we’re not connected 24/7<em>.</em></p></li></ul><p><em>But living moment
    to moment with the fear of missing something isn’t how we’re built to live.</em></p><p>And
    it’s amazing how quickly, once we let go of that fear, we wake up from the illusion.
    When we unplug for more than a day, unsubscribe from those notifications, or go
    to <a href="http://campgrounded.org">Camp Grounded</a> — the concerns we thought
    we’d have don’t actually happen.</p><p><em>We don’t miss what we don’t see.</em></p><p>The
    thought, “what if I miss something important?” is generated *in advance of unplugging,
    unsubscribing, or turning off *— not after. Imagine if tech companies recognized
    that, and helped us proactively tune our relationships with friends and businesses
    in terms of what we define as “<a href="http://timewellspent.io">time well spent</a>”
    for our lives, instead of in terms of what we might miss.</p><h3>Hijack #4: Social
    Approval</h3><p><img src="https://cdn-images-1.medium.com/max/2000/1*qnyJGSiHouwhM_rhhvy_rA.png"
    alt="Easily one of the most persuasive things a human being can receive."><em>Easily
    one of the most persuasive things a human being can receive.</em></p><p>We’re
    all vulnerable to <strong>social approval</strong>. The need to belong, to be
    approved or appreciated by our peers is among the highest human motivations. But
    now our social approval is in the hands of tech companies.</p><p>When I get tagged
    by my friend Marc, I imagine him making a *conscious choice *to tag me. But I
    don’t see how a company like Facebook orchestrated his doing that in the first
    place.</p><p>Facebook, Instagram or SnapChat can manipulate how often people get
    tagged in photos by automatically suggesting all the faces people should tag (e.g.
    by showing a box with a 1-click confirmation, “Tag Tristan in this photo?”).</p><p>So
    when Marc tags me, <em>he’s actually</em> <em>responding to Facebook’s suggestion,</em>
    not making an independent choice. But through design choices like this, <em>Facebook
    controls the multiplier for</em> <em>how often millions of people experience their
    social approval on the line</em>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*YkxjEeZ_CO0a2Gp9Awf_bQ.png"
    alt="Facebook uses automatic suggestions like this to get people to tag more people,
    creating more social externalities and interruptions."><em>Facebook uses automatic
    suggestions like this to get people to tag more people, creating more social externalities
    and interruptions.</em></p><p>The same happens when we change our main profile
    photo — Facebook knows that’s a moment when we’re <em>vulnerable to social approval</em>:
    *“what do my friends think of my new pic?” *Facebook can rank this higher in the
    news feed, so it sticks around for longer and more friends will like or comment
    on it. Each time they like or comment on it, we’ll get pulled right back.</p><p>Everyone
    innately responds to social approval, but some demographics (teenagers) are more
    vulnerable to it than others. That’s why it’s so important to recognize how powerful
    designers are when they exploit this vulnerability.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*7Gt5k-6sigW8e1QoLARuYg.png"
    alt=""></p><h3>Hijack #5: Social Reciprocity (Tit-for-tat)</h3><ul><li><p>You
    do me a favor — I owe you one next time.</p></li><li><p>You say, “thank you”—
    I have to say “you’re welcome.”</p></li><li><p>You send me an email— it’s rude
    not to get back to you.</p></li><li><p>You follow me — it’s rude not to follow
    you back. (especially for teenagers)</p></li></ul><p>We are <em>vulnerable</em>
    <em>to needing to reciprocate others’ gestures</em>. But as with Social Approval,
    tech companies now manipulate how often we experience it.</p><p>In some cases,
    it’s by accident.* Email, texting and messaging apps are social reciprocity factories*.
    But in other cases, companies exploit this vulnerability on purpose.</p><p>LinkedIn
    is the most obvious offender. LinkedIn wants as many people creating social obligations
    for each other as possible, because each time they reciprocate (by accepting a
    connection, responding to a message, or endorsing someone back for a skill) they
    have to come back to linkedin.com where they can get people to spend more time.</p><p>Like
    Facebook, LinkedIn exploits an asymmetry in perception. When you receive an invitation
    from someone to connect, you imagine that person making a <em>conscious choice</em>
    to invite you, when in reality, they likely unconsciously responded to LinkedIn’s
    list of suggested contacts. In other words, LinkedIn turns your* unconscious impulses*
    (to “add” a person) into new social obligations that millions of people feel obligated
    to repay. All while they profit from the time people spend doing it.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*B5ZVhb7eL7hyEcfS8m1onQ.png" alt=""></p><p>Imagine
    millions of people getting interrupted like this throughout their day, running
    around like chickens with their heads cut off, reciprocating each other — all
    designed by companies who profit from it.</p><p>Welcome to social media.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*GcrioynC_fnLRB4Vmu-X_g.png" alt="After
    accepting an endorsement, LinkedIn takes advantage of your bias to reciprocate
    by offering *four* additional people for you to endorse in return."><em>After
    accepting an endorsement, LinkedIn takes advantage of your bias to reciprocate
    by offering *four</em> additional people for you to endorse in return.*</p><p>Imagine
    if technology companies had a responsibility to minimize social reciprocity. Or
    if there was an independent organization that represented the public’s interests
    — an industry consortium or an FDA for tech — that monitored when technology companies
    abused these biases?</p><p><img src="https://cdn-images-1.medium.com/max/2068/1*5wyghDrGzpUYxGZkZRzE_A.png"
    alt=""></p><h3><strong>Hijack #6: Bottomless bowls, Infinite Feeds, and Autoplay</strong></h3><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*d_4O5k_1k9LLadu3HMmtXg.png" alt="YouTube
    autoplays the next video after a countdown"><em>YouTube autoplays the next video
    after a countdown</em></p><p>Another way to hijack people is to keep them consuming
    things, even when they aren’t hungry anymore.</p><p>How? Easy. <em>Take an experience
    that was bounded and finite, and turn it into a bottomless flow</em> <em>that
    keeps going</em>.</p><p>Cornell professor Brian Wansink demonstrated this in his
    study showing <a href="http://foodpsychology.cornell.edu/discoveries/bottomless-bowls">you
    can trick people into keep eating soup by giving them a bottomless bowl</a> that
    automatically refills as they eat. With bottomless bowls, people eat 73% more
    calories than those with normal bowls and underestimate how many calories they
    ate by 140 calories.</p><p>Tech companies exploit the same principle. News feeds
    are purposely designed to auto-refill with reasons to keep you scrolling, and
    purposely eliminate any reason for you to pause, reconsider or leave.</p><p>It’s
    also why video and social media sites like Netflix, YouTube or Facebook <em>autoplay</em>
    the next video after a countdown instead of waiting for you to make a conscious
    choice (in case you won’t). A huge portion of traffic on these websites is driven
    by autoplaying the next thing.</p><p><img src="https://cdn-images-1.medium.com/max/3064/1*y2lmMCXN6papGONxwGDazA.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*l1rcapgZdtApL4rph3Sj3A.jpeg"
    alt="Facebook autoplays the next video after a countdown"><em>Facebook autoplays
    the next video after a countdown</em></p><p>Tech companies often claim that “we’re
    just making it easier for users to see the video <em>they want</em> to watch”
    when they are actually serving their business interests. And you can’t blame them,
    because increasing “time spent” is the currency they compete for.</p><p>Instead,
    imagine if technology companies empowered you to <em>consciously bound your experience
    *to align with what would be “<a href="http://timewellspent.io">time well spent</a>”
    for you. Not just bounding the *quantity *of time you spend, but the *qualities</em>
    of what would be “time well spent.”</p><h3>Hijack #7: Instant Interruption vs.
    “Respectful” Delivery</h3><p>Companies know that messages *that interrupt people
    immediately are more persuasive at getting people to respond *than messages delivered
    asynchronously (like email or any deferred inbox).</p><p>Given the choice, Facebook
    Messenger (or WhatsApp, WeChat or SnapChat for that matter) would <em>prefer to
    design their messaging system to</em> *interrupt recipients immediately (and show
    a chat box) *instead of helping users respect each other’s attention.</p><p>In
    other words, <strong>interruption is good for business</strong>.</p><p>It’s also
    in their interest to heighten the feeling of urgency and social reciprocity. For
    example, Facebook automatically <em>tells the sender when you “saw” their message,
    instead of letting you avoid disclosing whether you read it</em> (“now that you
    know I’ve seen the message, I feel even more obligated to respond.”)</p><p>By
    contrast, Apple more respectfully lets users toggle “Read Receipts” on or off.</p><p>The
    problem is, maximizing interruptions in the name of business creates a tragedy
    of the commons, ruining global attention spans and causing billions of unnecessary
    interruptions each day. This is a huge problem we need to fix with shared design
    standards (potentially, as part of <a href="http://timewellspent.io">Time Well
    Spent</a>).</p><h3>Hijack #8: Bundling Your Reasons with Their Reasons</h3><p>Another
    way apps hijack you is by taking <em>your reasons</em> for visiting the app (to
    perform a task) and <em>make them inseparable from the app’s business reasons</em>
    (maximizing how much we consume once we’re there).</p><p>For example, in the physical
    world of grocery stores, the #1 and #2 most popular reasons to visit are pharmacy
    refills and buying milk. But grocery stores want to maximize how much people buy,
    so they put the pharmacy and the milk at the back of the store.</p><p><em>In other
    words, they make the thing customers want (milk, pharmacy) inseparable from what
    the business wants.</em> If stores were <em>truly organized to support people</em>,
    they would <a href="http://www.economist.com/node/12792420">put the most popular
    items in the front</a>.</p><p>Tech companies design their websites the same way.
    For example, when you you want to look up a Facebook event happening tonight (your
    reason) the Facebook app doesn’t allow you to access it without first landing
    on the news feed (their reasons), and that’s on purpose. <em>Facebook wants to
    convert every reason you have for using Facebook, into their reason which is to
    maximize the time you spend consuming things</em>.</p><p>Instead, imagine if …</p><ul><li><p>Twitter
    gave you a <em>separate way</em> to post a tweet than having to see their news
    feed.</p></li><li><p>Facebook gave a <em>separate way</em> to look up Facebook
    Events going on tonight, without being forced to use their news feed.</p></li><li><p>Facebook
    gave you a <em>separate way</em> to use Facebook Connect as a passport for creating
    new accounts on 3rd party apps and websites, without being forced to install Facebook’s
    entire app, news feed and notifications.</p></li></ul><p>In a <a href="http://timewellspent.io">Time
    Well Spent world</a>, there is always a <em>direct way</em> to get what you want
    <em>separately</em> from what businesses want. Imagine a digital “bill of rights”
    outlining design standards that forced the products used by billions of people
    to let them navigate directly to what they want without needing to go through
    intentionally placed distractions.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*HkSOLmgs_RAiKbRMJt9HxA.png"
    alt="Imagine if web browsers empowered you to navigate directly to what you want
    — especially for sites that intentionally detour you toward their reasons."><em>Imagine
    if web browsers empowered you to navigate directly to what you want — especially
    for sites that intentionally detour you toward their reasons.</em></p><h3><strong>Hijack
    #9: Inconvenient Choices</strong></h3><p>We’re told that it’s enough for businesses
    to “make choices available.”</p><ul><li><p>“If you don’t like it you can always
    use a different product.”</p></li><li><p>“If you don’t like it, you can always
    unsubscribe.”</p></li><li><p>“If you’re addicted to our app, you can always uninstall
    it from your phone.”</p></li></ul><p>Businesses naturally <em>want to make the
    choices they want you to make easier, and the choices they don’t want you to make
    harder.</em> Magicians do the same thing. You make it easier for a spectator to
    pick the thing you want them to pick, and harder to pick the thing you don’t.</p><p>For
    example, NYTimes.com lets you “make a free choice” to cancel your digital subscription.
    But instead of just doing it when you hit “Cancel Subscription,” they <em>send
    you an email with information on how to cancel your account by calling a phone
    number</em> that’s only open at certain times.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*kSGi-JcMMGgwigs6VgFY2A.png"
    alt="NYTimes claims it’s giving a free choice to cancel your account"><em>NYTimes
    claims it’s giving a free choice to cancel your account</em></p><p>Instead of
    viewing the world in terms of <em>availability of choices</em>, we should view
    the world in terms of <em>friction required to enact choices</em>. Imagine a world
    where choices were labeled with how difficult they were to fulfill (like coefficients
    of friction) and there was an independent entity — an industry consortium or non-profit
    — that labeled these difficulties and set standards for how easy navigation should
    be.</p><h3>Hijack #10: Forecasting Errors, “Foot in the Door” strategies</h3><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*vQ7yG7niPETreL7zjBuFkA.png" alt="Facebook
    promises an easy choice to “See Photo.” Would we still click if it gave the true
    price tag?"><em>Facebook promises an easy choice to “See Photo.” Would we still
    click if it gave the true price tag?</em></p><p>Lastly, apps can exploit people’s
    inability to forecast the consequences of a click.</p><p>People don’t intuitively
    forecast the <em>true cost</em> *of a click *when it’s presented to them. Sales
    people use “foot in the door” techniques by asking for a small innocuous request
    to begin with (“just one click to see which tweet got retweeted”) and escalate
    from there (“why don’t you stay awhile?”). Virtually all engagement websites use
    this trick.</p><p>Imagine if web browsers and smartphones, the gateways through
    which people make these choices, were truly watching out for people and helped
    them forecast the consequences of clicks (based on real data about <a href="https://github.com/jxe/hindsight">what
    benefits and costs it actually had</a>?).</p><p>That’s why I add “Estimated reading
    time” to the top of my posts. When you put the “true cost” of a choice in front
    of people, you’re treating your users or audience with dignity and respect. In
    a <a href="http://timewellspent.io">Time Well Spent</a> internet, choices could
    be framed in terms of projected cost and benefit, so people were empowered to
    make informed choices by default, not by doing extra work.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*Xvo46OL3h2wDdb7S7AA1uQ.png"
    alt="TripAdvisor uses a “foot in the door” technique by asking for a single click
    review (“How many stars?”) while hiding the three page survey of questions behind
    the click."><em>TripAdvisor uses a “foot in the door” technique by asking for
    a single click review (“How many stars?”) while hiding the three page survey of
    questions behind the click.</em></p><h3>Summary And How We Can Fix This</h3><p>Are
    you upset that technology hijacks your agency? I am too. I’ve listed a few techniques
    but there are literally thousands. Imagine whole bookshelves, seminars, workshops
    and trainings that teach aspiring tech entrepreneurs techniques like these. Imagine
    hundreds of engineers whose job every day is to invent new ways to keep you hooked.</p><p>The
    ultimate freedom is a free mind, and we need technology that’s on our team to
    help us live, feel, think and act freely.</p><p>We need our smartphones, notifications
    screens and web browsers to be exoskeletons for our minds and interpersonal relationships
    that put our values, not our impulses, first. <a href="http://timewellspent.io">People’s
    time is valuable</a>. And we should protect it with the same rigor as privacy
    and other digital rights.</p><p><em>Tristan Harris was a Design Ethicist at Google
    until 2016 where he studied how technology restructures two billion people’s attention,
    wellbeing and behavior. For more resources on Time Well Spent and the Center for
    Humane Technology, see <a href="http://humanetech.com">http://humanetech.com</a>.</em></p><p><strong>UPDATE:
    The first version of this post lacked acknowledgements to those who inspired my
    thinking over many years including <a href="http://nxhx.org">Joe Edelman</a>,
    <a href="http://azarask.in">Aza Raskin</a>, <a href="http://www.raphdamico.com">Raph
    D’Amico</a>, <a href="http://appliedcognitivescience.com">Shaun Martin</a>, <a
    href="http://number27.org">Jonathan Harris</a> and <a href="https://www.ted.com/talks/damon_horowitz?language=en">Damon
    Horowitz</a>.</strong></p><p><strong>My thinking on menus and choicemaking are
    deeply rooted in Joe Edelman’s <a href="http://nxhx.org/Choicemaking/">work on
    Human Values and Choicemaking</a>.</strong></p>'
  :author: Thrive Global
  :topic: technology
- :url: https://medium.com/@kaistinchcombe/decentralized-and-trustless-crypto-paradise-is-actually-a-medieval-hellhole-c1ca122efdec?source=search_post---------1
  :title: Blockchain is not only crappy technology but a bad vision for the future
  :content: '<p>Blockchain is not only crappy technology but a bad vision for the
    future. Its failure to achieve adoption to date is because systems built on trust,
    norms, and institutions inherently function better than the type of no-need-for-trusted-parties
    systems blockchain envisions. That’s permanent: no matter how much blockchain
    improves it is still headed in the wrong direction.</p><p>This December I wrote
    a <a href="http://www.sohu.com/a/213276912_114778">w</a>i<a href="https://www.calcalist.co.il/markets/articles/0,7340,L-3728835,00.html">d</a>e<a
    href="https://www.bright.nl/bright-business/blockchain-heeft-geen-toegevoegde-waarde">l</a>y-<a
    href="http://news.joins.com/article/22236321">c</a>i<a href="https://www.e15.cz/kryptomeny/analytik-revoluce-se-nekona-blockchain-stale-ceka-na-vetsi-vyuziti-mimo-bitcoin-1341547">r</a>c<a
    href="https://chibicode.com/jp/blockchain/">u</a>l<a href="https://www.americanbanker.com/opinion/dont-believe-the-hype-there-are-no-good-uses-for-blockchain">a</a>t<a
    href="https://www.cnbc.com/2017/12/26/ten-years-in-nobody-has-come-up-with-a-use-for-blockchain.html?__source=facebook%7Cmain">e</a>d
    <a href="https://hackernoon.com/ten-years-in-nobody-has-come-up-with-a-use-case-for-blockchain-ee98c180100">article</a>
    on the inapplicability of blockchain to any actual problem. People objected mostly
    not to the technology argument, but rather <a href="https://medium.com/@DisRconsult/ok-im-only-a-cpa-with-some-legal-experience-background-74467b057b9d">hoped</a>
    <a href="https://medium.com/@matthewpirkowski/my-comment-has-little-to-do-with-the-number-of-possible-comparisons-and-everything-to-do-with-the-32b8e460e085">that</a>
    <a href="https://medium.com/@nickramos/great-points-but-you-are-missing-the-most-important-use-case-and-the-need-for-it-is-happening-666aa5de8708">decentralization</a>
    <a href="https://medium.com/@conches/the-reason-why-i-am-hopeful-for-the-blockchain-is-not-to-do-what-we-are-already-doing-better-but-to-87d80ed293b6">could</a>
    <a href="https://venturebeat.com/2017/12/23/why-you-want-blockchain-based-ai-even-if-you-dont-know-it-yet/">produce</a>
    <a href="https://medium.com/@brianhanley/the-real-meaning-of-cryptocurrency-is-the-same-one-that-drove-ben-franklin-to-print-money-for-the-7dd2aae9cd28">integrity</a>.</p><p>Let’s
    start with this: Venmo is a free service to transfer dollars, and bitcoin transfers
    are not free. Yet after I wrote<a href="https://medium.com/@kaistinchcombe/ten-years-in-nobody-has-come-up-with-a-use-case-for-blockchain-ee98c180100">
    an article last December</a> saying bitcoin had no use, someone<a href="https://medium.com/@aaronjmendelsohn/there-is-so-much-wrong-with-this-i-couldnt-get-through-it-all-2dd24a109e0c">
    responded</a> that Venmo and Paypal are raking in consumers’ money and people
    should switch to bitcoin.</p><p>What a surreal contrast between blockchain’s non-usefulness/non-adoption
    and the conviction of its believers! It’s so entirely evident that this person
    didn’t become a bitcoin enthusiast because they were looking for a convenient,
    free way to transfer money from one person to another and discovered bitcoin.
    In fact, I would assert that there is <em>no single person in existence</em> who
    had a problem they wanted to solve, discovered that an available blockchain solution
    was the best way to solve it, and therefore became a blockchain enthusiast.</p><blockquote><h1>There
    is <em>no single person in existence</em> who had a problem they wanted to solve,
    discovered that an available blockchain solution was the best way to solve it,
    and therefore became a blockchain enthusiast.</h1></blockquote><p>The number of
    retailers accepting cryptocurrency as a form of payment is<a href="http://www.businessinsider.com/bitcoin-price-rises-but-retailers-wont-accept-it-7-2017">
    declining</a>, and its biggest corporate boosters like <a href="https://www.google.com/search?q=ibm+supply+chain+solutions">IBM</a>,
    <a href="http://ir.nasdaq.com/releasedetail.cfm?releaseid=948326">NASDAQ</a>,
    <a href="https://www.coindesk.com/fidelity-ceo-talks-love-bitcoin-blockchain-will-change-markets/">Fidelity</a>,
    <a href="https://www.linkedin.com/pulse/swift-official-blockchain-dead-end-patrick-mcconnell/">Swift</a>
    and Walmart have gone long on press but short on actual rollout. Even the most
    prominent blockchain company, Ripple, <a href="https://www.bloomberg.com/news/articles/2018-01-25/ripple-wants-xrp-to-be-bitcoin-for-banks-if-only-the-banks-wanted-it">doesn’t
    use blockchain in its product</a>. You read that right: the company <em>Ripple</em>
    decided the best way to move money across international borders was to <em>not
    use Ripples</em>.</p><h3>A blockchain is a literal technology, not a metaphor</h3><p>Why
    all the enthusiasm for something so useless in practice?</p><p>People have made
    a number of implausible claims about the future of blockchain—like that you <a
    href="https://venturebeat.com/2017/12/23/why-you-want-blockchain-based-ai-even-if-you-dont-know-it-yet/">should
    use it for AI</a> in place of the type of behavior-tracking that google and facebook
    do, for example. This is based on a misunderstanding of what a blockchain is.
    A blockchain isn’t an ethereal thing out there in the universe that you can “put”
    things into, it’s a specific data structure: a linear transaction log, typically
    replicated by computers whose owners (called miners) are rewarded for logging
    new transactions.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*O2IXj90Y2XxXdZRpwt8wkw.png"
    alt="In The Golden Compass, Dust permeates the world. It is created by consciousness
    and is itself conscious, and can condense into angels. Blockchain is not like
    that."><em>In The Golden Compass, Dust permeates the world. It is created by consciousness
    and is itself conscious, and can condense into angels. Blockchain is not like
    that.</em></p><p>There are two things that are cool about this particular data
    structure. One is that a change in any block invalidates every block after it,
    which means that you can’t tamper with historical transactions. The second is
    that you only get rewarded if you’re working on the same chain as everyone else,
    so each participant has an incentive to go with the consensus.</p><p>The end result
    is a shared definitive historical record. And, what’s more, because consensus
    is formed by each person acting in their own interest, adding a false transaction
    or working from a different history just means you’re not getting paid and everyone
    else is. Following the rules is mathematically enforced—no government or police
    force need come in and tell you the transaction you’ve logged is false (or extort
    bribes or bully the participants). It’s a powerful idea.</p><p>So in summary,
    here’s what blockchain-the-technology is: <em>“Let’s create a very long sequence
    of small files — each one containing a hash of the previous file, some new data,
    and the answer to a difficult math problem — and divide up some money every hour
    among anyone willing to certify and store those files for us on their computers.”</em></p><p>Now,
    here’s what blockchain-the-metaphor is: <em>“What if everyone keeps their records
    in a tamper-proof repository not owned by anyone?”</em></p><p>An illustration
    of the difference: In 2006, Walmart launched a system to track its bananas and
    mangoes from field to store. In 2009 they abandoned it because of logistical problems
    getting everyone to enter the data, and in 2017 they re-launched it (to <a href="https://www.google.com/search?q=%22six%20days,%2018%20hours,%20and%2026%20minutes%22">much
    fanfare</a>) on blockchain. If someone comes to you with “the mango-pickers don’t
    like doing data entry,” “I know: let’s create a very long sequence of small files,
    each one containing a hash of the previous file” is a nonsense answer, but “What
    if everyone keeps their records in a tamper-proof repository not owned by anyone?”
    at least addresses the right question!</p><h3>Blockchain-based trustworthiness
    falls apart in practice</h3><p>People treat blockchain as a “futuristic integrity
    wand”—wave a blockchain at the problem, and suddenly your data will be valid.
    For almost anything people want to be <em>valid</em>, blockchain has been proposed
    as a solution.</p><p>It’s true that tampering with data stored on a blockchain
    is hard, but it’s false that blockchain is a good way to create data that has
    integrity.</p><blockquote><h1>It’s true that tampering with data stored on a blockchain
    is hard, but it’s false that blockchain is a good way to create data that has
    integrity.</h1></blockquote><p>To understand why this is the case, let’s work
    from the practical to the theoretical. For example, let’s consider a widely-proposed
    use case for blockchain: buying an e-book with a “smart” contract. The goal of
    the blockchain is, you don’t trust an e-book vendor and they don’t trust you (because
    you’re just two individuals on the internet), but, because it’s on blockchain,
    you’ll be able to trust the transaction.</p><p>In the traditional system, once
    you pay you’re <em>hoping</em> you’ll receive the book, but once the vendor has
    your money they don’t have any incentive to deliver. You’re relying on Visa or
    Amazon or the government to make things fair—what a recipe for being a chump!
    In contrast, on a blockchain system, by executing the transaction as a record
    in a tamper-proof repository not owned by anyone, the transfer of money and digital
    product is automatic, atomic, and direct, with no middleman needed to arbitrate
    the transaction, dictate terms, and take a fat cut on the way. Isn’t that better
    for everybody?</p><p>Hm. Perhaps you are very skilled at writing software. When
    the novelist proposes the smart contract, you take an hour or two to make sure
    that the contract will withdraw only an amount of money equal to the agreed-upon
    price, and that the book — rather than some other file, or nothing at all — will
    actually arrive.</p><p><img src="https://cdn-images-1.medium.com/max/2480/1*t3XuYvxlgGhVlSqnhlUqSA.jpeg"
    alt="An e-book consultant"><em>An e-book consultant</em></p><p>Auditing software
    is hard! The most-heavily scrutinized smart contract in history had a small bug
    that nobody noticed — that is, until someone did notice it, and used it to steal
    fifty million dollars. If cryptocurrency enthusiasts putting together a $150m
    investment fund can’t properly audit the software, how confident are you in your
    e-book audit? Perhaps you would rather write your own counteroffer software contract,
    in case this e-book author has hidden a recursion bug in their version to drain
    your ethereum wallet of all your life savings?</p><p>It’s a complicated way to
    buy a book! It’s not <em>trustless</em>, you’re trusting in the software (and
    your ability to defend yourself in a software-driven world), instead of trusting
    other people.</p><p><img src="https://cdn-images-1.medium.com/max/4000/1*c91sjFxUObps_glZBLkMhw.jpeg"
    alt="“I’d rather look at the source code to make sure he didn’t vote twice.”"><em>“I’d
    rather look at the source code to make sure he didn’t vote twice.”</em></p><p>Another
    example: the <a href="http://web.archive.org/web/20180313084043/https://qz.com/1227050/sierra-leone-elections-powered-by-blockchain/">purported
    advantages</a> for a voting system in a weakly-governed country. “Keep your voting
    records in a tamper-proof repository not owned by anyone” <em>sounds</em> right
    — yet is your Afghan villager going to download the blockchain from a broadcast
    node and decrypt the Merkle root from his Linux command line to independently
    verify that his vote has been counted? Or will he rely on the mobile app of a
    trusted third party — like the nonprofit or open-source consortium <a href="https://qz.com/1234268/sierra-leone-blockchain-election-election-commission-denies-use-of-blockchain/">administering
    the election</a> or providing the software?</p><p>These sound like stupid examples
    — novelists and villagers hiring e-bodyguard hackers to protect them from malicious
    customers and nonprofits whose clever smart-contracts might steal their money
    and votes?? — until you realize that’s actually <em>the point</em>. Instead of
    relying on trust or regulation, in the blockchain world, individuals are <em>on-purpose</em>
    responsible for their own security precautions. And if the software they use is
    malicious or buggy, they should have read the software more carefully.</p><h3>The
    entire worldview underlying blockchain is wrong</h3><p>You actually see it over
    and over again. Blockchain systems are supposed to be <em>more</em> trustworthy,
    but in fact they are <em>the least trustworthy systems in the world</em>. Today,
    in less than a decade, <a href="https://hackernoon.com/ten-years-in-nobody-has-come-up-with-a-use-case-for-blockchain-ee98c180100#75b9">three
    successive top bitcoin exchanges</a> have been hacked, another is <a href="https://motherboard.vice.com/en_us/article/pam4xn/coinbase-insider-trading-lawsuit-gdax-bitcoin-cash">accused</a>
    of insider trading, <a href="https://hackernoon.com/ten-years-in-nobody-has-come-up-with-a-use-case-for-blockchain-ee98c180100#6aa2">the
    demonstration-project DAO smart contract got drained</a>, crypto price swings
    are ten times those of the world’s most mismanaged currencies, and bitcoin, the
    “killer app” of crypto transparency, is almost certainly<a href="http://www.tetherreport.com/">
    artificially</a> <a href="https://www.cnbc.com/2018/02/02/tether-what-you-need-to-know-about-the-cryptocurrency-worrying-markets.html">propped
    up</a> by<a href="https://hackernoon.com/the-curious-tale-of-tethers-6b0031eead87">
    fake</a> <a href="https://arstechnica.com/tech-policy/2018/02/tether-says-its-cryptocurrency-is-worth-2-billion-but-its-audit-failed/">transactions</a>
    <a href="https://www.reddit.com/r/btc/comments/7e54vo/how_is_tether_even_receiving_usd_since_the/">involving</a>
    <a href="https://cointelegraph.com/news/tether-really-isnt-a-scam-company-promises">billions</a>
    <a href="https://medium.com/@bitfinexed/the-mystery-of-the-bitfinex-tether-bank-and-why-this-is-suspicious-a8a6407a1241">of</a>
    *literally imaginary<a href="https://medium.com/@bitfinexed/">* dollars</a>.</p><p><img
    src="https://cdn-images-1.medium.com/max/3600/1*0ItJowi6v1UhgZInWFyQiA.jpeg" alt="How
    exactly does blockchain stop this guy from spraying pesticides?"><em>How exactly
    does blockchain stop this guy from spraying pesticides?</em></p><p>Blockchain
    systems do not magically make the data in them accurate or the people entering
    the data trustworthy, they merely enable you to audit whether it has been tampered
    with. A person who sprayed pesticides on a mango can still enter onto a blockchain
    system that the mangoes were organic. A corrupt government can create a blockchain
    system to count the votes and just allocate an extra million addresses to their
    cronies. An investment fund whose charter is written in software can still misallocate
    funds.</p><p>How then, is trust created?</p><p>In the case of buying an e-book,
    <em>even if you’re buying it with a smart contract,</em> instead of auditing the
    software you’ll rely on one of four things, each of them characteristics of the
    “old way”: either the author of the smart contract is someone you know of and
    trust, the seller of the e-book has a <a href="https://en.wikipedia.org/wiki/The_Evolution_of_Cooperation">reputation
    to uphold</a>, you or friends of yours have bought e-books from this seller in
    the past successfully, or you’re just willing to hope that this person will deal
    fairly. In each case, <em>even</em> if the transaction is effectuated via a smart
    contract, in practice you’re relying on trust of a counterparty or middleman,
    not your self-protective right to audit the software, each man an island unto
    himself. The contract still works, but the fact that the promise is written in
    auditable software rather than government-enforced English makes it <em>less</em>
    transparent, not <em>more</em> transparent.</p><p>The same for the vote counting.
    Before blockchain can even get involved, you need to trust that voter registration
    is done fairly, that ballots are given only to eligible voters, that the votes
    are made anonymously rather than bought or intimidated, that the vote displayed
    by the balloting system is the same as the vote recorded, and that no extra votes
    are given to the political cronies to cast. Blockchain makes none of these problems
    easier and many of them harder—but more importantly, solving them in a blockchain
    context requires a set of awkward workarounds that undermine the core premise.
    So we know the entries are valid, let’s allow only trusted nonprofits to make
    entries—and you’re back at the good old “classic” ledger. In fact, if you look
    at <em>any</em> blockchain solution, inevitably you’ll find an awkward workaround
    to re-create trusted parties in a trustless world.</p><h3>A crypto-medieval system</h3><p>Yet
    absent these “old way” factors—supposing you actually attempted to rely on blockchain’s
    self-interest/self-protection to build a real system—you’d be in a real mess.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*M5Yh5XByF0lkWCfUEPGW1A.jpeg" alt="The
    Knights Templar [was sort of a banking system, actually](https://en.wikipedia.org/wiki/Knights_Templar)."><em>The
    Knights Templar <a href="https://en.wikipedia.org/wiki/Knights_Templar">was sort
    of a banking system, actually</a>.</em></p><p>Eight hundred years ago in Europe
    — with weak governments unable to enforce laws and trusted counterparties few,
    fragile and far between — theft was rampant, safe banking was a fantasy, and personal
    security was at the point of the sword. This is what Somalia looks like now, and
    also, what it looks like to transact on the blockchain <em>in the ideal scenario</em>.</p><p>Somalia
    on purpose. That’s the vision. Nobody wants it!</p><p><em>Even the most die-hard
    crypto enthusiasts</em> prefer in practice to rely on trust rather than their
    own crypto-medieval systems. 93% of bitcoins are mined by managed consortiums,
    yet none of the consortiums use smart contracts to manage payouts. Instead, they<a
    href="https://slushpool.com/home/"> promise</a> things like a “long history of
    stable and accurate payouts.” Sounds like a trustworthy middleman!</p><p><img
    src="https://cdn-images-1.medium.com/max/2020/1*mDF1ET8BKW0q7XcPndQPgw.png" alt="Trusted
    sellers of stolen credit cards and cocaine."><em>Trusted sellers of stolen credit
    cards and cocaine.</em></p><p>Same with Silk Road, a cryptocurrency-driven online
    drug bazaar. The key to Silk Road wasn’t the bitcoins (that was just to evade
    government detection), it was the <em>reputation scores</em> that allowed people
    to trust criminals. And the reputation scores weren’t tracked on a tamper-proof
    blockchain, they were tracked by a trusted middleman!</p><p>If Ripple, Silk Road,
    Slush Pool, and the DAO all prefer “old way” systems of creating and enforcing
    trust, it’s no wonder that the outside world had not adopted trustless systems
    either!</p><h3>In the name of all blockchain stands for, it’s time to abandon
    blockchain</h3><p>A decentralized, tamper-proof repository sounds like a great
    way to audit where your mango comes from, how fresh it is, and whether it has
    been sprayed with pesticides or not. But actually, laws on food labeling, nonprofit
    or government inspectors, an independent, trusted free press, empowered workers
    who trust whistleblower protections, credible grocery stores, your local nonprofit
    farmer’s market, and so on, do a way better job. People who actually care about
    food safety do not adopt blockchain because <em>trusted is better than trustless.
    *Blockchain’s technology mess exposes its metaphor mess — a software engineer
    pointing out that storing the data a sequence of small hashed files won’t get
    the mango-pickers to accurately report whether they sprayed pesticides is *also</em>
    pointing out why peer-to-peer interaction with no regulations, norms, middlemen,
    or trusted parties is actually a bad way to empower people.</p><p><img src="https://cdn-images-1.medium.com/max/4096/1*eMT-ntdZqu1H6-ZJTyfYfQ.jpeg"
    alt="Smarter produce in under 2.2 seconds"><em>Smarter produce in under 2.2 seconds</em></p><p>Like
    the farmer’s market or the organic labeling standard, so many <em>real</em> ideas
    are hiding in plain sight. Do you wish there was a type of financial institution
    that was secure and well-regulated in all the traditional ways, but also has the
    integrity of being people-powered? A credit union’s members elect its directors,
    and the transaction-processing revenue is divided up among the members. Move your
    money! Prefer a deflationary monetary policy? Central bankers are appointed by
    elected leaders. Want to make elections more secure and democratic? Help write
    open source voting software, go out and register voters, or volunteer as an election
    observer here or abroad! Wish there was a trusted e-book delivery service that
    charged lower transaction fees and distributed more of the earnings to the authors?
    You can <em>already</em> consider stated payout rates when you buy music or books,
    buy directly from the authors, or start your own e-book site that’s even better
    than what’s out there!</p><p>Projects based on the elimination of trust have failed
    to capture customers’ interest <em>because trust is actually so damn valuable</em>.
    A lawless and mistrustful world where self-interest is the only principle and
    paranoia is the only source of safety is a not a paradise but a crypto-medieval
    hellhole.</p><p>As a society, and as technologists and entrepreneurs in particular,
    we’re going to have to get good at cooperating — at building trust, and, at being
    trustworthy. Instead of directing resources to the <em>elimination</em> of trust,
    we should direct our resources to the <em>creation</em> of trust—whether we use
    a long series of sequentially hashed files as our storage medium or not.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*dAbV-xlWARj2eZYIyFInog.png" alt=""></p><p><em>Kai
    Stinchcombe coined the terms “crypto-medieval” “futuristic integrity wand” and
    “smart mango.” Please use freely: coining terms makes you a futurist.</em></p><p><img
    src="https://cdn-images-1.medium.com/max/3916/1*QATCo0QEJYiDzVAkvy_dDA.png" alt=""></p>'
  :author: Kai Stinchcombe
  :topic: technology
- :url: https://netflixtechblog.com/artwork-personalization-c589f074ad76?source=search_post---------2
  :title: Artwork Personalization at Netflix
  :content: '<p>By Ashok Chandrashekar, Fernando Amat, Justin Basilico and Tony Jebara</p><p>For
    many years, the main goal of the Netflix personalized recommendation system has
    been to get the right titles in front each of our members at the right time. With
    a catalog spanning thousands of titles and a diverse member base spanning over
    a hundred million accounts, recommending the titles that are just right for each
    member is crucial. But the job of recommendation does not end there. Why should
    you care about any particular title we recommend? What can we say about a new
    and unfamiliar title that will pique your interest? How do we convince you that
    a title is worth watching? Answering these questions is critical in helping our
    members discover great content, especially for unfamiliar titles. One avenue to
    address this challenge is to consider the artwork or imagery we use to portray
    the titles. If the artwork representing a title captures something compelling
    to you, then it acts as a gateway into that title and gives you some visual “evidence”
    for why the title might be good for you. The artwork may highlight an actor that
    you recognize, capture an exciting moment like a car chase, or contain a dramatic
    scene that conveys the essence of a movie or TV show. If we present that perfect
    image on your homepage (and as they say: an image is worth a thousand words),
    then maybe, just maybe, you will give it a try. This is yet another way Netflix
    differs from traditional media offerings: we don’t have one product but over a
    100 million different products with one for each of our members with <em>personalized
    recommendations</em> and <em>personalized visuals</em>.</p><p><img src="https://cdn-images-1.medium.com/max/3200/0*038O1qN_N7lC3CGD."
    alt="A Netflix homepage without artwork. This is how historically our recommendation
    algorithms viewed a page."><em>A Netflix homepage without artwork. This is how
    historically our recommendation algorithms viewed a page.</em></p><p>In <a href="https://medium.com/netflix-techblog/selecting-the-best-artwork-for-videos-through-a-b-testing-f6155c4595f6">previous</a>
    <a href="https://media.netflix.com/en/company-blog/the-power-of-a-picture">work</a>,
    we discussed an effort to find the single perfect artwork for each title across
    <em>all</em> our members. Through multi-armed bandit algorithms, we hunted for
    the best artwork for a title, say Stranger Things, that would earn the most plays
    from the largest fraction of our members. However, given the enormous diversity
    in taste and preferences, wouldn’t it be better if we could find the best artwork
    for <em>each</em> of our members to highlight the aspects of a title that are
    specifically relevant to <em>them</em>?</p><p><img src="https://cdn-images-1.medium.com/max/2928/1*xwD8rVHPapbfmrl6AIbQbA.png"
    alt="Artwork for Stranger Things that each receive over 5% of impressions from
    our personalization algorithm. Different images cover a breadth of themes in the
    show to go beyond what any single image portrays."><em>Artwork for Stranger Things
    that each receive over 5% of impressions from our personalization algorithm. Different
    images cover a breadth of themes in the show to go beyond what any single image
    portrays.</em></p><p>As inspiration, let us explore scenarios where personalization
    of artwork would be meaningful. Consider the following examples where different
    members have different viewing histories. On the left are three titles a member
    watched in the past. To the right of the arrow is the artwork that a member would
    get for a particular movie that we recommend for them.</p><p>Let us consider trying
    to personalize the image we use to depict the movie Good Will Hunting. Here we
    might personalize this decision based on how much a member prefers different genres
    and themes. Someone who has watched many romantic movies may be interested in
    Good Will Hunting if we show the artwork containing Matt Damon and Minnie Driver,
    whereas, a member who has watched many comedies might be drawn to the movie if
    we use the artwork containing Robin Williams, a well-known comedian.</p><p><img
    src="https://cdn-images-1.medium.com/max/3200/0*yRGioOTb4-CZc6Fc." alt=""></p><p>In
    another scenario, let’s imagine how the different preferences for cast members
    might influence the personalization of the artwork for the movie Pulp Fiction.
    A member who watches many movies featuring Uma Thurman would likely respond positively
    to the artwork for Pulp Fiction that contains Uma. Meanwhile, a fan of John Travolta
    may be more interested in watching Pulp Fiction if the artwork features John.</p><p><img
    src="https://cdn-images-1.medium.com/max/3200/0*wRcWWaW0SDnT2xSI." alt=""></p><p>Of
    course, not all the scenarios for personalizing artwork are this clear and obvious.
    So we don’t enumerate such hand-derived rules but instead rely on the data to
    tell us what signals to use. Overall, by personalizing artwork we help each title
    put its best foot forward for every member and thus improve our member experience.</p><h2>Challenges</h2><p>At
    Netflix, we embrace personalization and algorithmically adapt many aspects of
    our member experience, including the <a href="https://medium.com/netflix-techblog/learning-a-personalized-homepage-aa8ec670359a">rows
    we select for the homepage</a>, the <a href="https://medium.com/netflix-techblog/netflix-recommendations-beyond-the-5-stars-part-2-d9b96aa399f5">titles
    we select for those rows</a>, the galleries we display, the messages we send,
    and so forth. Each new aspect that we personalize has unique challenges; personalizing
    the artwork we display is no exception and presents different personalization
    challenges. One challenge of image personalization is that we can <em>only</em>
    select a <em>single</em> piece of artwork to represent each title in each place
    we present it. In contrast, typical recommendation settings let us present <em>multiple
    selections</em> to a member where we can subsequently learn about their preferences
    from the item a member selects. This means that image selection is a chicken-and-egg
    problem operating in a closed loop: if a member plays a title it can only come
    from the image that we decided to present to that member. What we seek to understand
    is <em>when</em> presenting a specific piece of artwork for a title <em>influenced</em>
    a member to play (or not to play) a title and <em>when</em> a member would have
    played a title (or not) <em>regardless</em> of which image we presented. Therefore
    artwork personalization sits on top of the traditional recommendation problem
    and the algorithms need to work in conjunction with each other. Of course, to
    properly learn how to personalize artwork we need to collect <em>a lot</em> of
    data to find signals that indicate when one piece of artwork is significantly
    better for a member.</p><p>Another challenge is to understand the impact of changing
    artwork that we show a member for a title between sessions. Does changing artwork
    reduce recognizability of the title and make it difficult to visually locate the
    title again, for example if the member thought was interested before but had not
    yet watched it? Or, does changing the artwork itself lead the member to reconsider
    it due to an improved selection? Clearly, if we find better artwork to present
    to a member we should probably use it; but continuous changes can also confuse
    people. Changing images also introduces an attribution problem as it becomes unclear
    which image led a member to be interested in a title.</p><p>Next, there is the
    challenge of understanding how artwork performs in relation to other artwork we
    select in the same page or session. Maybe a bold close-up of the main character
    works for a title on a page because it stands out compared to the other artwork.
    But if every title had a similar image then the page as a whole may not seem as
    compelling. Looking at each piece of artwork in isolation may not be enough and
    we need to think about how to select a diverse set of images across titles on
    a page and across a session. Beyond the artwork for other titles, the effectiveness
    of the artwork for a title may depend on what other types of evidence and assets
    (e.g. synopses, trailers, etc.) we also display for that title. Thus, we may need
    a diverse selection where each can highlight complementary aspects of a title
    that may be compelling to a member.</p><p>To achieve effective personalization,
    we also need a good pool of artwork for each title. This means that we need several
    assets where each is engaging, informative and representative of a title to avoid
    “clickbait”. The set of images for a title also needs to be diverse enough to
    cover a wide potential audience interested in different aspects of the content.
    After all, how engaging and informative a piece of artwork is truly depends on
    the individual seeing it. Therefore, we need to have artwork that highlights not
    only different themes in a title but also different aesthetics. Our teams of artists
    and designers strive to create images that are diverse across many dimensions.
    They also take into consideration the personalization algorithms which will select
    the images during their creative process for generating artwork.</p><p>Finally,
    there are engineering challenges to personalize artwork at scale. One challenge
    is that our member experience is very visual and thus contains a lot of imagery.
    So using personalized selection for each asset means handling a peak of over 20
    million requests per second with low latency. Such a system must be robust: failing
    to properly render the artwork in our UI brings a significantly degrades the experience.
    Our personalization algorithm also needs to respond quickly when a title launches,
    which means rapidly learning to personalize in a cold-start situation. Then, after
    launch, the algorithm must continuously adapt as the effectiveness of artwork
    may change over time as both the title evolves through its life cycle and member
    tastes evolve.</p><h2>Contextual bandits approach</h2><p>Much of the Netflix recommendation
    engine is powered by machine learning algorithms. Traditionally, we collect a
    batch of data on how our members use the service. Then we run a new machine learning
    algorithm on this batch of data. Next we test this new algorithm against the current
    production system through an <a href="https://medium.com/netflix-techblog/its-all-a-bout-testing-the-netflix-experimentation-platform-4e1ca458c15">A/B
    test</a>. An A/B test helps us see if the new algorithm is better than our current
    production system by trying it out on a random subset of members. Members in group
    A get the current production experience while members in group B get the new algorithm.
    If members in group B have higher engagement with Netflix, then we roll-out the
    new algorithm to the entire member population. Unfortunately, this batch approach
    incurs regret: many members over a long period of time did not benefit from the
    better experience. This is illustrated in the figure below.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*HbJ4JXAAzT12eC05."
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/0*A9oLAJuerO897OKM."
    alt=""></p><p>To reduce this regret, we move away from batch machine learning
    and consider online machine learning. For artwork personalization, the specific
    online learning framework we use is <em>contextual bandits</em>. Rather than waiting
    to collect a full batch of data, waiting to learn a model, and then waiting for
    an A/B test to conclude, contextual bandits rapidly figure out the optimal personalized
    artwork selection for a title for each member and context. Briefly, contextual
    bandits are a class of online learning algorithms that trade off the cost of gathering
    training data required for learning an unbiased model on an ongoing basis with
    the benefits of applying the learned model to each member context. In our <a href="https://medium.com/netflix-techblog/selecting-the-best-artwork-for-videos-through-a-b-testing-f6155c4595f6">previous
    unpersonalized image selection work</a>, we used non-contextual bandits where
    we found the winning image regardless of the context. For personalization, the
    member is the <em>context</em> as we expect different members to respond differently
    to the images.</p><p>A key property of contextual bandits is that they are designed
    to <em>minimize</em> regret. At a high level, the training data for a contextual
    bandit is obtained through the injection of controlled randomization in the learned
    model’s predictions. The randomization schemes can vary in complexity from simple
    epsilon-greedy formulations with uniform randomness to closed loop schemes that
    adaptively vary the degree of randomization as a function of model uncertainty.
    We broadly refer to this process as <em>data exploration</em>. The number of candidate
    artworks that are available for a title along with the size of the overall population
    for which the system will be deployed informs the choice of the data exploration
    strategy. With such exploration, we need to log information about the randomization
    for each artwork selection. This logging allows us to correct for skewed selection
    propensities and thereby perform offline model evaluation in an unbiased fashion,
    as described later.</p><p>Exploration in contextual bandits typically has a cost
    (or regret) due to the fact that our artwork selection in a member session may
    not use the predicted best image for that session. What impact does this randomization
    have on the member experience (and consequently on our metrics)? With over a hundred
    millions members, the regret incurred by exploration is typically very small and
    is amortized across our large member base with each member implicitly helping
    provide feedback on artwork for a small portion of the catalog. This makes the
    cost of exploration per member negligible, which is an important consideration
    when choosing contextual bandits to drive a key aspect of our member experience.
    Randomization and exploration with contextual bandits would be less suitable if
    the cost of exploration were high.</p><p>Under our online exploration scheme,
    we obtain a training dataset that records, for each (member, title, image) tuple,
    whether that selection resulted in a play of the title or not. Furthermore, we
    can control the exploration such that artwork selections do not change too often.
    This gives a cleaner attribution of the member’s engagement to specific artwork.
    We also carefully determine the label for each observation by looking at the quality
    of engagement to avoid learning a model that recommends “clickbait” images: ones
    that entice a member to start playing but ultimately result in low-quality engagement.</p><h3>Model
    training</h3><p>In this online learning setting, we train our contextual bandit
    model to select the best artwork for each member based on their context. We typically
    have up to a few dozen candidate artwork images per title. To learn the selection
    model, we can consider a simplification of the problem by ranking images for a
    member independently across titles. Even with this simplification we can still
    learn member image preferences across titles because, for every image candidate,
    we have some members who were presented with it and engaged with the title and
    some members who were presented with it and did not engage. These preferences
    can be modeled to predict for each (member, title, image) tuple, the probability
    that the member will enjoy a quality engagement. These can be supervised learning
    models or contextual bandit counterparts with Thompson Sampling, LinUCB, or Bayesian
    methods that intelligently balance making the best prediction with data exploration.</p><h3>Potential
    signals</h3><p>In contextual bandits, the context is usually represented as an
    feature vector provided as input to the model. There are many signals we can use
    as features for this problem. In particular, we can consider many attributes of
    the member: the titles they’ve played, the genre of the titles, interactions of
    the member with the specific title, their country, their language preferences,
    the device that the member is using, the time of day and the day of week. Since
    our algorithm selects images in conjunction with our personalized recommendation
    engine, we can also use signals regarding what our various recommendation algorithms
    think of the title, irrespective of what image is used to represent it.</p><p>An
    important consideration is that some images are naturally better than others in
    the candidate pool. We observe the overall <em>take rates</em> for all the images
    in our data exploration, which is simply the number of quality plays divided by
    the number of impressions. Our previous work on unpersonalized artwork selection
    used overall differences in take rates to determine the single best image to select
    for a whole population. In our new contextual personalized model, the overall
    take rates are still important and personalization still recovers selections that
    agree on average with the unpersonalized model’s ranking.</p><h3>Image Selection</h3><p>The
    optimal assignment of image artwork to a member is a selection problem to find
    the best candidate image from a title’s pool of available images. Once the model
    is trained as above, we use it to rank the images for each context. The model
    predicts the probability of play for a given image in a given a member context.
    We sort a candidate set of images by these probabilities and pick the one with
    the highest probability. That is the image we present to that particular member.</p><h2>Performance
    evaluation</h2><h3>Offline</h3><p>To evaluate our contextual bandit algorithms
    prior to deploying them online on real members, we can use an offline technique
    known as <em>replay</em> [<a href="https://dl.acm.org/citation.cfm?id=1935878">1</a>].
    This method allows us to answer counterfactual questions based on the logged exploration
    data (Figure 1). In other words, we can compare offline what would have happened
    in historical sessions under different scenarios if we had used different algorithms
    in an unbiased way.</p><p><img src="https://cdn-images-1.medium.com/max/3098/0*gcQNqEUdCfWMTv0i."
    alt="**Figure 1: Simple example of calculating a replay metric from logged data.
    For each member, a random image was assigned (top row). The system logged the
    impression and whether the profile played the title (green circle) or not (red
    circle). The replay metric for a new model is calculated by matching the profiles
    where the random assignment and the model assignment are the same (black square)
    and computing the take fraction over that subset.**"><strong><em>Figure 1: Simple
    example of calculating a replay metric from logged data. For each member, a random
    image was assigned (top row). The system logged the impression and whether the
    profile played the title (green circle) or not (red circle). The replay metric
    for a new model is calculated by matching the profiles where the random assignment
    and the model assignment are the same (black square) and computing the take fraction
    over that subset.</em></strong></p><p>Replay allows us to see how members would
    have engaged with our titles if we had hypothetically presented images that were
    selected through a new algorithm rather than the algorithm used in production.
    For images, we are interested in several metrics, particularly the take fraction,
    as described above. Figure 2 shows how contextual bandit approach helps increase
    the average take fraction across the catalog compared to random selection or non-contextual
    bandits.</p><p><img src="https://cdn-images-1.medium.com/max/4756/1*ROJehtHmCLHE2yI4ay0M8g.png"
    alt="**Figure 2: Average image take fraction (the higher the better) for different
    algorithms based on replay from logged image explore data. The Random (green)
    policy selects one image at random. The simple Bandit algorithm (yellow) selects
    the image with highest take fraction. Contextual Bandit algorithms (blue and pink)
    use context to select different images for different members.**"><strong><em>Figure
    2: Average image take fraction (the higher the better) for different algorithms
    based on replay from logged image explore data. The Random (green) policy selects
    one image at random. The simple Bandit algorithm (yellow) selects the image with
    highest take fraction. Contextual Bandit algorithms (blue and pink) use context
    to select different images for different members.</em></strong></p><p><img src="https://cdn-images-1.medium.com/max/2232/0*Ie2TecVCUFlyIQPb."
    alt="**Figure 3: Example of contextual image selection based on the type of profile.
    Comedy refers to a profile that mostly watches comedy titles. Similarly, Romance
    watches mostly romantic titles. The contextual bandit selects the image of Robin
    Williams, a famous comedian, for comedy-inclined profiles while selecting an image
    of a kissing couple for profiles more inclined towards romance.**"><strong><em>Figure
    3: Example of contextual image selection based on the type of profile. Comedy
    refers to a profile that mostly watches comedy titles. Similarly, Romance watches
    mostly romantic titles. The contextual bandit selects the image of Robin Williams,
    a famous comedian, for comedy-inclined profiles while selecting an image of a
    kissing couple for profiles more inclined towards romance.</em></strong></p><h3>Online</h3><p>After
    experimenting with many different models offline and finding ones that had a substantial
    increase in replay, we ultimately ran an A/B test to compare the most promising
    personalized contextual bandits against unpersonalized bandits. As we suspected,
    the personalization worked and generated a significant lift in our core metrics.
    We also saw a reasonable correlation between what we measured offline in replay
    and what we saw online with the models. The online results also produced some
    interesting insights. For example, the improvement of personalization was larger
    in cases where the member had no prior interaction with the title. This makes
    sense because we would expect that the artwork would be more important to someone
    when a title is less familiar.</p><h2>Conclusion</h2><p>With this approach, we’ve
    taken our first steps in personalizing the selection of artwork for our recommendations
    and across our service. This has resulted in a meaningful improvement in how our
    members discover new content… so we’ve rolled it out to everyone! This project
    is the first instance of personalizing not just what we recommend but also how
    we recommend to our members. But there are many opportunities to expand and improve
    this initial approach. These opportunities include developing algorithms to handle
    cold-start by personalizing new images and new titles as quickly as possible,
    for example by using techniques from computer vision. Another opportunity is extending
    this personalization approach across other types of artwork we use and other evidence
    that describe our titles such as synopses, metadata, and trailers. There is also
    an even broader problem: helping artists and designers figure out what new imagery
    we should add to the set to make a title even more compelling and personalizable.</p><p>If
    these types of challenges interest you, please let us know! We are always looking
    for great people to join our team, and, for these types of projects, we are especially
    excited by candidates with <a href="http://jobs.netflix.com/search?q=%22machine%20learning%22">machine
    learning</a> and/or <a href="http://jobs.netflix.com/search?q=%22computer%20vision%22">computer
    vision</a> expertise.</p><h2>References</h2><p>[1] L. Li, W. Chu, J. Langford,
    and X. Wang, “Unbiased Offline Evaluation of Contextual-bandit-based News Article
    Recommendation Algorithms,” in <em>Proceedings of the Fourth ACM International
    Conference on Web Search and Data Mining</em>, New York, NY, USA, 2011, pp. 297–306.</p>'
  :author: Netflix TechBlog
  :topic: technology
- :url: https://medium.com/airbnb-engineering/react-native-at-airbnb-the-technology-dafd0b43838?source=search_post---------3
  :title: 'React Native at Airbnb: The Technology'
  :content: '<p>The technical details</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*iaYan0f1NeQlzGnwzjXEvg.jpeg"
    alt=""></p><p><em>This is the second in a <a href="https://medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c">series
    of blog posts</a> in which we outline our experience with React Native and what
    is next for mobile at Airbnb.</em></p><p>React Native itself is a relatively new
    and fast-moving platform in the cross-section of Android, iOS, web, and cross-platform
    frameworks. After two years, we can safely say that React Native is revolutionary
    in many ways. It is a paradigm shift for mobile and we were able to reap the benefits
    of many of its goals. However, its benefits didn’t come without significant pain
    points.</p><h2>What Worked Well</h2><h3>Cross-Platform</h3><p>The primary benefit
    of React Native is the fact that code you write runs natively on Android and iOS.
    Most features that used React Native were able to achieve <em>95–100% shared code
    *and</em> 0.2% of files were platform-specific* (<em>.android.js/</em>.ios.js).</p><h3>Unified
    Design Language System (DLS)</h3><p>We developed a cross-platform design language
    called <a href="https://airbnb.design/building-a-visual-language/">DLS</a>. We
    have Android, iOS, React Native, and web versions of every component. Having a
    unified design language was amenable to writing cross-platform features because
    it meant that designs, component names, and screens were consistent across platforms.
    However, we were still able to make platform-appropriate decisions where applicable.
    For example, we use the native <a href="https://developer.android.com/reference/android/support/v7/widget/Toolbar">Toolbar</a>
    on Android and <a href="https://developer.apple.com/documentation/uikit/uinavigationbar">UINavigationBar</a>
    on iOS and we chose to hide <a href="https://developer.apple.com/ios/human-interface-guidelines/views/tables/">disclosure
    indicators</a> on Android because they don’t adhere to the Android platform design
    guidelines.</p><p>We opted to rewrite components instead of wrapping native ones
    because it was more reliable to make platform-appropriate APIs individually for
    each platform and reduced the maintenance overhead for Android and iOS engineers
    who may not know how to properly test changes in React Native. However, it did
    cause fragmentation between the platforms in which native and React Native versions
    of the same component would get out of sync.</p><h3>React</h3><p>There is a reason
    that React is the <a href="https://insights.stackoverflow.com/survey/2018/#technology-most-loved-dreaded-and-wanted-frameworks-libraries-and-tools">most-loved</a>
    web framework. It is simple yet powerful and scales well to large codebases. Some
    of the things we particularly like are:</p><ul><li><p>*<em>Components: *</em>React
    Components enforce separation of concerns with well-defined props and state. This
    is a major contributor to React’s scalability.</p></li><li><p>*<em>Simplified
    Lifecycles: *</em>Android and, to a slightly lesser extent, iOS lifecycles are
    notoriously <a href="https://i.stack.imgur.com/fRxIQ.png">complex</a>. Functional
    reactive React components fundamentally solve this problem and made learning React
    Native dramatically simpler than learning Android or iOS.</p></li><li><p>*<em>Declarative:
    *</em>The declarative nature of React helped keep our UI in sync with the underlying
    state.</p></li></ul><h3>Iteration Speed</h3><p>While developing in React Native,
    we were able to reliably use <a href="https://facebook.github.io/react-native/blog/2016/03/24/introducing-hot-reloading.html">hot
    reloading</a> to test our changes on Android and iOS in just a second or two.
    Even though build performance is a top priority for our native apps, it has never
    come close to the iteration speed we achieved with React Native. At best, native
    compilation times are 15 seconds but can be as high as 20 minutes for full builds.</p><h3>Investing
    in Infrastructure</h3><p>We developed extensive integrations into our native infrastructure.
    All core pieces such as networking, i18n, experimentation, shared element transitions,
    device info, account info, and many others were wrapped in a single React Native
    API. These bridges were some of the more complex pieces because we wanted to wrap
    the existing Android and iOS APIs into something that was consistent and canonical
    for React. While keeping these bridges up to date with the rapid iteration and
    development of new infrastructure was a constant game of catch up, the investment
    by the infrastructure team made product work much easier.</p><p>Without this heavy
    investment in infrastructure, React Native would have led to a subpar developer
    and user experiences. As a result, we don’t believe React Native can be simply
    tacked on to an existing app without a significant and continuous investment.</p><h3>Performance</h3><p>One
    of the largest concerns around React Native was its performance. However, in practice,
    this was rarely a problem. Most of our React Native screens feel as fluid as our
    native ones. Performance is often thought of in a single dimension. We frequently
    saw mobile engineers look at JS and think “slower than Java”. However, moving
    business logic and <a href="https://github.com/facebook/yoga">layout</a> off of
    the main thread actually improves render performance in many cases.</p><p>When
    we did see performance issues, they were usually caused by excessive rendering
    and were mitigated by effectively using <a href="https://reactjs.org/docs/react-component.html#shouldcomponentupdate">shouldComponentUpdate</a>,
    <a href="https://facebook.github.io/react-native/docs/view.html#removeclippedsubviews">removeClippedSubviews</a>,
    and better use of Redux.</p><p>However, the initialization and first-render time
    (outlined below) made React Native perform poorly for launch screens, deeplinks,
    and increased the TTI time while navigating between screens. In addition, screens
    that dropped frames were difficult to debug because <a href="https://github.com/facebook/yoga">Yoga</a>
    translates between React Native components and native views.</p><h3>Redux</h3><p>We
    used <a href="https://redux.js.org/">Redux</a> for state management which we found
    effective and prevented the UI from ever getting out of sync with state and enabled
    easy data sharing across screens. However, Redux is notorious for its boilerplate
    and has a relatively difficult learning curve. We provided generators for some
    common templates but it was still one of the most challenging pieces and source
    of confusion while working with React Native. It is worth noting that these challenges
    were not React Native specific.</p><h3>Backed by Native</h3><p>Because everything
    in React Native can be bridged by native code, we were ultimately able to build
    many things we weren’t sure were possible at the beginning such as:</p><ol><li><p><em>Shared
    element transitions</em>: We built a *<SharedElement> *component that is backed
    by native shared element code on Android and iOS. This even works between native
    and React Native screens.</p></li><li><p><em>Lottie:</em> We were able to get
    Lottie working in React Native by wrapping the existing libraries on Android and
    iOS.</p></li><li><p><em>Native networking stack:</em> React Native uses our existing
    native networking stack and cache on both platforms.</p></li><li><p>*Other core
    infra: *Just like networking, we wrapped the rest of our existing native infrastructure
    such as i18n, experimentation, etc. so that it worked seamlessly in React Native.</p></li></ol><h3>Static
    Analysis</h3><p>We have a <a href="https://github.com/airbnb/javascript">strong
    history of using eslint</a> on web which we were able to leverage. However, we
    were the first platform at Airbnb to pioneer <a href="https://github.com/prettier/prettier">prettier</a>.
    We found it to be effective at reducing nits and bikeshedding on PRs. Prettier
    is now being actively investigated by our web infrastructure team.</p><p>We also
    used analytics to measure render times and performance to figure out which screens
    were the top priority to investigate for performance issues.</p><p>Because React
    Native was smaller and newer than our web infrastructure, it proved to be a good
    testbed for new ideas. Many of the tools and ideas we created for React Native
    are being adopted by web now.</p><h3>Animations</h3><p>Thanks to the React Native
    <a href="https://facebook.github.io/react-native/docs/animated.html">Animated</a>
    library, we were able to achieve jank-free animations and even interaction-driven
    animations such as scrolling parallax.</p><h3>JS/React Open Source</h3><p>Because
    React Native truly runs React and javascript, we were able to leverage the extremely
    vast array of javascript projects such as redux, reselect, jest, etc.</p><h3>Flexbox</h3><p>React
    Native handles layout with <a href="https://github.com/facebook/yoga">Yoga</a>,
    a cross-platform C library that handles layout calculations via the <a href="https://www.w3schools.com/css/css3_flexbox.asp">flexbox</a>
    API. Early on, we were hit with Yoga limitations such as the lack of aspect ratios
    but they have been added in subsequent updates. Plus, fun tutorials such as <a
    href="https://flexboxfroggy.com/">flexbox froggy</a> made onboarding more enjoyable.</p><h3>Collaboration
    with Web</h3><p>Late in the React Native exploration, we began building for web,
    iOS, and Android at once. Given that web also uses Redux, we found large swaths
    of code that could be shared across web and native platforms with no alterations.</p><h2>What
    didn’t work well</h2><h3>React Native Immaturity</h3><p>React Native is less mature
    than Android or iOS. It is newer, highly ambitious, and moving extremely quickly.
    While React Native works well in most situations, there are instances in which
    its immaturity shows through and makes something that would be trivial in native
    very difficult. Unfortunately, these instances are hard to predict and can take
    anywhere from hours to many days to work around.</p><h3>Maintaining a Fork of
    React Native</h3><p>Due to React Native’s immaturity, there were times in which
    we needed to patch the React Native source. In addition to contributing back to
    React Native, we had to <a href="https://github.com/airbnb/react-native/commits/0.46-canary">maintain
    a fork</a> in which we could quickly merge changes and bump our version. Over
    the two years, we had to add roughly 50 commits on top of React Native. This makes
    the process of upgrading React Native extremely painful.</p><h3>JavaScript Tooling</h3><p>JavaScript
    is an untyped language. The lack of type safety was both difficult to scale and
    became a point of contention for mobile engineers used to typed languages who
    may have otherwise been interested in learning React Native. We explored adopting
    <a href="https://flow.org/">flow</a> but cryptic error messages led to a frustrating
    developer experience. We also explored <a href="http://www.typescriptlang.org/">TypeScript</a>
    but integrating it into our existing infrastructure such as <a href="https://babeljs.io/">babel</a>
    and <a href="https://github.com/facebook/metro">metro bundler</a> proved to be
    problematic. However, we are continuing to actively investigate TypeScript on
    web.</p><h3>Refactoring</h3><p>A side-effect of JavaScript being untyped is that
    refactoring was extremely difficult and error-prone. Renaming props, especially
    props with a common name like <em>onClick</em> or props that are passed through
    multiple components were a nightmare to refactor accurately. To make matters worse,
    the refactors broke in production instead of at compile time and were hard to
    add proper static analysis for.</p><h3>JavaScriptCore inconsistencies</h3><p>One
    subtle and tricky aspect of React Native is due to the fact that it is executed
    on a <a href="https://facebook.github.io/react-native/docs/javascript-environment.html">JavaScriptCore
    environment</a>. The following are consequences we encountered as a result:</p><ul><li><p>iOS
    ships with its own <a href="https://developer.apple.com/documentation/javascriptcore">JavaScriptCore
    out of the box</a>. This meant that iOS was mostly consistent and not problematic
    for us.</p></li><li><p>Android doesn’t ship its own JavaScriptCore so React Native
    bundles its own. However, the one you get by default <a href="https://github.com/facebook/react-native/issues/10245">is
    ancient</a>. As a result, we had to go out of our way to bundle a <a href="https://github.com/react-community/jsc-android-buildscripts">newer
    one</a>.</p></li><li><p>While debugging, React Native attaches to a Chrome Developer
    Tools instance. This is great because it is a powerful debugger. However, once
    the debugger is attached, all JavaScript runs within Chrome’s V8 engine. This
    is fine 99.9% of the time. However, in one instance, we got bit when toLocaleString
    worked on iOS but only worked on Android while debugging. It turns out that the
    Android JSC <a href="https://github.com/facebook/react-native/issues/15717">doesn’t
    include it</a> and it was silently failing unless you were debugging in which
    case it was using V8 which does. Without knowing technical details like this,
    it can lead to days of painful debugging for product engineers.</p></li></ul><h3>React
    Native Open Source Libraries</h3><p>Learning a platform is difficult and time-consuming.
    Most people only know one or two platforms well. React Native libraries that have
    native bridges such as maps, video, etc. requires equal knowledge of all three
    platforms to be successful. We found that most React Native Open source projects
    were written by people who had experience with only one or two. This led to inconsistencies
    or unexpected bugs on Android or iOS.</p><p>On Android, many React Native libraries
    also require you to use a relative path to node_modules rather than publishing
    maven artifacts which are inconsistent with what is expected by the community.</p><h3>Parallel
    Infrastructure and Feature Work</h3><p>We have accumulated many years of native
    infrastructure on Android and iOS. However, in React Native, we started with a
    blank slate and had to write or create bridges of all existing infrastructure.
    This meant that there were times in which a product engineer needed some functionality
    that didn’t yet exist. At that point, they either had to work in a platform they
    were unfamiliar with and outside the scope of their project to build it or be
    blocked until it could be created.</p><h3>Crash Monitoring</h3><p>We use <a href="https://www.bugsnag.com/">Bugsnag</a>
    for crash reporting on Android and iOS. While we were able to get Bugsnag generally
    working on both platforms, it was less reliable and required more work than it
    did on our other platforms. Because React Native is relatively new and rare in
    the industry, we had to build a significant amount of infrastructure such as uploading
    source maps in-house and had to work with Bugsnag to be able to do things like
    filter crashes by just those that occurred in React Native.</p><p>Due to the amount
    of custom infrastructure around React Native, we would occasionally have serious
    issues in which crashes weren’t reported or source maps weren’t properly uploaded.</p><p>Finally,
    debugging React Native crashes were often more challenging if the issue spanned
    React Native and native code since stack traces don’t jump between React Native
    and native.</p><h3>Native Bridge</h3><p>React Native has a <a href="https://facebook.github.io/react-native/docs/communication-ios.html">bridge
    API</a> to communicate between native and React Native. While it works as expected,
    it is extremely cumbersome to write. Firstly, it requires all three development
    environments to be properly set up. We also experienced many issues in which the
    types coming from JavaScript were unexpected. For example, integers were often
    wrapped by strings, an issue that isn’t realized until it is passed over a bridge.
    To make matters worse, sometimes iOS will fail silently while Android will crash.
    We began to investigate automatically generating bridge code from TypeScript definitions
    towards the end of 2017 but it was too little too late.</p><h3>Initialization
    Time</h3><p>Before React Native can render for the first time, you must initialize
    its runtime. Unfortunately, this takes several seconds for an app of our size,
    even on a high-end device. This made using React Native for launch screens nearly
    impossible. We minimized the first-render time for React Native by initializing
    it at app-launch.</p><h3>Initial Render Time</h3><p>Unlike with native screens,
    rendering React Native requires at least one full main thread -&gt; js -&gt; yoga
    layout thread -&gt; main thread round trip before there is enough information
    to render a screen for the first time. We saw an average initial p90 render of
    280ms on iOS and 440ms on Android. On Android, we used the <a href="https://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()">postponeEnterTransition</a>
    API which is normally used for shared element transitions to delay showing the
    screen until it has rendered. On iOS, we had issues setting the navbar configuration
    from React Native fast enough. As a result, we added an artificial delay of 50ms
    to all React Native screen transitions to prevent the navbar from flickering once
    the configuration was loaded.</p><h3>App Size</h3><p>React Native also has a non-negligible
    impact on app size. On Android, the total size of React Native (Java + JS + native
    libraries such as Yoga + Javascript Runtime) was 8mb per ABI. With both x86 and
    arm (32 bit only) in one APK, it would have been closer to 12mb.</p><h3>64-bit</h3><p>We
    still can’t ship a 64-bit APK on Android because of <a href="https://github.com/facebook/react-native/issues/2814">this</a>
    issue.</p><h3>Gestures</h3><p>We avoided using React Native for screens that involved
    complex gestures because the touch subsystem for Android and iOS are different
    enough that coming up with a unified API has been challenging for the entire React
    Native community. However, work is continuing to progress and <a href="https://github.com/kmagiera/react-native-gesture-handler">react-native-gesture-handler</a>
    just hit 1.0.</p><h3>Long Lists</h3><p>React Native has made some progress in
    this area with libraries like <a href="https://facebook.github.io/react-native/docs/flatlist.html">FlatList</a>.
    However, they are nowhere near the maturity and flexibility of <a href="https://developer.android.com/guide/topics/ui/layout/recyclerview">RecyclerView</a>
    on Android or <a href="https://developer.apple.com/documentation/uikit/uicollectionview">UICollectionView</a>
    on iOS. Many of the limitations are difficult to overcome because of the threading.
    Adapter data can’t be accessed synchronously so it is possible to see views flash
    in as they get asynchronously rendered while scrolling quickly. Text also can’t
    be measured synchronously so iOS can’t make certain optimizations with pre-computed
    cell heights.</p><h3>Upgrading React Native</h3><p>Although most React Native
    upgrades were trivial, there were a few that wound up being painful. In particular,
    it was nearly impossible to use React Native 0.43 (April 2017) to 0.49 (October
    2017) because it used React 16 alpha and beta. This was hugely problematic because
    most React libraries that are designed for web use don’t support pre-release React
    versions. The process of wrangling the proper dependencies for this upgrade was
    a major detriment to other React Native infrastructure work in mid-2017.</p><h3>Accessibility</h3><p>In
    2017, we did a major <a href="https://airbnb.design/designing-for-access/">accessibility
    overhaul</a> in which we invested significant efforts to ensure that people with
    disabilities can use Airbnb to book a listing that can accommodate their needs.
    However, there were many holes in the React Native accessibility APIs. In order
    to meet even a minimum acceptable accessibility bar, we had to <a href="https://github.com/airbnb/react-native/commits/0.46-canary">maintain
    our own fork</a> of React Native where we could merge fixes. For these case, a
    one-line fix on Android or iOS wound up taking days of figuring out how to add
    it to React Native, cherry picking it, then filing an issue on React Native core
    and following up on it over the coming weeks.</p><h3>Troublesome Crashes</h3><p>We
    have had to deal with a few very bizarre crashes that are hard to fix. For example,
    we are currently experiencing <a href="https://issuetracker.google.com/issues/37045084">this
    crash</a> on the <em>@ReactProp</em> annotation and have been unable to reproduce
    it on any device, even those with identical hardware and software to ones that
    are crashing in the wild.</p><h3>SavedInstanceState Across Processes on Android</h3><p>Android
    frequently cleans up background processes but gives them a chance to <a href="https://developer.android.com/topic/libraries/architecture/saving-states#use_onsaveinstancestate_as_backup_to_handle_system_initiated_process_death">synchronously
    save their state in a bundle</a>. However, on React Native, all state is only
    accessible in the js thread so this can’t be done synchronously. Even if this
    weren’t the case, redux as a state store is not compatible with this approach
    because it contains a mix of serializable and non-serializable data and may contain
    more data than can fit within the savedInstanceState bundle which would lead to
    <a href="https://medium.com/@mdmasudparvez/android-os-transactiontoolargeexception-on-nougat-solved-3b6e30597345">crashes
    in production</a>.</p><p>This is part two in a series of blog posts highlighting
    our experiences with React Native and what’s next for mobile at Airbnb.</p><ul><li><p><a
    href="https://medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c">Part
    1: React Native at Airbnb</a></p></li><li><p><a href="https://medium.com/airbnb-engineering/react-native-at-airbnb-the-technology-dafd0b43838">*Part
    2: The Technology</a>*</p></li><li><p><a href="https://medium.com/airbnb-engineering/building-a-cross-platform-mobile-team-3e1837b40a88">Part
    3: Building a Cross-Platform Mobile Team</a></p></li><li><p><a href="https://medium.com/airbnb-engineering/sunsetting-react-native-1868ba28e30a">Part
    4: Making a Decision on React Native</a></p></li><li><p><a href="https://medium.com/airbnb-engineering/whats-next-for-mobile-at-airbnb-5e71618576ab">Part
    5: What’s Next for Mobile</a></p></li></ul>'
  :author: Airbnb Engineering & Data Science
  :topic: technology
- :url: https://netflixtechblog.com/notebook-innovation-591ee3221233?source=search_post---------4
  :title: 'Beyond Interactive: Notebook Innovation at Netflix'
  :content: '<p>By Michelle Ufford, M Pacer, Matthew Seal, and Kyle Kelley</p><p>Notebooks
    have rapidly grown in popularity among data scientists to become the de facto
    standard for quick prototyping and exploratory analysis. At Netflix, we’re pushing
    the boundaries even further, reimagining what a notebook can be, who can use it,
    and what they can do with it. And we’re making big investments to help make this
    vision a reality.</p><p>In this post, we’ll share our motivations and why we find
    Jupyter notebooks so compelling. We’ll also introduce components of our notebook
    infrastructure and explore some of the novel ways we’re using notebooks at Netflix.</p><p>If
    you’re short on time, we suggest jumping down to the Use Cases section.</p><h2>Motivations</h2><p>Data
    powers Netflix. It permeates our thoughts, informs our <a href="https://medium.com/netflix-techblog/its-all-a-bout-testing-the-netflix-experimentation-platform-4e1ca458c15">decisions</a>,
    and challenges our <a href="https://medium.com/netflix-techblog/selecting-the-best-artwork-for-videos-through-a-b-testing-f6155c4595f6">assumptions</a>.
    It fuels <a href="https://medium.com/netflix-techblog/a-b-testing-and-beyond-improving-the-netflix-streaming-experience-with-experimentation-and-data-5b0ae9295bdf">experimentation</a>
    and <a href="https://medium.com/netflix-techblog/growth-engineering-at-netflix-accelerating-innovation-90eb8e70ce59">innovation</a>
    at <a href="https://www.popularmechanics.com/technology/a20138/netflix-interview-wired-traffic-exceeds-internet-capacity/">unprecedented
    scale</a>. Data helps us discover <a href="https://medium.com/netflix-techblog/studio-production-data-science-646ee2cc21a1">fantastic
    content</a> and deliver <a href="https://medium.com/netflix-techblog/artwork-personalization-c589f074ad76">personalized
    experiences</a> for our 130 million members <a href="https://medium.com/netflix-techblog/using-machine-learning-to-improve-streaming-quality-at-netflix-9651263ef09f">around
    the world</a>.</p><p>Making this possible is no small feat; it requires extensive
    engineering and infrastructure support. Every day more than 1 trillion events
    are written into a streaming ingestion pipeline, which is processed and written
    to a 100PB cloud-native data warehouse. And every day, our users run more than
    150,000 jobs against this data, spanning everything from reporting and analysis
    to machine learning and recommendation algorithms. To support these use cases
    at such scale, we’ve built an industry-leading Data Platform which is flexible,
    powerful, and complex (by necessity). We’ve also built a rich ecosystem of complementary
    tools and services, such as <a href="https://medium.com/netflix-techblog/evolving-the-netflix-data-platform-with-genie-3-598021604dda">Genie</a>,
    a federated job execution service, and <a href="https://medium.com/netflix-techblog/metacat-making-big-data-discoverable-and-meaningful-at-netflix-56fb36a53520">Metacat</a>,
    a federated metastore. These tools simplify the complexity, making it possible
    to support a broader set of users across the company.</p><p><img src="https://cdn-images-1.medium.com/max/3122/1*Yzh8GbLOuY3-_rh2bMu9Bw.jpeg"
    alt=""></p><p>User diversity is exciting, but it comes at a cost: the Netflix
    Data Platform — and its ecosystem of tools and services — must scale to support
    additional use cases, languages, access patterns, and more. To better understand
    this problem, consider 3 common roles: analytics engineer, data engineer, and
    data scientist.</p><p><img src="https://cdn-images-1.medium.com/max/3234/1*NRoFl1l4lIVQAAvmBOKd4A.jpeg"
    alt="Example of how tooling &amp; language preferences may vary across roles"><em>Example
    of how tooling &amp; language preferences may vary across roles</em></p><p>Generally,
    each role relies on a different set of tools and languages. For example, a data
    engineer might create a new aggregate of a dataset containing trillions of streaming
    events — using Scala in IntelliJ. An analytics engineer might use that aggregate
    in a new report on global streaming quality — using SQL and Tableau. And that
    report might lead to a data scientist building a new streaming compression model
    — using R and RStudio. On the surface, these seem like disparate, albeit complementary,
    workflows. But if we delve deeper, we see that each of these workflows has multiple
    overlapping tasks:</p><p>*<em>data exploration — *</em>occurs early in a project;
    may include viewing sample data, running queries for statistical profiling and
    exploratory analysis, and visualizing data</p><p>*<em>data preparation *</em>—
    iterative task; may include cleaning, standardizing, transforming, denormalizing,
    and aggregating data; typically the most time-intensive task of a project</p><p>*<em>data
    validation *</em>— recurring task; may include viewing sample data, running queries
    for statistical profiling and aggregate analysis, and visualizing data; typically
    occurs as part of data exploration, data preparation, development, pre-deployment,
    and post-deployment phases</p><p><strong>productionalization</strong> — occurs
    late in a project; may include deploying code to production, backfilling datasets,
    training models, validating data, and scheduling workflows</p><p>To help our users
    scale, we want to make these tasks as effortless as possible. To help our platform
    scale, we want to minimize the number of tools we need to support. But how? No
    single tool could span all of these tasks; what’s more, a single task often requires
    multiple tools. When we add another layer of abstraction, however, a common pattern
    emerges across tools and languages: run code, explore data, present results.</p><p>As
    it happens, an open source project was designed to do precisely that: <a href="http://jupyter.org/">Project
    Jupyter</a>.</p><h2>Jupyter Notebooks</h2><p><img src="https://cdn-images-1.medium.com/max/2984/0*cgQX-JHRytjbeDNx"
    alt="Jupyter notebook rendered in nteract desktop featuring [Vega](https://vega.github.io/)
    and [Altair](https://altair-viz.github.io/)"><em>Jupyter notebook rendered in
    nteract desktop featuring <a href="https://vega.github.io/">Vega</a> and <a href="https://altair-viz.github.io/">Altair</a></em></p><p>Project
    Jupyter began in 2014 with a goal of creating a consistent set of open-source
    tools for scientific research, reproducible workflows, computational narratives,
    and data analytics. Those tools translated well to industry, and today Jupyter
    notebooks have become an essential part of the data scientist toolkit. To give
    you a sense of its impact, Jupyter was awarded the <a href="https://blog.jupyter.org/jupyter-receives-the-acm-software-system-award-d433b0dfe3a2">2017
    ACM Software Systems Award</a> — a prestigious honor it shares with Java, Unix,
    and the Web.</p><p>To understand why the Jupyter notebook is so compelling for
    us, consider the core functionality it provides:</p><ul><li><p>a messaging protocol
    for introspecting and executing code which is language agnostic</p></li><li><p>an
    editable file format for describing and capturing code, code output, and markdown
    notes</p></li><li><p>a web-based UI for interactively writing and running code
    as well as visualizing outputs</p></li></ul><p>The Jupyter protocol provides a
    standard messaging API to communicate with kernels that act as computational engines.
    The protocol enables a composable architecture that separates where content is
    written (the UI) and where code is executed (the kernel). By isolating the runtime
    from the interface, notebooks can span multiple languages while maintaining flexibility
    in how the execution environment is configured. If a kernel exists for a language
    that knows how to communicate using the Jupyter protocol, notebooks can run code
    by sending messages back and forth with that kernel.</p><p>Backing all this is
    a file format that stores both code and results together. This means results can
    be accessed later without needing to rerun the code. In addition, the notebook
    stores rich prose to give context to what’s happening within the notebook. This
    makes it an ideal format for communicating business context, documenting assumptions,
    annotating code, describing conclusions, and more.</p><h2>Use Cases</h2><p>Of
    our many use cases, the most common ways we’re using notebooks today are: data
    access, notebook templates, and scheduling notebooks.</p><h3><strong>Data Access</strong></h3><p>Notebooks
    were first introduced at Netflix to support data science workflows. As their adoption
    grew among data scientists, we saw an opportunity to scale our tooling efforts.
    We realized we could leverage the versatility and architecture of Jupyter notebooks
    and extend it for general data access. In Q3 2017 we began this work in earnest,
    elevating notebooks from a niche tool to a first-class citizen of the Netflix
    Data Platform.</p><p>From our users’ perspective, notebooks offer a convenient
    interface for iteratively running code, exploring output, and visualizing data
    — all from a single cloud-based development environment. We also maintain a Python
    library that consolidates access to platform APIs. This means users have programmatic
    access to virtually the entire platform from within a notebook. Because of this
    combination of versatility, power, and ease of use, we’ve seen rapid organic adoption
    for all user types across our entire platform.</p><p>Today, notebooks are the
    most popular tool for working with data at Netflix.</p><h3><strong>Notebook Templates</strong></h3><p>As
    we expanded platform support for notebooks, we began to introduce new capabilities
    to meet new use cases. From this work emerged parameterized notebooks. A parameterized
    notebook is exactly what it sounds like: a notebook which allows you to specify
    parameters in your code and accept input values at runtime. This provides an excellent
    mechanism for users to define notebooks as reusable templates.</p><p>Our users
    have found a surprising number of uses for these templates. Some of the most common
    ones are:</p><ul><li><p>*<em>Data Scientist: *</em>run an experiment with different
    coefficients and summarize the results</p></li><li><p><strong>Data Engineer:</strong>
    execute a collection of data quality audits as part of the deployment process</p></li><li><p><strong>Data
    Analyst:</strong> share prepared queries and visualizations to enable a stakeholder
    to explore more deeply than Tableau allows</p></li><li><p><strong>Software Engineer:</strong>
    email the results of a troubleshooting script each time there’s a failure</p></li></ul><h3><strong>Scheduling
    Notebooks</strong></h3><p>One of the more novel ways we’re leveraging notebooks
    is as a unifying layer for scheduling workflows.</p><p>Since each notebook can
    run against an arbitrary kernel, we can support any execution environment a user
    has defined. And because notebooks describe a linear flow of execution, broken
    up by cells, we can map failure to particular cells. This allows users to describe
    a short narrative of execution and visualizations that we can accurately report
    against when running at a later point in time.</p><p>This paradigm means we can
    use notebooks for interactive work and smoothly move to scheduling that work to
    run recurrently. For users, this is very convenient. Many users construct an entire
    workflow in a notebook, only to have to copy/paste it into separate files for
    scheduling when they’re ready to deploy it. By treating notebooks as a logical
    workflow, we can easily schedule it the same as any other workflow.</p><p>We can
    schedule other types of work through notebooks, too. When a Spark or Presto job
    executes from the scheduler, the source code is injected into a newly-created
    notebook and executed. That notebook then becomes an immutable historical record,
    containing all related artifacts — including source code, parameters, runtime
    config, execution logs, error messages, and so on. When troubleshooting failures,
    this offers a quick entry point for investigation, as all relevant information
    is colocated and the notebook can be launched for interactive debugging.</p><h2>Notebook
    Infrastructure</h2><p>Supporting these use cases at Netflix scale requires extensive
    supporting infrastructure. Let’s briefly introduce some of the projects we’ll
    be talking about.</p><p><a href="https://github.com/nteract">**nteract</a>** is
    a next-gen React-based UI for Jupyter notebooks. It provides a simple, intuitive
    interface and offers several improvements over the classic Jupyter UI, such as
    inline cell toolbars, drag and droppable cells, and a built-in data explorer.</p><p><a
    href="https://github.com/nteract/papermill">**Papermill</a>** is a library for
    parameterizing, executing, and analyzing Jupyter notebooks. With it, you can spawn
    multiple notebooks with different parameter sets and execute them concurrently.
    Papermill can also help collect and summarize metrics from a collection of notebooks.</p><p><a
    href="https://github.com/nteract/nteract/blob/master/applications/commuter/README.md">**Commuter</a>**
    is a lightweight, vertically-scalable service for viewing and sharing notebooks.
    It provides a Jupyter-compatible version of the contents API and makes it trivial
    to read notebooks stored locally or on Amazon S3. It also offers a directory explorer
    for finding and sharing notebooks.</p><p><a href="https://netflix.github.io/titus/">**Titus</a>**
    is a container management platform that provides scalable and reliable container
    execution and cloud-native integration with Amazon AWS. Titus was built internally
    at Netflix and is used in production to power Netflix streaming, recommendation,
    and content systems.</p><p>We explore this architecture in our follow-up blog
    post, <a href="https://medium.com/@NetflixTechBlog/scheduling-notebooks-348e6c14cfd6">Scheduling
    Notebooks at Netflix</a>. For the purposes of this post, we’ll just introduce
    three of its fundamental components: storage, compute, and interface.</p><p><img
    src="https://cdn-images-1.medium.com/max/3840/1*WOEEJizYnO8ibtU2l9jWbA.jpeg" alt="Notebook
    Infrastructure at Netflix"><em>Notebook Infrastructure at Netflix</em></p><h3><strong>Storage</strong></h3><p>The
    Netflix Data Platform relies on Amazon S3 and EFS for cloud storage, which notebooks
    treat as virtual filesystems. This means each user has a home directory on EFS,
    which contains a personal workspace for notebooks. This workspace is where we
    store any notebook created or uploaded by a user. This is also where all reading
    and writing activity occurs when a user launches a notebook interactively. We
    rely on a combination of [workspace + filename] to form the notebook’s <em>namespace</em>,
    e.g. /efs/users/kylek/notebooks/MySparkJob.ipynb. We use this namespace for viewing,
    sharing, and scheduling notebooks. This convention prevents collisions and makes
    it easy to identify both the user and the location of the notebook in the EFS
    volume.</p><p>We can rely on the workspace path to abstract away the complexity
    of cloud-based storage from users. For example, only the filename of a notebook
    is displayed in directory listings, e.g. MySparkJob.ipynb. This same file is accessible
    at ~/notebooks/MySparkJob.ipynb from a terminal.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*pjjOIx1g7g4XoTxWBv0pIw.png"
    alt="Notebook storage vs. notebook access"><em>Notebook storage vs. notebook access</em></p><p>When
    the user schedules a notebook, the scheduler copies the user’s notebook from EFS
    to a common directory on S3. The notebook on S3 becomes the source of truth for
    the scheduler, or <em>source notebook</em>. Each time the scheduler runs a notebook,
    it instantiates a new notebook from the source notebook. This new notebook is
    what actually executes and becomes an immutable record of that execution, containing
    the code, output, and logs from each cell. We refer to this as the <em>output
    notebook</em>.</p><p>Collaboration is fundamental to how we work at Netflix. It
    came as no surprise then when users started sharing notebook URLs. As this practice
    grew, we ran into frequent problems with accidental overwrites caused by multiple
    people concurrently accessing the same notebook . Our users wanted a way to share
    their active notebook in a read-only state. This led to the creation of <a href="https://github.com/nteract/nteract/tree/master/applications/commuter">**Commuter</a>**.
    Behind the scenes, Commuter surfaces the Jupyter APIs for /files and /api/contents
    to list directories, view file contents, and access file metadata. This means
    users can safely view notebooks without affecting production jobs or live-running
    notebooks.</p><h3><strong>Compute</strong></h3><p>Managing compute resources is
    one of the most challenging parts of working with data. This is especially true
    at Netflix, where we employ a highly-scalable containerized architecture on AWS.
    All jobs on the Data Platform run on containers — including queries, pipelines,
    and notebooks. Naturally, we wanted to abstract away as much of this complexity
    as possible.</p><p>A container is provisioned when a user launches a notebook
    server. We provide reasonable defaults for container resources, which works for
    ~87.3% of execution patterns. When that’s not enough, users can request more resources
    using a simple interface.</p><p><img src="https://cdn-images-1.medium.com/max/2360/0*FUdkFk_m2tyeloJa"
    alt="Users can select as much or as little compute + memory as they need"><em>Users
    can select as much or as little compute + memory as they need</em></p><p>We also
    provide a unified execution environment with a prepared container image. The image
    has common libraries and an array of default kernels preinstalled. Not everything
    in the image is static — our kernels pull the most recent versions of Spark and
    the latest cluster configurations for our platform. This reduces the friction
    and setup time for new notebooks and generally keeps us to a single execution
    environment.</p><p>Under the hood we’re managing the orchestration and environments
    with <a href="https://medium.com/netflix-techblog/titus-the-netflix-container-management-platform-is-now-open-source-f868c9fb5436">Titus</a>,
    our Docker container management service. We further wrap that service by managing
    the user’s particular server configuration and image. The image also includes
    user security groups and roles, as well as common environment variables for identity
    within included libraries. This means our users can spend less time on infrastructure
    and more time on data.</p><h3><strong>Interface</strong></h3><p>Earlier we described
    our vision for notebooks to become the tool of choice for working with data. But
    this presents an interesting challenge: how can a single interface support all
    users? We don’t fully know the answer yet, but we have some ideas.</p><p>We know
    we want to lean into simplicity. This means an intuitive UI with a minimalistic
    aesthetic, and it also requires a thoughtful UX that makes it easy to do the hard
    things. This philosophy aligns well with the goals of <a href="https://github.com/nteract/nteract">**nteract</a>**,
    a React-based frontend for Jupyter notebooks. It emphasizes simplicity and <a
    href="https://components.nteract.io/">composability</a> as core design principles,
    which makes it an ideal building block for the work we want to do.</p><p>One of
    the most frequent complaints we heard from users is the lack of native data visualization
    across language boundaries, especially for non-Python languages. nteract’s <a
    href="https://blog.nteract.io/designing-the-nteract-data-explorer-f4476d53f897">Data
    Explorer</a> is a good example of how we can make the hard things simpler by providing
    a language-agnostic way to explore data quickly.</p><p>You can see Data Explorer
    in action in this <a href="https://mybinder.org/v2/gh/nteract/examples/master?urlpath=%2Fnteract%2Fedit%2Fpython%2Fhappiness.ipynb">sample
    notebook</a> on MyBinder. <em>(please note: it may take a minute to load)</em></p><p><img
    src="https://cdn-images-1.medium.com/max/5652/1*uW5qwTm4FQ3OauOWu_MCcA.gif" alt="Visualizing
    the World Happiness Report dataset with nteract’s Data Explorer"><em>Visualizing
    the World Happiness Report dataset with nteract’s Data Explorer</em></p><p>We’re
    also introducing native support for parametrization, which makes it easier to
    schedule notebooks and create reusable templates.</p><p><img src="https://cdn-images-1.medium.com/max/3838/1*UjwesaxwjH3d1glkP41J4w.gif"
    alt="Native support for parameterized notebooks in nteract"><em>Native support
    for parameterized notebooks in nteract</em></p><p>Although notebooks are already
    offering a lot of value at Netflix, we’ve just begun. We know we need to <a href="https://jobs.netflix.com/search?q=notebooks">make
    investments</a> in both the frontend and backend to improve the overall notebook
    experience. Our work over the next 12 months is focused on improving reliability,
    visibility, and collaboration. Context is paramount for users, which is why we’re
    increasing visibility into cluster status, kernel state, job history, and more.
    We’re also working on automatic version control, native in-app scheduling, better
    support for visualizing Spark DataFrames, and greater stability for our Scala
    kernel. We’ll go into more detail on this work in a future blog post.</p><h2>Open
    Source Projects</h2><p>Netflix has long been a proponent of open source. We value
    the energy, open standards, and exchange of ideas that emerge from open source
    collaborations. Many of the applications we developed for the Netflix Data Platform
    have already been open sourced through <a href="https://netflix.github.io/">Netflix
    OSS</a>. We are also intentional about not creating one-off solutions or succumbing
    to “Not Invented Here” mentality. Whenever possible, we leverage and contribute
    to existing open source projects, such as <a href="https://github.com/apache/spark">Spark</a>,
    <a href="https://github.com/jupyter">Jupyter</a>, and <a href="https://github.com/pandas-dev/pandas">pandas</a>.</p><p>The
    infrastructure we’ve described relies heavily on the Project Jupyter ecosystem,
    but there are some places where we diverge. Most notably, we have chosen <a href="https://github.com/nteract">**nteract</a>**
    as the notebook UI for Netflix. We made this decision for many reasons, including
    alignment with our technology stack and design philosophies. As we push the limits
    of what a notebook can do, we will likely create new tools, libraries, and services.
    These projects will also be open sourced as part of the nteract ecosystem.</p><p>We
    recognize that what makes sense for Netflix does not necessarily make sense for
    everyone. We have designed these projects with modularity in mind. This makes
    it possible to pick and choose only the components that make sense for your environment,
    e.g. Papermill, without requiring a commitment to the entire ecosystem.</p><h2>What’s
    Next</h2><p>As a platform team, our responsibility is to enable Netflixers to
    do amazing things with data. Notebooks are already having a dramatic impact at
    Netflix. With the significant investments we’re making in this space, we’re excited
    to see this impact grow. If you’d like to be a part of it, check out <a href="https://jobs.netflix.com/search?q=notebooks">our
    job openings</a>.</p><p>Phew! Thanks for sticking with us through this long post.
    We’ve just scratched the surface of what we’re doing with notebooks. This post
    is part one in a series on notebooks at Netflix we’ll be releasing over the coming
    weeks. You can follow us on Medium for more from Netflix and check out the currently
    released articles below:</p><ul><li><p>Part I: <a href="https://medium.com/netflix-techblog/notebook-innovation-591ee3221233">Notebook
    Innovation</a> (this post)</p></li><li><p>Part II: <a href="https://medium.com/@NetflixTechBlog/scheduling-notebooks-348e6c14cfd6">Scheduling
    Notebooks</a></p></li></ul><p>We’re thrilled to sponsor this year’s <a href="https://conferences.oreilly.com/jupyter/jup-ny">JupyterCon</a>.
    If you’re attending, check out one of the 5 talks by our engineers, or swing by
    our booth to talk about Jupyter, nteract, or data with us.</p><ul><li><p>8/22
    1:30 PM — <a href="https://conferences.oreilly.com/jupyter/jup-ny/public/schedule/detail/68413">How
    to Build on top of Jupyter’s Protocols</a>, <em>Kyle Kelley</em></p></li><li><p>8/23
    1:50 PM — <a href="https://conferences.oreilly.com/jupyter/jup-ny/public/schedule/detail/68348">Scheduled
    Notebooks: Manageable and traceable code execution</a>, <em>Matthew Seal</em></p></li><li><p>8/23
    2:40 PM — <a href="https://conferences.oreilly.com/jupyter/jup-ny/public/schedule/detail/71601">Notebooks
    @ Netflix: From Analytics to Engineering</a>, <em>Michelle Ufford, Kyle Kelley</em></p></li><li><p>8/23
    5:00 PM — <a href="https://conferences.oreilly.com/jupyter/jup-ny/public/schedule/detail/71220">Making
    beautiful objects with Jupyter</a>, <em>M Pacer</em></p></li><li><p>8/24 2:40
    PM — <a href="https://conferences.oreilly.com/jupyter/jup-ny/public/schedule/detail/71220">Jupyter’s
    configuration system</a>, <em>M Pacer</em> et. al.</p></li><li><p>8/25 9AM — 5PM
    <a href="https://blog.jupyter.org/jupytercon-2018-registration-open-3b52abba9cce#a707">JupyterCon
    Community Sprint Day</a></p></li></ul><p>There are more ways to learn from Netflix
    Data and we’re happy to share:</p><ul><li><p><a href="http://twitter.com/NetflixData">@NetflixData</a>
    on Twitter</p></li><li><p><a href="https://www.youtube.com/channel/UC00QATOrSH4K2uOljTnnaKw/featured">Netflix
    Data</a> talks on YouTube</p></li><li><p><a href="https://research.netflix.com/">Netflix
    Research</a> website</p></li></ul><p>You can also stay up to date with nteract
    via their <a href="http://bit.ly/nteract-monthly">mailing list</a> and <a href="https://blog.nteract.io/">blog</a>!</p>'
  :author: Netflix TechBlog
  :topic: technology
- :url: https://digitalculturist.com/stop-saying-technology-is-causing-social-isolation-1e004de63a5e?source=search_post---------5
  :title: Stop Saying Technology is Causing Social Isolation
  :content: '<p>Stop Saying Technology is Causing Social Isolation</p><p>A group of
    friends checking their smartphones while hanging out. Almost everyone on the subway
    with their eyes fixed on their gadget’s screens. A couple laying together in bed
    with their iPhones in their hands. People with their devices up in the air taking
    pictures of a concert. And I could go on. Technology, and especially smartphones,
    is ruining society, making us disconnected from others, interacting with our devices
    instead of with each other.</p><p>Except, fuck that.</p><p><img src="https://cdn-images-1.medium.com/max/2136/1*oRn8iwuHxO2wvj9tYIXU3Q.jpeg"
    alt="Illustration by [Rosangela Ludovico](http://hugtherobots.tumblr.com/post/69627090387/i-know-its-trendy-to-fight-the-system-and-cry)"><em>Illustration
    by <a href="http://hugtherobots.tumblr.com/post/69627090387/i-know-its-trendy-to-fight-the-system-and-cry">Rosangela
    Ludovico</a></em></p><p>People like to criticize current society. Not necessarily
    the current society relative to us, but the contemporary society of the <a href="https://en.wikipedia.org/wiki/Golden_age_%28metaphor%29">time</a>
    they live in. It’s just so cool to romanticize the past even if <a href="https://www.psychologytoday.com/blog/turning-straw-gold/201308/romanticizing-the-past-makes-us-feel-bad-about-the-present">it
    makes us feel bad about the present</a>. Past times were always better. And in
    this age of information and technology, in which the smartphone is so ubiquitous,
    it’s only obvious to blame them for some of society’s problems. Of course, it’s
    perfectly reasonable to stop and reflect on the use we give to technology and
    to criticize the bad behaviors associated. But I believe that accusing technology
    (and, again, especially smartphones) of ruining social interaction and even all
    kinds of experiences is, to say the least, quite wrong and misguided. Some people
    would even qualify that as pretentious, but I’ll refrain from that.</p><p>If you
    have used the internet in the last years (and I suspect you have), you have probably
    seen a picture on your Facebook feed or on your Tumblr dashboard or nearly everywhere
    pointing out, with a sense of superiority, how people are slaves of technology
    nowadays, always using their electronic devices in public. I’m talking about illustrations
    like <a href="http://azurea.tumblr.com/post/104686647920">these</a>. Or comics
    like <a href="http://zenpencils.com/comic/129-marc-maron-the-social-media-generation/">these</a>.
    Or short films like <a href="https://www.youtube.com/watch?v=OINa46HeWg8">these</a>.
    Or articles like <a href="http://www.popsugar.com/tech/Experiences-Better-Without-Smartphones-37636606">these</a>
    or <a href="http://www.villagevoice.com/music/six-reasons-why-your-phone-is-probably-ruining-your-concert-experience-and-everyone-elses-6638538">these</a>.
    Or photographic projects like <a href="http://www.ericpickersgill.com/Removed">these</a>.
    Again, I could go on. The world wide web is filled with all kinds of expressive
    works related to this issue, probably because it’s something people care about.
    But I feel that most of that content treats it using the same premise: smartphones
    are ruining our lifes (at least to some extent).</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*0aGhIu5NxNgfXOFptwN4rw.jpeg"
    alt="Illustration by [Jean Jullien](http://www.jeanjullien.com/). The fun people
    didn’t go away — they’re here and everywhere"><em>Illustration by <a href="http://www.jeanjullien.com/">Jean
    Jullien</a>. The fun people didn’t go away — they’re here and everywhere</em></p><p>Everytime
    I see content like that, I feel the need to express my profound disagreement,
    for which I usually resort to Twitter, always ending up wanting to say more than
    I could, so I decided to write this piece. Of course, this expresses my views
    (and, I hope, the views of many others) just like those authors whose works I’m
    commenting on, so you may disagree with me and find that they are right and I’m
    not.</p><p>My main premise is that I don’t think smartphones are isolating us,
    destroying our social lives or ruining interactions. I see smartphones as <a href="http://www.theverge.com/2015/10/11/9493425/technology-isnt-a-tool-its-an-instrument">instruments</a>
    for communication. Instruments that enable interaction on ways that just weren’t
    possible before, connecting us with people all around the world, via Twitter,
    instant messaging or other services. Some may say that if you want to interact
    with people, you should interact with the ones around you, and that is probably
    true on certain occasions. But, on other occasions, I’m just not able to comprehend
    why should we be forced to interact with those physically close to us instead
    of with the people that we <em>really</em> want to interact with.</p><p>Is it
    so bad to prefer talking with a long-distance partner using a smartphone than
    with someone who does not interest me but happens to be next to me? To prefer
    reading how the people you’ve followed by years on Twitter are doing instead of
    making smalltalk with that friend of a friend sitting across the subway car? Maybe
    you think that yes, it is bad, that people should always prioritize physical interaction
    to digital one. I disagree. Except for obvious occasions (a work meeting, an actual
    conversation that is taking place between you and someone, etc.), I think people
    should be able to interact with whomever they please without being judged by people
    for using a smartphone to do so.</p><p>It all boils down to letting people connect
    freely using the medium they feel the most comfortable with at the moment. Maybe
    that acquaintance of yours hasn’t gone talk to you because she has had a bad day
    and just wants to relax checking her Instagram feed or listening to some music.
    Maybe your friend has taken his smartphone out of his pocket because he has gotten
    a message that he needs to reply now. Or maybe it’s just that he feels a bit uncomfortable
    and is using his phone to try and avoid the awkwardness of the moment because
    he has social anxiety and you should respect that. And yes, maybe, maybe some
    people are using their smartphones while they objectively shouldn’t without any
    possible excuses and they’re jerks (or they just made a mistake and didn’t realize
    taking their phone out would make someone upset), but I think it’s really unfair
    to assume everyone or nearly everyone who uses a smartphone in public does that.</p><p><img
    src="https://cdn-images-1.medium.com/max/2038/1*eUoMlh7kn9M24uRgVGhecg.png" alt="Photo
    by [John Blanding](https://www.bostonglobe.com/staff/blanding) tweeted by [Wayne
    Dahlberg](https://twitter.com/waynedahlberg/status/647631533046562816/photo/1?ref_src=twsrc%5Etfw).
    It’s trying to convey the idea that this woman is enjoying the experience more
    than the other people taking photos or recording. I’m not sure those people are
    really enjoying it less because of their smartphones"><em>Photo by <a href="https://www.bostonglobe.com/staff/blanding">John
    Blanding</a> tweeted by <a href="https://twitter.com/waynedahlberg/status/647631533046562816/photo/1?ref_src=twsrc%5Etfw">Wayne
    Dahlberg</a>. It’s trying to convey the idea that this woman is enjoying the experience
    more than the other people taking photos or recording. I’m not sure those people
    are really enjoying it less because of their smartphones</em></p><p>Part of the
    commentaries I’ve seen criticizing this whole issue also touch on social media,
    since it is so integrated with our usual smartphone usage. For example, I see
    lots of people complaining about people who take pictures of the food they order
    at restaurants for posting them on Instagram or wherever. I don’t get that. Is
    it wrong to create a permanent memento of an otherwise temporary experience, to
    capture in a photo the work of the people back in the kitchen who made an effort
    to make the food look attractive? To me, those complaints allude to a lack of
    understanding of how modern social media works.</p><p>I think Tumblr user zmizet
    expresses this very accurately in their <a href="http://zmizet.tumblr.com/post/104849285847/poopjokesanonymous-barbieprivilege">comments</a>
    on the Jean Jullien illustrations that I’ve used here. On that exact topic of
    taking photos of food, zmizet expressed the following:</p><blockquote><p>I’m happy
    <strong>seeing my friends take photos of their food</strong>. I like taking photos
    of my food. Because there is a chef in the back of the kitchen who works hard
    to plate things beautifully and in any other situation, people dive in immediately
    and ruin that image. We take photos to preserve that image and who the fuck knows,
    if I was the chef I would be digging through instagram hoping to see my plate
    on there. We’re <strong>celebrating someones hard work</strong>, work that is
    <strong>generally temporary</strong>.</p></blockquote><p>And I agree with that.
    zmizet concludes:</p><blockquote><p>Technology isn’t bad. You’re just upset with
    yourselves for having a lack of self-control. You hate that people connect through
    technology. And maybe, you just don’t like seeing people love themselves, enjoy
    life, and feel joy. That’s your problem, not technology’s.</p></blockquote><p>Social
    media itself is also not bad. It doesn’t make us more socially isolated. Quite
    the contrary, it expands our social network, as shown in <a href="http://www.pewinternet.org/2009/11/04/social-isolation-and-new-technology/">this
    report</a> by Pew Research Center which concludes:</p><blockquote><p>Compared
    to those who do not use the internet, most people who use the internet and use
    a social networking service, such as Facebook, MySpace, or LinkedIn, have social
    networks that are about 20% more diverse.</p></blockquote><p>It dates back to
    2009, when social media wasn’t as big as it is now, but I firmly believe it still
    stands correct today. I’d also like to point out this key paragraph:</p><blockquote><p>Newer
    information and communication technologies provide new settings and a means of
    communication that independently contribute to the diversity of people’s social
    networks.</p></blockquote><p>Social media, and smartphones for that matter, only
    contributes to make our social experiences richer by connecting us with people
    in new ways. I’m sure many of you have met lots of interesting people. I sure
    have. Thanks to social media, I’ve been able to meet people that are now close
    friends of mine. And when I’m out, I like to open Twitter and check how they are,
    what they are doing, if I have something to say that may interest them. Heck,
    I even met my girlfriend on Twitter years ago. And I’m absolutely certain that
    my experience is not an isolated one, as the research above shows.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*72zfuOPxWKmNihQAtofSqA.jpeg" alt="Vignette
    of a comic by [Gavin Aung Than](http://zenpencils.com/comic/129-marc-maron-the-social-media-generation/)"><em>Vignette
    of a comic by <a href="http://zenpencils.com/comic/129-marc-maron-the-social-media-generation/">Gavin
    Aung Than</a></em></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*P6X7hoA9fp6BYE6FolR3GQ.jpeg"
    alt="Popular image of nearly everyone on the train reading the newspaper instead
    of talking with each other decades ago"><em>Popular image of nearly everyone on
    the train reading the newspaper instead of talking with each other decades ago</em></p><p>Other
    frequent topic appears to be one I’ve already mentioned. People using their smartphones
    on the subway, the bus or the train. This is shown in the illustration used at
    the beginning of this writing or in the comic I referenced above. This is probably
    the one I get the least. What else could people do? What would they do if smartphones
    didn’t exist? Talking to each other? Let’s not fool ourselves. People in general
    do not like to interact with strangers in these contexts. They didn’t when smartphones
    were far from existing; they just used another object instead, like a newspaper.
    In response to the vignette next to this paragraph, Tumblr user bogleech <a href="http://bogleech.tumblr.com/post/68941324116/an-angry-tirade-about-one-comic">commented</a>
    the following:</p><blockquote><p>OH MAN look at those ignorant, pathetic people
    of various ages, sexes and ethnic groups all doing** internet shit** on their
    phones while they ride on a subway! HOLY SHIT THEY’RE ALL DOING IT! EVEN THE GUY
    IN THE <strong>TURBAN</strong> FROM WHATEVER THE HELL VAGUE COUNTRY HE’S SUPPOSED
    TO BE FROM THAT HAS TURBANS!WHY ARE THEY MESSAGING ESTABLISHED FRIENDS AND FAMILY
    ON A PHOENEZ WHEN THEY COULD BE INTERACTING WITH COMPLETE AND UTTER STRANGERS
    ON A GROSS FUCKING SUBWAY CARHOW DARE THEY HAVE PERSONAL OUTLETS AND PRIVATE SPACE
    AND SHIT</p></blockquote><p>The person who wrote that was clearly really passionate
    about this topic. And well, I think that, although violently, they deliver the
    message I’m trying to convey here.</p><p>They also went on to say:</p><blockquote><p>DIGITAL
    TECHNOLOGY OVER JUST THE PAST DECADE HAS CONNECTED AND EDUCATED MORE HUMAN MINDS
    THAN PROBABLY THE ENTIRE SUM OF OUR PLANET’S HISTORYIT’S ALSO A MIRACULOUS FIRST-WORLD
    PRIVILEGE THAT ALLOWS YOU TO MAKE FRIENDS, SHARE YOUR IDEAS, LEARN NEW THINGS,
    HEAL EMOTIONAL WOUNDS THROUGH SOCIAL INTERACTION, FIND ESCAPE FROM ABUSIVE SITUATIONS,
    FIND NEW LIVING SITUATIONS, APPLY FOR JOBS, CREATE YOUR OWN PERSONAL OUTLETS AND
    GENERALLY PURSUE HAPPINESS AT THE TOUCH OF A DAMN BUTTON</p></blockquote><p>You
    don’t have to take their word for it. There are studies that back up all of that
    like <a href="http://www.technologyreview.com/view/530566/the-impact-of-the-internet-on-society-a-global-perspective/">this
    one</a> or <a href="http://www.internetsociety.org/globalinternetreport/assets/download/IS_web.pdf">this
    one</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*hJQbKAv9l_aB5UxNBbh5Qw.jpeg"
    alt="Illustration by [Jean Jullien](http://www.jeanjullien.com/). Is it so bad
    to have the ability to not be alone using our phones?"><em>Illustration by <a
    href="http://www.jeanjullien.com/">Jean Jullien</a>. Is it so bad to have the
    ability to not be alone using our phones?</em></p><p><strong>In conclusion</strong>,
    I think we need to stop thinking technology is ruining everything, making us a
    slave to it, mindlessly using our smartphones all the time. It is not. It is enriching
    our lives, connecting us to the people that matter the most to us regardless of
    how far away they are, connecting us to all kinds of people whom we wouldn’t have
    met otherwise. So, stop feeling superior for making fun of other people because
    they’re using their smartphones, stop pretending our lives and society would be
    better without them, stop blaming technology for natural human behaviors. If you
    see an image like the ones I referenced here, the ones trying to show how we are
    <a href="http://kamikazeruler.tumblr.com/post/104820349487/azurea-by-jean-jullien-visual-representation">“</a>letting
    technology ruin social interactions and pleasant experiences”, stop and reflect
    on <em>why</em> people are actually using their electronic devices. Furthermore,
    stop romanticizing the past, believing life was better without all of this ubiquitous
    technology like in some form of “neo-ludism”. Consumer technology is good. It
    enables us to connect in amazing ways as humans. It is not replacing real interaction.
    It is augmenting it. <strong>Embrace it</strong>.</p><p><em>All of the rights
    of the images used in this article belong not to me but to their original authors,
    referenced and linked below each image.</em></p>'
  :author: Digital Culturist
  :topic: technology
- :url: https://netflixtechblog.com/our-learnings-from-adopting-graphql-f099de39ae5f?source=search_post---------6
  :title: Our learnings from adopting GraphQL
  :content: '<p>A Marketing Tech Campaign</p><p>by <a href="https://www.linkedin.com/in/shtatnov/">Artem
    Shtatnov</a> and <a href="https://twitter.com/ducktyped">Ravi Srinivas Ranganathan</a></p><p>In
    an <a href="https://medium.com/netflix-techblog/https-medium-com-netflixtechblog-engineering-to-improve-marketing-effectiveness-part-2-7dd933974f5e">earlier
    blog post</a>, we provided a high-level overview of some of the applications in
    the Marketing Technology team that we build to enable <em>scale and intelligence</em>
    in driving our global advertising, which reaches users on sites like The New York
    Times, Youtube, and thousands of others. In this post, we’ll share our journey
    in updating our front-end architecture and our learnings in introducing GraphQL
    into the Marketing Tech system.</p><p>Our primary application for managing the
    creation and assembly of ads that reach the external publishing platforms is internally
    dubbed <strong><em>Monet</em></strong>. It’s used to supercharge ad creation and
    automate management of marketing campaigns on external ad platforms. Monet helps
    drive incremental conversions, engagement with our product and in general, present
    a rich story about our content and the Netflix brand to users around the world.
    To do this, first, it helps scale up and automate ad production and manage millions
    of creative permutations. Secondly, we utilize various signals and aggregate data
    such as understanding of content popularity on Netflix to enable highly relevant
    ads. Our overall aim is to make our ads on all the external publishing channels
    resonate well with users and we are constantly experimenting to improve our effectiveness
    in doing that.</p><p><img src="https://cdn-images-1.medium.com/max/2166/0*CafLBZiEtz9uwO62"
    alt="Monet and the high-level *Marketing Technology* flow"><em>Monet and the high-level
    *Marketing Technology</em> flow*</p><p>When we started out, the React UI layer
    for Monet accessed traditional REST APIs powered by an Apache Tomcat server. Over
    time, as our application evolved, our use cases became more complex. Simple pages
    would need to draw in data from a wide variety of sources. To more effectively
    load this data onto the client application, we first attempted to denormalize
    data on the backend. Managing this denormalization became difficult to maintain
    since not all pages needed all the data. We quickly ran into network bandwidth
    bottlenecks. The browser would need to fetch much more denormalized data than
    it would ever use.</p><p>To winnow down the number of fields sent to the client,
    one approach is to build custom endpoints for every page; it was a fairly obvious
    non-starter. Instead of building these custom endpoints, we opted for GraphQL
    as the middle layer of the app. We also considered <a href="https://netflix.github.io/falcor/">Falcor</a>
    as a possible solution since it has delivered great results at Netflix in many
    core use cases and has a ton of usage, but a robust GraphQL ecosystem and powerful
    third party tooling made GraphQL the better option for our use case. Also, as
    our data structures have become increasingly graph-oriented, it ended up being
    a very natural fit. Not only did adding GraphQL solve the network bandwidth bottleneck,
    but it also provided numerous other benefits that helped us add features more
    quickly.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*pmh-VimZJJindIJUyZtyzg.png"
    alt="Architecture before and after GraphQL"><em>Architecture before and after
    GraphQL</em></p><h2>Benefits</h2><p>We have been running GraphQL on NodeJS for
    about 6 months, and it has proven to significantly increase our development velocity
    and overall page load performance. Here are some of the benefits that worked out
    well for us since we started using it.</p><p><strong>Redistributing load and payload
    optimization</strong></p><p>Often times, some machines are better suited for certain
    tasks than others. When we added the GraphQL middle layer, the GraphQL server
    still needed to call the same services and REST APIs as the client would have
    called directly. The difference now is that the majority of the data is flowing
    between servers within the same data center. These server to server calls are
    of very low latency and high bandwidth, which gives us about an 8x performance
    boost compared to direct network calls from the browser. The last mile of the
    data transfer from the GraphQL server to the client browser, although still a
    slow point, is now reduced to a single network call. Since GraphQL allows the
    client to select only the data it needs we end up fetching a significantly smaller
    payload. In our application, pages that were fetching 10MB of data before now
    receive about 200KB. Page loads became much faster, especially over data-constrained
    mobile networks, and our app uses much less memory. These changes did come at
    the cost of higher server utilization to perform data fetching and aggregation,
    but the few extra milliseconds of server time per request were greatly outweighed
    by the smaller client payloads.</p><p><strong>Reusable abstractions</strong></p><p>Software
    developers generally want to work with reusable abstractions instead of single-purpose
    methods. With GraphQL, we define each piece of data once and define how it relates
    to other data in our system. When the consumer application fetches data from multiple
    sources, it no longer needs to worry about the complex business logic associated
    with data join operations.</p><p>Consider the following example, we define entities
    in GraphQL exactly once: <em>catalogs, creatives, and comments</em>. We can now
    build the views for several pages from these definitions. One page on the client
    app (catalogView) declares that it wants all comments for all creatives in a catalog
    while another client page (creativeView) wants to know the associated catalog
    that a creative belongs to, along with all of its comments.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*Tr-cnrbTOPKkWkshYpQeIA.png"
    alt="The flexibility of the GraphQL data model to represent different views from
    the same underlying data"><em>The flexibility of the GraphQL data model to represent
    different views from the same underlying data</em></p><p>The same graph model
    can power both of these views without having to make any server side code changes.</p><p><strong>Chaining
    type systems</strong></p><p>Many people focus on type systems within a single
    service, but rarely across services. Once we defined the entities in our GraphQL
    server, we use auto codegen tools to generate TypeScript types for the client
    application. The props of our React components receive types to match the query
    that the component is making. Since these types and queries are also validated
    against the server schema, any breaking change by the server would be caught by
    clients consuming the data. Chaining multiple services together with GraphQL and
    hooking these checks into the build process allows us to catch many more issues
    before deploying bad code. Ideally, we would like to have type safety from the
    database layer all the way to the client browser.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*YLL0aFFgcGDXFEa-V9_LPA.png"
    alt="Type safety from database to backend to client code"><em>Type safety from
    database to backend to client code</em></p><p><strong>DI/DX — Simplifying development</strong></p><p>A
    common concern when creating client applications is the UI/UX, but the developer
    interface and developer experience is just as important for building maintainable
    apps. Before GraphQL, writing a new React container component required maintaining
    complex logic to make network requests for the data we need. The developer would
    need to consider how one piece of data relates to another, how the data should
    be cached, whether to make the calls in parallel or in sequence and where in Redux
    to store the data. With a GraphQL query wrapper, each React component only needs
    to describe the data it needs, and the wrapper takes care of all of these concerns.
    There is much less boilerplate code and a cleaner separation of concerns between
    the data and UI. This model of declarative data fetching makes the React components
    much easier to understand, and serves to partially document what the component
    is doing.</p><p><strong>Other benefits</strong></p><p>There are a few other smaller
    benefits that we noticed as well. First, if any resolver of the GraphQL query
    fails, the resolvers that succeeded still return data to the client to render
    as much of the page as possible. Second, the backend data model is greatly simplified
    since we are less concerned with modeling for the client and in most cases can
    simply provide a CRUD interface to raw entities. Finally, testing our components
    has also become easier since the GraphQL query is automatically translatable into
    stubs for our tests and we can test resolvers in isolation from the React components.</p><h2>Growing
    pains</h2><p>Our migration to GraphQL was a straightforward experience. Most of
    the infrastructure we built to make network requests and transform data was easily
    transferable from our React application to our NodeJS server without any code
    changes. We even ended up deleting more code than we added. But as with any migration
    to a new technology, there were a few obstacles we needed to overcome.</p><p><strong>Selfish
    resolvers</strong></p><p>Since resolvers in GraphQL are meant to run as isolated
    units that are not concerned with what other resolvers do, we found that they
    were making many duplicate network requests for the same or similar data. We got
    around this duplication by wrapping the data providers in a simple caching layer
    that stored network responses in memory until all resolvers finished. The caching
    layer also allowed us to aggregate multiple requests to a single service into
    a bulk request for all the data at once. Resolvers can now request any data they
    need without worrying about how to optimize the process of fetching it.</p><p><img
    src="https://cdn-images-1.medium.com/max/2038/1*FZCtNPL4bXS6jpgVZx0RYg.png" alt="Adding
    a cache to simplify data access from resolvers"><em>Adding a cache to simplify
    data access from resolvers</em></p><p><strong>What a tangled web we weave</strong></p><p>Abstractions
    are a great way to make developers more efficient… until something goes wrong.
    There will undoubtedly be bugs in our code and we didn’t want to obfuscate the
    root cause with a middle layer. GraphQL would orchestrate network calls to other
    services automatically, hiding the complexities from the user. Server logs provide
    a way to debug, but they are still one step removed from the natural approach
    of debugging via the browser’s network tab. To make debugging easier, we added
    logs directly to the GraphQL response payload that expose all of the network requests
    that the server is making. When the debug flag is enabled, you get the same data
    in the client browser as you would if the browser made the network call directly.</p><p><strong>Breaking
    down typing</strong></p><p>Passing around objects is what OOP is all about, but
    unfortunately, GraphQL throws a wrench into this paradigm. When we fetch partial
    objects, this data cannot be used in methods and components that require the full
    object. Of course, you can cast the object manually and hope for the best, but
    you lose many of the benefits of type systems. Luckily, TypeScript uses duck typing,
    so adjusting the methods to only require the object properties that they really
    need was the quickest fix. Defining these more precise types takes a bit more
    work, but gives greater type safety overall.</p><h2>What comes next</h2><p>We
    are still in the early stages in our exploration of GraphQL, but it’s been a positive
    experience so far and we’re happy to have embraced it. One of the key goals of
    this endeavor was to help us get increased development velocity as our systems
    become increasingly sophisticated. Instead of being bogged down with complex data
    structures, we hope for the investment in the graph data model to make our team
    more productive over time as more edges and nodes are added. Even over the last
    few months, we have found that our existing graph model has become sufficiently
    robust that we don’t need any graph changes to be able to build some features.
    It has certainly made us more productive.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*T3KO2GOY6EhoWUdQw8zuLQ.png"
    alt="Visualization of our GraphQL Schema"><em>Visualization of our GraphQL Schema</em></p><p>As
    GraphQL continues to thrive and mature, we look forward to learning from all the
    amazing things that the community can build and solve with it. On an implementation
    level, we are looking forward to using some cool concepts like schema stitching,
    which can make integrations with other services much more straightforward and
    save a great deal of developer time. Most crucially, it’s very exciting to see
    a lot more teams <a href="https://medium.com/netflix-techblog/the-new-netflix-stethoscope-native-app-f4e1d38aafcd">across
    our company</a> see GraphQL’s potential and start to adopt it.</p><p>If you’ve
    made this thus far and you’re also interested in joining the Netflix Marketing
    Technology team to help conquer our unique challenges, check out the <a href="https://sites.google.com/netflix.com/adtechjobs/ad-tech-engineering">open
    positions</a> listed on our page. <strong><em>We’re hiring!</em></strong></p>'
  :author: Netflix TechBlog
  :topic: technology
- :url: https://netflixtechblog.com/python-at-netflix-bba45dae649e?source=search_post---------7
  :title: Python at Netflix
  :content: '<p>By Pythonistas at Netflix, coordinated by Amjith Ramanujam and edited
    by Ellen Livengood</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*PPIp7twJJUknfohZqtL8pQ.png"
    alt=""></p><p>As many of us prepare to go to PyCon, we wanted to share a sampling
    of how Python is used at Netflix. We use Python through the full content lifecycle,
    from deciding which content to fund all the way to operating the CDN that serves
    the final video to 148 million members. We use and contribute to many open-source
    Python packages, some of which are mentioned below. If any of this interests you,
    check out the <a href="https://jobs.netflix.com/search?q=python">jobs site</a>
    or find us at PyCon. We have donated a few Netflix Originals posters to the <a
    href="https://us.pycon.org/2019/events/auction/">PyLadies Auction</a> and look
    forward to seeing you all there.</p><h3>Open Connect</h3><p><a href="https://openconnect.netflix.com/en/">Open
    Connect</a> is Netflix’s content delivery network (CDN). An easy, though imprecise,
    way of thinking about Netflix infrastructure is that everything that happens before
    you press Play on your remote control (e.g., are you logged in? what plan do you
    have? what have you watched so we can recommend new titles to you? what do you
    want to watch?) takes place in Amazon Web Services (AWS), whereas everything that
    happens afterwards (i.e., video streaming) takes place in the Open Connect network.
    Content is placed on the network of servers in the Open Connect CDN as close to
    the end user as possible, improving the streaming experience for our customers
    and reducing costs for both Netflix and our Internet Service Provider (ISP) partners.</p><p>Various
    software systems are needed to design, build, and operate this CDN infrastructure,
    and a significant number of them are written in Python. The network devices that
    underlie a large portion of the CDN are mostly managed by Python applications.
    Such applications track the inventory of our network gear: what devices, of which
    models, with which hardware components, located in which sites. The configuration
    of these devices is controlled by several other systems including source of truth,
    application of configurations to devices, and back up. Device interaction for
    the collection of health and other operational data is yet another Python application.
    Python has long been a popular programming language in the networking space because
    it’s an intuitive language that allows engineers to quickly solve networking problems.
    Subsequently, many useful libraries get developed, making the language even more
    desirable to learn and use.</p><h3>Demand Engineering</h3><p><a href="https://www.linkedin.com/pulse/what-demand-engineering-aaron-blohowiak/">Demand
    Engineering</a> is responsible for <a href="https://opensource.com/article/18/4/how-netflix-does-failovers-7-minutes-flat">Regional
    Failovers</a>, Traffic Distribution, Capacity Operations, and Fleet Efficiency
    of the Netflix cloud. We are proud to say that our team’s tools are built primarily
    in Python. The service that orchestrates failover uses numpy and scipy to perform
    numerical analysis, boto3 to make changes to our AWS infrastructure, rq to run
    asynchronous workloads and we wrap it all up in a thin layer of Flask APIs. The
    ability to drop into a <a href="https://bpython-interpreter.org">bpython</a> shell
    and improvise has saved the day more than once.</p><p>We are heavy users of Jupyter
    Notebooks and <a href="https://nteract.io">nteract</a> to analyze operational
    data and prototype <a href="https://github.com/nteract/nteract/tree/master/packages/data-explorer">visualization
    tools </a>that help us detect capacity regressions.</p><h3>CORE</h3><p>The CORE
    team uses Python in our alerting and statistical analytical work. We lean on many
    of the statistical and mathematical libraries (numpy, scipy, ruptures, pandas)
    to help automate the analysis of 1000s of related signals when our alerting systems
    indicate problems. We’ve developed a time series correlation system used both
    inside and outside the team as well as a distributed worker system to parallelize
    large amounts of analytical work to deliver results quickly.</p><p>Python is also
    a tool we typically use for automation tasks, data exploration and cleaning, and
    as a convenient source for visualization work.</p><h3>Monitoring, alerting and
    auto-remediation</h3><p>The Insight Engineering team is responsible for building
    and operating the tools for operational insight, alerting, diagnostics, and auto-remediation.
    With the increased popularity of Python, the team now supports Python clients
    for most of their services. One example is the <a href="https://github.com/Netflix/spectator-py">Spectator</a>
    Python client library, a library for instrumenting code to record dimensional
    time series metrics. We build Python libraries to interact with other Netflix
    platform level services. In addition to libraries, the <a href="https://medium.com/netflix-techblog/introducing-winston-event-driven-diagnostic-and-remediation-platform-46ce39aa81cc">Winston</a>
    and <a href="https://medium.com/netflix-techblog/introducing-bolt-on-instance-diagnostic-and-remediation-platform-176651b55505">Bolt</a>
    products are also built using Python frameworks (Gunicorn + Flask + Flask-RESTPlus).</p><h3>Information
    Security</h3><p>The information security team uses Python to accomplish a number
    of high leverage goals for Netflix: security automation, risk classification,
    auto-remediation, and vulnerability identification to name a few. We’ve had a
    number of successful Python open sources, including <a href="https://github.com/Netflix/security_monkey">Security
    Monkey</a> (our team’s most active open source project). We leverage Python to
    protect our SSH resources using <a href="https://github.com/Netflix/bless">Bless</a>.
    Our Infrastructure Security team leverages Python to help with IAM permission
    tuning using <a href="https://github.com/Netflix/repokid">Repokid</a>. We use
    Python to help generate TLS certificates using <a href="https://github.com/Netflix/lemur">Lemur</a>.</p><p>Some
    of our more recent projects include Prism: a batch framework to help security
    engineers measure paved road adoption, risk factors, and identify vulnerabilities
    in source code. We currently provide Python and Ruby libraries for Prism. The
    <a href="https://medium.com/netflix-techblog/netflix-sirt-releases-diffy-a-differencing-engine-for-digital-forensics-in-the-cloud-37b71abd2698">Diffy</a>
    forensics triage tool is written entirely in Python. We also use Python to detect
    sensitive data using Lanius.</p><h3>Personalization Algorithms</h3><p>We use Python
    extensively within our broader <a href="https://www.slideshare.net/FaisalZakariaSiddiqi/ml-infra-for-netflix-recommendations-ai-nextcon-talk">Personalization
    Machine Learning Infrastructure</a> to train some of the Machine Learning models
    for key aspects of the Netflix experience: from our <a href="https://research.netflix.com/research-area/recommendations">recommendation
    algorithms</a> to <a href="https://medium.com/netflix-techblog/artwork-personalization-c589f074ad76">artwork
    personalization</a> to <a href="https://medium.com/netflix-techblog/engineering-to-scale-paid-media-campaigns-84ba018fb3fa">marketing
    algorithms</a>. For example, some algorithms use TensorFlow, Keras, and PyTorch
    to learn Deep Neural Networks, XGBoost and LightGBM to learn Gradient Boosted
    Decision Trees or the broader scientific stack in Python (e.g. numpy, scipy, sklearn,
    matplotlib, pandas, cvxpy). Because we’re constantly trying out new approaches,
    we use Jupyter Notebooks to drive many of our experiments. We have also developed
    a number of higher-level libraries to help integrate these with the rest of our
    <a href="https://www.slideshare.net/FaisalZakariaSiddiqi/ml-infra-for-netflix-recommendations-ai-nextcon-talk">ecosystem</a>
    (e.g. data access, fact logging and feature extraction, model evaluation, and
    publishing).</p><h3>Machine Learning Infrastructure</h3><p>Besides personalization,
    Netflix applies machine learning to hundreds of use cases across the company.
    Many of these applications are powered by <a href="https://www.youtube.com/watch?v=XV5VGddmP24">Metaflow</a>,
    a Python framework that makes it easy to execute ML projects from the prototype
    stage to production.</p><p>Metaflow pushes the limits of Python: We leverage well
    parallelized and optimized Python code to fetch data at 10Gbps, handle hundreds
    of millions of data points in memory, and orchestrate computation over tens of
    thousands of CPU cores.</p><h3>Notebooks</h3><p>We are avid users of Jupyter notebooks
    at Netflix, and we’ve written about the <a href="https://medium.com/netflix-techblog/notebook-innovation-591ee3221233">reasons
    and nature of this investment</a> before.</p><p>But Python plays a huge role in
    how we provide those services. Python is a primary language when we need to develop,
    debug, explore, and prototype different interactions with the Jupyter ecosystem.
    We use Python to build custom extensions to the Jupyter server that allows us
    to manage tasks like logging, archiving, publishing, and cloning notebooks on
    behalf of our users.We provide many flavors of Python to our users via different
    Jupyter kernels, and manage the deployment of those kernel specifications using
    Python.</p><h3>Orchestration</h3><p>The Big Data Orchestration team is responsible
    for providing all of the services and tooling to schedule and execute ETL and
    Adhoc pipelines.</p><p>Many of the components of the orchestration service are
    written in Python. Starting with our scheduler, which uses<a href="https://jupyter.org">
    Jupyter Notebooks</a> with <a href="https://papermill.readthedocs.io/en/latest/">papermill</a>
    to provide templatized job types (Spark, Presto, …). This allows our users to
    have a standardized and easy way to express work that needs to be executed. You
    can see some deeper details on the subject <a href="https://medium.com/netflix-techblog/scheduling-notebooks-348e6c14cfd6">here</a>.
    We have been using notebooks as real runbooks for situations where human intervention
    is required — for example: to restart everything that has failed in the last hour.</p><p>Internally,
    we also built an event-driven platform that is fully written in Python. We have
    created streams of events from a number of systems that get unified into a single
    tool. This allows us to define conditions to filter events, and actions to react
    or route them. As a result of this, we have been able to decouple microservices
    and get visibility into everything that happens on the data platform.</p><p>Our
    team also built the <a href="https://github.com/Netflix/pygenie">pygenie</a> client
    which interfaces with <a href="https://netflix.github.io/genie/">Genie</a>, a
    federated job execution service. Internally, we have additional extensions to
    this library that apply business conventions and integrate with the Netflix platform.
    These libraries are the primary way users interface programmatically with work
    in the Big Data platform.</p><p>Finally, it’s been our team’s commitment to contribute
    to <a href="https://papermill.readthedocs.io/en/latest/">papermill</a> and <a
    href="https://nteract-scrapbook.readthedocs.io/en/latest/">scrapbook</a> open
    source projects. Our work there has been both for our own and external use cases.
    These efforts have been gaining a lot of traction in the open source community
    and we’re glad to be able to contribute to these shared projects.</p><h3>Experimentation
    Platform</h3><p>The scientific computing team for experimentation is creating
    a platform for scientists and engineers to analyze AB tests and other experiments.
    Scientists and engineers can contribute new innovations on three fronts, data,
    statistics, and visualizations.</p><p>The Metrics Repo is a Python framework based
    on <a href="https://pypika.readthedocs.io/en/latest/">PyPika</a> that allows contributors
    to write reusable parameterized SQL queries. It serves as an entry point into
    any new analysis.</p><p>The Causal Models library is a Python &amp; R framework
    for scientists to contribute new models for causal inference. It leverages <a
    href="https://arrow.apache.org/docs/python/">PyArrow</a> and <a href="https://rpy2.readthedocs.io/en/version_2.8.x/">RPy2</a>
    so that statistics can be calculated seamlessly in either language.</p><p>The
    Visualizations library is based on <a href="https://plot.ly">Plotly</a>. Since
    Plotly is a widely adopted visualization spec, there are a variety of tools that
    allow contributors to produce an output that is consumable by our platforms.</p><h3>Partner
    Ecosystem</h3><p>The Partner Ecosystem group is expanding its use of Python for
    testing Netflix applications on devices. Python is forming the core of a new CI
    infrastructure, including controlling our orchestration servers, controlling Spinnaker,
    test case querying and filtering, and scheduling test runs on devices and containers.
    Additional post-run analysis is being done in Python using TensorFlow to determine
    which tests are most likely to show problems on which devices.</p><h3>Video Encoding
    and Media Cloud Engineering</h3><p>Our team takes care of encoding (and re-encoding)
    the Netflix catalog, as well as leveraging machine learning for insights into
    that catalog.We use Python for ~50 projects such as <a href="https://github.com/Netflix/vmaf/blob/master/resource/doc/references.md">vmaf</a>
    and <a href="https://medium.com/netflix-techblog/mezzfs-mounting-object-storage-in-netflixs-media-processing-platform-cda01c446ba">mezzfs</a>,
    we build <a href="https://medium.com/netflix-techblog/ava-the-art-and-science-of-image-discovery-at-netflix-a442f163af6">computer
    vision solutions</a> using a media map-reduce platform called <a href="https://medium.com/netflix-techblog/simplifying-media-innovation-at-netflix-with-archer-3f8cbb0e2bcb">Archer</a>,
    and we use Python for many internal projects.We have also open sourced a few tools
    to ease development/distribution of Python projects, like <a href="https://pypi.org/project/setupmeta/">setupmeta</a>
    and <a href="https://pypi.org/project/pickley/">pickley</a>.</p><h3>Netflix Animation
    and NVFX</h3><p>Python is the industry standard for all of the major applications
    we use to create Animated and VFX content, so it goes without saying that we are
    using it very heavily. All of our integrations with Maya and Nuke are in Python,
    and the bulk of our Shotgun tools are also in Python. We’re just getting started
    on getting our tooling in the cloud, and anticipate deploying many of our own
    custom Python AMIs/containers.</p><h3>Content Machine Learning, Science &amp;
    Analytics</h3><p>The Content Machine Learning team uses Python extensively for
    the development of machine learning models that are the core of forecasting audience
    size, viewership, and other demand metrics for all content.</p>'
  :author: Netflix TechBlog
  :topic: technology
- :url: https://netflixtechblog.com/titus-the-netflix-container-management-platform-is-now-open-source-f868c9fb5436?source=search_post---------8
  :title: Titus, the Netflix container management platform, is now open source
  :content: '<p>by Amit Joshi, Andrew Leung, Corin Dwyer, Fabio Kung, Sargun Dhillon,
    Tomasz Bak, Andrew Spyker, Tim Bozarth</p><p>Today, we are open-sourcing <a href="https://github.com/Netflix/titus">Titus</a>,
    our <a href="https://medium.com/netflix-techblog/the-evolution-of-container-usage-at-netflix-3abfc096781b">container
    management platform</a>.</p><p>Titus powers critical aspects of the Netflix business,
    from video streaming, recommendations and machine learning, big data, content
    encoding, studio technology, internal engineering tools, and other Netflix workloads.
    Titus offers a convenient model for managing compute resources, allows developers
    to maintain just their application artifacts, and provides a consistent developer
    experience from a developer’s laptop to production by leveraging Netflix container-focused
    engineering tools.</p><p>Over the last three years, Titus evolved initially from
    supporting batch use cases, to running services applications (both internal, and
    ultimately critical customer-facing). Through that evolution, container use at
    Netflix has grown from thousands of containers launched per week to as many as
    three million containers launched per week in April 2018. Titus hosts thousands
    of applications globally over seven regionally isolated stacks across tens of
    thousands of EC2 virtual machines. The open-sourcing of Titus shares the resulting
    technology assembled through three years of production learnings in container
    management and execution.</p><h2>Why are we open sourcing?</h2><p>Over the past
    few years of talking about Titus, we’ve been asked over and over again, “<a href="https://web.archive.org/web/20170610041241/https://www.istitusopensourceyet.com/">When
    will you open source Titus</a>?” It was clear that we were discussing ideas, problems,
    and solutions that resonated with those at a variety of companies, both large
    and small. We hope that by sharing Titus we are able to help accelerate like-minded
    teams, and to bring the lessons we’ve learned forward in the container management
    community.</p><p>Multiple container management platforms (Kubernetes, Mesosphere
    DC/OS, and Amazon ECS) have been adopted across the industry during the last two
    years, driving different benefits to a wide class of use cases. Additionally,
    a handful of web-scale companies have developed solutions on top of Apache Mesos
    to meet the unique needs of their organizations. Titus shares a foundation of
    Apache Mesos and was optimized to solve for Netflix’s production needs.</p><p>Our
    experience talking with peers across the industry indicates that other organizations
    are also looking for some of the same technologies in a container management platform.
    By sharing the code as open source, we hope others can help the overall container
    community absorb those technologies. We would also be happy for the concepts and
    features in Titus to land in other container management solutions. This has an
    added benefit for Netflix in the longer term, as it will provide us better off-the-shelf
    solutions in the future.</p><p>And finally, a part of why we are open-sourcing
    is our desire to give back and share with the community outside Netflix. We hope
    open sourcing will lead to active engagements with other companies who are working
    on similar engineering challenges. Our team members also enjoy being able to present
    their work externally and future team members can learn what they have <a href="https://jobs.netflix.com/jobs/862432">an
    opportunity</a> to work on.</p><h2>How is Titus different from other container
    platforms?</h2><p>To ensure we are investing wisely at Netflix, we stay well aware
    of off-the-shelf infrastructure technologies. In addition to the aforementioned
    container orchestration front, we also stay deeply connected with the direction
    and challenges of the underlying container runtime technologies such as Docker
    (Moby, container-d) and CRI-O. We regularly meet with engineering teams at the
    companies both building these solutions as well as the teams using them in their
    production infrastructures. By balancing the knowledge of what is available through
    existing solutions with our needs, we believe Titus is the best solution for container
    management at Netflix.</p><p><strong>A few of those key reasons are highlighted
    below:</strong></p><p>The first is a tight integration between Titus and both
    Amazon and Netflix infrastructure. Given that Netflix infrastructure leverages
    AWS so broadly, we decided to seamlessly integrate, and take advantage of as much
    functionality AWS had to offer. Titus has advanced ENI and security group management
    support spanning not only our networking fabric but also our scheduling logic.
    This allows us to handle ENIs and IPs as resources and ensure safe large scale
    deployments that consider EC2 VPC API call rate limits. Our IAM role support,
    which allows secure EC2 applications to run unchanged, is delivered through our
    Amazon EC2 metadata proxy. This proxy also allows Titus to give a container specific
    metadata view, which enables various application aspects such as service discovery.
    We have leveraged AWS Auto Scaling to provide container cluster auto scaling with
    the same policies that would be used for virtual machines. We also worked with
    AWS on the design of IP target groups for Application Load Balancers, which brings
    support for full IP stack containers and AWS load balancing. All these features
    together enable containerized applications to transparently integrate with internal
    applications and Amazon services.</p><p>In order to incrementally enable applications
    to transition to containers while keeping as many systems familiar as possible,
    we decided to leverage existing Netflix cloud platform technologies, making them
    container aware. We choose this path to ensure a common developer and operational
    approach between VMs and containers. This is evident through our <a href="https://github.com/spinnaker/clouddriver/tree/master/clouddriver-titus">Spinnaker</a>
    enablement, support in our service discovery (Eureka), changes in our telemetry
    system (Atlas), and <a href="http://getvector.io/blog/release/2016/06/01/whats-new-in-vector.html">performance
    insight</a> technologies.</p><p>Next is scale, which has many dimensions. First,
    we run over a thousand different applications, with some being very compute heavy
    (media encoding), some being critical Netflix customer facing services, some memory
    and GPU heavy (algorithm training), some being network bound (stream processing),
    some that are happy with resource over commitment (big data jobs) and some that
    are not. We launch up to a half million containers and 200,000 clusters per day.
    We also rotate hundreds of thousands of EC2 virtual machines per month to satisfy
    our elastic workloads. While there are solutions that help solve some of these
    problems, we do not believe there are off-the-shelf solutions that can take on
    each of these scale challenges.</p><p>Finally, Titus allows us to quickly and
    nimbly add features that are valuable as our needs evolve, and as we grow to support
    new use-cases. We always try to maintain a philosophy of “just enough” vs “just
    in case” with the goal of keeping things as simple and maintainable as possible.
    Below are a few examples of functionality we’ve been able to quickly develop in
    response to evolving business and user needs:</p><p>In the scheduling layer, we
    support advanced concepts such as capacity management, agent management, and dynamic
    scheduling profiles. Capacity management ensures all critical applications have
    the capacity they require. Agent management provides multiple functions required
    to support a fleet of thousands of hosts. Agent management is inclusive of host
    registration and lifecycle, automatic handling of failing hosts, and autoscaling
    hosts for efficiency. We have dynamic scheduling profiles that understand the
    differences needed in scheduling between application types (customer facing services
    vs. internal services vs. batch) and differences in scheduling needed during periods
    of normal or degraded health. These scheduling profiles help us optimize scheduling
    considering real world trade-offs between reliability, efficiency and job launch
    time latencies.</p><p>In container execution, we have a unique approach to container
    composition, Amazon VPC networking support, isolated support for log management,
    a unique approach to vacating decommissioned nodes, and an advanced operational
    health check subsystem. For container composition, we inject our system services
    into containers before running the user’s workload in the container. We classify
    container networking traffic using BPF and perform QoS using HTB/ECN ensuring
    we provide highly performant, burstable as well as sustained throughput to every
    container. We isolate log uploading and stdio processing within the container’s
    cgroup. Leveraging Spinnaker, we are able to offload upgrade node draining operations
    in an application specific way. We have operationalized the detection and remediation
    of kernel, container runtime, EC2, and container control plane health issues.
    For our security needs, we run all containers with user namespaces, and provide
    transparent direct user access to only the container.</p><p>Titus is designed
    to satisfy Netflix’s complex scalability requirements, deep Amazon and Netflix
    infrastructure integration, all while giving Netflix the ability to quickly innovate
    on the exact scheduling and container execution features we require. Hopefully,
    by iterating our goals in detail you can see how Titus’s approach to container
    management may apply to your use cases.</p><h2>Preparing for open sourcing</h2><p>In
    the fourth quarter of 2017, we opened up Titus’s source code to a set of companies
    that had similar technical challenges as Netflix in the container management space.
    Some of these companies were looking for a modern container batch and service
    scheduler on Mesos. Others were looking for a container management platform that
    was tightly integrated with Amazon AWS. And others still were looking for a container
    management platform that works well with NetflixOSS technologies such as Spinnaker
    and Eureka.</p><p>By working with these companies to get Titus working in their
    AWS accounts, we learned how we could better prepare Titus for being fully open
    sourced. Those experiences taught us how to disconnect Titus from internal Netflix
    systems, the level of documentation needed to get people started with Titus, and
    what hidden assumptions we relied on in our EC2 configuration.</p><p>Through these
    partnerships, we received feedback that Titus really shined due to our Amazon
    AWS integration and the production focused operational aspects of the platform.
    We also heard how operating a complex container management platform (like Titus)
    is going to be challenging for many.</p><p>With all these learnings in mind, we
    strived to create the best documentation possible to getting Titus up and running.
    We’ve captured that information on the Titus <a href="http://netflix.github.io/titus">documentation
    site</a>.</p><h2>Wrapping Up</h2><p>Open sourcing Titus marks a major milestone
    after over three years of development, operational battle hardening, customer
    focus, and sharing/collaboration with our peers. We hope that this effort can
    help others with the challenges they are facing, and bring new options to container
    management across the whole OSS community.</p><p>In the near future we will keep
    feature development in Titus well aligned with Netflix’s product direction. We
    plan to share our roadmap in case others are interested in seeing our plans and
    contributing. We’d love to hear your feedback. We will be discussing Titus at
    our <a href="https://www.meetup.com/Netflix-Open-Source-Platform/events/247776324/">NetflixOSS
    meetup</a> this evening and will post the video later in the week.</p><h2>Appendix</h2><p>Conference
    talks: <a href="https://youtu.be/V3OfAATYksM">Dockercon 2015</a>, <a href="https://www.infoq.com/presentations/container-management-netflix">QCon
    NYC 2016</a>, <a href="https://www.youtube.com/watch?v=4OLlKGT7aVQ">re:Invent
    2016</a>, <a href="https://www.infoq.com/news/2017/07/netflix-titus">QCon NYC
    2017</a>, <a href="https://youtu.be/9TwkMMogojY?t=1331">re:Invent 2017</a>, and
    <a href="https://www.slideshare.net/aspyker/container-world-2018">Container World
    2018</a>Articles: Netflix techblog posts (<a href="https://medium.com/netflix-techblog/the-evolution-of-container-usage-at-netflix-3abfc096781b">1</a>,
    <a href="https://medium.com/netflix-techblog/updates-on-netflixs-container-management-platform-a91738360bd8">2</a>),
    and <a href="http://queue.acm.org/detail.cfm?id=3158370">ACM Queue</a></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*R-XMUHeTud1sYosB1UWijQ.png" alt="NetflixOSS
    Titus"><em>NetflixOSS Titus</em></p>'
  :author: Netflix TechBlog
  :topic: technology
- :url: https://medium.com/mit-technology-review/lets-destroy-bitcoin-3211861ce7a3?source=search_post---------9
  :title: Let’s Destroy Bitcoin
  :content: '<p>Three ways Bitcoin could be brought down, co-opted, or made irrelevant</p><p><img
    src="https://cdn-images-1.medium.com/max/8168/1*L-Ms89KzR6VDCIvA6b_CyQ.jpeg" alt="Photo:
    TanyaJoy/Getty Images"><em>Photo: TanyaJoy/Getty Images</em></p><p><em>By Morgen
    Peck</em></p><p>In 2009, Satoshi Nakamoto served the world an entirely new kind
    of currency. It was one that people could move over the internet instantaneously
    and nearly free of charge. Issued and distributed not by a central bank but by
    its own users, it drew the drapes of privacy…</p>'
  :author: MIT Technology Review
  :topic: technology
- :url: https://medium.com/ouna/ouna-shaping-the-future-of-human-resources-e86f6e9336fb?source=search_post---------0
  :title: OUNA- SHAPING THE FUTURE OF HUMAN RESOURCES
  :content: <p>The most valuable resource of many organizations is the human factor
    — the people employed within them. The abilities to source, engage, and retain
    qualified talents are some of the main catalysts in driving the long-term success
    of an organization. With fierce competition for talents across all industries,
    the ability to source suitable talents is a top priority in organizations of all
    sizes.</p><p>Nowadays, the available processes in the market for human resource
    recruiting are imperfect and suffer from various inefficiencies. These processes
    are highly dependent on human judgement, use tools and technologies that don’t
    provide sufficiently accurate matching results for employers and employees, are
    not intuitive, are very costly and timeconsuming, and have low success rates.</p><p>Recruiting
    criteria-matching talents for employment positions is a high-risk process, since
    recruiting the wrong person has the potential to severely damage the productivity
    of teams, lose clients, reduce efficiencies, increase costs, and lower profits.</p><p><strong>OUNA
    will be the first-of-its-kind blockchain-based, peer-to-peer HR assessment and
    recruitment ecosystem</strong>. The core of the OUNA platform is based on a novel
    algorithm, referenced as the “Analyzer”.** The Analyzer is an online Pyramidal
    Assessment tool that is based on 15 years of research and tested in more than
    100 real-life case studies.** During this assessment period, the Analyzer consistently
    generated candidate profiles for recruitment which resulted in an average success
    rate of 86% in compatibility between employers and their employees, validating
    the algorithm’s ability to accurately match employees’ skills with employers’
    requirements. In 2017, the IP for the Analyzer algorithm was acquired by OUNA
    with the aim of establishing the OUNA ecosystem, the first decentralized platform
    for precise peer-to-peer HR recruitment.</p><h2>EMPLOYEES</h2><p>Job-seekers can
    now choose to perform OUNA’s anonymous, global, decentralized Pyramidal Assessment.
    The online assessment utilizes 12 key parameters, and 40 significant skills are
    taken into consideration. The results are a uniquely accurate candidate profile,
    with an average validity of 86% — achieved while the profile remains totally anonymous.
    All this helping employees to identify and strive towards their ideal career destinies.</p><h2>EMPLOYERS</h2><p>By
    utilizing the OUNA platform, employers can now determine the perfect employee
    profile for each of their available positions. Harnessing OUNA’s comprehensive
    candidate assessment abilities, companies can identify those candidates that are
    best suited to their vacancies, enabling these companies to consistently select
    and recruit highly suitable employees — thereby saving time, money, and effort,
    enhancing employee job satisfaction and improving employee retention — ultimately
    enhancing overall company performance and profitability.</p><ol><li><p>Prospective
    candidates log into the OUNA platform and complete the Pyramidal Motivations assessment.</p></li><li><p>The
    results are transformed into unique mathematical profiles, and are added to the
    OUNA database. Processing of the profiles is controlled by Smart Contracts.</p></li><li><p>Employers
    log into the OUNA platform and generate THE IDEAL EMPLOYEE PROFILE by evaluating
    the best performing employees with OUNA’s Pyramidal Motivation Assessment.</p></li><li><p>The
    employer runs this PROFILE through OUNA’s database and identifies the candidate
    profiles that best match their requirements.</p></li></ol><h2>FEATURES</h2><p>OUNA’s
    candidate assessment yields a completely anonymous profile, based only on the
    individual’s skills, motivational factors, and values. OUNA is therefore able
    to be fully committed to the principle of equal opportunity employment. OUNA can
    and will help the struggle against discrimination against a job applicant or an
    employee because of the person’s race, color, religion, sex, national origin,
    age, or disability.</p><h2>ALGORITHM</h2><p>OUNA ecosystem will continue to expand
    as more candidates are added to the OUNA candidate database — and more HR recruiters
    discover the power and advantages of working with OUNA.</p><h2><strong>DATABASE</strong></h2><p>OUNA’s
    candidate database currently includes thousands of profiles, containing comprehensive,
    trustworthy, blockchain-based records of their strengths, motivating factors,
    and ideal work environments.</p><p><strong>To learn more about our project, please
    visit our <a href="https://ouna.io/?c=gVlWDF">website</a>.</strong></p>
  :author: OUNA
  :topic: future
- :url: https://medium.com/@kaistinchcombe/decentralized-and-trustless-crypto-paradise-is-actually-a-medieval-hellhole-c1ca122efdec?source=search_post---------1
  :title: Blockchain is not only crappy technology but a bad vision for the future
  :content: '<p>Blockchain is not only crappy technology but a bad vision for the
    future. Its failure to achieve adoption to date is because systems built on trust,
    norms, and institutions inherently function better than the type of no-need-for-trusted-parties
    systems blockchain envisions. That’s permanent: no matter how much blockchain
    improves it is still headed in the wrong direction.</p><p>This December I wrote
    a <a href="http://www.sohu.com/a/213276912_114778">w</a>i<a href="https://www.calcalist.co.il/markets/articles/0,7340,L-3728835,00.html">d</a>e<a
    href="https://www.bright.nl/bright-business/blockchain-heeft-geen-toegevoegde-waarde">l</a>y-<a
    href="http://news.joins.com/article/22236321">c</a>i<a href="https://www.e15.cz/kryptomeny/analytik-revoluce-se-nekona-blockchain-stale-ceka-na-vetsi-vyuziti-mimo-bitcoin-1341547">r</a>c<a
    href="https://chibicode.com/jp/blockchain/">u</a>l<a href="https://www.americanbanker.com/opinion/dont-believe-the-hype-there-are-no-good-uses-for-blockchain">a</a>t<a
    href="https://www.cnbc.com/2017/12/26/ten-years-in-nobody-has-come-up-with-a-use-for-blockchain.html?__source=facebook%7Cmain">e</a>d
    <a href="https://hackernoon.com/ten-years-in-nobody-has-come-up-with-a-use-case-for-blockchain-ee98c180100">article</a>
    on the inapplicability of blockchain to any actual problem. People objected mostly
    not to the technology argument, but rather <a href="https://medium.com/@DisRconsult/ok-im-only-a-cpa-with-some-legal-experience-background-74467b057b9d">hoped</a>
    <a href="https://medium.com/@matthewpirkowski/my-comment-has-little-to-do-with-the-number-of-possible-comparisons-and-everything-to-do-with-the-32b8e460e085">that</a>
    <a href="https://medium.com/@nickramos/great-points-but-you-are-missing-the-most-important-use-case-and-the-need-for-it-is-happening-666aa5de8708">decentralization</a>
    <a href="https://medium.com/@conches/the-reason-why-i-am-hopeful-for-the-blockchain-is-not-to-do-what-we-are-already-doing-better-but-to-87d80ed293b6">could</a>
    <a href="https://venturebeat.com/2017/12/23/why-you-want-blockchain-based-ai-even-if-you-dont-know-it-yet/">produce</a>
    <a href="https://medium.com/@brianhanley/the-real-meaning-of-cryptocurrency-is-the-same-one-that-drove-ben-franklin-to-print-money-for-the-7dd2aae9cd28">integrity</a>.</p><p>Let’s
    start with this: Venmo is a free service to transfer dollars, and bitcoin transfers
    are not free. Yet after I wrote<a href="https://medium.com/@kaistinchcombe/ten-years-in-nobody-has-come-up-with-a-use-case-for-blockchain-ee98c180100">
    an article last December</a> saying bitcoin had no use, someone<a href="https://medium.com/@aaronjmendelsohn/there-is-so-much-wrong-with-this-i-couldnt-get-through-it-all-2dd24a109e0c">
    responded</a> that Venmo and Paypal are raking in consumers’ money and people
    should switch to bitcoin.</p><p>What a surreal contrast between blockchain’s non-usefulness/non-adoption
    and the conviction of its believers! It’s so entirely evident that this person
    didn’t become a bitcoin enthusiast because they were looking for a convenient,
    free way to transfer money from one person to another and discovered bitcoin.
    In fact, I would assert that there is <em>no single person in existence</em> who
    had a problem they wanted to solve, discovered that an available blockchain solution
    was the best way to solve it, and therefore became a blockchain enthusiast.</p><blockquote><h1>There
    is <em>no single person in existence</em> who had a problem they wanted to solve,
    discovered that an available blockchain solution was the best way to solve it,
    and therefore became a blockchain enthusiast.</h1></blockquote><p>The number of
    retailers accepting cryptocurrency as a form of payment is<a href="http://www.businessinsider.com/bitcoin-price-rises-but-retailers-wont-accept-it-7-2017">
    declining</a>, and its biggest corporate boosters like <a href="https://www.google.com/search?q=ibm+supply+chain+solutions">IBM</a>,
    <a href="http://ir.nasdaq.com/releasedetail.cfm?releaseid=948326">NASDAQ</a>,
    <a href="https://www.coindesk.com/fidelity-ceo-talks-love-bitcoin-blockchain-will-change-markets/">Fidelity</a>,
    <a href="https://www.linkedin.com/pulse/swift-official-blockchain-dead-end-patrick-mcconnell/">Swift</a>
    and Walmart have gone long on press but short on actual rollout. Even the most
    prominent blockchain company, Ripple, <a href="https://www.bloomberg.com/news/articles/2018-01-25/ripple-wants-xrp-to-be-bitcoin-for-banks-if-only-the-banks-wanted-it">doesn’t
    use blockchain in its product</a>. You read that right: the company <em>Ripple</em>
    decided the best way to move money across international borders was to <em>not
    use Ripples</em>.</p><h3>A blockchain is a literal technology, not a metaphor</h3><p>Why
    all the enthusiasm for something so useless in practice?</p><p>People have made
    a number of implausible claims about the future of blockchain—like that you <a
    href="https://venturebeat.com/2017/12/23/why-you-want-blockchain-based-ai-even-if-you-dont-know-it-yet/">should
    use it for AI</a> in place of the type of behavior-tracking that google and facebook
    do, for example. This is based on a misunderstanding of what a blockchain is.
    A blockchain isn’t an ethereal thing out there in the universe that you can “put”
    things into, it’s a specific data structure: a linear transaction log, typically
    replicated by computers whose owners (called miners) are rewarded for logging
    new transactions.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*O2IXj90Y2XxXdZRpwt8wkw.png"
    alt="In The Golden Compass, Dust permeates the world. It is created by consciousness
    and is itself conscious, and can condense into angels. Blockchain is not like
    that."><em>In The Golden Compass, Dust permeates the world. It is created by consciousness
    and is itself conscious, and can condense into angels. Blockchain is not like
    that.</em></p><p>There are two things that are cool about this particular data
    structure. One is that a change in any block invalidates every block after it,
    which means that you can’t tamper with historical transactions. The second is
    that you only get rewarded if you’re working on the same chain as everyone else,
    so each participant has an incentive to go with the consensus.</p><p>The end result
    is a shared definitive historical record. And, what’s more, because consensus
    is formed by each person acting in their own interest, adding a false transaction
    or working from a different history just means you’re not getting paid and everyone
    else is. Following the rules is mathematically enforced—no government or police
    force need come in and tell you the transaction you’ve logged is false (or extort
    bribes or bully the participants). It’s a powerful idea.</p><p>So in summary,
    here’s what blockchain-the-technology is: <em>“Let’s create a very long sequence
    of small files — each one containing a hash of the previous file, some new data,
    and the answer to a difficult math problem — and divide up some money every hour
    among anyone willing to certify and store those files for us on their computers.”</em></p><p>Now,
    here’s what blockchain-the-metaphor is: <em>“What if everyone keeps their records
    in a tamper-proof repository not owned by anyone?”</em></p><p>An illustration
    of the difference: In 2006, Walmart launched a system to track its bananas and
    mangoes from field to store. In 2009 they abandoned it because of logistical problems
    getting everyone to enter the data, and in 2017 they re-launched it (to <a href="https://www.google.com/search?q=%22six%20days,%2018%20hours,%20and%2026%20minutes%22">much
    fanfare</a>) on blockchain. If someone comes to you with “the mango-pickers don’t
    like doing data entry,” “I know: let’s create a very long sequence of small files,
    each one containing a hash of the previous file” is a nonsense answer, but “What
    if everyone keeps their records in a tamper-proof repository not owned by anyone?”
    at least addresses the right question!</p><h3>Blockchain-based trustworthiness
    falls apart in practice</h3><p>People treat blockchain as a “futuristic integrity
    wand”—wave a blockchain at the problem, and suddenly your data will be valid.
    For almost anything people want to be <em>valid</em>, blockchain has been proposed
    as a solution.</p><p>It’s true that tampering with data stored on a blockchain
    is hard, but it’s false that blockchain is a good way to create data that has
    integrity.</p><blockquote><h1>It’s true that tampering with data stored on a blockchain
    is hard, but it’s false that blockchain is a good way to create data that has
    integrity.</h1></blockquote><p>To understand why this is the case, let’s work
    from the practical to the theoretical. For example, let’s consider a widely-proposed
    use case for blockchain: buying an e-book with a “smart” contract. The goal of
    the blockchain is, you don’t trust an e-book vendor and they don’t trust you (because
    you’re just two individuals on the internet), but, because it’s on blockchain,
    you’ll be able to trust the transaction.</p><p>In the traditional system, once
    you pay you’re <em>hoping</em> you’ll receive the book, but once the vendor has
    your money they don’t have any incentive to deliver. You’re relying on Visa or
    Amazon or the government to make things fair—what a recipe for being a chump!
    In contrast, on a blockchain system, by executing the transaction as a record
    in a tamper-proof repository not owned by anyone, the transfer of money and digital
    product is automatic, atomic, and direct, with no middleman needed to arbitrate
    the transaction, dictate terms, and take a fat cut on the way. Isn’t that better
    for everybody?</p><p>Hm. Perhaps you are very skilled at writing software. When
    the novelist proposes the smart contract, you take an hour or two to make sure
    that the contract will withdraw only an amount of money equal to the agreed-upon
    price, and that the book — rather than some other file, or nothing at all — will
    actually arrive.</p><p><img src="https://cdn-images-1.medium.com/max/2480/1*t3XuYvxlgGhVlSqnhlUqSA.jpeg"
    alt="An e-book consultant"><em>An e-book consultant</em></p><p>Auditing software
    is hard! The most-heavily scrutinized smart contract in history had a small bug
    that nobody noticed — that is, until someone did notice it, and used it to steal
    fifty million dollars. If cryptocurrency enthusiasts putting together a $150m
    investment fund can’t properly audit the software, how confident are you in your
    e-book audit? Perhaps you would rather write your own counteroffer software contract,
    in case this e-book author has hidden a recursion bug in their version to drain
    your ethereum wallet of all your life savings?</p><p>It’s a complicated way to
    buy a book! It’s not <em>trustless</em>, you’re trusting in the software (and
    your ability to defend yourself in a software-driven world), instead of trusting
    other people.</p><p><img src="https://cdn-images-1.medium.com/max/4000/1*c91sjFxUObps_glZBLkMhw.jpeg"
    alt="“I’d rather look at the source code to make sure he didn’t vote twice.”"><em>“I’d
    rather look at the source code to make sure he didn’t vote twice.”</em></p><p>Another
    example: the <a href="http://web.archive.org/web/20180313084043/https://qz.com/1227050/sierra-leone-elections-powered-by-blockchain/">purported
    advantages</a> for a voting system in a weakly-governed country. “Keep your voting
    records in a tamper-proof repository not owned by anyone” <em>sounds</em> right
    — yet is your Afghan villager going to download the blockchain from a broadcast
    node and decrypt the Merkle root from his Linux command line to independently
    verify that his vote has been counted? Or will he rely on the mobile app of a
    trusted third party — like the nonprofit or open-source consortium <a href="https://qz.com/1234268/sierra-leone-blockchain-election-election-commission-denies-use-of-blockchain/">administering
    the election</a> or providing the software?</p><p>These sound like stupid examples
    — novelists and villagers hiring e-bodyguard hackers to protect them from malicious
    customers and nonprofits whose clever smart-contracts might steal their money
    and votes?? — until you realize that’s actually <em>the point</em>. Instead of
    relying on trust or regulation, in the blockchain world, individuals are <em>on-purpose</em>
    responsible for their own security precautions. And if the software they use is
    malicious or buggy, they should have read the software more carefully.</p><h3>The
    entire worldview underlying blockchain is wrong</h3><p>You actually see it over
    and over again. Blockchain systems are supposed to be <em>more</em> trustworthy,
    but in fact they are <em>the least trustworthy systems in the world</em>. Today,
    in less than a decade, <a href="https://hackernoon.com/ten-years-in-nobody-has-come-up-with-a-use-case-for-blockchain-ee98c180100#75b9">three
    successive top bitcoin exchanges</a> have been hacked, another is <a href="https://motherboard.vice.com/en_us/article/pam4xn/coinbase-insider-trading-lawsuit-gdax-bitcoin-cash">accused</a>
    of insider trading, <a href="https://hackernoon.com/ten-years-in-nobody-has-come-up-with-a-use-case-for-blockchain-ee98c180100#6aa2">the
    demonstration-project DAO smart contract got drained</a>, crypto price swings
    are ten times those of the world’s most mismanaged currencies, and bitcoin, the
    “killer app” of crypto transparency, is almost certainly<a href="http://www.tetherreport.com/">
    artificially</a> <a href="https://www.cnbc.com/2018/02/02/tether-what-you-need-to-know-about-the-cryptocurrency-worrying-markets.html">propped
    up</a> by<a href="https://hackernoon.com/the-curious-tale-of-tethers-6b0031eead87">
    fake</a> <a href="https://arstechnica.com/tech-policy/2018/02/tether-says-its-cryptocurrency-is-worth-2-billion-but-its-audit-failed/">transactions</a>
    <a href="https://www.reddit.com/r/btc/comments/7e54vo/how_is_tether_even_receiving_usd_since_the/">involving</a>
    <a href="https://cointelegraph.com/news/tether-really-isnt-a-scam-company-promises">billions</a>
    <a href="https://medium.com/@bitfinexed/the-mystery-of-the-bitfinex-tether-bank-and-why-this-is-suspicious-a8a6407a1241">of</a>
    *literally imaginary<a href="https://medium.com/@bitfinexed/">* dollars</a>.</p><p><img
    src="https://cdn-images-1.medium.com/max/3600/1*0ItJowi6v1UhgZInWFyQiA.jpeg" alt="How
    exactly does blockchain stop this guy from spraying pesticides?"><em>How exactly
    does blockchain stop this guy from spraying pesticides?</em></p><p>Blockchain
    systems do not magically make the data in them accurate or the people entering
    the data trustworthy, they merely enable you to audit whether it has been tampered
    with. A person who sprayed pesticides on a mango can still enter onto a blockchain
    system that the mangoes were organic. A corrupt government can create a blockchain
    system to count the votes and just allocate an extra million addresses to their
    cronies. An investment fund whose charter is written in software can still misallocate
    funds.</p><p>How then, is trust created?</p><p>In the case of buying an e-book,
    <em>even if you’re buying it with a smart contract,</em> instead of auditing the
    software you’ll rely on one of four things, each of them characteristics of the
    “old way”: either the author of the smart contract is someone you know of and
    trust, the seller of the e-book has a <a href="https://en.wikipedia.org/wiki/The_Evolution_of_Cooperation">reputation
    to uphold</a>, you or friends of yours have bought e-books from this seller in
    the past successfully, or you’re just willing to hope that this person will deal
    fairly. In each case, <em>even</em> if the transaction is effectuated via a smart
    contract, in practice you’re relying on trust of a counterparty or middleman,
    not your self-protective right to audit the software, each man an island unto
    himself. The contract still works, but the fact that the promise is written in
    auditable software rather than government-enforced English makes it <em>less</em>
    transparent, not <em>more</em> transparent.</p><p>The same for the vote counting.
    Before blockchain can even get involved, you need to trust that voter registration
    is done fairly, that ballots are given only to eligible voters, that the votes
    are made anonymously rather than bought or intimidated, that the vote displayed
    by the balloting system is the same as the vote recorded, and that no extra votes
    are given to the political cronies to cast. Blockchain makes none of these problems
    easier and many of them harder—but more importantly, solving them in a blockchain
    context requires a set of awkward workarounds that undermine the core premise.
    So we know the entries are valid, let’s allow only trusted nonprofits to make
    entries—and you’re back at the good old “classic” ledger. In fact, if you look
    at <em>any</em> blockchain solution, inevitably you’ll find an awkward workaround
    to re-create trusted parties in a trustless world.</p><h3>A crypto-medieval system</h3><p>Yet
    absent these “old way” factors—supposing you actually attempted to rely on blockchain’s
    self-interest/self-protection to build a real system—you’d be in a real mess.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*M5Yh5XByF0lkWCfUEPGW1A.jpeg" alt="The
    Knights Templar [was sort of a banking system, actually](https://en.wikipedia.org/wiki/Knights_Templar)."><em>The
    Knights Templar <a href="https://en.wikipedia.org/wiki/Knights_Templar">was sort
    of a banking system, actually</a>.</em></p><p>Eight hundred years ago in Europe
    — with weak governments unable to enforce laws and trusted counterparties few,
    fragile and far between — theft was rampant, safe banking was a fantasy, and personal
    security was at the point of the sword. This is what Somalia looks like now, and
    also, what it looks like to transact on the blockchain <em>in the ideal scenario</em>.</p><p>Somalia
    on purpose. That’s the vision. Nobody wants it!</p><p><em>Even the most die-hard
    crypto enthusiasts</em> prefer in practice to rely on trust rather than their
    own crypto-medieval systems. 93% of bitcoins are mined by managed consortiums,
    yet none of the consortiums use smart contracts to manage payouts. Instead, they<a
    href="https://slushpool.com/home/"> promise</a> things like a “long history of
    stable and accurate payouts.” Sounds like a trustworthy middleman!</p><p><img
    src="https://cdn-images-1.medium.com/max/2020/1*mDF1ET8BKW0q7XcPndQPgw.png" alt="Trusted
    sellers of stolen credit cards and cocaine."><em>Trusted sellers of stolen credit
    cards and cocaine.</em></p><p>Same with Silk Road, a cryptocurrency-driven online
    drug bazaar. The key to Silk Road wasn’t the bitcoins (that was just to evade
    government detection), it was the <em>reputation scores</em> that allowed people
    to trust criminals. And the reputation scores weren’t tracked on a tamper-proof
    blockchain, they were tracked by a trusted middleman!</p><p>If Ripple, Silk Road,
    Slush Pool, and the DAO all prefer “old way” systems of creating and enforcing
    trust, it’s no wonder that the outside world had not adopted trustless systems
    either!</p><h3>In the name of all blockchain stands for, it’s time to abandon
    blockchain</h3><p>A decentralized, tamper-proof repository sounds like a great
    way to audit where your mango comes from, how fresh it is, and whether it has
    been sprayed with pesticides or not. But actually, laws on food labeling, nonprofit
    or government inspectors, an independent, trusted free press, empowered workers
    who trust whistleblower protections, credible grocery stores, your local nonprofit
    farmer’s market, and so on, do a way better job. People who actually care about
    food safety do not adopt blockchain because <em>trusted is better than trustless.
    *Blockchain’s technology mess exposes its metaphor mess — a software engineer
    pointing out that storing the data a sequence of small hashed files won’t get
    the mango-pickers to accurately report whether they sprayed pesticides is *also</em>
    pointing out why peer-to-peer interaction with no regulations, norms, middlemen,
    or trusted parties is actually a bad way to empower people.</p><p><img src="https://cdn-images-1.medium.com/max/4096/1*eMT-ntdZqu1H6-ZJTyfYfQ.jpeg"
    alt="Smarter produce in under 2.2 seconds"><em>Smarter produce in under 2.2 seconds</em></p><p>Like
    the farmer’s market or the organic labeling standard, so many <em>real</em> ideas
    are hiding in plain sight. Do you wish there was a type of financial institution
    that was secure and well-regulated in all the traditional ways, but also has the
    integrity of being people-powered? A credit union’s members elect its directors,
    and the transaction-processing revenue is divided up among the members. Move your
    money! Prefer a deflationary monetary policy? Central bankers are appointed by
    elected leaders. Want to make elections more secure and democratic? Help write
    open source voting software, go out and register voters, or volunteer as an election
    observer here or abroad! Wish there was a trusted e-book delivery service that
    charged lower transaction fees and distributed more of the earnings to the authors?
    You can <em>already</em> consider stated payout rates when you buy music or books,
    buy directly from the authors, or start your own e-book site that’s even better
    than what’s out there!</p><p>Projects based on the elimination of trust have failed
    to capture customers’ interest <em>because trust is actually so damn valuable</em>.
    A lawless and mistrustful world where self-interest is the only principle and
    paranoia is the only source of safety is a not a paradise but a crypto-medieval
    hellhole.</p><p>As a society, and as technologists and entrepreneurs in particular,
    we’re going to have to get good at cooperating — at building trust, and, at being
    trustworthy. Instead of directing resources to the <em>elimination</em> of trust,
    we should direct our resources to the <em>creation</em> of trust—whether we use
    a long series of sequentially hashed files as our storage medium or not.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*dAbV-xlWARj2eZYIyFInog.png" alt=""></p><p><em>Kai
    Stinchcombe coined the terms “crypto-medieval” “futuristic integrity wand” and
    “smart mango.” Please use freely: coining terms makes you a futurist.</em></p><p><img
    src="https://cdn-images-1.medium.com/max/3916/1*QATCo0QEJYiDzVAkvy_dDA.png" alt=""></p>'
  :author: Kai Stinchcombe
  :topic: future
- :url: https://medium.com/@ztrana/the-expert-generalist-why-the-future-belongs-to-polymaths-46b0e9edc7bc?source=search_post---------2
  :title: Why the Future Belongs to Polymaths
  :content: '<p>The Expert Generalist: Why the Future Belongs to Polymaths</p><p>Some
    of history’s greatest contributions have come from polymaths.</p><p>Aristotle
    practically invented half a dozen fields of study across philosophy. Galileo was
    as much a physicist as he was an engineer when he helped kick-start the scientific
    revolution. Da Vinci might have been even more famous as an inventor than an artist
    if his notebooks were ever published.</p><p>Even in the last 100 years, we have
    had people like John Von Neumann and Herbert Simon who have made breakthrough
    advances across fields as diverse as computer science, economics, and psychology.</p><p>That
    is, of course, not to detract from the specialists who have pushed our progress
    forward. In fact, until now, these specialists have far outnumbered the polymaths
    in both their historical ranks and their contributions.</p><p>After all, it takes
    a lot of time to master the depths of a specific field so that you can eventually
    add something that pushes it ahead. From this point of view, it makes sense that
    polymaths have been as scarce as they have been.</p><p>Still, it’s clear that
    whenever we have had giants like Aristotle, Galileo, and da Vinci, the contributions
    they made even in specialized fields may not have been made in the same way if
    they hadn’t attacked a problem with a diverse inventory of mental knowledge and
    understanding.</p><p>Polymaths see the world differently. They make connections
    that are otherwise ignored, and they have the advantage of a unique perspective.</p><p>In
    a world increasingly dominated by machines, I have a feeling that this approach
    is going to become increasingly valuable.</p><h2>The Redundancy of Reality</h2><p>One
    of the reasons Aristotle created so many sub-fields of philosophy and early forms
    of science is because these fields were so young back then.</p><p>They were branches
    of the same underlying tree trunk, and Aristotle had a deep enough understanding
    of what was contained in that trunk to then divide it into different parts and
    make his early contributions.</p><p>Even so, however, the questions he asked and
    the answers he provided are still up for debate, and he is still a highly influential
    figure in philosophy. He didn’t just collect all of the low-hanging fruit, but
    he went the full length in developing the path that lay ahead.</p><p>The lesson
    here extends beyond philosophy. Reality is categorized in our mind by words. That’s
    how specialization is born. We move from a general observation through our senses
    and then we divide this observation into specializations like philosophy, psychology,
    economics, and art.</p><p>The tree trunk is reality, and the branches are the
    different disciplines, which then become their own trunks of knowledge with branches.</p><p>What
    polymaths realize by studying the different branches is that many of them have
    the same foundation, and if this foundation is deeply understood then all they
    need to do is apply that ingrained knowledge to a different context rather than
    do the work of surface-level specialization.</p><p>For example, as a writer, if
    I want my work read, I need to know marketing.</p><p>I’ve been fortunate and done
    relatively well for myself in the time I’ve been active, and yet I don’t read
    marketing books, and nor do I spend all that much time trying to formally learn
    about it. Why is that?</p><p>Well, because I’ve always had a deep fascination
    with psychology, and to me, marketing is just psychology dressed up in a particular
    context. Psychology is the trunk, and it’s a trunk I’ve thought about a lot, and
    as a result, I can already see the patterns that most people think of as marketing
    tactics.</p><p>Reality is redundant, and when you learn widely, that becomes clearer
    and clearer. The more you explore, the more you can exploit these redundancies.</p><h2>A
    Higher Rate of Learning</h2><p>The big difference between the approaches of a
    polymath and a specialist is that the specialist picks a spot and then goes deep,
    whereas the polymath is on a lane that continuously gets wider.</p><p>These are
    obviously not mutually exclusive, and the ideal combination to me is one that
    relies on a strong understanding of the fundamentals of many disciplines with
    a specific domain or two in which you specialize.</p><p>That said, if we take
    just a specialist and a polymath separately, beyond just the benefit of the creative
    connections that are available from having studied broadly, the polymath also
    has a learning advantage.</p><p>Learning itself is a skill, and when you exercise
    that skill across domains, you get specialized as a learner in a way that someone
    who goes deep doesn’t.</p><p>You learn how to learn by continuously challenging
    yourself to grasp concepts of a broad variety. This ironically then allows you
    to specialize in something else faster if you so choose. This is an incredibly
    valuable advantage.</p><p>It explains how some of history’s polymaths were able
    to contribute in such a specialized way even though they were primarily focused
    on going broad.</p><p>Now, in a world where Artificial Narrow Intelligence systems
    are going to displace most routine, specialized work, it isn’t too much of stretch
    to assume that this skill of learning to learn across disciplines may just be
    the difference between those who reinvent themselves and those who don’t.</p><p>In
    fact, chances are that our current distinctions between disciplines will start
    to fade away and new ones will arise. Many of them will likely reside between
    areas that aren’t currently covered by specialization.</p><p>Traditionally, the
    idea of having a single career over the course of a life wasn’t unreasonable.
    The future, however, looks different. People will likely have multiple careers
    that differ significantly. Even if they don’t, we will see more and more project-based
    work, which will require similar skills.</p><p>In such a world, the learning ability
    of a polymath may just be the difference.</p><h2>The Takeaway</h2><p>At any point
    in history, most of our knowledge is contained outside of individual minds. It’s
    contained in the cultures that spring up around us.</p><p>A big part of today’s
    culture is the internet. It’s not only democratized knowledge, but it’s made it
    so accessible that those who are curious enough can’t help but embrace the approach
    of a polymath. As such, we’re going to see more and more people playing at the
    intersection of different disciplines.</p><p>While specialization will still have
    its place, the boundaries between the many aspects of reality are going to continue
    to be blurred, and those who can comfortably embrace such blurring will thrive.</p><p>Although
    this may appear to many as unfamiliar, the truth is that it’s actually a far more
    accurate representation of what is going on. We’ve just been conditioned to think
    otherwise.</p><p>As Leonardo da Vinci would remind himself,</p><blockquote><p>“Study
    the science of art. Study the art of science. Develop your senses — especially
    learn how to see. Realize that everything connects to everything else.”</p></blockquote><p>What
    makes the world interesting is the interaction between objects and not the objects
    in and of themselves. If we’re always restricting these interactions by creating
    boundaries, we’re also taking away from our comprehension.</p><p>Nothing exists
    independently of its surroundings and that fact doesn’t change just because we
    decide to be blind to it with narrowed disciplines.</p><p>In an evolving world,
    those who can see that will have the edge.</p><h2>Want more?</h2><p>I write about
    philosophy, science, art, and history for a private community of smart, curious
    people. <a href="https://zatrana.com/community/">**Join 40,000+ readers for exclusive
    access.</a>**</p>'
  :author: Zat Rana
  :topic: future
- :url: https://medium.com/fwd-thoughts/the-future-is-without-apps-ddf43ec52aab?source=search_post---------3
  :title: The Future is Without Apps
  :content: '<p>The Future is Without Apps</p><h3>How we may soon no longer need to
    install apps with help from Google and Surprisingly: Apple.</h3><p>“There’s an
    App for That.”</p><p>It’s the trademarked slogan that defined the mobile world
    since 2008. Surely, apps seemed to be <em>the way</em> to go. Coding bootcamps
    that claimed to teach you app development chops within weeks popped up everywhere;
    products used commercials to go out of their way and show off their new apps;
    heck, even that family restaurant around the block got its own menu app built.</p><p>With
    the release of the App store in 2008, Apple was the first to popularize the idea
    of nicely packaged, downloadable applications on your phone. However, this concept
    of centralized software distribution isn’t actually new. <a href="http://www.wikiwand.com/en/App_store#/Precursors">Many
    handheld and desktop devices</a> already had some form of application store built
    in years before Apple’s App Store debut. The reason why Apple succeeded, in retrospect,
    is a combination of timing and technology. By 2008, the iOS (then “iPhone OS”)
    platform was able to offer access to a maturing 3G network, a well-documented
    development environment, great handheld graphics, and most importantly, the backing
    of a technology giant. Mobile apps made sense. They were the most efficient way
    to deliver the newest content and services with native experience and performance.</p><p>People
    don’t care how it all works, they just want to throw birds at pigs and show off
    their #nofilter selfies. The ability to download and run cool apps was the iPhone’s
    winning feature for a short while. Android soon followed suit. Smartphones became
    cheaper; networks became faster; handheld processing power quadrupled; apps prevailed.</p><h3>“OK
    Sherlock, So What’s Wrong?”</h3><p>Nothing. But we can do better now. “Better
    than this <a href="http://www.theverge.com/2015/10/30/9641008/neko-atsume-english-version-available">app
    that lets me feed and play with cute cats</a>?” Yep.</p><p>You see, mobile apps
    succeeded because of the right combination of fast network and capable handheld
    processors. Technologies have progressed much further than that in the meantime,
    and the world of apps has grown beyond a healthy size. Among all of the headaches
    that follow the impenetrable mobile market today, the two most urgent would be
    the <strong>delivery</strong> and <strong>discoverability</strong> of content.</p><h3>Delivery
    and Discoverability</h3><p>Everyone with a smartphone has experienced this at
    some point: “Wow, this restaurant/shop is offering 20% off the special entree…oh,
    but only if you have this app,” or “Wait, I have to download an app for this?
    I just to want to see what my friend posted.” You probably heard from a friend
    or saw in a billboard about this really cool app that’ll transform your life,
    but hesitated to install it, or worse, pay for it.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*wtpwPbNmFyrSynO2WRAWqg.png"
    alt="Image by Branch Metrics"><em>Image by Branch Metrics</em></p><p>The problem
    is twofold. Let’s start with the first: <strong>delivery</strong>. Your average
    digital couch potato now has a shorter attention span and less patience. Paying
    for and installing an app, what was once a magical, fast, and smooth experience,
    is an act of commitment for many nowadays. You won’t believe how many people demand
    a convincing reason, your heartfelt speech, and your first-born child just to
    get them to try out a new app. Just think about that one friend who still refuses
    to download the Messenger app (seriously just get it already). Companies want
    to deliver content and services to customers as fast and easily as possible, but
    the increasing reluctance for the perceived installation-barrier is putting up
    a delivery obstacle. Our home screens are the new San Francisco — space is at
    a premium.</p><p>The second problem, <strong>discoverability</strong>, is a little
    bit more subtle, but was well articulated by a few tech journalists in the past.
    Many popular apps, such as Instagram and <a href="http://www.cultofmac.com/203916/r-i-p-the-daily-the-worlds-first-ipad-only-newspaper/">The
    Daily</a>, began as mobile-only apps that surfaced great content only within a
    closed platform. You had to download and register for Instagram in order to see
    your friends’ Instagram photos. I’m sure that there are many more apps out there
    today that I’m not aware of with useful content that are not searchable or viewable
    on your browser. A fragmented Internet where creative and original content are
    locked up in proprietary platforms is not the Internet we know and love.</p><h3>App
    Linking and Indexing Works, But Not Good Enough</h3><p><img src="https://cdn-images-1.medium.com/max/2000/1*5IlwcFVs98EsCgGf-s2PMA.gif"
    alt="GIF by Branch Metrics"><em>GIF by Branch Metrics</em></p><p>Now that we understand
    the problems, let’s take a look at the current solutions. The word “app linking”
    may not sound familiar to you, but every time you tap on a YouTube link in another
    app and the YouTube app opens up to play the video, you’re experiencing it. Google,
    Apple, and Facebook have all implemented <a href="http://searchengineland.com/library/mobile-marketing/app-indexing-deep-links">variations
    of this technology</a>. App linking brings you to the app that best presents the
    content you want. Great.</p><p>The other half of our existing solution to compliment
    app linking is app indexing. Google and Apple have provided ways for third-party
    content providers to show their own in-app content in a search query, allowing
    previously locked away content to surface on Google and iOS Spotlight.</p><p>Perfect.
    That seems to have solved our delivery and discoverability problems. User searches
    for something, in-app content shows up in the results, user clicks the link and
    gets brought into the app.</p><p>You might have already noticed the problems here.
    What if the app doesn’t support app linking and indexing? App indexing requires
    the content provider to <em>actively put effort into implementing it,</em> so
    by default, your content is not visible to the world wide web, exactly opposite
    of how most web-based content work. And only until recently, in order for your
    app to be indexed by Google, developers had to build mirroring web versions. Just
    imagine the troubles. On the consumer side, what if I don’t have that app to begin
    with? What if I don’t want to install that app just to read an article? The list
    goes on.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*Cxl8kKSztJhA4bggU01oGA.gif"
    alt="GIF by [Alex Bauer](http://stackoverflow.com/users/5394680/alex-bauer)"><em>GIF
    by <a href="http://stackoverflow.com/users/5394680/alex-bauer">Alex Bauer</a></em></p><p>Think
    about that one time when you tried to check out something and it redirected you
    into App Store instead. Very annoying. And no, no one wants to install your app.</p><p>I
    don’t want to maintain a walled garden of apps. I want to consume and create content.</p><p>“So
    then, what is the solution?”</p><p>Just get rid of “apps.” Let’s see how we might
    be able to do this.</p><h3>App Streaming from Google</h3><p>Google’s approach
    to the delivery and discoverability problem has relied on app indexing and linking.
    If the developer puts in the effort, users can see previously mobile-only content
    surfacing on Google search results. This is great for Google to stay relevant
    in a mobile market that is increasingly reliant on native app content instead
    of web search. But in countries like China and India, where mobile phones are
    the first computers for millions of people and mobile-only content is king, where
    does a search engine provide their links to begin with? Suddenly, “everything
    is just a Google search away” loses its magic.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*YW3hlhA99S_A8sI4gB5aQw.gif"
    alt=""></p><p>Roughly four months ago, Google rolled out an impressive technology
    that almost no one remembers — App Streaming. It does exactly what it sounds like;
    instead of installing applications like we’re used to, you tap a link to the content
    and Google will stream the right parts of the app to you on-demand. No need to
    install it, ’cause you’re already running it. It might be Google’s first pilot
    experiment of their cloud platform, but the idea of streaming applications onto
    your phone is not new. In fact, the very technology itself was <a href="http://techcrunch.com/2015/06/18/report-last-year-google-secretly-acquired-agawi-a-specialist-in-streaming-native-mobile-apps/">bought
    by Google from Agawi</a> a few years back.</p><p>Combine App Streaming and App
    Indexing, suddenly you remove the two barriers to all information previously locked
    away in mobile apps.</p><h3>On-Demand Resources from Apple</h3><p>While Google’s
    fantastic solution is still in an experimental stage, Apple is nudging its developers
    in more or less the same direction, albeit characteristic of Apple, in a less
    obvious or more incremental way.</p><p>On-Demand Resources (ODR) is a technology
    released with iOS 9 that downloads a small core application only on installation,
    and then downloads extra parts and content as needed. ODR currently is being used
    mostly in games, where a user only downloads the assets (graphics, videos, etc.)
    for a few beginning levels. iOS will then download more levels as the user progresses,
    and delete assets for completed levels to make space.</p><p><img src="https://cdn-images-1.medium.com/max/2700/1*fWCaF8-wYMy9_DHXBSC88g.png"
    alt="Image by [Apple](https://developer.apple.com/library/ios/documentation/FileManagement/Conceptual/On_Demand_Resources_Guide/)"><em>Image
    by <a href="https://developer.apple.com/library/ios/documentation/FileManagement/Conceptual/On_Demand_Resources_Guide/">Apple</a></em></p><p>How
    does this mirror Google’s approach? It doesn’t. However, if ODR becomes commonplace
    and the supporting infrastructure is flexible enough, you can reasonably imagine
    Apple extending the framework to a more general use case. In any case, they got
    this wonderful tool under the belt that will potentially blossom into a form of
    install-free applications.</p><h3>The Underrated Quest for Web Apps</h3><p>While
    we’re on Apple, I want to bring up Steve Jobs’s vision of the first iPhone. You
    might still remember fondly that the first iPhone was a closed platform with no
    developer environment or third-party apps. His solution? Web apps.</p><p>Web apps
    don’t need to be installed. They run (relatively) securely in closed browser environment.
    They are web friendly, meaning they can be indexed and surfaced by search engines.
    Oh wait, isn’t that exactly what we want today? Probably.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*JHfFeBBPtQj3JpO24IffvQ.jpeg"
    alt="This is probably the one billionth time you’ve seen this picture. But I’ll
    put it up anyways."><em>This is probably the one billionth time you’ve seen this
    picture. But I’ll put it up anyways.</em></p><p>I’m still leaning on the belief
    that web apps were simply Steve Jobs’s transitional plan to native apps, but even
    so, I think he was (at least accidentally) onto something. If we had in 2008 the
    powerful Javascript frameworks we have today, perhaps web apps would have taken
    off. Feel free to paint the story into one where Jobs the Visionary foresaw the
    discoverability and delivery problem, because perhaps he did predict this.</p><h3>A
    Future without Apps</h3><p>A lot of what app streaming offers competes with other
    sophisticated web app technologies (React Native, etc.) that are quickly closing
    the gap between native and web. However, one decisive differentiating factor would
    still be the native look and feel or possibly performance that web apps sorely
    lack. There is just no perfect solution yet.</p><p>On top of it all, what we really
    need is a <strong>platform-agnostic solution to app streaming that truly overcomes
    content delivery and discoverability problems</strong>. We want something akin
    to <a href="http://www.wikiwand.com/en/Java_applet">Java applets on browsers</a>
    (yikes) on mobile. Imagine the possibilities: regardless of the OS or the brand
    of supercomputer you have in your pocket, you will be able to run an app and view
    its content with zero friction and with native feel and performance. As for developers,
    you can write an app once and stream it to all devices and browsers.</p><p>With
    Google streaming apps to your phone and Apple nudging developers to store parts
    of their apps in the cloud, we may have just entered the beginning of a future
    where installation becomes obsolete and the border between “website” and “native
    app” is blurred. This is a future without apps. And it’s wonderful.</p><p>The
    user forefront of all these insanely complex, powerful, and cool technologies
    is one of ultimate simplicity and elegance.</p><p>Welcome to a future without
    apps.</p><p>Hope you enjoyed the post. To serve our readers better, Fwd: Thoughts
    and I have unfortunately left Medium. If you would like to read more posts like
    this, please take a quick second and follow us on <a href="http://twitter.com/fwd_thoughts">Twitter</a>
    or <a href="http://facebook.com/fwdthoughts">Facebook</a>. You can have our new
    posts delivered right into your inbox if you sign<a href="http://FwdThoughts.com/subscribe">
    up for our spam-free newsletter.</a></p><p>You can also <a href="https://twitter.com/Dovizu">follow
    me personally on Twitter</a>, where I can share a variety of good information
    on design and technology with you.</p><h3><em>(Disclaimer and clarification: I
    wrote this article long before I joined Google. *Opinions are my own and not the
    views of my employer</em>.)*</h3>'
  :author: unknown
  :topic: future
- :url: https://medium.com/timescale/why-sql-beating-nosql-what-this-means-for-future-of-data-time-series-database-348b777b847a?source=search_post---------4
  :title: Why SQL is beating NoSQL, and what this means for the future of data
  :content: '<p>After years of being left for dead, SQL today is making a comeback.
    How come? And what effect will this have on the data community?</p><p><em>(Update:
    #1 on Hacker News! <a href="https://news.ycombinator.com/item?id=15335717">Read
    the discussion here.</a>)</em></p><p><em>(Update 2: <a href="http://www.timescale.com/">TimescaleDB</a>
    is hiring! Open positions in Engineering, Marketing, and Sales. <a href="http://www.timescale.com/careers">Interested?</a>)</em></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*HMEoq1e2RNxSwiQo_RL6tw.gif" alt="**SQL
    awakens to fight the dark forces of NoSQL**"><strong><em>SQL awakens to fight
    the dark forces of NoSQL</em></strong></p><p>Since the dawn of computing, we have
    been collecting exponentially growing amounts of data, constantly asking more
    from our data storage, processing, and analysis technology. In the past decade,
    this caused software developers to cast aside SQL as a relic that couldn’t scale
    with these growing data volumes, leading to the rise of NoSQL: MapReduce and Bigtable,
    Cassandra, MongoDB, and more.</p><p>Yet today SQL is resurging. All of the major
    cloud providers now offer popular managed relational database services: e.g.,
    <a href="https://aws.amazon.com/rds/">Amazon RDS</a>, <a href="https://cloud.google.com/sql/docs/">Google
    Cloud SQL</a>, <a href="https://azure.microsoft.com/en-us/services/postgresql/">Azure
    Database for PostgreSQL</a> (Azure launched just this year). In Amazon’s own words,
    its PostgreSQL- and MySQL-compatible database Aurora database product has been
    the “<a href="http://www.businesswire.com/news/home/20161130006131/en/AWS-Extends-Amazon-Aurora-PostgreSQL-Compatibility">fastest
    growing service in the history of AWS</a>”. SQL interfaces on top of Hadoop and
    Spark continue to thrive. And just last month, <a href="https://www.confluent.io/blog/ksql-open-source-streaming-sql-for-apache-kafka/">Kafka
    launched SQL support</a>. Your humble authors themselves are developers of a new
    <a href="https://github.com/timescale/timescaledb">time-series database</a> that
    fully embraces SQL.</p><p>In this post we examine why the pendulum today is swinging
    back to SQL, and what this means for the future of the data engineering and analysis
    community.</p><h2>Part 1: A New Hope</h2><p>To understand why SQL is making a
    comeback, let’s start with why it was designed in the first place.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/0*fAiBMwVRHoAPwLL7." alt="***Like
    all good stories, ours starts in the 1970s***">*<strong><em>Like all good stories,
    ours starts in the 1970s</em></strong>*</p><p>Our story starts at IBM Research
    in the early 1970s, where the relational database was born. At that time, query
    languages relied on complex mathematical logic and notation. Two newly minted
    PhDs, Donald Chamberlin and Raymond Boyce, were impressed by the relational data
    model but saw that the query language would be a major bottleneck to adoption.
    They set out to design a new query language that would be (in their own words):
    “<a href="http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6359709">more accessible
    to users without formal training in mathematics or computer programming</a>.”</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/0*Y5w_pCl0K9Fo9AF8." alt="***Query
    languages before SQL ( a, b ) vs SQL ( c ) ([source](http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6359709))***">*<strong><em>Query
    languages before SQL ( a, b ) vs SQL ( c ) (<a href="http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6359709">source</a>)</em></strong>*</p><p>Think
    about this. Way before the Internet, before the Personal Computer, when the programming
    language C was first being introduced to the world, two young computer scientists
    realized that, “<a href="http://www.almaden.ibm.com/cs/people/chamberlin/sequel-1974.pdf">much
    of the success of the computer industry depends on developing a class of users
    other than trained computer specialists.</a>” They wanted a query language that
    was as easy to read as English, and that would also encompass database administration
    and manipulation.</p><p>The result was SQL, first introduced to the world in 1974.
    Over the next few decades, SQL would prove to be immensely popular. As relational
    databases like System R, Ingres, DB2, Oracle, SQL Server, PostgreSQL, MySQL (and
    more) took over the software industry, SQL became established as the preeminent
    language for interacting with a database, and became the <em>lingua franca</em>
    for an increasingly crowded and competitive ecosystem.</p><p>(Sadly, Raymond Boyce
    never had a chance to witness SQL’s success. <a href="https://en.wikipedia.org/wiki/Raymond_F._Boyce">He
    died of a brain aneurysm</a> 1 month after giving one of the earliest SQL presentations,
    just 26 years of age, leaving behind a wife and young daughter.)</p><p>For a while,
    it seemed like SQL had successfully fulfilled its mission. But then the Internet
    happened.</p><iframe src="https://medium.com/media/254441eea2ea320d7081c26599169d9e"
    frameborder=0></iframe><h2>Part 2: NoSQL Strikes Back</h2><p>While Chamberlin
    and Boyce were developing SQL, what they didn’t realize is that a second group
    of engineers in California were working on another budding project that would
    later widely proliferate and threaten SQL’s existence. That project was <a href="https://en.wikipedia.org/wiki/ARPANET">ARPANET</a>,
    and on October 29, 1969, <a href="http://all-that-is-interesting.com/internet-history">it
    was born</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*L-W7e8jSXtgdWSXu."
    alt="***Some of the creators of ARPANET, which eventually evolved into today’s
    Internet ([source](http://all-that-is-interesting.com/internet-history))***">*<strong><em>Some
    of the creators of ARPANET, which eventually evolved into today’s Internet (<a
    href="http://all-that-is-interesting.com/internet-history">source</a>)</em></strong>*</p><p>But
    SQL was actually fine until another engineer showed up and invented the <a href="https://en.wikipedia.org/wiki/World_Wide_Web">World
    Wide Web</a>, in 1989.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*6kZJR84blb_BkDxc."
    alt="***The physicist who invented the Web ([source](https://webfoundation.org/about/vision/history-of-the-web/))***">*<strong><em>The
    physicist who invented the Web (<a href="https://webfoundation.org/about/vision/history-of-the-web/">source</a>)</em></strong>*</p><p>Like
    a weed, the Internet and Web flourished, massively disrupting our world in countless
    ways, but for the data community it created one particular headache: new sources
    generating data at much higher volumes and velocities than before.</p><p>As the
    Internet continued to grow and grow, the software community found that the relational
    databases of that time couldn’t handle this new load. <em>There was a disturbance
    in the force, as if a million databases cried out and were suddenly overloaded.</em></p><p>Then
    two new Internet giants made breakthroughs, and developed their own distributed
    non-relational systems to help with this new onslaught of data: <strong>MapReduce</strong>
    (<a href="https://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf">published
    2004</a>) and <strong>Bigtable</strong> (<a href="https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf">published
    2006</a>) by Google, and <strong>Dynamo</strong> (<a href="http://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf">published
    2007</a>) by Amazon. These seminal papers led to even more non-relational databases,
    including <strong>Hadoop</strong> (based on the MapReduce paper, <a href="https://en.wikipedia.org/wiki/Apache_Hadoop">2006</a>),
    <strong>Cassandra</strong> (heavily inspired by both the Bigtable and Dynamo papers,
    <a href="https://en.wikipedia.org/wiki/Apache_Cassandra">2008</a>) and <strong>MongoDB</strong>
    (<a href="https://en.wikipedia.org/wiki/MongoDB">2009</a>). Because these were
    new systems largely written from scratch, they also eschewed SQL, leading to the
    rise of the NoSQL movement.</p><p>And boy did the software developer community
    eat up NoSQL, embracing it arguably much more broadly than the original Google/Amazon
    authors intended. It’s easy to understand why: NoSQL was new and shiny; it promised
    scale and power; it seemed like the fast path to engineering success. But then
    the problems started appearing.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*G6Hx2C1l9abkVkxq."
    alt="***Classic software developer tempted by NoSQL. Don’t be this guy.***">*<strong><em>Classic
    software developer tempted by NoSQL. Don’t be this guy.</em></strong>*</p><p>Developers
    soon found that not having SQL was actually quite limiting. Each NoSQL database
    offered its own unique query language, which meant: more languages to learn (and
    to teach to your coworkers); increased difficulty in connecting these databases
    to applications, leading to tons of brittle glue code; a lack of a third party
    ecosystem, requiring companies to develop their own operational and visualization
    tools.</p><p>These NoSQL languages, being new, were also not fully developed.
    For example, there had been years of work in relational databases to add necessary
    features to SQL (e.g., JOINs); the immaturity of NoSQL languages meant more complexity
    was needed at the application level. The lack of JOINs also led to denormalization,
    which led to data bloat and rigidity.</p><p>Some NoSQL databases added their own
    “SQL-like” query languages, like Cassandra’s CQL. But this often made the problem
    worse. Using an interface that is <em>almost</em> identical to something more
    common actually created more mental friction: engineers didn’t know what was supported
    and what wasn’t.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*NxNoLnTnFQ7LkqBj."
    alt="***SQL-like query languages are like the [Star Wars Holiday Special](https://www.youtube.com/watch?v=ZX0x-I06Fpc).
    Accept no imitations. [**(And always avoid the Star Wars Holiday Special.)](https://xkcd.com/653/)*">*<em>**SQL-like
    query languages are like the <a href="https://www.youtube.com/watch?v=ZX0x-I06Fpc">Star
    Wars Holiday Special</a>. Accept no imitations. <a href="https://xkcd.com/653/">**(And
    always avoid the Star Wars Holiday Special.)</a></em>*</p><p>Some in the community
    saw the problems with NoSQL early on (e.g., <a href="https://homes.cs.washington.edu/%7Ebillhowe/mapreduce_a_major_step_backwards.html">DeWitt
    and Stonebraker in 2008</a>). Over time, through hard-earned scars of personal
    experience, more and more software developers joined them.<a href="https://blog.timescale.com/time-series-data-why-and-how-to-use-a-relational-database-instead-of-nosql-d0cd6975e87c"><strong>Time-series
    data: Why (and how) to use a relational database instead of NoSQL</strong><em>Contrary
    to the belief of most developers, we show that relational databases can be made
    to scale for time-series data.</em>blog.timescale.com</a></p><h2>Part 3: Return
    of the SQL</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*QsZLtPL0t9bspQ16fpmeLA.gif"
    alt=""></p><p>Initially seduced by the dark side, the software community began
    to see the light and come back to SQL.</p><p>First came the SQL interfaces on
    top of Hadoop (and later, Spark), leading the industry to “back-cronym” NoSQL
    to “Not Only SQL” (yeah, nice try).</p><p>Then came the rise of NewSQL: new scalable
    databases that fully embraced SQL. <strong>H-Store</strong> <a href="http://hstore.cs.brown.edu/papers/hstore-demo.pdf">(published
    2008</a>) from MIT and Brown researchers was one of the first scale-out OLTP databases.
    Google again led the way for a geo-replicated SQL-interfaced database with their
    first <strong>Spanner</strong> paper <a href="https://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf">(published
    2012</a>) (whose authors include the original MapReduce authors), followed by
    other pioneers like <strong>CockroachDB</strong> (<a href="https://en.wikipedia.org/wiki/Cockroach_Labs">2014</a>).</p><p>At
    the same time, the <strong>PostgreSQL</strong> community began to revive, adding
    critical improvements like a JSON datatype (2012), and a potpourri of new features
    in <a href="https://wiki.postgresql.org/wiki/New_in_postgres_10">PostgreSQL 10</a>:
    better native support for partitioning and replication, full text search support
    for JSON, and more (release slated for later this year). Other companies like
    <strong>CitusDB</strong> (<a href="https://www.citusdata.com/blog/2016/03/24/citus-unforks-goes-open-source/">2016</a>)
    and yours truly (<a href="https://github.com/timescale/timescaledb">**TimescaleDB</a>**,
    <a href="https://blog.timescale.com/when-boring-is-awesome-building-a-scalable-time-series-database-on-postgresql-2900ea453ee2">released
    this year</a>) found new ways to scale PostgreSQL for specialized data workloads.</p><p><img
    src="https://cdn-images-1.medium.com/max/4800/1*iGyZFQzaXJwP6gPAjqdgwQ.png" alt=""></p><p>In
    fact, our journey developing <a href="https://github.com/timescale/timescaledb">**TimescaleDB</a>**
    closely mirrors the path the industry has taken. Early internal versions of <a
    href="http://www.timescale.com/">TimescaleDB</a> featured our own SQL-like query
    language called “ioQL.” Yes, we too were tempted by the dark side: building our
    own query language felt powerful. But while it seemed like the easy path, we soon
    realized that we’d have to do a lot more work: e.g., deciding syntax, building
    various connectors, educating users, etc. We also found ourselves constantly looking
    up the proper syntax to queries that we could already express in SQL, for a query
    language we had written ourselves!</p><p>One day we realized that building our
    own query language made no sense. That the key was to embrace SQL. And that was
    one of the best design decisions we have made. Immediately a whole new world opened
    up. Today, even though we are just a 5 month old database, our users can use us
    in production and get all kinds of wonderful things out of the box: visualization
    tools (Tableau), connectors to common ORMs, a variety of tooling and backup options,
    an abundance of tutorials and syntax explanations online, etc.<a href="https://blog.timescale.com/time-series-data-cassandra-vs-timescaledb-postgresql-7c2cc50a89ce"><strong>Eye
    or the Tiger: Benchmarking Cassandra vs. TimescaleDB for time-series data</strong><em>How
    a 5 node TimescaleDB cluster outperforms 30 Cassandra nodes, with higher inserts,
    up to 5800x faster queries, 10%…</em>blog.timescale.com</a></p><h2>But don’t take
    our word for it. Take Google’s.</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*CiKNT6_V8VH5hRVoWNcIHA.png"
    alt=""></p><p>Google has clearly been on the leading edge of data engineering
    and infrastructure for over a decade now. It behooves us to pay close attention
    to what they are doing.</p><p>Take a look at Google’s second major <strong>Spanner</strong>
    paper, released just four months ago (<a href="https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/46103.pdf">Spanner:
    Becoming a SQL System</a>, May 2017), and you’ll find that it bolsters our independent
    findings.</p><p>For example, Google began building on top of Bigtable, but then
    found that the lack of SQL created problems (emphasis in all quotes below ours):</p><blockquote><p>“While
    these systems provided some of the benefits of a database system, they lacked
    many traditional database features that application developers often rely on.
    <strong>A key example is a robust query language</strong>, meaning that developers
    had to write complex code to process and aggregate the data in their applications.
    <strong>As a result, we decided to turn Spanner into a full featured SQL system</strong>,
    with query execution tightly integrated with the other architectural features
    of Spanner (such as strong consistency and global replication).”</p></blockquote><p>Later
    in the paper they further capture the rationale for their transition from NoSQL
    to SQL:</p><blockquote><p>The original API of Spanner provided NoSQL methods for
    point lookups and range scans of individual and interleaved tables. While NoSQL
    methods provided a simple path to launching Spanner, and continue to be useful
    in simple retrieval scenarios, <strong>SQL has provided significant additional
    value in expressing more complex data access patterns and pushing computation
    to the data</strong>.</p></blockquote><p>The paper also describes how the adoption
    of SQL doesn’t stop at Spanner, but actually extends across the rest of Google,
    where multiple systems today share a common SQL dialect:</p><blockquote><p><strong>Spanner’s
    SQL engine shares a common SQL dialect, called “Standard SQL”, *<em>with several
    other systems at Google including internal systems such as F1 and Dremel (among
    others), and external systems such as BigQuery…*</em>For users within Google,
    this lowers the barrier of working across the systems.</strong> A developer or
    data analyst who writes SQL against a Spanner database can transfer their understanding
    of the language to Dremel without concern over subtle differences in syntax, NULL
    handling, etc.</p></blockquote><p>The success of this approach speaks for itself.
    Spanner is already the <em>“source of truth”</em> for major Google systems, including
    AdWords and Google Play, while <em>“Potential Cloud customers are overwhelmingly
    interested in using SQL.”</em></p><p>Considering that Google helped initiate the
    NoSQL movement in the first place, it is quite remarkable that it is embracing
    SQL today. (Leading some to recently wonder: “<a href="https://medium.com/@garyorenstein/did-google-send-the-big-data-industry-on-a-10-year-head-fake-9c94d553925a">Did
    Google Send the Big Data Industry on a 10 Year Head Fake?</a>”.)</p><h2>What this
    means for the future of data: SQL as the universal interface</h2><p>In computer
    networking, there is a concept called the “<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.1.4614&rep=rep1&type=pdf">narrow
    waist</a>,” describing a universal interface.</p><p>This idea emerged to solve
    a key problem: On any given networked device, imagine a stack, with layers of
    hardware at the bottom and layers of software on top. There can exist a variety
    of networking hardware; similarly there can exist a variety of software and applications.
    One needs a way to ensure that no matter the hardware, the software can still
    connect to the network; and no matter the software, that the networking hardware
    knows how to handle the network requests.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*qm2HH4Ob3YnH3C3f."
    alt="***IP as the Networking Universal Interface ([source](http://slideplayer.com/slide/7597601/))***">*<strong><em>IP
    as the Networking Universal Interface (<a href="http://slideplayer.com/slide/7597601/">source</a>)</em></strong>*</p><p>In
    networking, the role of the universal interface is played by <a href="https://en.wikipedia.org/wiki/Internet_Protocol">Internet
    Protocol (IP)</a>, acting as a connecting layer between lower-level networking
    protocols designed for local-area network, and higher-level application and transport
    protocols. (<a href="https://www.youtube.com/watch?v=uXumm52oBMo">Here’s one nice
    explanation</a>.) And (in a broad oversimplification), this universal interface
    became the <em>lingua franca</em> for computers, enabling networks to interconnect,
    devices to communicate, and this “network of networks” to grow into today’s rich
    and varied Internet.</p><p><strong>We believe that SQL has become the universal
    interface for data analysis.</strong></p><p>We live in an era where data is becoming
    “the world’s most valuable resource” (<a href="https://www.economist.com/news/leaders/21721656-data-economy-demands-new-approach-antitrust-rules-worlds-most-valuable-resource">The
    Economist, May 2017</a>). As a result, we have seen a Cambrian explosion of specialized
    databases (OLAP, time-series, document, graph, etc.), data processing tools (Hadoop,
    Spark, Flink), data buses (Kafka, RabbitMQ), etc. We also have more applications
    that need to rely on this data infrastructure, whether third-party data visualization
    tools (Tableau, Grafana, PowerBI, Superset), web frameworks (Rails, Django) or
    custom-built data-driven applications.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*iC7lwedryNOSSYiQc3M7-Q.png"
    alt=""></p><p>Like networking we have a complex stack, with infrastructure on
    the bottom and applications on top. Typically, we end up writing a lot of glue
    code to make this stack work. But glue code can be brittle: it needs to be maintained
    and tended to.</p><p>What we need is an interface that allows pieces of this stack
    to communicate with one another. Ideally something already standardized in the
    industry. Something that would allow us to swap in/out various layers with minimal
    friction.</p><p>That is the power of SQL. Like IP, SQL is a universal interface.</p><p>But
    SQL is in fact much more than IP. Because data also gets analyzed by humans. And
    true to the purpose that SQL’s creators initially assigned to it, SQL is readable.</p><p>Is
    SQL perfect? No, but it is the language that most of us in the community know.
    And while there are already engineers out there working on a more natural language
    oriented interface, what will those systems then connect to? SQL.</p><p>So there
    is another layer at the very top of the stack. And that layer is us.</p><h2>SQL
    is Back</h2><p>SQL is back. Not just because writing glue code to kludge together
    NoSQL tools is annoying. Not just because retraining workforces to learn a myriad
    of new languages is hard. Not just because standards can be a good thing.</p><p>But
    also because the world is filled with data. It surrounds us, binds us. At first,
    we relied on our human senses and sensory nervous systems to process it. Now our
    software and hardware systems are also getting smart enough to help us. And as
    we collect more and more data to make better sense of our world, the complexity
    of our systems to store, process, analyze, and visualize that data will only continue
    to grow as well.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*0NbRxZrtmccWwYJ_."
    alt="**Master Data Scientist Yoda**"><strong><em>Master Data Scientist Yoda</em></strong></p><p>Either
    we can live in a world of brittle systems and a million interfaces. Or we can
    continue to embrace SQL. And restore balance to the force.</p><p><em>Like this
    post and interested in learning more?</em></p><p><em>Follow us <a href="https://blog.timescale.com">here</a>
    on Medium, check out our <a href="https://github.com/timescale/timescaledb">GitHub</a>,
    join our <a href="http://slack.timescale.com">Slack community</a>, and sign up
    for the community mailing list below. We’re also <a href="http://www.timescale.com/careers">hiring</a>!</em></p><iframe
    src="https://medium.com/media/254441eea2ea320d7081c26599169d9e" frameborder=0></iframe><p><em>Suggested
    reading for those who’d like to learn more about the history of databases (aka
    syllabus for the future TimescaleDB Intro to Databases Class):</em></p><ul><li><p><a
    href="http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6359709">A Relational
    Model of Data for Large Shared Data Banks</a> (IBM Research, 1970)</p></li><li><p><a
    href="http://www.almaden.ibm.com/cs/people/chamberlin/sequel-1974.pdf">SEQUEL:
    A Structured English Query Language</a> (IBM Research, 1974)</p></li><li><p><a
    href="http://daslab.seas.harvard.edu/reading-group/papers/astrahan-1976.pdf">System
    R: Relational Approach to Database Management</a> (IBM Research, 1976)</p></li><li><p><a
    href="https://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf">MapReduce:
    Simplified Data Processing on Large Clusters</a> (Google, 2004)</p></li><li><p><a
    href="http://cs-www.cs.yale.edu/homes/dna/papers/vldb.pdf">C-Store: A Column-oriented
    DBMS</a> (MIT, others, 2005)</p></li><li><p><a href="https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf">Bigtable:
    A Distributed Storage System for Structured Data</a> (Google, 2006)</p></li><li><p><a
    href="http://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf">Dynamo:
    Amazon’s Highly Available Key-value Store</a> (Amazon, 2007)</p></li><li><p><a
    href="https://homes.cs.washington.edu/%7Ebillhowe/mapreduce_a_major_step_backwards.html">MapReduce:
    A major step backwards</a> (DeWitt, Stonebreaker, 2008)</p></li><li><p><a href="http://hstore.cs.brown.edu/papers/hstore-demo.pdf">H-Store:
    A High-Performance, Distributed Main Memory Transaction Processing System</a>
    (MIT, Brown, others, 2008)</p></li><li><p><a href="https://cs.stanford.edu/%7Ematei/papers/2010/hotcloud_spark.pdf">Spark:
    Cluster Computing with Working Sets</a> (UC Berkeley, 2010)</p></li><li><p><a
    href="https://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf">Spanner:
    Google’s Globally-Distributed Database</a> (Google, 2012)</p></li><li><p><a href="http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6359709">Early
    History of SQL</a> (Chamberlin, 2012)</p></li><li><p><a href="http://all-that-is-interesting.com/internet-history">How
    the Internet was Born</a> (Hines, 2015)</p></li><li><p><a href="https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/46103.pdf">Spanner:
    Becoming a SQL System</a> (Google, 2017)</p></li></ul>'
  :author: Timescale
  :topic: future
- :url: https://blog.coinbase.com/fereshteh-forough-interview-1e73a684788f?source=search_post---------5
  :title: Where tech, women, and the future of finance converge
  :content: '<p>Where tech, women, and the future of finance converge</p><h3>A conversation
    with Fereshteh Forough, founder and president of Afghanistan’s Code to Inspire</h3><p>Born
    in 1985 in Iran as an Afghan refugee, Fereshteh Forough spent her early years
    traversing borders and exploring how computer science could help solve global
    problems, especially for women. Forough is the founder of <a href="http://codetoinspire.org/">Code
    to Inspire</a>, a nonprofit coding school for girls in Herat, Afghanistan that
    helps young women improve their technical literacy.</p><p>With three-year-old
    Code to Inspire, as well as her previous nonprofit, Digital Citizen Fund, Forough
    has explored using cryptocurrency to pay students and mentors as a way to guide
    them toward financial and social independence.</p><p><img src="https://cdn-images-1.medium.com/max/9600/1*t39Nr9yERaCsVGW1q6ZOjA.png"
    alt=""></p><p>At Coinbase, we’ve been fans of Forough’s work for a long time.
    We asked her to share her thoughts on how technology—and crypto specifically—is
    empowering young women in her home country.</p><p><img src="https://cdn-images-1.medium.com/max/9600/1*pbPeEpgBSgcWsuNq12u0GA.png"
    alt=""></p><p>“When I took the entrance exams for university [at Herat University
    in Afghanistan], I chose law, journalism, and economics. Two months later, I got
    the results: I had been placed in computer science. I was so upset!</p><p>One
    of the first days, there was an introduction to algorithm problem-solving and
    QBasic. I loved it. In my life, I face a lot of problems. On a computer, I can
    face problems and solve them. On the internet, you don’t need a passport. There
    are no geographical boundaries or limitations.”</p><p><img src="https://cdn-images-1.medium.com/max/9600/1*_UNmpVh9dnn9t2WOd1O2lA.png"
    alt=""></p><p>“In early 2014, when I was working on my previous education nonprofit,
    a blogging-for-pay platform, I learned about cryptocurrency. We decided to do
    a pilot project sending bitcoin to our students, to see how it worked. We created
    wallets for the girls; all they needed was an email address. Sending money was
    fast, and there were almost no fees at all on transactions.</p><p>One of the main
    challenges I face in my work helping girls in Afghanistan is getting them paid
    for the work that they do. None of the girls have bank accounts — people in Afghanistan
    don’t really trust banks. Also to have a bank account, you need a lot of ID, which
    a decent amount of people in Afghanistan don’t have. And we don’t want to send
    the money to family members, because with a lot of these girls, their families
    just take their money. One thing that’s great about crypto with this community
    is its privacy.”</p><p><img src="https://cdn-images-1.medium.com/max/9600/1*yg9Bto2_KGysUhJ912U6cw.png"
    alt=""></p><p>“In Afghanistan, women aren’t part of the conversation. They don’t
    have a platform to make decisions or raise their voices. With Code to Inspire
    I wanted a place for women to not be shy, to be creative, to do whatever they
    can’t do outside of their homes. Our students learn to code by taking on outsourcing
    projects like graphic design, mobile apps, and simple software development. We
    started with 50 girls in 2015, then added another 80 in 2016. We recently graduated
    our first 25 students, all high school girls.</p><p>I want to create a safe space
    where women feel welcome and accepted. I want them to have a way to make an income,
    the same way my mom learned how to make dresses when we were refugees in Iran.</p><p><img
    src="https://cdn-images-1.medium.com/max/10368/1*sUkYrfBrAvO-4aepIUoa1A.jpeg"
    alt=""></p><p>I run Code to Inspire from Brooklyn, where I have lived since I
    left Afghanistan because of my immigration status. I do Skype calls monthly with
    all the classes and the girls, so that can they see I’m an actual person. Every
    day the girls tweet about their work and take a screenshot of what they’ve made.”</p><p><img
    src="https://cdn-images-1.medium.com/max/9600/1*RsK8GZI4a4F_KMludXhCKA.png" alt=""></p><p>“Honestly
    it’s been difficult to convince people in Afghanistan to take cryptocurrency instead
    of cash. We’d explain that this was currency over the Internet, but they didn’t
    believe us. They thought we were taking their money, or tricking them. We had
    to demonstrate that bitcoin could be useful. Students could come to us and we
    would convert their bitcoin into Afghanis. That’s how we proved to them that this
    was real currency. But for us, it didn’t feel safe to carry around that much cash
    all the time.</p><p><img src="https://cdn-images-1.medium.com/max/9600/1*S1Oz9HE8_A3kQg3p5CbxKg.png"
    alt=""></p><p>After that first pilot project, we stopped paying our students in
    crypto — students faced too many challenges when it came to accessing and spending
    it. That said, some of the teachers who work with our students earn ether (ETH)
    through work they do through a partnership with the Bounties Network, which allows
    people to accept ETH for fixing vulnerabilities for businesses.”</p><p><img src="https://cdn-images-1.medium.com/max/9600/1*xT7IP1eJxQMGcc8w6RvfDQ.png"
    alt=""></p><p>“I see a lot of people trying to solve problems around payment and
    crypto. But to be honest, all of these projects ignore conflict zones. What they
    create usually serves the privileged: people who have bank accounts, countries
    with good infrastructure.</p><p>This may sound crazy, but maybe the solution could
    come from one of our students. Maybe one of these girls could make a blockchain
    project, or a coin, or whatever, that could tackle that problem.”</p><p><img src="https://cdn-images-1.medium.com/max/9600/1*IlJYVly03yNKtTncPuqXmg.png"
    alt=""></p><p><em>Learn more about Code to Inspire at <a href="http://codetoinspire.org">codetoinspire.org</a>.
    The 501c3 accepts donations in dollars, bitcoin, and ether.</em></p><p>As told
    to Amy Standen exclusively for <a href="http://coinbase.com">Coinbase</a>; transcript
    edited and condensed for clarity.</p>'
  :author: unknown
  :topic: future
- :url: https://towardsdatascience.com/why-python-is-not-the-programming-language-of-the-future-30ddc5339b66?source=search_post---------6
  :title: Why Python is not the programming language of the future
  :content: '<p>Why Python is not the programming language of the future</p><h3>Even
    though it will be in high demand for a few more years</h3><p><img src="https://cdn-images-1.medium.com/max/7910/1*RsAiqSHJHYNJvrfTKebFPA.jpeg"
    alt="Python has served us well — but will it last? Photo by [David Clode](https://unsplash.com/@davidclode?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/python?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Python
    has served us well — but will it last? Photo by <a href="https://unsplash.com/@davidclode?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">David
    Clode</a> on <a href="https://unsplash.com/s/photos/python?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>It
    took the programming community a couple of decades to appreciate Python. But since
    the early 2010’s, it has been booming — and eventually surpassing C, C#, Java
    and JavaScript in popularity.</p><p>But until when will that trend continue? When
    will Python eventually be replaced by other languages, and why?</p><p>Putting
    an exact expiry date on Python would be so much speculation, it might as well
    pass as Science-Fiction. Instead, I will assess the virtues that are boosting
    Python’s popularity right now, and the weak points that will break it in the future.</p><h2>What
    makes Python popular right now</h2><p>Python’s success is reflected in the <a
    href="https://insights.stackoverflow.com/trends?tags=r%2Cpython%2Cjavascript%2Cjava%2Cc%2B%2B%2Cc%23">Stack
    Overflow trends</a>, which measure the count of tags in posts on the platform.
    Given the size of StackOverflow, this is quite a good indicator for language popularity.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*itIT95KvtxA1H2bcPcXtlA.png" alt="Snapshot
    of tags on various programming languages on StackOverflow."><em>Snapshot of tags
    on various programming languages on StackOverflow.</em></p><p>While R has been
    plateauing over the last few years, and many other languages are on a steady decline,
    Python’s growth seems unstoppable. Almost 14% of all StackOverflow questions are
    tagged “python”, and the trend is going up. And there are several reasons for
    that.</p><h3>It’s old</h3><p>Python has been around since the nineties. That doesn’t
    only mean that it has had plenty of time to grow. It has also acquired a large
    and supportive community.</p><p>So if you have any issue while you’re coding in
    Python, the odds are high that you’ll be able to solve it with a single Google
    search. Simply because somebody will have already encountered your problem and
    written something helpful about it.</p><h3>It’s beginner-friendly</h3><p>It’s
    not only the fact that it has been around for decades, giving programmers the
    time to make brilliant tutorials. More than that, the syntax of Python is very
    human-readable.</p><p>For a start, there’s no need to specify the data type. You
    just declare a variable; Python will understand from the context whether it’s
    an integer, a float value, a boolean or something else. This is a huge edge for
    beginners. If you’ve ever had to program in C++, you know how frustrating it is
    your program won’t compile because you swapped a float for an integer.</p><p>And
    if you’ve ever had to read Python and C++ code side-by-side, you’ll know how understandable
    Python is. Even though C++ was designed with English in mind, it’s a rather bumpy
    read compared to Python code.<a href="https://medium.com/the-renaissance-developer/learning-python-from-zero-to-hero-8ceed48486d5"><strong>Learning
    Python: From Zero to Hero</strong><em>A quick and comprehensive guide for your
    first steps in Python.</em>medium.com</a></p><h3>It’s versatile</h3><p>Since Python
    has been around for so long, developers have made a package for every purpose.
    These days, you can find a package for almost everything.</p><p>Want to crunch
    numbers, vectors and matrices? <strong>NumPy</strong> is your guy. Want to do
    calculations for tech and engineering? Use <strong>SciPy</strong>. Want to go
    big in data manipulation and analysis? Give <strong>Pandas</strong> a go.Want
    to start out with Artificial Intelligence? Why not use <strong>Scikit-Learn</strong>.</p><p>Whichever
    computational task you’re trying to manage, chances are that there is a Python
    package for it out there. This makes Python stay on top of recent developments,
    can be seen from the surge in Machine Learning over the past few years.</p><h2>Downsides
    of Python — and whether they’ll be fatal</h2><p>Based on the previous elaborations,
    you could imagine that Python will stay on top of sh*t for ages to come. But like
    every technology, Python has its weaknesses. I will go through the most important
    flaws, one by one, and assess whether these are fatal or not.</p><h3>Speed</h3><p>Python
    is slow. Like, really slow. On average, you’ll need about 2–10 times longer to
    complete a task with Python than with any other language.</p><p>There are <a href="https://hackernoon.com/why-is-python-so-slow-e5074b6fe55b">various
    reasons</a> for that. One of them is that it’s dynamically typed — remember that
    you don’t need to specify data types like in other languages. This means that
    a lot of memory needs to be used, because the program needs to reserve enough
    space for each variable that it works in any case. And lots of memory usage translates
    to lots of computing time.</p><p>Another reason is that Python can only execute
    one task at a time. This is a consequence of flexible datatypes — Python needs
    to make sure each variable has only one datatype, and parallel processes could
    mess that up.</p><p>In comparison, your average web browser can run a dozen different
    threads at once. And there are some other theories around, too.</p><p>But at the
    end of the day, none of the speed issues matter. Computers and servers have gotten
    so cheap that we’re talking about fractions of seconds. And the end user doesn’t
    really care whether their app loads in 0.001 or 0.01 seconds.<a href="https://medium.com/@trungluongquang/why-python-is-popular-despite-being-super-slow-83a8320412a9"><strong>Why
    Python is Popular Despite Being (Super) Slow</strong>*A beautiful explanation
    of the irrelevance of speed issues in Python by Bobby. *medium.com</a></p><h3>Scope</h3><p>Originally,
    Python was <a href="https://www.geeksforgeeks.org/static-and-dynamic-scoping/">dynamically
    scoped</a>. This basically means that, to evaluate an expression, a compiler first
    searches the current block and then successively all the calling functions.</p><p>The
    problem with dynamic scoping is that every expression needs to be tested in every
    possible context — which is tedious. That’s why most modern programming languages
    use static scoping.</p><p>Python tried to transition to static scoping, but <a
    href="https://www.quora.com/What-are-the-main-weaknesses-of-Python-as-a-programming-language">messed
    it up</a>. Usually, inner scopes — for example functions within functions — would
    be able to see <em>and</em> change outer scopes. In Python, inner scopes can only
    see outer scopes, but not change them. This leads to a lot of confusion.</p><h3>Lambdas</h3><p>Despite
    all of the flexibility within Python, the usage of Lambdas is rather restrictive.
    Lambdas can only be expressions in Python, and not be statements.</p><p>On the
    other hand, variable declarations and statements are always statements. This means
    that Lambdas cannot be used for them.</p><p>This distinction between expressions
    and statements is rather arbitrary, and doesn’t occur in other languages.</p><p><img
    src="https://cdn-images-1.medium.com/max/8192/1*Dly4IjQNFOMRdEzLRb0mjg.jpeg" alt="Whitespaces
    make code more readable, but less maintainable. Photo by [Irvan Smith](https://unsplash.com/@mr_vero?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/programmer?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Whitespaces
    make code more readable, but less maintainable. Photo by <a href="https://unsplash.com/@mr_vero?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Irvan
    Smith</a> on <a href="https://unsplash.com/s/photos/programmer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><h3>Whitespaces</h3><p>In
    Python, you use whitespaces and indentations to indicate different levels of code.
    This makes it optically appealing and intuitive to understand.</p><p>Other languages,
    for example C++, rely more on braces and semicolons. While this might not be visually
    appealing and beginner-friendly, it makes the code a lot more maintainable. For
    bigger projects, this is a lot more useful.</p><p>Newer languages like Haskell
    solve this problem: They rely on whitespaces, but offer an alternative syntax
    for those who wish to go without.</p><h3>Mobile Development</h3><p>As we’re witnessing
    the shift from desktop to smartphone, it’s clear that we need robust languages
    to build mobile software.</p><p>But not many mobile apps are being developed with
    Python. That doesn’t mean that it can’t be done — there is a Python package called
    Kivy for this purpose.</p><p>But Python wasn’t made with mobile in mind. So even
    though it might produce passable results for basic tasks, your best bet is to
    use a language that was created for mobile app development. Some widely used programming
    frameworks for mobile include React Native, Flutter, Iconic, and Cordova.</p><p>To
    be clear, laptops and desktop computers should be around for many years to come.
    But since mobile has long surpassed desktop traffic, it’s safe to say that learning
    Python is not enough to become a seasoned all-round developer.</p><h3>Runtime
    Errors</h3><p>A Python script isn’t compiled first and then executed. Instead,
    it compiles every time you execute it, so any coding error manifests itself at
    runtime. This leads to poor performance, time consumption, and the need for a
    lot of tests. Like, <em>a lot</em> of tests.</p><p>This is great for beginners
    since testing teaches them a lot. But for seasoned developers, having to debug
    a complex program in Python makes them go awry. This lack of performance is the
    biggest factor that sets a timestamp on Python.<a href="https://towardsdatascience.com/top-7-modern-programming-language-to-learn-now-156863bd1eec"><strong>Top
    7 Modern programming languages to learn now</strong><em>How Rust, Go, Kotlin,
    TypeScript, Swift, Dart, Julia can boost your career and improve your software
    development skills</em>towardsdatascience.com</a></p><h2>What could replace Python
    in the future — and when</h2><p>There are a few new competitors on the market
    of programming languages:</p><ul><li><p><strong>Rust</strong> offers the same
    kind of safety that Python has — no variable can accidentally be overwritten.
    But it solves the performance issue with the concept of ownership and borrowing.
    It is also the most-loved programming language of the last few years, according
    to <a href="https://insights.stackoverflow.com/survey/2019#technology">StackOverflow
    Insights</a>.</p></li><li><p><strong>Go</strong> is great for beginners like Python.
    And it is so simple that it’s even easier to maintain the code. Fun point: Go
    developers are among the <a href="https://insights.dice.com/2019/10/30/top-programming-languages-that-will-get-you-paid/">highest-paid
    programmers</a> on the market.</p></li><li><p><strong>Julia</strong> is a very
    new language that competes head-on with Python. It fills the gap of large-scale
    technical computations: Usually, one would have used Python or Matlab, and patched
    the whole thing up with C++ libraries, which are necessary at a large scale. Now,
    one can use Julia instead of juggling with two languages.</p></li></ul><p>While
    there are other languages on the market, Rust, Go, and Julia are the ones that
    fix weak patches of Python. All of these languages excel in yet-to-come technologies,
    most notably in Artificial Intelligence. While their market share is still small,
    as reflected in the number of StackOverflow tags, the trend for all of them is
    clear: upwards.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*ectt9Nl3dlnhGXKpHBmLuA.png"
    alt="Snapshot of tags on various programming languages on StackOverflow."><em>Snapshot
    of tags on various programming languages on StackOverflow.</em></p><p>Given the
    ubiquitous popularity of Python at the moment, it will surely take half a decade,
    maybe even a whole, for any of these new languages to replace it.</p><p>Which
    of the languages it will be — Rust, Go, Julia, or a new language of the future
    — is hard to say at this point. But given the performance issues that are fundamental
    in the architecture of Python, one will inevitably take its spot.</p>'
  :author: Towards Data Science
  :topic: future
- :url: https://medium.com/accelerated-intelligence/be-prepared-to-lose-your-job-in-the-future-if-you-dont-learn-this-one-skill-now-8a87ade2a268?source=search_post---------7
  :title: Be Prepared To Lose Your Job In The Future… If You Don’t Learn This One
    Skill Now
  :content: '<h3><strong>Jeff Bezos, Warren Buffett, and Elon Musk all take this one
    approach.</strong></h3><p>One question Jeff Bezos is often asked is one we all
    need to ask ourselves, “What’s going to change in the next 10 years?”</p><p>It’s
    a profound question because the world is changing so rapidly, and because the
    decisions we make now will determine our destiny.</p><p>Decide wrong, and you
    might find yourself on a sinking ship, watching as your whole industry goes bankrupt
    and the skills you spent years honing become obsolete. Millions of people from
    journalists to financial analysts now find themselves in this position.</p><p>Decide
    right, and you could be set for life. The top artificial intelligence programmers,
    for example, <a href="https://www.bloomberg.com/news/articles/2014-01-27/the-race-to-buy-the-human-brains-behind-deep-learning-machines">make
    as much as NFL superstars</a>. These programmers have suddenly found that the
    skill set they spent years honing has become incredibly valuable.</p><p>These
    two groups, top AI programmers and people whose skills have become devalued, might
    have spent the same amount of time learning and be equally smart. But selecting
    different fields took them down completely different paths.</p><p>Over the last
    few years, I’ve come across a group of people who have spent their whole careers
    expertly predicting the future, investing based off of their predictions, and
    then massively profiting decade after decade. What I’ve noticed is that they share
    a common and completely counterintuitive approach toward investing their money
    and time that bucks conventional wisdom. In this article, I’ll share how you can
    copy the approaches of self-made billionaire entrepreneurs and investors like
    Jeff Bezos, Ray Dalio, Howard Marks, and Warren Buffett so that you too can ‘win’
    your future.</p><h2><strong>“What’s Going to Change?” Is The Wrong Question</strong></h2><p>Like
    I said above, Jeff Bezos is often asked, “What’s going to change in the next 10
    years?” That’s actually <em>not</em> the key question though. Listen to how he
    reframes it (emphasis mine):</p><blockquote><p>That is a very interesting question;
    it’s a very common one. I almost never get the question:** ‘What’s NOT going to
    change in the next 10 years?’**And I submit to you that that second question is
    actually the more important of the two — because you can build a business strategy
    around the things that are stable in time.</p></blockquote><p>He then goes on
    to explain how Amazon has profited from focusing on the second question (emphasis
    mine):</p><blockquote><p>[I]n our retail business, we know that customers want
    low prices, and I know that’s going to be true 10 years from now. They want fast
    delivery; they want vast selection. It’s impossible to imagine a future 10 years
    from now where a customer comes up and says, ‘Jeff, I love Amazon; I just wish
    the prices were a little higher,’ [or] ‘I love Amazon; I just wish you’d deliver
    a little more slowly.’ Impossible.And so the effort we put into those things,
    spinning those things up, we know the energy we put into it today will still be
    paying off dividends for our customers 10 years from now. <strong>When you have
    something that you know is true, even over the long term, you can afford to put
    a lot of energy into it.</strong></p></blockquote><p>I remember the thoughts running
    through my head the first time I read this quote. It felt intuitive and counterintuitive
    at the same time. On the one hand, I thought to myself, “This makes so much sense!
    Why not just focus on what’s guaranteed to be valuable rather than speculating?”
    On the other hand, Bezos’ response flies in the face of conventional wisdom and
    was jarring. The typical approach to planning for the future resembles betting
    at the roulette wheel:</p><ul><li><p>Identify what you think is going to be really
    important (i.e., artificial intelligence, virtual reality, blockchain, synthetic
    biology, nanotechnology).</p></li><li><p>Pick one of those areas to invest in
    and master.</p></li><li><p>Hope it hits big and that you have the right timing
    so that you can profit.</p></li></ul><p>While the conventional approach does sometimes
    work, it’s not a dependable strategy. It’s not what I’d tell my kids to do. <a
    href="https://www.slideshare.net/kloeckner/kauffman-foundationventurecapital">A
    2012 study from the Kauffman Foundation</a> shows that “The [venture capital]
    industry hasn’t returned the cash invested since 1997.” And if you take out a
    few companies like Uber, Amazon, Google, and Facebook, the returns are abysmal.
    In other words, the odds of you investing in, starting, or being an early employee
    at a billion-dollar company are like the odds of winning a lottery. <a href="http://fortune.com/unicorns/">Just
    200</a> out of all the startups out there are valued at $1 billion or more right
    now! You have a tenfold <a href="http://www.lightningsafety.noaa.gov/odds.shtml">better
    chance</a> of being hit by lightning.</p><p>Why doesn’t focusing on trends work
    as well as you might think?</p><h2><strong>Why Future Prediction Doesn’t Work</strong></h2><blockquote><h1><em>“You
    can’t predict, you can prepare.” — Howard Marks</em></h1></blockquote><p>Self-made
    billionaire, entrepreneur, and investor Howard Marks runs the investment firm
    Oaktree Capital and has $100 billion under management, making it one of the largest
    hedge funds in the world. Each year, Marks writes a widely-circulated letter to
    shareholders. <a href="https://www.oaktreecapital.com/docs/default-source/memos/2014-04-08-dare-to-be-great-ii.pdf?sfvrsn=2">One
    of these memos</a> gives a masterclass in how investing in future trends isn’t
    always smart:</p><ol><li><p>*<em>The seemingly sure bets will have the most competition,
    which will make them less profitable. *</em>Marks writes: “Most great investments
    begin in discomfort. The things most people feel good about — investments where
    the underlying premise is widely accepted, the recent performance has been positive
    and the outlook is rosy — are unlikely to be available at bargain prices. Rather,
    bargains are usually found among things that are controversial, that people are
    pessimistic about, and that have been performing badly of late.”</p></li><li><p>*<em>Luck
    and randomness are big, unavoidable factors. *</em>”It’s far from certain that
    even ‘right’ decisions will be successful, since every decision requires assumptions
    about what the future will look like, and even reasonable assumptions can be thwarted
    by the world’s randomness,” says Marks. There are certain random events that are
    so influential that they completely change the game for everyone. Nassim Taleb
    calls these events “Black Swans.” (A great example is the 2008 financial crisis.)</p></li><li><p>*<em>It’s
    much harder than you think to be consistently right. *</em>“It’s hard to consistently
    make decisions that correctly factor in all of the relevant facts and considerations
    (i.e., it’s hard to be right),” Marks notes with humility, a key trait of many
    of the world’s top-performing investors. Self-made billionaire Ray Dalio, the
    founder of the largest hedge fund in the world, drives home how hard investing
    is in the first sentence of his <a href="https://www.amazon.com/gp/product/1501124021/ref=as_li_tl?ie=UTF8&tag=learningritua-20&camp=1789&creative=9325&linkCode=as2&creativeASIN=1501124021&linkId=af0e65d84a7073b923ceb97508da632c">new
    book</a>: “Before I begin telling you what I think, I want to establish that I’m
    a ‘dumb shit’ who doesn’t know much relative to what I need to know.”</p></li><li><p>*<em>Even
    if you get the prediction right, you are likely to get the timing wrong. *</em>Marks
    says: “Even well-founded decisions that eventually turn out to be right are unlikely
    to do so promptly. This is because not only are future events uncertain, their
    timing is particularly variable.” And the problem with this is that having the
    wrong timing is functionally equivalent to making the wrong decision.</p></li></ol><p>The
    field of artificial intelligence is a case in point for Marks’ argument. While
    artificial intelligence sounds like a sure bet now, it wasn’t always that way.
    From 1974–1980 and 1987–1993, the field went through “AI winters.” In these periods,
    AI reeled from being overhyped and lost credibility and funding. Talented young
    programmers left in droves. Many of the most successful people in the field now
    are those who survived these winters and kept going even when it didn’t seem smart
    to do so. Now, someone entering the AI field has to compete against droves of
    the smartest people in the world.</p><p>My point is that picking which fields
    will be hot in 20 years is not as simple as it sounds. Predicting third-, fourth-,
    and fifth-order consequences is almost impossible. Who would’ve predicted in the
    early 1900s that the invention of the automobile would ultimately lead to the
    creation of suburban sprawl, the hotel industry (because of the Interstate highway
    system), and the insurance industry.</p><p>Notice how Warren Buffett, the best
    investor in history, doesn’t invest in the hottest tech startups of the day. Instead,
    he has made his career by identifying businesses whose rock-solid fundamentals
    don’t change, or which change very slowly. As a result, Buffett is able to invest
    in companies for the long-term. He’s held stock in companies like Geico, Coca-Cola,
    and American Express for decades.</p><p>So if predicting the future isn’t the
    answer, what can you do instead?</p><h2><strong>Introducing The Trunk Technique</strong></h2><blockquote><h1><em>“Predicting
    rain doesn’t count. Building arks does.” — Warren Buffett</em></h1></blockquote><p>At
    the heart of the methods used by Buffett, Dalio, Marks, Taleb, and Bezos is a
    common theme: <em>focus on areas that are virtually guaranteed to be valuable
    in the future no matter what happens.</em></p><p>Bezos talks about how focusing
    on stable customer preferences is a powerful foundation to build a company around.
    I’d take that a step further: *<em>focusing on stable knowledge is a powerful
    approach to build a life around. *</em>I call this skill the Trunk Technique…</p><p>Some
    forms of knowledge arise quickly and then just as quickly become obsolete. Other
    forms stay relevant for a very long time. In my article, <a href="https://medium.com/the-mission/why-being-great-is-so-much-harder-than-people-realize-c91616b18bc9">Why
    Being Great Is So Much Harder Than People Realize</a>, I share how the rate at
    which information goes obsolete is increasing:</p><blockquote><p><a href="http://www.ncbi.nlm.nih.gov/pubmed/12069563">One
    academic study</a>, for example, found that the decay rate in the accuracy of
    clinical knowledge about cirrhosis and hepatitis was 45 years. In other words,
    if you’re talking to a 70-year-old liver specialist who hasn’t updated his skills,
    you have a 50 percent chance of getting bad information. Engineering degrees went
    from a half life of <a href="http://spectrum.ieee.org/riskfactor/computing/it/an-engineering-career-only-a-young-persons-game">35
    years in 1930 to about 10 years in 1960</a>.</p></blockquote><p><img src="https://cdn-images-1.medium.com/max/2000/0*-MERHx8ydAoVzvJy."
    alt="Source: New Scientist"><em>Source: New Scientist</em></p><p>So what’s the
    difference between knowledge that expires relatively quickly versus knowledge
    with staying power?</p><p>Broadly speaking, “transitional” or quickly-expiring
    knowledge is the kind that helps us navigate a specific environment (such as the
    specialized field of liver medicine). Whereas “pillar” or longer-lasting knowledge
    is based on fundamental principles and mental models that can be applied in many
    contexts including unforeseen future ones.</p><p>Let me explain. As I share in
    <a href="https://medium.com/@michaeldsimmons/how-elon-musk-learns-faster-and-better-than-everyone-else-a010a4f586ef">How
    Elon Musk Learns Faster and Better Than Everyone Else</a>, when most people think
    about knowledge, they think about it horizontally, viewing knowledge <em>across</em>
    different subjects. The problem with this is that when you look at things in one
    dimension, you miss important connections:</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*fCIONUl-XEjJ4_Ha."
    alt=""></p><p>What many miss is that knowledge is vertical as well. Great thinkers
    and doers, I have noticed, view reality this way. There are <a href="https://medium.com/the-mission/how-to-tell-if-someone-is-truly-smart-or-just-average-a2f0bcac5db2">deeper
    principles and mental models</a> that connect the various subjects that we study:</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/0*2VZX3PWb_it5QBUm." alt=""></p><p>In
    the example above, by learning the universal mental models of network science
    that apply to all networks, you can more easily understand specific patterns in
    how the brain functions and how social networks work.</p><p>And it’s not just
    one layer deep. There are many layers. In one of Elon Musk’s <a href="http://www.reddit.com/r/IAmA/comments/2rgsan/i_am_elon_musk_ceocto_of_a_rocket_company_ama/">Reddit
    AMAs</a> he explains it like this:</p><blockquote><p>It is important to view knowledge
    as sort of a semantic tree — make sure you understand the fundamental principles,
    i.e. the trunk and big branches, before you get into the leaves/details or there
    is nothing for them to hang onto.</p></blockquote><p>Here’s one way of visualizing
    Musk’s semantic tree:</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*dnkXKGQt26KIeKSA."
    alt=""></p><p>People who use the *<em>Trunk Technique *</em>focus on mastering
    the <a href="https://medium.com/the-mission/how-to-tell-if-someone-is-truly-smart-or-just-average-a2f0bcac5db2">fundamental
    mental models or first principles</a> first and then move on to the leaves second.
    By doing this, they build a more stable and adaptable tree, and therefore career.
    Trees lose their leaves every winter, but they thrive for decades (and sometimes
    hundreds of years) because they have strong trunks and roots.</p><p>Let’s take
    the topic of experimentation as an example. Understanding the <a href="http://observer.com/2017/11/forget-10000-hours-edison-bezos-zuckerberg-follow-the-10000-experiment-rule/">10,000-experiment
    rule</a> is crucial for success at an individual, company, and societal level.
    The Leave Approach to getting better at experimentation would be to first focus
    on hacks like understanding how to A/B test a button on your website. The Trunk
    Technique would be to understand what the scientific method is first (i.e., controlled
    experimentation; peer-reviewed refereed journals; blind, randomized design; falsifiability;
    controlled placebo; double blind experimentation; computer simulations; and meta-analysis).
    By understanding the few core principles that make up the scientific method, one
    can then create thousands of experiments across every area of life and career
    forever. As new hacks and software tools arise, you’d be able to quickly understand
    their significance and use them. Then, when those specific tools become obsolete,
    you’d still have your trunk to grow new branches and leaves from. I attribute
    a large part of any success I’ve had as a writer to applying the scientific method
    to the creation of ideas.</p><p>Another example: I’m obsessed with health, so
    I’ve learned hacks for getting micronutrients, intermittent fasting, cold showers,
    saunas, and interval training. These are fine, but even more fundamental to my
    health has been learning the underlying principle of post-traumatic growth. All
    of the hacks above can be derived by understanding that systems grow by being
    stressed and then being given time to recover.</p><p>I share more details on how
    they specifically apply the Trunk Technique to your life in <a href="https://medium.com/@michaeldsimmons/how-elon-musk-learns-faster-and-better-than-everyone-else-a010a4f586ef">How
    Elon Musk Learns Faster And Better Than Everyone Else</a>, <a href="https://medium.com/the-mission/how-one-life-hack-from-a-self-made-billionaire-leads-to-exceptional-success-a0b21fc34048">How
    One Life Hack From A Self-Made Billionaire Leads To Exceptional Success</a>, and
    <a href="https://medium.com/the-mission/how-to-tell-if-someone-is-truly-smart-or-just-average-a2f0bcac5db2">How
    To Tell If Someone Is Truly Smart Or Just Average</a>, which have collectively
    been read over 1 million times.</p><p>In summary, the Trunk Technique allows you
    to:</p><ul><li><p>*<em>Build a knowledge tree that lasts forever. *</em>Winston
    Churchill once said: “The farther back you can look, the farther forward you are
    likely to see.” More recently, this phenomenon has been called the <a href="https://en.wikipedia.org/wiki/Lindy_effect">Lindy
    Effect</a>: “The future life expectancy of some non-perishable things like a technology
    or an idea is proportional to their current age, so that every additional period
    of survival implies a longer remaining life expectancy.” The corollary of this
    for the information age is: “The more you focus on fundamental knowledge, the
    longer your knowledge tree will last.”</p></li><li><p>*<em>Adapt to any future
    fast and thrive. *</em>The nature of f<a href="https://medium.com/the-mission/how-to-tell-if-someone-is-truly-smart-or-just-average-a2f0bcac5db2">undamental
    mental models</a> is that they appear across all fields. Therefore, when you go
    into an emerging field, you’ll enter with a head start, because you’ll immediately
    see how the principles you already know are relevant.</p></li><li><p>**Better
    understand what’s happening and what it means. <a href="https://medium.com/the-mission/successful-people-are-not-necessarily-smarter-they-just-do-more-of-this-644a0cca6db8">**Similar
    to how an expert chess player can see several moves ahead</a>, mental models will
    allow you to put what’s happening in context so you can react appropriately and
    think farther ahead.</p></li><li><p>*<em>Reduce the risk of investing in an area
    that turns out to not be a winner. *</em>In this article, I’m not suggesting that
    you ignore the future completely. What I’m saying is that you balance your understanding
    of trends with what is never going to change: timeless principles and mental models.
    In his book, <a href="https://www.amazon.com/gp/product/0812979680/ref=as_li_tl?ie=UTF8&tag=learningritua-20&camp=1789&creative=9325&linkCode=as2&creativeASIN=0812979680&linkId=4d3b293fc1a3b488fbe20f896770de86">Antifragile</a>,
    Nassim Taleb, a very successful investor rumored to be worth hundreds of millions
    of dollars, suggests an approach to investing resources that maximizes returns
    while eliminating losses*. *He calls it the Barbell Strategy: the idea of building
    a portfolio of extremes (extremely safe assets + high risk-reward assets) rather
    than building a big mix with everything in the middle.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/0*RRxbKLzk0Z-ubV3E."
    alt="Source: Nassim Taleb"><em>Source: Nassim Taleb</em></p><p>The Trunk Technique
    functions in the same way as Taleb’s Barbell Strategy. By building a strong base
    of risk-free knowledge, we cap our downside while also giving ourselves more flexibility
    and confidence to make speculative bets on the future that might hit it big. That’s
    why I argue that learning how to apply the Trunk Technique is one of the main
    skills that anyone should learn in order to create the future they want.</p><h2><strong>Want
    To Apply The Trunk Technique To Your Life Today?</strong></h2><p>Are you convinced
    of the power of Mental Models? I’ve learned from personal experience that it literally
    takes years to develop true mastery of these. Therefore, I created two resources
    for you:</p><h3>Resource #1: Free Mental Model Course (For Newbies)</h3><p>If
    you’re just learning about mental models for the first time, my free email course
    will help you get started. My team and I have spent dozens of hours creating it.
    It includes the top mental models from many of the world’s top leaders, a guide
    on how to create a checklist based on the best practices from medicine and aviation
    so that you use your mental models throughout the day, and a guide that more deeply
    explains what a mental model is and how to get value from one.</p><p><a href="https://seminal.lpages.co/mental-model-mini-course-article-13-medium/?utm_source=Medium&utm_medium=article&utm_campaign=13&utm_content=CTA1">**Sign
    up for the free mini-course here &gt;&gt;</a>**</p><h3>Resource #2: Mental Model
    Of The Month Club (For Those Who Want Mastery)</h3><p>If you’re already are convinced
    of the power of mental models and want to deliberately set about mastering them,
    then this resource is for you. It’s the program I wish I’d had when I was just
    getting started with mental models.</p><p>Here’s how it works:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*-3MY4NhzxP3-5KOHLNLVEQ.png"
    alt=""></p><ul><li><p>Every month, you’ll master one new mental model.</p></li><li><p>We’ll
    focus on the most powerful and universal models first.</p></li><li><p>We’ll provide
    you with a condensed and simple Mastery Manual (think: Cliff’s Notes) to help
    you deeply understand the model and integrate it into your life.</p></li></ul><p>Each
    master manual includes:</p><ul><li><p>A 101 Overview of the mental model (why
    it’s important, how it works, its vocabulary, etc.)</p></li><li><p>An Advanced
    Overview that includes a more nuanced explanation.</p></li><li><p>Examples of
    hacks you can use immediately to apply that mental model to every area of your
    life and career. These hacks are based on my personal experience and are crowdsourced
    as well.</p></li><li><p>Exercises &amp; templates that you can use on a daily
    basis to integrate the lessons in the manual and achieve maximum results in your
    life.</p></li><li><p>A Facebook community where you can meet other mental model
    collectors and learn from one another.</p></li></ul><h3><strong>To learn more
    about the program or to sign up, <a href="https://www.mentalmodelclub.com/mental-model-club-v2.html?utm_source=Medium&utm_medium=article&utm_campaign=13&utm_content=CTA2">visit
    the Mental Model Of The Month Overview page.</a></strong></h3><p><strong><em>This
    article was written with love and care using the <a href="https://medium.com/accelerated-intelligence/the-1-mental-model-for-writers-who-want-to-write-high-quality-viral-content-43ecf0d4ec05">blockbuster
    mental model</a>.</em></strong></p>'
  :author: Accelerated Intelligence
  :topic: future
- :url: https://medium.com/@jowitaemberton/7-future-web-design-trends-fba93eba6355?source=search_post---------8
  :title: 7 future web design trends
  :content: '<p>Too many articles will tell you what is cool in web design. I’m going
    to take you past the obvious to make some real predictions.</p><h2>1. Gestures
    are the new clicks</h2><p>We forget how hard scrolling webpages used to be. Most
    users would painstakingly move their mouse to the right edge of the screen, to
    use something ancient called a ‘scrollbar’:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*A4AZXGxmMSPgmoMzdmh98A.gif"
    alt=""></p><p>As a pro, you probably used a mouse wheel, cursor keys, or trackpad,
    but you were way ahead of most users.</p><p>In 2015 it’s far easier to scroll
    than it is to click. On mobile, you can scroll wildly with your thumb. To click
    on a precise target is actually <em>more</em> difficult — the complete opposite
    of what we’re used to on the desktop.</p><p>As a result, we should expect more
    and more websites to be built around scrolling first, and clicking second. And
    of course, that’s exactly what we’ve seen everywhere:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*u2PNhH9JnEi1iVfuEaYSig.gif"
    alt=""></p><p>There’s every reason to expect this trend to continue as mobile
    takes over more of the market. Modern sites have fewer things to click, and much
    more scrolling. We’ll see fewer links, more buttons, bigger ‘clickable’ areas,
    and taller pages that expect to be scrolled.</p><p>Websites which spread their
    articles onto multiple pages will soon learn this lesson. Expect these to turn
    into longer single pages or even, like TIME magazine, into infinite scrolling
    pages:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*xHMuAVLPuHzRRpcXk4CLHA.gif"
    alt=""></p><p>It’s too early to know if the web will expand itself onto devices
    like watches, but if it ever does, you can bet it’ll be almost entirely driven
    by gestures.</p><h2>2. The fold really is dead this time</h2><p>Now scrolling
    is so cheap, and devices are so varied in size, ‘the fold’ is finally becoming
    irrelevant.</p><p>Designers are increasingly free to not cram everything at the
    top of a page. This leads to a design trend popularised by <a href="http://medium.com/">Medium</a>
    — full-screen image titles, with no content visible until you start scrolling:</p><p><img
    src="https://cdn-images-1.medium.com/max/2048/1*kDcO2lJRx7RcERXNZSgz8Q.png" alt=""></p><p>With
    tall, scrolling pages, designers have the chance to do what magazines have taken
    for granted for years: fill their pages with big beautiful images. In 2015 expect
    to see more designs that take up much more space — especially vertically — and
    a lot of larger imagery like this.</p><h2>3. Users are quicker, websites are simplifying</h2><p>Today
    every young adult is an expert web user. And even the amateurs are acting like
    pros: using multiple tabs, and swiping to go back a page.</p><p>The result is
    that everything is faster. And we’ve all learned to become impatient. If you want
    to make a mild mannered person explode with annoyance, just make their Internet
    really slow for a minute.</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*21tR0tgN_MsHyc0Miu6C5w.png"
    alt=""></p><p>Now websites are forced not just to become faster (a technical problem),
    but to <em>become faster to understand</em>. Designs which slow the user down
    have the same impact on their audience as these websites which don’t load at all.</p><p>Simpler
    designs are easier to scan, which means they’re faster to appreciate. It’s easy
    to see which of these two designs is newer, and it’s because it’s the one that
    user’s can enjoy the fastest:</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*Z7P_0dQGbOK5FrKFFT3kUQ.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2048/1*WLQYtRmsTB4B930C00PiOA.png"
    alt=""></p><p>This is the biggest reason for the death of <a href="http://en.wikipedia.org/wiki/Skeuomorph">skeuomorphic
    design</a>: users are more perceptive, less patient, and clutter only slows them
    down.</p><p>Apps put most websites to shame with super-minimal, beautiful interfaces.
    And they’re doing this because minimal interfaces perform better.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*mKDNeQHovb7w6mxEZNejtA.gif"
    alt=""></p><p>Flat design is just the beginning. The real trend is towards simplicity
    and immediacy, and we expect that to go further than ever in 2015.</p><h2>4. The
    pixel is dead</h2><p>On a desktop, a pixel was a pixel. You even had an idea of
    how many pixels made up an average inch: 72 dpi. Nowadays very few people know
    what a pixel is.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*tEM2lxZFmhMMsVUGmwNVqg.png"
    alt=""></p><p>With responsive design, we’ve seen a move towards grids and percentages.
    But one huge area remains still unchallenged: bitmap images.</p><p>Almost all
    of the web is built with images that have half the resolution of a modern display,
    and they don’t scale. With Retina displays and modern browsers, the time is right
    for vector images to become more popular in 2015.</p><p>We can see this trend
    already happening with the font-based icons and <a href="http://www.google.com/design/spec/material-design/introduction.html#">Google’s
    Material design</a>. The website loads faster and scale the icons to any size
    without losing quality. That makes them ideal for designers and modern web browsers.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*nxt4KgqsgbPRgMCDTGso1g.png" alt=""></p><p>The
    technology exists now, but it will take time for professionals to change their
    habits to create for higher quality displays. Once the average desktop display
    becomes Retina-grade (like the new iMac), we expect designers to follow suit.</p><h2>5.
    Animation is back</h2><p>If you want to make a website look dated, cover it with
    animated “Under Construction” GIFs and Flash animation. But several things are
    coming together to make animation a rising star in modern web design.</p><p><strong>Flat
    design</strong> can end up looking too consistent, boring even. Animation helps
    a website to stand out and to pack more information into less space.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*jj8v9rTM1IdgEn2JSRdnsQ.gif" alt=""></p><p><strong>Mobile
    apps</strong> have redefined what a user expects. Mobile apps use motion to convey
    meaning, and websites are just starting to do the same.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*lVlH7rVqFReYUfNWjwAUAQ.gif"
    alt=""></p><p><strong>New technologies</strong> like CSS animation make it easy
    to enhance designs without plugins, speed or compatibility issues. And Web Components
    (#6, below) will only accelerate this.</p><p><strong>GIF animation</strong> is
    back, and surprisingly effective. You’ll notice this article makes extensive use
    of GIF animation (if it doesn’t, you should view <a href="http://delighten.co.uk/?p=1596">this
    version</a>), which has never been easier to create or share.</p><h2>6. Components
    are the new frameworks</h2><p>Web technology continues to get more complicated,
    and less semantic. Designers must embed messy code onto their pages for simple
    tasks, like including Google Analytics or a Facebook Like button. It would be
    a lot easier if we could just write something like this instead:</p><p><google-analytics
    key=”UA-12345–678"></p><p>And we can with <a href="http://webcomponents.org/">Web
    Components</a>, which aren’t <em>quite</em> ready to be used by most designers
    yet. 2015 is looking like their year.</p><p><a href="http://www.google.co.uk/design/">Google’s
    Material design</a> is here, and it may just be what gets this movement started.
    Powered by <a href="https://www.polymer-project.org/0.5/">Polymer</a>, and supported
    by all modern browsers, it provides the rich animation and interaction components
    from Android apps, with simple tags like these:</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*KWMW6OwkMN9KCOD52mqMaQ.png"
    alt=""></p><p>If that takes hold, it wouldn’t be surprising to see more component
    based frameworks appear in 2015. Perhaps Bootstrap 4.0?</p><h2>7. Social saturation
    and the rise of direct email</h2><p>Social media has been a huge success for consumers,
    but many content producers aren’t so happy.</p><p>The problem is saturation. With
    billions of posts every day, Facebook learns the posts that users are most likely
    to enjoy and shows only those. Unfortunately that means over time, what you post
    is increasingly seen by a smaller percentage of your followers. (A problem you
    can solve, conveniently, by paying Facebook).</p><p>Social isn’t going away, but
    in 2014 we’ve seen a lot of prominent bloggers like <a href="http://fourhourworkweek.com/">Tim
    Ferriss</a> move their focus away from social and into good old fashioned email
    lists. They’ve realised that email has one significant advantage over social:
    a much higher percentage of people will see what you send them.</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*4vjtpm2BMWb9VCgD16fccg.png"
    alt=""></p><p>I expect this post-social trend to continue into 2015, with the
    under-appreciated trend of Web Notifications (which work much like notifications
    in a mobile app).</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*x-EAYYROaSMIOZzi8DOpaQ.gif"
    alt=""></p><h2>Bonus non-prediction: CSS shapes</h2><p>This cool technology <em>won’t</em>
    get noticed, except by designers. <a href="http://webplatform.adobe.com/shapes/">CSS
    shapes</a> allow you to flow layout into shapes, like circles:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*LPJ7lqbVCYWhOHEbFUYIfw.jpeg"
    alt=""></p><p>It’s incredibly cool, but until browser support is guaranteed, this
    is likely to be too risky to put time and effort into it you’d need almost two
    complete designs, for old and new browsers. And outside of designers, we don’t
    think many users would notice.</p><p>It <em>is</em> really cool though.</p><h2>What
    to expect in 2015</h2><p>In 2014 we saw <a href="http://www.smartinsights.com/mobile-marketing/mobile-marketing-analytics/mobile-marketing-statistics/">mobile
    use overtake desktop</a>, but the general public hasn’t caught up. Most organisations
    still commission a website to look good on their computer first and work on mobile
    second.</p><p>In 2015 that strategy is likely to look out of touch and unprofessional.
    As the mobile becomes the main device for browsing the web, “mobile-first” will
    become less of a buzzword and more of a requirement.</p><p>Flat design may be
    everywhere, but when you look beyond ghost buttons the real trend is that <em>simpler
    sites are faster at gratifying users</em>.</p><p>Simplicity is not just a fashion:
    it’s the future. Expect it to only continue.</p><p>It will become more and more
    common to embed animation into blog posts, and for motion to signify both premium
    quality (for those who can afford it) and to support the user experience.</p><p>Pixels
    and the fold will slowly be set aside making more room for scrolling and click-second
    experiences. Web Components will make it easier to deliver app-like experiences
    in our websites.</p><p>Right now you see the best of mobile app design appearing
    in web design. With enough time, the difference between an app and a website might
    almost entirely disappear.</p>'
  :author: Jowita Emberton
  :topic: future
- :url: https://medium.com/hackernoon/why-i-owned-a-macbook-pro-for-a-day-and-what-it-says-to-me-about-the-future-of-apple-75b84458d86c?source=search_post---------9
  :title: Why I owned a Macbook Pro for a day — and what it says to me about the future
    of Apple
  :content: <p>Not what I did to my Macbook, but certainly how I felt…</p><p><strong>On
    Saturday I bought a new Macbook Pro with touch bar. And on Sunday I returned it.</strong></p><p><em>The
    only surprising part of this is the fact I returned it so soon.</em></p><p>I was
    expecting to keep it for maybe a week. Certainly no more than the 14 day return
    period <a href="https://hackernoon.com/tagged/apple">Apple</a> offer on all purchases.</p><p>You
    see, I never intended to keep this computer. I basically ‘abused’ their return
    policy whilst they repaired the second broken MBP I’ve had in a few months.</p><p>I
    don’t feel great about it, but I don’t feel too bad either considering my experience
    with Apple over the last nine months.</p><p>Ultimately the fault lies with them,
    their generally terrible customer service policies and a design/manufacturing
    fault with the late 2016 15&quot; Macbook Pro touch bar model. A fault that I’ve
    yet to see them publicly accept despite the fact it is accepted internally, has
    a fault code, and internet forums and youtube are full of people reporting the
    same problems.</p><p>Many of these people are being forced to pay out of their
    own pockets for expensive repairs even though there is, what seems to be a secret,
    repair programme in place.</p><p>Hopefully this article might help one or two
    people get what they deserve from Apple.</p><p><strong>The short version of this
    story is if you have a late 2016 15&quot; touch bar model and you have problems
    with noises or the screen, go to Apple and, unless you know you’ve done something
    stupid like dropped it or put a hammer through the screen, demand they fix it
    or replace it.</strong></p><p>The full version below is much longer and quite
    boring. But it’s here for public record and to get it off my chest more than anything
    else.</p><p>In December I bought a 15&quot; Macbook Pro with touch bar. I’d read
    the reviews. They were mixed. It was generally accepted that they were too expensive
    for what they are — even by Apple’s standards — and the switch to USB-C meant
    using dongles until the world catches up.</p><p>But I needed a new Macbook and
    it was the best option. I expected to be a bit disappointed in the cost/feature
    ratio department — and the dongle nonsense — but what I didn’t expect was 9 months
    of stress, arguing, character assassination, lost time and money.</p><p>It started
    badly with the computer making random noises. Creaking, squeaking, cracking —
    I never could decide the best way to describe it, maybe it was all three.</p><p>It
    would happen randomly. Sometimes when I wasn’t even touching it. Other times when
    I was typing and took my hands away from the side of the touchpad where they normally
    rest.</p><p>I also noticed a strange hollow metallic sound when I lightly tapped
    the side of the touchpad. I tried the same thing on other Macbooks in the house
    and they didn’t make the sound. I tried it on the same model in stores, and none
    of them made the sound.</p><p>I reported it to Apple but they dismissed it.</p><p><strong>Then
    things took a noticeable turn for the worse.</strong></p><p>I opened my Macbook
    one evening to find the screen black and what I thought was a bit of dirt or dust
    in the middle, just under the web cam.</p><p>I gently brushed it away — or tried
    to — but it wasn’t dust. It was a tiny crack. And brushing it — I can’t stress
    how lightly — caused it to crack right down and off to the center right of the
    screen.</p><p><strong>It was, to be as polite as I can under the circumstances,
    totally buggered.</strong></p><p>Now, what was interesting about this was although
    my laptop now had no working screen, amazingly all the creaks and squeaks and
    cracking noises had stopped.</p><p>A strange co-incidence some may say. Or proof
    that there was something wrong with the case and/or screen, as I believed.</p><p>I
    live in Malaga — although my <a href="https://hackernoon.com/tagged/business">business</a>
    is in the UK and the laptop was bought in the UK — so I took it to the Marbella
    store. A good hour journey each way, plus a toll road — unless I want the journey
    to be even longer.</p><p>This is where things started to get nasty and Apple —
    who have been testing my patience for a few years — really did their best to get
    rid of a customer who has so many Macs listed on his account, plus lots of other
    Apple devices, that sometimes they get confused which one they are dealing with.</p><p>They
    immediately told me it was my fault. They claimed it had to be. They said once
    a screen leaves the factory, if it breaks, it is always the users fault.</p><p>I
    had a thin web cam cover on and they tried to claim that was the reason it broke.
    I suspected they might try that and it did cross my mind to take it off before
    showing it them, but I decided there was no need as it wasn’t the cause.</p><p>The
    company that makes the covers claimed to have never had a complaint about it and
    I’ve not found anything online about similar problems. A couple of Mac store workers
    told me quietly that it absolutely had nothing to do with it, but they weren’t
    the people making the decisions.</p><p><strong>I know for a fact I didn’t break
    the screen. I know the noises the case was making. And I know that once the screen
    had cracked the noises stopped.</strong></p><p>But Apple didn’t care. They continued
    to insist it was me who did it. They called me a liar.</p><p>Eventually — because
    I refused to give in — they offered to repair it as a one-off gesture. But I didn’t
    want a repair, I wanted a replacement. This was a new computer that had been faulty
    — I believed — since the day I got it. Why should I have a new computer repaired?
    And why should I go for up to 2 weeks without it? I do have older Macbooks lying
    around in various conditions but that’s not the point. I have this one for a reason.</p><p>During
    all this discussion one member of Apple staff actually told me ‘There’s the law,
    and then there’s Apple policy’ and he wasn’t talking about their policy being
    stronger than the law. I tried to give him the benefit of the doubt at first —
    he’s Spanish and he was speaking a second language — but no, that is what he said
    and that’s what he meant.</p><p>No Apple. There is the law. That’s it.</p><p>Anything
    Apple want to do above that is great, but the law is the law.</p><p>I ended up
    going back to the Manchester store where I bought it. I was flying over from Spain
    anyway to get married at Manchester Town Hall.</p><p>We were only there a few
    days and I spent a number of hours, on the Saturday before I got married on the
    Sunday, ‘debating’ with the manager and several members of the Apple staff there.
    A couple of them were actually very good and supportive but overall it was a very
    stressful afternoon.</p><p>Eventually, when they finally realised I was serious
    and I wasn’t going to leave the store otherwise, they agreed to let me swap it
    for a new one. Actually, that’s what I thought they meant, but what they really
    meant was they would refund the near £3000 the laptop cost on to my card and let
    me buy another one. Of course, it would be a few days before the money from the
    refund was back in my account but …</p><p>So I bought another one there and then.
    I was pleasantly surprised to find they had the top spec model in-store (normally
    you have to order them) which I’d originally wanted but wasn’t available at the
    time, so I bought that. A faster CPU, faster graphics card, 1TB drive etc. So
    another £3,300 off my card and I finally left with a brand new Macbook Pro to
    replace the one with the broken screen. Oh, and my very-future wife bought an
    Apple Watch while she was waiting.</p><p>All that done, I could get on with getting
    married.</p><p><strong><em>That whole experience left me furious with Apple. But
    it was to get worse.</em></strong></p><p>The new one made the same noises. Actually,
    they were subtly different, but it made noises it shouldn’t.</p><p>As I’d just
    got married, and I’m generally always busy anyway, I didn’t get around to calling
    Apple about it for a while. I should have done. And I kept meaning to. I should
    have called them straight-away.</p><p>But then something else went wrong — the
    keyboard started playing up and some keys didn’t respond fully — which meant I
    had to call them so I reported the noises on the new one too.</p><p>Eventually
    I was passed on to a senior telephone advisor — a wonderful, friendly and knowledgable
    Scottish chap called Alasdair — who really listened to the problems I’d faced
    with the last one, all the stress I’d gone through, and asked me to send him a
    video of the noises this Macbook was making.</p><p>He passed it on to engineering
    in California. He’d heard some other reports of similar problems. He was the first
    to admit that to me. Everyone else up to now, both Marbella and Manchester, and
    telephone support, had said they had never heard of anyone having similar problems.</p><p>They
    only had to look at Mac forums or Youtube to see it being reported but that’s
    one thing I learned through this experience. Even senior advisors at Apple have
    very limited access to the internet at work, which doesn’t just show a shocking
    level of trust in their staff, but is a genuine hinderance to their ability to
    do their job. It’s less surprising they haven’t heard about problems from customers
    if they can’t read the forums their customers post on.</p><p>A few weeks later
    Alasdair got in touch. Apple HQ had accepted there was a fault with the late 2016
    15&quot; Macbook with touch bar that was causing the noises.</p><p>And the fix?</p><p><strong>A
    free screen replacement.</strong></p><p>I still don’t know exactly what the connection
    is between the screen and the case noises. Maybe the screen wasn’t set properly
    in the case? Maybe the case was putting pressure on the screen? I just don’t know,
    but — as I knew when my cracked screen caused my Macbook to stop making the noises
    — they are obviously linked.</p><p>Another trip to the Marbella store — which
    I was told I had to do and I couldn’t do over the phone even though the outcome
    was inevitable — resulted in them ordering the parts. Another afternoon gone,
    two more tolls paid.</p><p><strong>The guy I spoke to then knew about the problem
    immediately. He told me Apple stores around the world had been getting complaints
    for months. He told me that they’d known about it for a while but it’s a numbers
    game — until enough people complain, they’d deny it.</strong></p><p>I also had
    to put further pressure on Apple to agree to replace the keyboard at the same
    time but eventually they did agree.</p><p>Having just had a baby daughter, it’s
    taken a few weeks for me to get around to taking it in for repair after they got
    the parts in. I had to tell them I’d be delayed otherwise they would have used
    the parts for someone else and I’d have to start over again.</p><p>I still thought,
    and still think, I deserved a full replacement. This machine left the factory
    damaged. As did the one before. I don’t think it’s unreasonable to expect — for
    £3,300— a computer that hasn’t had to be repaired so soon because of a design
    or manufacturing fault.</p><p>But frankly after 9 months, I’m so tired of the
    arguments, and busy with my baby daughter, that I agreed to the repair.</p><p>Which
    takes me back to how this article started.</p><p>Apple, in their unquestionable
    wisdom, refuse to lend replacement computers when a machine has to go in for repair.
    I can understand this as a general policy, but sometimes — like maybe when you’ve
    had two laptops costing around 3k each in the space of 3 months, both faulty from
    the factory, countless trips to various stores, travel costs, petrol, toll roads,
    days off work, been called a liar etc — sometimes, you think they’d find a laptop
    to lend.</p><p>But no, they simply refuse.</p><p>Amazingly, a number of staff
    over the months suggested the solution I eventually used — to buy a new Macbook
    with the express intention of using it while mine was repaired and then return
    it under their 14 day returns policy. At one point I even considering buying everything
    I could afford just to mess with them. But I decided that was a tad childish.</p><p>When
    I took my Macbook in for repair on Saturday I was given the usual ‘up to 2 weeks’
    timescale for the repair. So I bought the replacement and copied my laptop over
    in the store before handing mine over. It took around two hours.</p><p>Then, yesterday,
    less than 24 hours later, I got an email saying my computer was ready for collection.
    It’s had a new screen put in and a new top case (including the keyboard). The
    bill — had they charged me — would have been just under 1000 euros.</p><p>So last
    night I went back and collected my repaired computer. Credit to Apple for repairing
    it so fast, perhaps someone read my case notes and realised that’s the least they
    could do.</p><p>And credit too to the staff member who processed the refund. They
    presumed I was returning it because it was a a Spanish keyboard (I gather that’s
    a common reason for British people to return them in Marbella), but I told him
    the truth. He agreed the no-loan policy is far from perfect and I had no problem
    getting a full refund.</p><p>But what an absolutely ridiculous position to be
    in. That computer — that I had for 24 hours — is now used. I don’t know what Apple
    do with them, but they can’t sell it for full price as new, because it’s not.</p><p><strong>Hey,
    here’s an idea. They could use it to lend to people who have computers in for
    repair…</strong></p><p>So, after 9 months of being treated like crap by a company
    I’ve (nearly) always loved, I now have — hopefully — a fully working Macbook Pro
    for the first time since December.</p><p>So far, no creaks or squeaks or cracking
    noises at all. And when I tap it, I get a nice solid thud, not the hollow metallic
    sound the last ones had (ok, I don’t need to tap it any more, that was just to
    show there was a problem…)</p><p>And the keyboard is working properly too.</p><p>Amazing.</p><p>Despite
    Alasdair’s great telephone support, and a couple of in-store staff, I’m afraid
    my view of Apple’s customer service in general is still poor.</p><p>I wouldn’t
    treat one of my customers like this, and my company doesn’t have a couple of hundred
    <strong>billion</strong> dollars of cash in the bank like Apple do.</p><p>They
    used to — or at least I seem to remember they used to — act like a prestige car
    company. Stupidly expensive, yes, but in return the dealer knows you by name and
    they treat you as more than just another faceless customer.</p><p>Sadly Apple
    seem to have stopped trying to be the Porsche or Ferrari of computers, while keeping
    the same prices — or, in the case of this Macbook range, actually putting the
    prices up — but decided to adopt the customer services policies of a dodgy used
    car lot.</p><p>And I’m not even going to start on the physical quality of the
    new machines. That’s a whole story in itself. Let’s just say they long passed
    the point of form over function and they need to remember a notebook is a portable
    device.</p><p>I hesitate to link the changes at Apple directly to the death of
    Steve Jobs. I admired him in many ways but I was never a fanboy of either him
    or Apple. But the change in Apple’s attitude does seem to co-incide with his death
    and Tim Cook’s leadership.</p><p>If I didn’t need certain applications I’d use
    Linux on a non-Apple laptop (I use it for servers already). And it’d take a lot
    to drag me back to Windows. So, for now at least, I feel I’m basically trapped
    into using Apple products (although the <a href="http://www.hackintosh.com/">Hackintosh</a>
    concept is interesting).</p><p>When you combine a feeling of being trapped into
    a product, with large price increases and appalling customer ‘service’, it’s very
    easy to lose long-term customers.</p><p>Not everyone hates Windows like I do,
    or needs certain apps like I do. And those are the customers who will soon be
    looking at the choices available and increasingly picking something other than
    a Macbook.</p><p>I hope I’m wrong. I don’t want to see Apple collapse again like
    it did the last time Jobs left the company. Especially as this time Jobs can never
    return.</p><p>It wouldn’t take that much to fix it. They have the cash to do it.
    They have the cash to do anything they want.</p><p>The fact they don’t suggests
    it’s either that the management don’t know what’s going on and don’t pay attention
    to their customers, or it’s a deliberate decision to treat customers like this.</p><p>Neither
    option is good for the long-term future of the company.</p><p>Apple, please, fix
    these basic problems. Hold your hands up when you make mistakes. Treat customers
    fairly. Apologise to them when you’ve mistreated them (you can even apologise
    for calling me a liar if you wish). Start putting yourself in the shoes of your
    customers before making rigid blanket policy decisions.</p><p>And, basically,
    just generally try to do the right thing. It’s not hard to work out what that
    is. All of you at Apple — even Tim Cook — are customers of many companies too.
    Think how you’d like to be treated and take it from there.</p><p>Damn it, I’ve
    just given away my planned business book for free. It was destined to be a best-seller.
    Oh well, here it is in full.</p><p><strong>Chapter 1. ‘How to run a business’
    — ‘Think like a customer’. The End.</strong></p><p>I’ve read about other people
    not putting up the same level of fight I did over this fault — and I don’t blame
    them — who have ended up paying Apple to ‘repair’ the damage ‘they’ did to their
    Macbook. If you’ve done that with this model, I urge you to go back and demand
    they return your money.</p><p>In the meantime, I’ll get back to work using my
    newly repaired Macbook — pleased it is fixed and working properly, but forever
    resentful of the last 9 months of stress and arguments, and dreading something
    else going wrong with it.</p><iframe src="https://medium.com/media/3c851dac986ab6dbb2d1aaa91205a8eb"
    frameborder=0></iframe>
  :author: HackerNoon.com
  :topic: future
- :url: https://medium.com/the-post-grad-survival-guide/the-5-things-you-must-sacrifice-to-have-a-better-future-4f5a6e960222?source=search_post
  :title: The 5 Things You Must Sacrifice To Have a Better Future
  :content: '<p>The 5 Things You Must Sacrifice To Have a Better Future</p><h2>1.
    Other People’s Definition of Success</h2><p>In the <a href="https://medium.com/the-mission/5-things-i-had-to-give-up-to-be-successful-a7b076f3d859">words</a>
    of <a href="https://medium.com/u/ba6889ffc749?source=post_page-----cf7380c67979----------------------">Srinivas
    Rao</a>, host of The Unmistakable Creative podcast:</p><blockquote><p>“At some
    point, I realized that I had to give up other people’s definition of success.
    This is one of the most difficult things to give up because it is so deeply embedded
    in our cultural narratives that it becomes the standard by which we measure our
    lives. Even as entrepreneurs we have collectively agreed that fame and fortune
    are the markers of success.But, giving up other people’s definition of success
    is incredibly liberating and ultimately leads to the fullest expression of who
    you are and what matters to you. It’s not a one-time thing. It’s a daily habit
    of comparing less and creating more.”</p></blockquote><p>“Success” doesn’t just
    mean what the larger mob of society says it means: <em>lots of money, fame, and
    fortune</em>. Many people with fame, fortune, and money have terribly empty, imbalanced
    lives.</p><p><strong>Your success isn’t defined by what other people say.</strong></p><p>No
    one can define your success but you. If you continue to let others tell you what
    success is, you’ll never reach it. Even if you did, it wouldn’t be a true success,
    because it’s not what <em>you</em> really valued.</p><p>No, living an extraordinary
    life means defining your own version of what success is. You can begin to spend
    your time on what <em>really</em> matters to you.</p><ul><li><p>Do you *really
    *want 1,000,000 Twitter followers?</p></li><li><p>Do you <em>really</em> need
    to be in the Forbes 30 Under 30 list?</p></li><li><p>Do you <em>really</em> want
    to be a New York Times best-selling author?</p></li></ul><p>Or is your version
    of success more nuanced, more narrowed, more focused, more specific?</p><p>If
    you want to <a href="https://medium.com/@anthony_moore/living-an-extraordinary-life-means-giving-up-a-normal-one-31fd54738214">live
    an extraordinary life</a>, your definition of success must be your own. If we
    are always chasing what other people tell us to, we’ll never experience <em>true</em>
    success.</p><p>Let go of other people’s versions of success. Define your own success,
    and achieve it.</p><p>That is true success.</p><h2>2. Looking Good</h2><p>Here’s
    an old parable:</p><p><em>“Once upon a time, there was a wise Zen master. People
    traveled from far away to seek his help. In return, he would teach them and show
    them the way to enlightenment.</em></p><p><em>On this particular day, a scholar
    came to visit the master for advice. “I have come to ask you to teach me about
    Zen,” the scholar said.</em></p><p><em>Soon, it became obvious that the scholar
    was full of his own opinions and knowledge. He interrupted the master repeatedly
    with his own stories and failed to listen to what the master had to say. The master
    calmly suggested that they should have tea.</em></p><p><em>So the master poured
    his guest a cup. The cup was filled, yet he kept pouring until the cup overflowed
    onto the table, onto the floor, and finally onto the scholar’s robes. The scholar
    cried “Stop! The cup is full already. Can’t you see?”</em></p><p><em>“Exactly,”
    the Zen master replied with a smile. “You are like this cup — so full of ideas
    that nothing more will fit in. Come back to me with an empty cup.”</em></p><p>Most
    people believe they already have it all figured out, yet wonder why opportunities,
    luck, and success continues to elude them.</p><p>Choose to <a href="https://medium.com/the-mission/if-you-dont-become-a-student-first-you-ll-never-be-great-at-anything-6560cc7e72d0">**become
    a student</a>** first, and success will find you.</p><p>If you want to look good
    — if you want everyone to think you have all the answers — then you’ll fooling
    all of them <em>and yourself</em>.</p><p>True success comes from knowledge, humility,
    and becoming a student of your craft. You can’t have that if you insist on looking
    like you have all the answers.</p><h2>3. Busyness</h2><blockquote><p>“The most
    successful people I know are not busy. They’re focused.” -Jeff Goins, best-selling
    author</p></blockquote><p>How you spend your days is how you spend your life.</p><p>A
    lot of people love being “busy.” They wear it as a badge of honor. When you ask
    them how they’ve been, what’s the response? “<em>I’m so busy</em>,” they lament.
    But it’s a subtle brag. They <em>like</em> the feeling.</p><p>But when you’re
    busy, you don’t really do anything — just because your calendar is full of meetings,
    appointments, and commutes doesn’t mean you’re actually making any progress towards
    your true goals.</p><p>Are you focused, making tangible action steps towards what
    truly matters?</p><p>…Or are you just “busy?”</p><p>When you’re busy, you are
    on autopilot. You can’t see the hours slipping away, time you’ll never get back.</p><p>But
    when you choose to be focused — to spend your time and energy on achieving your
    true goals — that’s where the magic happens. That’s where focus turns into flow
    states, hyper-focused mental efforts to make fast progress.</p><p>Most people
    prefer the emotional boost of bragging about how “busy” they are, instead of actually
    doing the real hard work. Choose focus, not busyness.</p><h2>4. Entertainment
    and Distraction</h2><blockquote><p>“Successful people don’t see it as ‘free time.’
    They see it as the only time they have to do the things they really want to do
    in life and they don’t take a minute for granted.” -<a href="https://medium.com/u/7c10a61aa346?source=post_page-----ad0fd0aee03a----------------------">Nicolas
    Cole</a></p></blockquote><p>Reinvesting your free time is one of the most important
    ingredients to your success.</p><p>If you’re working a full-time job, with a commute
    and family and bills, you don’t have a lot of free time. If you’re like most people,
    the precious little free time you <em>do</em> have is spent on entertainment and
    distraction, not learning and growing.</p><p>This is low-level thinking, and it
    will lead you to a, frankly, low-level life.</p><p>But true success requires sacrifice.
    A common misconception many of those sleep-when-you’re-dead hustle-entrepreneurs
    claim is that you need be working all the time.</p><p>The truth is, you need to
    work your butt off — for a time. After you’ve spent the time creating your life,
    you can sit back and enjoy the work you’ve done.</p><p>I like aimless free time,
    and it’s important no matter who you are or where you’re at.</p><p>But if you
    want to make great strides and achieve a truly extraordinary life, you need to
    reinvest your free time into learning new skills, putting in the work, and being
    productive.</p><p>It won’t last forever. But you need to put in the time now,
    so later, you can have the life you want.</p><h2>5. “Kinda-Good” Opportunities</h2><p>You
    can do amazing things with your life — but only if you have the time to do them.</p><p>When
    my wife and I moved to South Korea for a year to teach English, my #1 goal was
    to become a full-time writer by the end of the 12 months.</p><p>During that year,
    I was offered several high-paying, interesting jobs:</p><ul><li><p>Youth basketball
    coach</p></li><li><p>Career coach</p></li><li><p>Private tutor</p></li><li><p>Remote
    data analyst</p></li><li><p>Musician for a church worship group</p></li></ul><p>But
    in the end, none of these kinda-cool opportunities would help me achieve my #1
    goal. On the contrary, they’d take up what little free time I had.</p><p>I said
    no to all of them. By the end of 12 months, I was making a full-time income as
    a writer. I had a signed book deal, tens of thousands of new followers, and I
    was getting hundreds of thousands of views each month.</p><p>There’s great power
    in saying no to kinda-good opportunities. There’s also great consequences if you
    spend all your time on the merely “good” opportunities — it means you won’t have
    time for the truly great ones when they come.</p><h2>In Conclusion</h2><p>Good
    things come from sacrifice.</p><p>If you want what you’ve never had, you must
    do what you’ve never done. It’s to start sacrificing the right things so you can
    have a better future.</p><p>Don’t let anyone define success but you. Stop being
    “busy,” and start being focused. Don’t worry about looking good, concentrate on
    learning all you can from everywhere you can. Spend your time wisely, because
    many things want your attention and energy. Make sure they’re the right things.</p><h2>Ready
    To Level-Up?</h2><p>If you want to become extraordinary and become 10x more effective
    than you were before, check out my checklist.</p><p><a href="https://anthonymoore-ext.clickfunnels.com/get-extraordinary-checklist-optin">Click
    here to get the checklist now!</a></p>'
  :author: The Post-Grad Survival Guide
  :topic: future
- :url: https://medium.com/mind-cafe/the-5-year-rule-how-to-create-the-future-you-want-e25e00770612?source=search_post
  :title: 'The 5-Year Rule: How to Create the Future You Want'
  :content: '<p>A proven process for building your dream life.</p><p><img src="https://cdn-images-1.medium.com/max/9792/1*c6Lw3mIePawaWKRV7c7K_Q.jpeg"
    alt="Photo by [Eddy Klaus](https://unsplash.com/@eduardo_mekmuffin?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/artist?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@eduardo_mekmuffin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Eddy
    Klaus</a> on <a href="https://unsplash.com/s/photos/artist?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><blockquote><h1><strong>“Five
    years from now you will arrive, the question is where</strong>?” — Jim Rohn</h1></blockquote><p>I
    remember this moment like it was yesterday. I’d just started writing. Finally,
    I found something that felt like an amazing fit — something I was willing to work
    hard at.</p><p>I was sitting in my room folding laundry watching a YouTube video
    by the late Jim Rohn and he talked about how much you could change your life in
    the span of five years.</p><p>Whether you wanted to start a business, build a
    brand, create an amazing network, start an organization, or any other venture
    that could radically transform your life, you could make it happen if you were
    willing to commit those five years.</p><p>I remember thinking to myself, “Five
    years doesn’t seem like a ton of time.” I silently committed to the timeframe.
    I wrote nearly every day, read books, watched videos, took courses, and essentially
    became an evolving self-improvement machine over that period.</p><p>As I moved
    forward, I kept seeing the same theme over and over again — five years. My favourite
    writer, James Altucher, said it takes <a href="https://jamesaltucher.com/blog/reinventing-yourself/">five
    years to fully reinvent yourself</a>. Jon Morrow, the online mentor who taught
    me most of what I know about blogging said that it would take <a href="https://smartblogger.com/website-traffic/">4
    to 6 years to build a blog that can create wealth</a>.</p><p>During years one
    through three when I was making little to no money, flailing around trying to
    figure out how to be a blogger, and bumping my head against the wall trying to
    learn all the little nuances that came along the way, I kept that number in my
    head. In years three to four, I could see that success was an inevitability. In
    years four to five, <em>everything skyrocketed.</em></p><p>I’ve reached my five-year
    anniversary as a writer and student of self-improvement. Here’s what I’ve accomplished:</p><ul><li><p>I’ve
    published three books</p></li><li><p><a href="https://www.youtube.com/watch?v=G2AOBK4zMLI&t=106s">I
    gave a TEDx talk</a></p></li><li><p>I grew my readership from zero to millions</p></li><li><p>I
    quit my job and became a full-time writer</p></li></ul><p>Being on the other side
    of the five-year equation, I can tell you without question that it works. You
    will experience exponential growth. In the beginning, you won’t be very good at
    the new skill you’re trying to learn or the path you’re trying to forge.</p><p>At
    this point, you’re just trying to *survive *and build good habits. Most people
    quit in this phase. Don’t be one of those people. Why? Because one day, you won’t
    just get a little better and become a little more successful, you’ll suddenly
    get much better and experience a ton more success.</p><p>Charlie Munger puts it
    well:</p><blockquote><p>‘Spend each day trying to be a little wiser than you were
    when you woke up. Discharge your duties faithfully and well. Step by step you
    get ahead, but not necessarily in fast spurts. But you build discipline by preparing
    for fast spurts… Slug it out one inch at a time, day by day, at the end of the
    day — if you live long enough — most people get what they deserve.’</p></blockquote><p>Here
    are some good rules of thumb for you:</p><ul><li><p>*<em>The 90-Day Sprint: *</em>Spend
    your first 90 days working on your new path, skill, or project, daily with reckless
    abandon. You will learn more about not only what it takes to succeed, but whether
    or not you actually like doing it, than any amount of “research” or “studying”
    will teach you. Most people don’t even make it this far. If you do, odds are you’ll
    keep going. In the event the path really doesn’t seem like a great fit, you didn’t
    waste that much time.</p></li><li><p>*<em>The Rule of 100: *</em>Be willing to
    do something 100 times to get good at it. Write 100 blog posts. Shoot 100 videos
    (something I recently accomplished with my new <a href="https://www.youtube.com/channel/UCMe1vAjk4e5z1hac7XqGP0A?view_as=subscriber">YouTube
    channel)</a>, record 100 podcasts, pitch 100 potential new clients.</p></li><li><p>*<em>18-Month
    Cycle: *</em>Peter Drucker, business expert and author of <em>Managing Oneself</em>,
    talks about using 18-month benchmarks to track your overall progress. The length
    of time is long enough to give you enough ‘data’ but not so long that you create
    unrealistic goals.</p></li><li><p>*<em>The One Thing: *</em><em>The One Thing</em>,
    by Gary Keller, teaches a simple rule to help you stay focused and productive.
    Ask yourself the question <em>“What’s the one thing you can do, such that by doing
    it, everything else will be easier or unnecessary?”</em> You can use this system
    to reverse engineer long-term goals into actionable goals and key performance
    indicators (KPIs) to work on in the short to intermediate-term. Choose your one
    thing for 18 months, then for the quarter, then for each month, then for each
    week, then for each day.</p></li></ul><p>I didn’t keep perfect track and progress
    of my career using all the systems above, but I did keep an intuitive sense of
    all of them while I focused on building my writing career to get where I am today.</p><p>Five
    years seems like a long time. It isn’t. When you break things down to the present
    moment and focus on the immediate future, you’ll look up five years later to see
    that you’ve achieved a level of progress even <em>you</em> didn’t think possible.</p><p>Your
    skills compound, like an investment account, and you’ll be orders of magnitude
    better than when you started. <strong>But you have to start</strong>.</p><p>I
    use this framework for every new goal or important decision. If I’m not willing
    to dedicate five years to it, I won’t do it. But when I do commit, I’m all the
    way in. And combining these five-year chunks leads to an insanely productive life.</p><p>You
    have that thing you want to do. You know what it is. You’re just scared.</p><p>You
    want to know whether or not it will work out beforehand. Trust me, if you have
    a decent amount of talent and enough work ethic to gradually get better over a
    period of five years, it’ll work. Now go.</p><p>*<em>Grab your free checklist
    here *</em>— <a href="https://thedestinyformula.lpages.co/ultimate-guide/">The
    Ultimate Guide to Discovering Your Natural Talents and Strengths</a>. Wanna keep
    in touch online? <a href="https://www.instagram.com/ayotheauthor/?hl=en">Follow
    me on Instagram here.</a></p>'
  :author: Mind Cafe
  :topic: future
- :url: https://medium.com/free-code-camp/inside-the-invisible-war-for-the-open-internet-dd31a29a3f08?source=search_post
  :title: The future of the open internet — and our way of life — is in your hands
  :content: "<p>“魔術師” (The Mage) by Hsu Tung Han. 2013. Wood.</p><p>There are a lot
    of scary things happening these days, but here’s what keeps me up late at night.
    A handful of corporations are turning our open internet into this:</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*ickvszselsWAGDvfIYYvww.png\"
    alt=\"\"></p><p>These corporations want to lock down the internet and give us
    access to nothing more than a few walled gardens. They want to burn down the Library
    of Alexandria and replace it with a magazine rack.</p><p>Why? Because they’ll
    make more money that way.</p><p>This may sound like a conspiracy theory, but this
    process is moving forward at an alarming rate.</p><iframe src=\"https://medium.com/media/44654c44bc7779bf25f56ad6942d5b08\"
    frameborder=0></iframe><h3>History is repeating itself.</h3><p>So far, the story
    of the internet has followed the same tragic narrative that’s befallen other information
    technologies over the past 160 years:</p><ul><li><p>the telegram</p></li><li><p>the
    telephone</p></li><li><p>cinema</p></li><li><p>radio</p></li><li><p>television</p></li></ul><p>Each
    of these had roughly the same story arc:</p><ol><li><p>Inventors discovered the
    technology.</p></li><li><p>Hobbyists pioneered the applications of that technology,
    and popularized it.</p></li><li><p>Corporations took notice. They commercialized
    the technology, refined it, and scaled it.</p></li><li><p>Once the corporations
    were powerful enough, they tricked the government into helping them lock the technology
    down. They installed themselves as “natural monopolies.”</p></li><li><p>After
    a long period of stagnation, a new technology emerged to disrupt the old one.
    Sometimes this would dislodge the old monopoly. But sometimes it would only further
    solidify them.</p></li></ol><p>This loop has repeated itself so many times that
    Tim Wu — the Harvard law professor who coined the term “Net Neutrality” — has
    a name for it: <strong>The Cycle</strong>.</p><blockquote><h1>“History shows a
    typical progression of information technologies, from somebody’s hobby to somebody’s
    industry; from jury-rigged contraption to slick production marvel; from a freely
    accessible channel to one strictly controlled by a single corporation or cartel
    — from open to closed system.” — Tim Wu</h1></blockquote><p>And right now, we’re
    in step 4 the open internet’s narrative. We’re surrounded by monopolies.</p><p>The
    problem is that we’ve been in step 4 for decades now. And there’s no step 5 in
    sight. The creative destruction that the Economist Joseph Schumpeter first observed
    in the early 1900s has yet to materialize.</p><p>The internet, it seems, is special.
    It’s the ultimate information technology — capable of supplanting the telegram,
    telephone, radio, cinema, television, and much more — and there’s no clear way
    to disrupt it.</p><p>But the war for the commanding heights of the internet is
    far from over. There are many players on this global chess board. Governments.
    Telecom monopolies. Internet giants like Google and Facebook. NGOs. Startups.
    Hackers. And — most importantly — <strong>you</strong>.</p><p>The war for the
    open internet is the defining issue of our time. It’s a scramble for control of
    the very fabric of human communication. And human communication is all that separates
    us from the utopia that thousands of generations of our ancestors slowly marched
    us toward — or the Orwellian, Huxleyan, Kafkaesque dystopia that a locked-down
    internet would make possible.</p><p>By the end of this article, you’ll understand
    what’s happening, the market forces that are driving this, and how you can help
    stop it. We’ll talk about the brazen monopolies who maneuver to lock down the
    internet, the scrappy idealists who fight to keep it open, and the vast majority
    of people who are completely oblivious to this battle for the future.</p><p><strong>In
    Part 1, we’ll explore what the open internet is</strong> and delve into the history
    of the technological revolutions that preceded it.</p><p><strong>In Part 2, we’ll
    talk about the atoms.</strong> The physical infrastructure of the internet. The
    internet backbone. Communication satellites. The “last mile” of copper and fiber
    optic cables that provide broadband internet.</p><p><strong>In Part 3, we’ll talk
    about bits.</strong> The open, distributed nature of the internet and how it’s
    being cordoned off into walled gardens by some of the largest multinational corporations
    in the world.</p><p><strong>In Part 4, we’ll explore the implications of all this</strong>
    for consumers and for startups. You’ll see how you can help save the open internet.**
    **I’ll share some practical steps you can take as a citizen of the internet to
    do your part and keep it open.</p><p>This is a long read. So grab a hot beverage
    and get ready to download a massive corpus of technology history into your brain.</p><h2>Part
    1: What is the open internet?</h2><p><img src=\"https://cdn-images-1.medium.com/max/2048/1*RJiuB_tmmN2rWhuR0mzDGw.jpeg\"
    alt=\"“Number 31” by Jackson Pollock. 1950. Household paints on canvas.\"><em>“Number
    31” by Jackson Pollock. 1950. Household paints on canvas.</em></p><p>There’s only
    one word to describe the open internet: <strong>chaos</strong>.</p><p>The open
    internet is a cacophony of 3 billion voices screaming over one another. It’s a
    dusty, sprawling bazaar. And it’s messy. But it has produced some of the greatest
    art and industry of our time.</p><p>The open internet is a Miltonian marketplace
    of ideas, guided by a Smithian invisible hand of free-market capitalism.</p><p>The
    open internet is distributed. It’s owned in part by everyone and in whole by no
    one. It exists largely outside of the boundaries of governments. And it’s this
    way by design.</p><p>This reflects the wisdom of Vint Cerf, Bob Khan, J. C. R.
    Licklider, and all the <a href=\"http://amzn.to/2mSyqHN\">wizards who stayed up
    late</a> and pioneered the internet. They had seen the anti-capitalist, corporatists
    fate that befell the telegram, the telephone, the radio, and the TV. They wanted
    no part of that for their invention.</p><p>The open internet is a <a href=\"http://www.nmqa.org/\">New
    Mexico Quilter’s Association</a>. It’s a <a href=\"http://www.jeremyleerenner.com/\">Jeremy
    Renner fan club</a>. It’s a North Carolina <a href=\"https://www.poetryslamasheville.com/\">poetry
    slam</a>. It’s a Washington D.C. <a href=\"http://www.hacdc.org/\">hackerspace</a>.
    It’s a <a href=\"http://www.townoftruckee.com/\">municipal website</a> for Truckee,
    California. It’s a <a href=\"http://www.b5-dark-mirror.co.uk/\">Babylon 5 fan
    fiction website</a>.</p><p>The open internet is a general purpose tool where anyone
    can publish content, and anyone can then consume that content. It is a Cambrian
    Explosion of ideas and of execution.</p><p>Can these websites survive in a top-down,
    command-and-control closed internet? Will they pay for “shelf space” on a cable
    TV-like list of packages? Will they pay for a slice of attention in crowded walled
    gardens?</p><h3>We’re all trapped in The Cycle</h3><p>Here’s a brief history of
    the information technologies that came before the internet, and how quickly corporations
    and governments consolidated them.</p><p><img src=\"https://cdn-images-1.medium.com/max/2048/0*eb27CiEc3orb0hk6.\"
    alt=\"\"></p><p>Originally anyone could string up some cable, then start tapping
    out Morse Code messages to their friends. The telegram was a fun tool that had
    some practical applications, too. Local businesses emerged around it.</p><p>That
    changed in 1851 when Western Union strung up transcontinental lines and built
    relay stations between them.</p><p>If small telegraph companies wanted to be able
    to compete, they needed access to Western Union’s network. Soon, they were squeezed
    out entirely.</p><p>At one point Western Union was so powerful that it was able
    to single-handedly install a US President. If you grew up in America, you may
    have memorized this president’s name as a child: Rutherford B. Hayes.</p><p>Not
    only did Western Union back Hayes’ campaign financially, it also used its unique
    position as the information backbone for espionage purposes. It was able to read
    telegrams from Hayes’ political opponents and make sure Hayes was always one step
    ahead.</p><p>Western Union’s dominance — and monopoly pricing — would last for
    decades until Alexander Graham Bell disrupted its business with his newly-invented
    telephone.</p><h3>How the telephone fell victim to The Cycle</h3><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*N-iK2nY4nfbenqfd.\"
    alt=\"\"></p><p>After a period of party lines and local telephone companies, AT&amp;T
    — backed by JP Morgan — built a network of long-distance lines throughout America.</p><p>In
    order for the customers of local phone companies to be able to call people in
    other cities, those companies had to pay AT&amp;T for the privilege of using its
    long-distance network.</p><p>Theodore Vail — a benevolent monopolist if there
    ever was one — thought that full control of America’s phone systems was the best
    way to avoid messy, wasteful capitalistic competition. He argued that his way
    was better for consumers. And to be fair, it was. At least in the short run.</p><p>Vail
    was able to use AT&amp;T’s monopoly profits to subsidize the development of rural
    phone lines. This helped him rapidly connect all of America and unify it under
    a single standardized system.</p><p>But the problem with benevolent monopolists
    is they don’t live forever. Sooner or later, they are replaced by second-generation
    CEOs, who often lack any of their predecessors’ idealism. They are only after
    one thing — the capitalist’s prerogative — maximizing shareholder value. That
    means making a profit, dispersing dividends, and beating quarterly earnings projections.
    Which means extracting as much money from customers as possible.</p><p>AT&amp;T
    eventually squeezed out their competitors completely. And once AT&amp;T’s monopoly
    became apparent, the US Government took action to regulate it. But AT&amp;T was
    much smarter than its regulators, and jumped on an opportunity to become a state-sponsored
    “natural monopoly.”</p><p>AT&amp;T would enjoy monopoly profits for decades before
    being broken up by the FCC in 1982.</p><p>But the “baby bells” wouldn’t stay divided
    for long. In 1997, they were able to start <a href=\"http://money.cnn.com/2014/05/20/technology/att-merger-history/\">merging
    back together</a> into a corporation even bigger than before the break-up.</p><p>The
    end result is one of the most powerful corporations on the planet — strong enough
    to expand its monopoly from the land-line telephone industry to the emerging wireless
    telecom industry.</p><p>AT&amp;T functioned like a branch of government and had
    extensive research labs, but with one major exception — it could keep secret any
    inventions that it perceived as a threat to its core business.</p><p>Voicemail
    — and digital tape, which was later used as a critical data storage medium for
    computers — was actually invented within one of AT&amp;T’s labs in 1934. But they
    buried it. It was only re-invented decades later.</p><p>Imagine how much progress
    the field of information technology could have made during that length of time
    with such a reliable and high-volume data storage medium at its disposal.</p><p>To
    give you some idea of how much just this one AT&amp;T decision may have cost humanity,
    imagine that a corporation purposefully delayed the introduction of email by a
    decade. What would be the total impact on the productivity of society? How many
    trillions of dollars in lost economic activity would such an action cost us? This
    is <em>the</em> cautionary tale of what happens when you leave scientific research
    and development to private industry instead of public labs and universities.</p><p>You
    can still feel the legacy of AT&amp;T’s monopoly when you call an older person
    from out of state. They will instinctively try to keep the call as short as possible,
    because they want to avoid the massive long distance fees historically associated
    with such calls, even though these no longer apply.</p><p>I thought this was just
    my grandmother, but it’s everyone’s grandmother. Entire generations have been
    traumatized by AT&amp;T’s monopolistic pricing.</p><h3>How cinema fell victim
    of The Cycle</h3><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*bHNECUSCagertm4i.\"
    alt=\"\"></p><p>Shortly after the invention of cinema, we had thousands of movie
    theaters around the US showing a wide variety of independently-produced films
    on all manner of topics. Anyone could produce a film, then screen it at their
    local theater.</p><p>That changed when Adolf Zukor founded Paramount Pictures.
    He pioneered the practice of “block booking.” If small independent theaters wanted
    to screen, say, the newest Mae West film, they would also need to purchase and
    screen a bunch of other lessor films.</p><p>This took away theater owners’ status
    as local tastemakers, and removed their ability to cater to their own local demographics.
    The result was the commoditization of movie theaters, and ultimately the rise
    of blockbuster cinema.</p><h3>How radio fell victim to The Cycle</h3><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*3H32YV7o0zoTOzxv.\"
    alt=\"\"></p><p>Shortly after Marconi — <a href=\"http://science.howstuffworks.com/innovation/inventions/who-invented-the-radio.htm\">or
    Tesla</a> — invented the radio, a massive hobbyist movement sprung up around it.
    There were thousands of local radio stations playing amateur programs.</p><p>In
    stepped David Sarnoff as the head of the Radio Corporation of America (RCA). He
    was perhaps the most Machiavellian CEO of the 20th century.</p><p>At the time,
    RCA was making parts for radio. Conventional thinking at the time was that RCA
    should focus on hardware, and getting as many radio stations running and as many
    radios into homes as possible. But Sarnoff realized that the real money was in
    content. He helped popularize the National Broadcast Corporation (NBC) and focused
    instead on making money through advertisements.</p><p>Then Sarnoff approached
    the Federal Radio Commission — now the Federal Communications Commission (FCC)
    — and convinced them that since the radio spectrum was a scarce commodity, they
    should carve it up and issue licenses.</p><p>Soon, NBC was available in every
    home, and the local hobbyist radio stations were squeezed off the air. RCA was
    now vertically integrated — from the parts in the radio stations, to the parts
    in consumer radios, to the content being broadcast itself.</p><p>Sarnoff had talked
    with the inventors of TV, and knew that it would eventually disrupt radio. But
    he had a plan. To claim the invention of television for himself.</p><h3>How TV
    fell victim to The Cycle</h3><p><img src=\"https://cdn-images-1.medium.com/max/3154/0*enSdNSEgwUtJoHOq.\"
    alt=\"\"></p><p>TV is different from other forms of technology here, in that it
    didn’t enjoy a hobbyist stage. With the help of the FCC, Sarnoff and RCA immediately
    locked TV down. The result was several decades where Americans had just three
    channels to choose from — NBC, CBS, and ABC.</p><p>This was the height of mass
    culture — half of all Americans watching the same episode of I Love Lucy at the
    same time. The popularity of television — combined with the lack of diversity
    in programming caused by this monopoly — had social and political consequences
    that haunt us to this day.</p><h3>Will the open internet fall victim to The Cycle?</h3><p>We’ve
    gone through the invention step. The infrastructure came out of DARPA and the
    World Wide Web itself came out of CERN.</p><p>We’ve gone through the hobbyist
    step. Everyone now knows what the internet is, and some of the amazing things
    it’s capable of.</p><p>We’ve gone through the commercialization step. Monopolies
    have emerged, refined, and scaled the internet.</p><p>But the question remains:
    can we break with the tragic history that has befallen all prior information empires?
    Can this time be different?</p><h2>Part 2: The War for Atoms</h2><p><img src=\"https://cdn-images-1.medium.com/max/2400/1*y4dWprGLwfpzXpY6TI8qPg.jpeg\"
    alt=\"“IBM Cable Ball” by David Lan. 2007. Cables.\"><em>“IBM Cable Ball” by David
    Lan. 2007. Cables.</em></p><blockquote><h1>“Any sufficiently advanced technology
    is indistinguishable from magic.” — Arthur C. Clarke’s Third Law</h1></blockquote><p>As
    much as we may think of the internet as a placeless realm of pure abstractions,
    it has a physical structure. It’s not magic. And more people are waking up to
    this reality each day.</p><p>The internet is a series of copper and fiber optic
    cables that burrow through the ground and tunnel under oceans. We call this the
    Internet Backbone. Here’s what it looks like:</p><p><img src=\"https://cdn-images-1.medium.com/max/3196/1*2qNjZy6LDCur2mTbQyAulw.png\"
    alt=\"\"></p><p>The internet is then further distributed through regional backbones.
    Here’s all the fiber that carries internet data around the United States. Red
    squares represent the junctions between “long haul” fibers.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*sue1t1USRxSQne6WvS1sYA.jpeg\"
    alt=\"Image credit: [InterTubes: A Study of the US Long-haul Fiber-opticInfrastructure](http://pages.cs.wisc.edu/~pb/tubes_final.pdf)\"><em>Image
    credit: <a href=\"http://pages.cs.wisc.edu/%7Epb/tubes_final.pdf\">InterTubes:
    A Study of the US Long-haul Fiber-opticInfrastructure</a></em></p><h3>The invisible
    workhorses of the internet: backbone providers</h3><p>Six major companies control
    the backbone, and they “hand off” traffic from one another without any money exchanging
    hands:</p><ul><li><p>Level 3 Communications</p></li><li><p>Telia Carrier</p></li><li><p>NTT</p></li><li><p>Cogent</p></li><li><p>GTT</p></li><li><p>Tata
    Communications.</p></li></ul><p>Within the US, the backbone is mostly controlled
    by old long distance carriers, including Verizon and AT&amp;T — who also control
    a two thirds of America’s $200 billion wireless industry.</p><p>These companies
    “peer” traffic through backbone connections controlled by other companies, or
    pay each other through “transit agreements.”</p><p>Despite the involvement of
    these huge telecoms, the internet backbone represents a fairly healthy market.
    <a href=\"http://www.stern.nyu.edu/networks/Economides_ECONOMICS_OF_THE_INTERNET_BACKBONE.pdf\">About
    40%</a> of the internet’s backbone is controlled by smaller networks you’ve never
    heard of.</p><h3>The mafia of the internet: the ISPs</h3><p>The broadband internet
    market, on the other hand, isn’t healthy at all. This is the “last mile” of cables
    that plug into the internet backbone. And it’s full of ugly tollbooths, guarded
    by thick benches of lawyers and lobbyists.</p><p>This broadband internet market
    is controlled by just three extremely powerful — and widely hated — internet service
    providers (ISPs):</p><ul><li><p>Cox</p></li><li><p>Charter (which recently acquired
    another ISP, Time Warner)</p></li><li><p>and <a href=\"http://finance.yahoo.com/news/america-most-hated-companies-110032495.html\">the
    most hated corporation in America</a>, Comcast, which <a href=\"https://arstechnica.com/business/2015/01/comcast-now-has-more-than-half-of-all-us-broadband-customers/\">controls
    56%</a> of America’s broadband</p></li></ul><p>Another form of ISPs are the wireless
    providers:</p><ul><li><p>AT&amp;T</p></li><li><p>Verizon (formerly part of AT&amp;T)</p></li></ul><p>These
    two providers control 2/3rd of the wireless market. If you have a mobile phone,
    there’s a good chance you pay one of these companies every month for your data
    plan.</p><p>These ISPs control millions of miles of copper cables that they buried
    in the ground back in the 1970s, and satellites they shot up into orbit in the
    1990s. They constantly <a href=\"http://www.theverge.com/2014/10/29/7090107/comcast-settles-lawsuit-will-pay-50-million-settlement\">break</a>
    <a href=\"http://money.cnn.com/2016/10/11/news/companies/comcast-fine-fcc/\">the</a>
    <a href=\"http://www.fiercecable.com/cable/cox-ordered-to-pay-6-31m-for-tying-set-top-fees-to-premium-video-services\">law</a>,
    tie up regulators in lengthy court battles, and make it practically impossible
    for anyone — even Google — to enter their markets.</p><p>The ISPs do all this
    for one reason and one reason alone: so they can avoid free market competition
    — and the expensive technology upgrades it would require — while they continue
    raking in their <a href=\"https://en.wikipedia.org/wiki/Economic_rent\">monopoly
    rents</a> from the 2/3 of Americans who only have one choice in their neighborhood
    for broadband internet.</p><p>For the past two years, the public had a weapon
    against these ISPs. It’s not one that can mortally wound them , but it has helped
    beat back their monopolistic tendencies. It’s called Net Neutrality.</p><h3>How
    Net Neutrality works</h3><p>The story of ISPs basically comes down to this: They
    used to make a ton of money off of cable packages. But people discovered that
    once they had the internet, they didn’t care about cable TV any more — they just
    wanted data plans and so they could watch YouTube, Netflix, or whatever shows
    they wanted — and they could also consume a lot of non-video content, too.</p><p>The
    ISPs don’t make nearly as much selling you a data plan as they used to make selling
    you a cable plan, though. So their goal is to return to the “good old days” by
    locking down the internet into “channels” and “bundles” then forcing you to buy
    those.</p><p>How do we prevent this? The good news is that we already have. In
    2015, the FCC passed a law that regulated ISPs as utilities. This is based on
    the principle of “Net Neutrality” which basically states that all information
    passing through a network should be treated equally.</p><p>As part of its 2015
    decision on Net Neutrality, the FCC asked for public comment on this topic. 3
    million Americans wrote to the FCC. <a href=\"https://techcrunch.com/2014/09/02/less-than-1-of-comments-sent-to-the-fcc-opposed-net-neutrality/\">Less
    than 1% of those people</a> were opposed to Net Neutrality.</p><p>After a hard
    fought battle against telecoms, we convinced the FCC to enshrine Net Neutrality
    into law.</p><p>The FCC’s Title II regulation created three “bright lines” that
    prevent ISPs from doing the following:</p><ol><li><p>Blocking content from websites</p></li><li><p>Slowing
    down content from websites</p></li><li><p>Accepting money from websites to speed
    up their content</p></li></ol><p>These rules made it so that no matter how rich
    and powerful a corporation is — and Apple and Google are the biggest corporations
    on Earth, and Microsoft and Facebook aren’t far behind — they can’t buy priority
    access to the internet.</p><p>Everyone has to compete on a level playing field.
    These tech conglomerates have to compete with the scrappy startups, the mom-and-pop
    businesses, and even independent bloggers who are running WordPress on their own
    domain.</p><p>Nobody is above Net Neutrality. It’s as simple a tool as possible
    for protecting the capitalist free market internet from monopolies who would otherwise
    abuse their power.</p><p>Now ISPs are treated like a utility. How are the packets
    being routed through a network different from the water being piped through the
    ground, or the electricity flowing through a power grid?</p><p>The water company
    shouldn’t care whether you’re turning on a tap to wash dishes or to take a shower.</p><p>The
    power company shouldn’t care whether you’re plugging in a TV or a toaster.</p><p>The
    ISPs shouldn’t care what data you want or what you use it for.</p><p>The reason
    ISPs want to get rid of Net Neutrality is simple: if we stop treating them like
    the utility that they are, they can find ways to charge a lot more money.</p><p>Here’s
    the former CEO of AT&amp;T laying out his evil plan:</p><blockquote><h1>“Now what
    they would like to do is use my pipes free, but I ain’t going to let them do that
    because we have spent this capital and we have to have a return on it. So there’s
    going to have to be some mechanism for these people who use these pipes to pay
    for the portion they’re using. Why should they be allowed to use my pipes? The
    Internet can’t be free in that sense, because we and the cable companies have
    made an investment and for a Google or Yahoo! or Vonage or anybody to expect to
    use these pipes [for] free is nuts!” — Edward Whitacre, AT&amp;T CEO</h1></blockquote><p>What
    he should certainly realize is that everyone is already paying for internet access.
    You’re paying to be able to access this article. I’m paying to push this article
    up onto the internet. This website is paying to send the traffic from its servers
    over to your computer.</p><p>We have all already paid to use these ISP’s last
    mile of cables. No one is using these pipes for free.</p><p>But the ISPs see an
    opportunity to double dip. They want to charge for bandwidth, and also charge
    websites what the Mafia calls “protection money.” They essentially want to be
    able to say to website owners: “Those are some lovely data packets you’ve got
    there. It sure would be a shame if they got lost on their way to your users.”</p><p>Of
    course, most of the open internet couldn’t afford to pay this “protection money”
    to ISPs, so the ISPs would block traffic to their websites, cutting consumers
    off from most of the open internet. But the ISPs wouldn’t need to block these
    websites. All the ISPs would need to do is introduce a slight latency.</p><p>Both
    Google and Microsoft have done research that shows that if you slow down a website
    by even 250 milliseconds — about how long it takes to blink your eyes — most people
    will abandon that website.</p><p>That’s right — speed isn’t a feature, it’s a
    basic prerequisite for attracting an audience. We humans are extremely impatient
    and becoming more so with each passing year.</p><p>This means that in practice,
    <strong>if an ISP artificially slows down a website, it’s practically as damaging
    as blocking the site entirely.</strong> Both of these acts result in the same
    outcome — a severe loss of traffic.</p><p>Traffic is the lifeblood of websites.
    Without traffic, merchandise doesn’t get sold. Services don’t get subscribed to.
    Donations don’t get made.</p><p>Without traffic, the open web dies — whether ISPs
    block it or not.</p><h3>The ISPs have launched an all-out assault on Net Neutrality</h3><p>With
    January’s change in US administration and the election of our 45th president,
    the FCC has changed as well.</p><p>The FCC Chairman Ajit Pai — a former Verizon
    lawyer — is now in control of the only regulator that the ISPs answer to. And
    here’s a direct quote from him:</p><blockquote><h1>“We need to fire up the weed
    whacker and remove those rules that are holding back investment, innovation and
    job creation.” — FCC Chairman Ajit Pai</h1></blockquote><p>The ISPs won’t reinvest
    their “protection money” in infrastructure. They already have incredible monopoly
    profits. Here’s their net income (after-tax profits) from 2016:</p><ul><li><p>AT&amp;T:
    $16 billion</p></li><li><p>Verizon: $13 billion</p></li><li><p>Comcast $8 billion</p></li><li><p>Charter
    $8 billion</p></li></ul><p>They have plenty of profit they could claw back into
    improving infrastructure. They’re choosing instead to disperse this money to shareholders.</p><p>In
    just two months, Chairman Pai has already done incredible damage to Net Neutrality.
    He dropped <a href=\"https://en.wikipedia.org/wiki/Zero-rating\">Zero Rating</a>
    lawsuits against four monopolies who were in clear violation of Net Neutrality
    law. Now Comcast and AT&amp;T can continue to stream their own video services
    without them counting toward customers’ data caps, and there’s nothing the FCC
    will do about it.</p><p>Former FCC Chairman Tom Wheeler did his best to reach
    out to Chairman Pai and convince him of the virtues of Net Neutrality. The two
    were scheduled to meet once every two weeks during Wheeler’s last 18 months in
    office. But Pai cancelled every single one of these meetings.</p><blockquote><h1>“You
    have to have open networks — permissionless innovation. Period. End of discussion.
    They’re crucial to the future.” — Former FCC Chairman Tom Wheeler</h1></blockquote><h2>Part
    3: The War for Bits</h2><p><img src=\"https://cdn-images-1.medium.com/max/2560/1*e7mEeEYDuKXow0kiVbRGYw.jpeg\"
    alt=\"“Sweet as One” by Craig and Karl. 2016. Candy.\"><em>“Sweet as One” by Craig
    and Karl. 2016. Candy.</em></p><p>What does a post Net Neutrality internet look
    like? Look no further than the Apple App store.</p><p>There are two million apps
    in the app store, which shared a total of $28 billion in 2016. Apple takes a 30%
    commission on every sale, and made $8.4 billion from the app store alone.</p><p>Most
    of the remaining $20 billion goes to just a small handful of mobile gaming companies:</p><p><img
    src=\"https://cdn-images-1.medium.com/max/3082/1*oPJzQBAc3TBR5tEeIT0qew.jpeg\"
    alt=\"\"></p><p>Most iPhone users download zero apps per month.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*-nYSgZMW76IfAnJ7YT6Hog.png\"
    alt=\"\"></p><p>The minority who do bother to download new apps don’t end up downloading
    very many.</p><p>And all 8 of the top apps in the app store are <a href=\"https://medium.freecodecamp.com/all-of-2016s-top-mobile-apps-are-owned-by-either-google-or-facebook-a9c56d77a74b\">owned
    by just two corporations</a>: Facebook and Google.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*z8oy_wsJPrdk1PRD.\"
    alt=\"\"></p><p>A vast majority of the remaining 2 million apps get very little
    traffic — and even less money.</p><p>The Apple App Store isn’t a level playing
    field. It doesn’t resemble the open internet it was built on top of. Instead,
    it’s an example of a walled garden.</p><p>Walled gardens look beautiful. They’re
    home to the most popular flora. But make no mistake, you won’t be able to venture
    very far in any one direction without encountering a wall.</p><p>And every walled
    garden has a gatekeeper, who uproots plants that look like weeds. If you want
    to plant something in a walled garden, you have to get approval from that gatekeeper.
    And Apple is one of the most aggressive gatekeepers of all. It keeps out <a href=\"http://www.recode.net/2016/6/30/12067578/spotify-apple-app-store-rejection\">apps
    that compete with its own interests</a>, and <a href=\"https://www.nytimes.com/2017/01/18/technology/clearing-out-the-app-stores-government-censorship-made-easier.html\">censors
    apps that don’t mesh with its corporate worldview</a>.</p><h3>A brief history
    of walled gardens</h3><p>First there was the original walled garden of the internet,
    AOL.</p><p><img src=\"https://cdn-images-1.medium.com/max/3200/0*ZigvOTQyCrOX3S3j.\"
    alt=\"\"></p><p>20 years later, AOL still has 2 million users paying them $20/month.
    There’s a lot of money to be made in building walled gardens and trapping users
    in them.</p><p>Then came Yahoo, which wasn’t a walled garden by design, but became
    one anyway because people were so new to the internet.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*SNypPuPL9TuPK1wU.\"
    alt=\"\"></p><p>In the late 90s, startups raised money specifically so they could
    <a href=\"http://www.paulgraham.com/yahoo.html\">buy banner ads on Yahoo</a>.
    It was the best way they could reach prospective users.</p><p>But Yahoo was a
    candle in the sun compared to the ultimate walled garden: Facebook.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/0*r1hvO-OxGfgwBRHM.\" alt=\"\"></p><p>A
    quarter of the people on Earth use Facebook for an average of 50 minutes each
    day.</p><p>And those 50 million people connected to Internet.org that Mark Zuckerberg
    is bragging about? Those are people from extremely poor countries who were given
    a choice: they could either pay for the open internet or just get Facebook for
    free. They chose Facebook.</p><p>The insidiously-named Internet.org was famously
    <a href=\"https://www.theguardian.com/technology/2016/feb/08/india-facebook-free-basics-net-neutrality-row\">rejected
    in India</a> — among other countries — where activists were able to raise awareness
    about all the things Indians would give up by accepting Facebook instead of the
    open internet.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*tFRxnmAck6Z1x0ua.\"
    alt=\"The zero in internet.org un-ironically stands for Zero Rating, an anti-Net
    Neutrality practice that’s illegal in most western countries.\"><em>The zero in
    internet.org un-ironically stands for Zero Rating, an anti-Net Neutrality practice
    that’s illegal in most western countries.</em></p><p>Mark Zuckerberg may mean
    well, but he’s rapidly <a href=\"https://medium.freecodecamp.com/mark-zuckerberg-is-the-most-powerful-person-on-earth-but-is-he-responsible-5fbcaeb29ee1#.ka7h70619\">destroying
    the open internet</a>. In his ravenous quest to expand Facebook’s market share,
    he’s even gone so far as to build a <a href=\"https://www.nytimes.com/2016/11/22/technology/facebook-censorship-tool-china.html\">sophisticated
    censorship tool</a> so that Facebook can appease the governments of countries
    where it’s currently blocked, like China.</p><p>And Facebook is just one of several
    internet corporations who stand to profit from these sort of closed-source, closed-data
    walled garden platforms.</p><p>Here are the 10 largest corporations in the world
    by <a href=\"https://en.wikipedia.org/wiki/Market_capitalization\">market capitalization</a>:</p><ol><li><p>Apple
    Inc</p></li><li><p>Alphabet (Google)</p></li><li><p>Microsoft</p></li><li><p>Exxon
    Mobil</p></li><li><p>Johnson &amp; Johnson</p></li><li><p>General Electric</p></li><li><p>Amazon.com</p></li><li><p>Facebook</p></li><li><p>Wells
    Fargo</p></li><li><p>AT&amp;T</p></li></ol><p>All of them are American-based multinationals.
    5 out of 10 of them are internet companies, and one of them is an ISP.</p><p>Once
    you look past the last gasp of the banks and the oil companies, it becomes clear
    that these internet companies are the new order. They control information. They
    control the conversation. They control politics. <a href=\"https://www.wired.com/2016/11/facebook-won-trump-election-not-just-fake-news/\">Facebook
    won the new president the election</a> — <a href=\"http://www.theverge.com/2016/11/13/13619148/trump-facebook-twitter-helped-win\">even
    the president and his advisors acknowledge this</a>.</p><p>So what makes you think
    they won’t come to control the very internet they dominate?</p><p>Even as the
    costs of launching a website fall, the costs of reaching an audience continue
    to rise.</p><p><strong>Facebook and Google account for <a href=\"https://www.nytimes.com/2016/04/18/business/media-websites-battle-falteringad-revenue-and-traffic.html\">85%
    of all new dollars spent on online advertising</a></strong>. Everyone else — newspapers,
    blogs, video networks — is fighting for crumbs — the 15% that fell from Facebook’s
    and Google’s mouths.</p><p><a href=\"https://www.wired.com/2014/06/net_neutrality_missing/\">**Half
    of all internet traffic</a> now flows to just 30 websites. **The remaining half
    is thinly spread across the 60 trillion unique webpages currently indexed by Google.</p><p>If
    you’re familiar with the concept of <a href=\"http://amzn.to/2m5Y64H\">a long
    tail distribution</a>, you’ll recognize this phenomenon as an extremely fat head
    with an extremely long, skinny tail.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*T88g4Pd1PzKZ8t_I.\"
    alt=\"\"></p><h3>We blindly trust tech founders to be benevolent</h3><p>You may
    think that the Mark Zuckerbergs and the Larry Pages of the world would know better
    than to abuse their power. But such scandals have happened in the past.</p><p>Reddit
    is one of the most popular websites on the internet. One of its founders recently
    put the company’s reputation in jeopardy. He admitted that he had <a href=\"http://www.independent.co.uk/life-style/gadgets-and-tech/news/reddit-donald-trump-steve-huffman-spez-pizzagate-trolls-hillary-clinton-a7436406.html\">modified
    users’ comments in Reddit’s database</a> — essentially putting words in the mouths
    of people who were critical of him.</p><p>We are not only placing faith in the
    temperament of the elite handful of tech company founders. We’re also trusting
    that other actors — who ultimately take over these organizations — will be benevolent.
    Even when we know that their shareholders — or governments — can force them to
    be malevolent and do things that go against their users’ interests.</p><p>However
    you may feel about Mark Zuckerberg and his intentions, know this: Just like the
    “benevolent monopolist” Theodore Vail, who championed rural access to AT&amp;T
    in the early 20th century, Mark Zuckerberg will one day retire. And the person
    who takes over Facebook will not be nearly as forward thinking as he is. Most
    likely, it will be some finance guy or sales guy who will sell Facebook users
    — and their Exabytes of data — down the river.</p><h3>By destroying Net Neutrality,
    the ISP monopolies are herding us all into walled gardens</h3><p>If we lose net
    neutrality, websites that once freely operated on the open internet will face
    three choices:</p><ol><li><p>pay ISPs so that their customers can access their
    website</p></li><li><p>don’t pay ISPs, and plummet into obscurity</p></li><li><p>become
    part of a walled garden that is paying ISPs on their behalf</p></li></ol><p>This
    last option will be the most appealing for most small businesses. They will choose
    the free option. And in doing so, they’ll hand over to the walled gardens some
    amount of control over their own websites.</p><p>A Google or a Facebook will step
    in to help ensure that your customers are able to access your business’s website.
    These walled gardens will pay ISPs on your behalf, and help serve your content
    on their own domains. But in return, the walled garden could:</p><ul><li><p>inject
    ads into your website (probably ads for your competitors)</p></li><li><p>capture
    your data and sell it (probably to your competitors)</p></li><li><p>redirect your
    customers to the websites of competitors who are willing to pay for your audience</p></li></ul><p>Just
    like with Google ads or Facebook ads, the internet will become a race to see who
    can pay walled gardens the most money so they can gain access to customers. And
    most of this will be completely invisible to consumers.</p><p>There are precedents
    for all of this.</p><p>Facebook convinced millions of businesses to setup Facebook
    pages. The companies then spent their own money publicizing their Facebook pages
    and getting their customers to “like” their pages. Then Facebook pulled a bait-and-switch,
    and made it so these businesses would have to advertise through Facebook if they
    wanted to reach their own customers who’d previously liked their pages.</p><p>And
    here’s what happens when a small nonprofit like <a href=\"https://www.freecodecamp.com\">freeCodeCamp</a>
    refuses to pay for Google ads:</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*I0Tn_NPPShIHduZhbqgE2A.png\"
    alt=\"\"></p><p>Companies with lots of money like this one — which is a subsidiary
    of Kaplan, one of the largest for-profit education conglomerates on earth — can
    pay money to Google so they can intercept our users.</p><p>And these ads will
    gradually look less and less like ads. Here’s how Google ads have changed over
    time to look more and more like normal search results:</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*L16W9sX0YMGZ3DBXBbQFwg.png\"
    alt=\"[Image credit](http://searchengineland.com/search-ad-labeling-history-google-bing-254332)\"><em><a
    href=\"http://searchengineland.com/search-ad-labeling-history-google-bing-254332\">Image
    credit</a></em></p><p>Now that tiny, green-bordered box with the word “ad” in
    it is all that distinguishes an advertisement from a legitimate search result.
    It is perhaps unsurprising that 55% of Google users <a href=\"https://searchenginewatch.com/2016/08/11/55-dont-recognise-paid-ads-in-google-serps-stats/\">don’t
    even recognize the fact that these are ads</a>.</p><p>Eventually walled gardens
    may converge on something similar to Baidu, China’s largest search engine, which
    for a long time wasn’t labelling ads at all.</p><p>Baidu <a href=\"https://www.nytimes.com/2016/05/04/world/asia/china-baidu-investigation-student-cancer.html\">got
    into trouble last year</a> after a college student used their search engine to
    seek treatment for a commonly treatable form of cancer. The student went to a
    hospital he found at the top of Baidu’s search results.</p><p>What the student
    didn’t know was that that hospital had paid Baidu money to be put at the top of
    the search results, and that this was in fact an advertisement. But Baidu had
    deliberately obscured this fact from their users so they could charge more for
    the ad.</p><p>The hospital proceeded to recommend an expensive and unproven drug
    instead of the standard — and far cheaper — treatment of surgery and chemotherapy.</p><p>After
    exhausting his family’s savings of $30,o00 on the ineffective treatment, the 21-year-old
    student wrote one final essay about his situation and how Baidu had lead him right
    into the hands of fraudsters. Then he died.</p><p>This is just a glimpse into
    the human toll that these walled gardens can inflict upon society. In a walled
    garden environment where only those who pay money get seen, consumers will face
    more misinformation, more fraud, and more needless suffering.</p><p>Instead of
    the equalizing force that was the open internet, the rich will get richer and
    the poor will get poorer. The internet’s promise of economic democratization will
    fall by the wayside, and we’ll enter yet another age of peasants living under
    feudal lords.</p><h3>In the future, our internet could become as locked-down as
    China’s</h3><p>China has the most sophisticated censorship tools in the world.
    So much so that other authoritarian regimes license the use of these tools to
    control their own populations.</p><p>1.4 billion Chinese people are trapped in
    a closed internet, behind the <a href=\"https://en.wikipedia.org/wiki/Internet_censorship_in_China\">Great
    Firewall of China</a>.</p><p>The anti-Net Neutrality agenda that the ISPs are
    pursuing would require them to use a technique called Deep Packet Inspection.
    Without looking inside the contents of every packet, it’s impossible for an ISP
    to decide which packets they want to selectively slow down.</p><p>This means that
    in addition to sending packets of data through their networks, ISPs would actually
    have to look inside each of these packets — and would quite likely record the
    contents of these packets. It would be expensive, but storing major chunks of
    the Zettabyte of information the internet generates each year is within the budgets
    of large corporations and governments.</p><p>There’s a precedent for this, too.
    <a href=\"https://www.nytimes.com/2015/08/16/us/politics/att-helped-nsa-spy-on-an-array-of-internet-traffic.html\">AT&amp;T
    illegally monitored all of its traffic for years</a>.</p><p>Monitoring internet
    traffic at this level of detail would make pervasive censorship possible. This
    is one of the techniques China uses to re-write its history. And it works. Despite
    the advances in information technology, to this day many Chinese still <a href=\"http://www.cnn.com/2013/09/15/world/asia/tiananmen-square-fast-facts/\">don’t
    know that the Tiananmen Massacre happened</a>. And when they do learn of it, it’s
    ancient history — sapped of most of its perceived relevance.</p><blockquote><h1>“Ideas
    are more powerful than guns. We would not let our enemies have guns, why should
    we let them have ideas.” — Joseph Stalin</h1></blockquote><p>If the ISPs succeed
    and the open internet falls, corporations and governments would have a mandate
    to censor the most powerful communication tool in human history — the internet
    — in its entirety.</p><h2>Part 4: Who controls the information? Who controls the
    future?</h2><p><img src=\"https://cdn-images-1.medium.com/max/4096/1*Ed7kKG0Xa17iJrWQDtiVdQ.jpeg\"
    alt=\"“Ascension” by Nathan Sawaya. 2014. Legos.\"><em>“Ascension” by Nathan Sawaya.
    2014. Legos.</em></p><p>Whether these corporations are aggregating power through
    regulatory capture or by amassing exabytes of your data, they are steadily becoming
    more powerful. They are using their growing cashflow to buy up competitors.</p><p>This
    isn’t capitalism — it’s <a href=\"https://en.wikipedia.org/wiki/Corporatism#Fascist_corporatism\">corporatism</a>.
    Capitalism is messy. It’s wasteful. But it’s much healthier in the long run for
    society than central planning and governments trying to pick the winners.</p><p>Capitalism
    allows for small businesses to enter the arena and actually stand a chance. Corporatism
    makes that unlikely.</p><p>If you’ve read this far, I hope you understand the
    gravity of this situation. This is not speculative. This is really happening.
    There are historical precedents. There are present-day examples.</p><p>If you
    do nothing, we will lose the war for the open internet. The greatest tool for
    communication and creativity in human history will fall into the hands of a few
    powerful corporations and governments.</p><p>Without your actions, corporations
    will continue to lock down the internet in ways that benefit them — not the public.</p><p>The
    good news is that our great grandparents reined in similar monopolies. At the
    beginning of the 20th century, Americans faced abusive oil, railroad, and meat
    industry monopolies. We prevailed over them by raising awareness through brave
    journalism, and by compelling the government to act.</p><p>Today, our most urgent
    task at hand is stopping FCC Chairman Ajit Pai from disassembling Net Neutrality.</p><p>Help
    us fight this war. Here’s what I’m asking you to do:</p><ol><li><p>If you can
    afford to, donate to nonprofits who are fighting for the open internet: <a href=\"http://act.freepress.net/sign/internet_NN_pai/?source=frontslider\">Free
    Press</a>, the <a href=\"https://www.aclu.org/feature/what-net-neutrality\">ACLU</a>,
    the <a href=\"https://www.eff.org/issues/net-neutrality\">Electronic Frontier
    Foundation</a>, and <a href=\"https://medium.freecodecamp.com/inside-the-invisible-war-for-the-open-internet-dd31a29a3f08#.j6dqute5o\">Public
    Knowledge</a>.</p></li><li><p>Educate yourself about the importance of the open
    internet. Read Tim Wu’s “<a href=\"http://amzn.to/2cjtFDH\">The Master Switch:
    The Rise and Fall of Information Empires</a>.” It is by far the best book on this
    topic.</p></li><li><p><a href=\"http://www.whoismyrepresentative.com/\">Contact
    your representatives</a> and ask them what they’re doing to defend Net Neutrality.</p></li><li><p>Share
    this article with your friends and family. I realize the irony of asking you to
    use walled gardens to spread the word, but this late in the game, these are the
    best tools available. <a href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A//medium.freecodecamp.com/inside-the-invisible-war-for-the-open-internet-dd31a29a3f08\">Share
    this article on Facebook</a> or <a href=\"https://twitter.com/intent/tweet?text=The%20future%20of%20the%20open%20internet%20is%20in%20your%20hands.%20https://medium.freecodecamp.com/inside-the-invisible-war-for-the-open-internet-dd31a29a3f08\">tweet
    this article</a>.</p></li></ol><p>Only we, the public, can end The Cycle of closed
    systems. Only we can save the open internet.</p><p>Thank you for reading this,
    and for caring about the fate of our open internet.</p><p><strong>I only write
    about programming and technology. If you <a href=\"https://twitter.com/ossia\">follow
    me on Twitter</a> I won’t waste your time. \U0001F44D</strong></p>"
  :author: freeCodeCamp.org
  :topic: future
- :url: https://medium.com/i-human/9-terrifying-technologies-that-will-shape-your-future-befa688d247?source=search_post
  :title: 9 Terrifying Technologies That Will Shape Your Future
  :content: '<p>In the following decades, we will witness the emergence of new incredible
    and terrifying technologies. How scared should we really be?</p><p><img src="https://cdn-images-1.medium.com/max/12000/0*IpADOf3NrK-RdCF0"
    alt="Photo by [Douglas Sanchez](https://unsplash.com/@updoug?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@updoug?utm_source=medium&utm_medium=referral">Douglas
    Sanchez</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>Since
    the first Industrial Revolution, mankind has been scared of future technologies.
    <a href="https://blogs.wsj.com/tech-europe/2011/07/11/women-and-children-first-technology-and-moral-panic/?re">People
    were afraid of electricity.</a> <a href="https://www.mentalfloss.com/article/67806/early-trains-were-thought-make-womens-uteruses-fly-out">People
    were afraid of trains and cars.</a> But it always took just one or two generations
    to get completely used to these innovations.</p><p>It’s true that most technologies
    caused harm in some ways, but the net outcome was usually good. This may be true
    for future technologies too, although there are serious ethical and philosophical
    reasons to be scared of some of them.</p><p>Some of them shouldn&#39;t really
    scare us. Some of them should. And some of them are already shaping our world.</p><p>Before
    we begin, I have to warn you: some of the things you will read in this story can
    be VERY controversial. I need you to approach this story with a very open mind,
    and acknowledge that the ideas I present here are just that, ideas.</p><p>I hold
    no extreme or fixed views, nor do I claim to have the exact answers to ethical
    and philosophical questions. You may have completely different ideas, and that’s
    totally fine.</p><h2>1. Cryonics</h2><p><img src="https://cdn-images-1.medium.com/max/10368/0*zHTRxqAzdhi6PG8z"
    alt="Photo by [Ann Danilina](https://unsplash.com/@annhwa?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@annhwa?utm_source=medium&utm_medium=referral">Ann
    Danilina</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>Cryonics
    may seem very sci-fi (to be fair, everything in this story does), but it already
    exists. There are companies that freeze you as soon as you die, so you can be
    brought back to life when technology and medicine will be advanced enough.</p><p>Seriously,
    companies like <a href="https://alcor.org/">this</a> (I’m NOT affiliated to them).
    You can buy your immortality now if you want.</p><p><a href="http://blog.traceable.com/cryogenically-frozen-5-who-did-and-5-who-want-to">Here</a>’s
    a list of some celebrities that got frozen (James Bedford, Ted Williams, John
    Henry Williams, Dick Clair Jones, FM-2030), and some that are currently alive
    and want to be frozen (Seth McFarlane, Larry King, Simon Cowell, Paris Hilton,
    Britney Spears).</p><p>It’s unclear when and whether these people will be unfrozen.
    The technology to freeze people is not perfect yet, and there can be irreversible
    damages that will never be fixed, but it’s improving every year. On the other
    hand, the technology to unfreeze people doesn’t exist yet.</p><h3>Why Does It
    Scare Us</h3><p>People who have chosen to freeze themselves carry a social stigma.
    Nowadays, the idea of freezing our dead bodies seems very Frankenstein-y to most
    people.</p><p>People that choose to freeze themselves are often seen as deluded
    and cowards. They won’t accept death. They want to cheat on the fact that God,
    or nature, or the universe, wanted them dead.</p><h3>Should We Be Scared?</h3><p>Not
    really.</p><p>Do you know what else cheats death? CPR. The letter R literally
    stands for <em>Resuscitation</em>.</p><p>Do you know who else deludes themselves
    because they won’t accept death? Come on, answer it yourself. I don’t want to
    offend anyone.</p><p>Short answer: no, we should not be scared. At least not for
    the reasons mentioned above.</p><p>I think we should do anything possible to avoid
    death, period. Unless you are in a persistent vegetative state and have very good
    reasons to prefer death over useless suffering (even then, I would argue that
    future technologies could fix your condition), there is no reason why we should
    accept death. Life is fucking beautiful, I don’t want it to end.</p><p>Once you
    are already dead, what else do you have to lose? Maybe cryonics won’t work. Maybe
    people who are currently frozen have been irreversibly damaged. But they made
    a no-lose bet. They could either choose to die for sure, or give themselves a
    small chance to survive. What do you think is the obvious choice?</p><p>There
    is a serious problem, though. Hibernation is not cheap. When cryonics will become
    socially acceptable, more and more rich people will freeze themselves. Then it
    will be the turn of the middle class. And what about low-income people?</p><p>We
    are used to saying that, once we are dead, we are all the same, rich and poor.
    In the near future, this may not be true anymore, because only poor people will
    die.</p><p>Nowadays, death is normal. Many of us have experienced the loss of
    a loved one, but we knew that they had to go eventually. But what will happen
    when death will not be normal anymore? When it will be avoidable? The suffering
    will be much greater, and the idea that we will have a class of immortals and
    a class of mortals is seriously fucked up.</p><h2>2. Personal Decision-Makers</h2><p><img
    src="https://cdn-images-1.medium.com/max/15904/0*7Ci7pHBv0U3Pud_S" alt="Photo
    by [Victoriano Izquierdo](https://unsplash.com/@victoriano?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@victoriano?utm_source=medium&utm_medium=referral">Victoriano
    Izquierdo</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>Do
    you ever sit in your room, pondering a decision for hours? Do you ever regret
    decisions? Do you ever make a good decision but you don’t enjoy it because you
    think of what you have lost by not choosing the alternatives?</p><p>I know I do,
    all the time. But that will end soon.</p><p><a href="https://safety.google/privacy/privacy-controls/">Google</a>
    and <a href="https://www.facebook.com/your_information">Facebook</a> know you
    more than you know yourself. If optimal decisions are those that act in your best
    interest, isn’t it obvious to think that these companies will one day make decisions
    for you?</p><p>You won’t need to make decisions anymore: AI will make every decision
    for you, like which job to take, which person to date, what to eat for lunch.</p><h3>Why
    Does It Scare Us</h3><p>Having to make decisions may be difficult and frustrating,
    but it’s what makes us feel in control. It’s that thing that gives us whatever
    we call “free will”.</p><p>Society isn’t ready yet to stop believing in the existence
    of free will, although this is slowly changing. But even for those of us who don’t
    believe in free will, losing the ability to make decisions with our brains could
    be very demeaning. Especially if big corporations are those in control of decision-making
    algorithms.</p><h3>Should We Be Scared?</h3><p>Not really.</p><p>I predict that
    we will learn to surrender our decision-making ability very soon. We are already
    doing it. We don’t decide which series to watch, Netflix does. We don&#39;t decide
    which music to listen to, Spotify does. We don’t decide which book to read, Amazon
    does.</p><p>They make you feel in control of your decisions, because ultimately
    you are the one who clicks on the <em>play</em> button of the first episode of
    <em>Stranger Things</em>. But how could I know that you actually watched that
    series, if it was really <em>your</em> decision?</p><p>We don’t realize it, but
    corporations already drive our decision-making process with <em>recommender systems</em>.
    Yet we are often satisfied, because it works. AI is better than us at deciding
    what we like. Not making a decision directly doesn’t deprive us of the satisfaction
    that it brings us. If anything, we will enjoy it more, because we can’t regret
    decisions we never made.</p><p>We (probably) can live a happy and fulfilled one
    even if we are not in control. The need for control is an illusion and a cultural
    thing. Society evolves fast with technology, and the concept of free will won’t
    be relevant in the future.</p><p>If we have to be scared of something, it’s that
    someone can take advantage of this. Hackers and corporations themselves can manipulate
    our decisions for their own ends and we wouldn’t even know it.</p><p>If you think
    that you will retain your sense of control and will recognize when someone is
    trying to manipulate your decisions, think again. <a href="https://en.wikipedia.org/wiki/Facebook%E2%80%93Cambridge_Analytica_data_scandal">It
    has already happened</a>, with the recent Cambridge Analytica scandal. Data has
    been used to manipulate voters with personalized ads.</p><p>But still, people
    have manipulated people since the dawn of time. This problem would exist anyway,
    even without AI decision-makers.</p><h2>3. Artist AI</h2><p><img src="https://cdn-images-1.medium.com/max/2000/0*F_xdolkuuwIfSndC"
    alt="Photo by christies.com"><em>Photo by christies.com</em></p><p>In 2018, this
    painting <a href="https://www.christies.com/features/A-collaboration-between-two-artists-one-human-one-a-machine-9332-1.aspx">has
    been sold at an auction</a> for $432,500. The artist is a <a href="https://en.wikipedia.org/wiki/Generative_adversarial_network">Generative
    Adversarial Network</a> (GAN), a type of “creative AI”.</p><p>I personally think
    that the painting kind of sucks, but GANs have been used to <a href="https://magenta.tensorflow.org/gansynth">create
    music</a>, <a href="https://qz.com/1230470/the-hottest-trend-in-ai-is-perfect-for-creating-fake-media/">write
    fake news</a>, and <a href="https://thispersondoesnotexist.com/">generate fake
    people</a>.</p><p>It won’t be long before AI will be used to create art better
    than humans. While most people claim that art should only be a human thing, because
    machines lack a “soul” or a “personality”, in some cases they can’t tell whether
    a piece of art has been created by a human or a machine. In other words, GANs
    have passed the art <a href="https://en.wikipedia.org/wiki/Turing_test">Turing
    Test</a>.</p><h3>Why Does It Scare Us</h3><p>We are now used to see AI getting
    better than us at everything. AI is better than us at <a href="https://www.newscientist.com/article/2228752-ai-system-is-better-than-human-doctors-at-predicting-breast-cancer/">detecting
    cancer</a>. AI is better than us at <a href="https://www.theguardian.com/technology/2017/dec/07/alphazero-google-deepmind-ai-beats-champion-program-teaching-itself-to-play-four-hours">playing
    chess and Go</a>.</p><p>But come on, art? AI, will you give us a break?</p><p>We
    can’t still accept the fact that AI can be a better artist than us. Art is something
    inherently human, right? It is emotional, passionate, profound, it’s not logical
    and mathematical, right? It can’t be done by calculating derivatives or using
    Bayes’ theorem, right?</p><p>If there was one thing in which we could be better
    than AI, it was art. If even art is done better by AI, what value do we humans
    have to offer?</p><h3>Should We Be Scared?</h3><p>Maybe a little.</p><p>It depends
    on how it plays out.</p><p>On one side, people will enjoy more and better art.
    They will be used to AI being good at making art and they will benefit from it.</p><p>On
    the other side, human artists won’t be able to compete with AI.</p><p>Nobody will
    prevent human artists from creating art. But it won’t be seen or appreciated by
    other people. As an artist, you may like the process of making art, but if there
    is nobody to show it to, what’s the point in doing it?</p><p>There is one point
    in favor of human artists though. A good piece of art is defined by two factors:</p><ul><li><p>A
    strong emotional impact.</p></li><li><p>A strong message.</p></li></ul><p>AI can
    create the best emotional experience ever. But what about the message? Sure, AI
    can deliver a message as well, but would it be relatable?</p><p>A strong message
    should be drawn by personal experiences and observations, this is impossible to
    do for an AI. Again, this doesn’t mean that AI can’t deliver a message. It can
    deliver the best message ever, but it won’t be authentic. People can’t relate
    to it, because it has no human experience.</p><p>This is why, in the best case,
    people could decide to enjoy both AI and human art. We may even not refer to both
    of them as “art”, because they will be two different things. One will be more
    emotion-oriented, the other will be more message-oriented.</p><h2>4. Ultra-Realistic
    Sex Robots</h2><p><img src="https://cdn-images-1.medium.com/max/7200/0*RNhH_G33-jToxo-b"
    alt="Photo by [Dainis Graveris](https://unsplash.com/@dainisgraveris?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@dainisgraveris?utm_source=medium&utm_medium=referral">Dainis
    Graveris</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>Since
    the dawn of humanity, we have invented spectacular things like languages, art,
    tools, science, and ways to please ourselves without having to recur to actual
    sex all the time. <a href="https://www.dailymail.co.uk/sciencetech/article-2908415/The-sex-toys-dating-28-000-years-Ancient-phalluses-stone-dried-camel-dung-started-trend-sex-aids.html">The
    first dildo</a> is 28,000 years old, way older than agriculture and human societies.</p><p>In
    a not so distant future (actually, it’s already happening), we will be invaded
    by androids and gynoids. But it won’t be a Terminator-like invasion. The only
    thing to invade will be our beds.</p><p>Sex may actually be the only use for androids
    and gynoids. I don’t see many other applications for humanoid robots.</p><p>Soon
    these sex robots will be ultra-realistic. They will be physically indistinguishable
    from real human beings. Sex with robots will feel just like real sex, if not better.
    AI will make these robots able to perform various moves and bend in any conceivable
    position. You will be able to have sex in any way you ever wanted and satisfy
    your weirdest fetishes.</p><p>Even more, sex robots will not only satisfy physical
    needs, but also emotional ones. You can talk with your sex robot about your problems,
    then cuddle, have sex and cuddle again. It will feel like a real person, an actual
    significant other, and you may even engage in a relationship with it.</p><p><a
    href="https://metro.co.uk/2010/01/11/worlds-first-sex-robot-with-a-personality-unveiled-as-roxxxy-23255/">There
    are already some prototypes of sex robots with personalities.</a></p><h3>Why Does
    It Scare Us</h3><p>There are three main reasons why sex robots scare us:</p><ul><li><p><a
    href="https://www.thesun.co.uk/tech/7945518/sex-robots-hacked-record-users-expert-warns/">They
    can be hacked.</a> This is a common problem with most of the technologies described
    here. Did you piss someone off? They don’t have to get their hands dirty: all
    they have to do is reprogram your sex wife or husband to kill you. Maybe in a
    weird sex position so that it looks like an accident.</p></li><li><p>They replace
    real human affection. Why would you even bother to find a real partner, when sex
    robots can satisfy both your physical and emotional needs? You can save money
    for dinner and use it to hire a robot prostitute or buy a personal sex robot on
    Amazon.</p></li><li><p>They may lead us to extinction. Well, this is a direct
    consequence to the previous point: if you don’t care about finding a partner,
    you won’t have children.</p></li></ul><p>When sex robots will be common, we may
    all lose touch with reality. Also, sex robots will be way hotter than humans.
    If we get used to them, we may become unable to get physically attracted to other
    humans. We will become desensitized just like porn addicts are. <a href="https://www.bbc.com/news/science-environment-51330261">We
    will objectify human bodies even more.</a></p><h3>Should We Be Scared?</h3><p>Maybe
    a little.</p><p>While these three problems may be concerning, it’s unclear whether
    they will actually be that bad.</p><p>The problem is that we often fail to understand
    that society evolves. Sex is a societal aspect as well as a biological one. Some
    cultures values monogamy, others value polygamy. Some cultures value physical
    attractiveness, others don’t. Some cultures value homosexuality as a strength,
    others as a weakness.</p><p>Sex robots will surely become common. But it doesn’t
    necessarily mean it will be bad.</p><p>Nowadays, there is a stigma around sex
    robots. A few decades ago, there was a stigma around Internet porn. But today
    everybody visits Pornhub regularly without shame. The same is likely to happen
    with sex robots.</p><p>As societal values will evolve, we may not see much difference
    between human-human relationships and human-robot ones, as long as our physical
    and emotional needs are fulfilled. I’m not saying that this will be certain or
    that I want it to be true, I’m just saying that this is a real possibility. It’s
    society that evolves around technology, not vice versa.</p><p>What about sex robots
    being hacked? Well, some of us have smart homes, and they can be hacked as well.
    A very smart and motivated hacker could kill you remotely with the objects you
    have in your room now (unless you are reading this from your bathroom). So the
    problem is not specific to sex robots.</p><p>And what about extinction? Society
    will probably find some ways to keep producing babies. They may involve more in
    vitro fertilization than actual sex. And who knows, maybe robots will also be
    good parents.</p><p>Again, I’m not saying that I like it. I’m just saying that,
    eventually, we or our children will. The major problem I personally see with this
    is <em>love</em>. Love is about wanting to make another person happy. How can
    there be love if the thing to make happy is an apathetic robot?</p><p>If there
    is one sure positive outcome from this, it is that all crimes related to sex will
    be eliminated. There won’t be (human) prostitution anymore. There won’t be rape
    anymore. There won’t be domestic abuse. Even pedophiles can get children robots.</p><p>BEFORE
    YOU HATE ME for that last sentence, what would you prefer, a pedophile having
    sex with a child robot, or a pedophile having sex with a real child? If I visited
    someone’s home in 2040 and found a child robot there, I would still be sickened,
    but at least I would be relieved that that person wasn’t anywhere near a real
    child.</p><h2>5. Nanites</h2><p><img src="https://cdn-images-1.medium.com/max/9760/0*IP3MZJO7LinIzTBW"
    alt="Photo by [Julian Böck](https://unsplash.com/@julian_bck?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@julian_bck?utm_source=medium&utm_medium=referral">Julian
    Böck</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p><a
    href="https://en.wikipedia.org/wiki/Nanorobotics">Nanites</a> are nano-robots
    that one day will surround us everywhere. They would be too small to be visible
    (unless they are in swarms), but they would be everywhere. They would be in the
    air, in the water, on the surfaces, in our food, in our bodies, in our urine and
    feces.</p><p>They would have a swarm intelligence (no centralized control) and
    they would be able to replicate and adapt.</p><p>They could be used to clean the
    environment, 3d print anything, cure most illnesses, explore other planets, control
    the weather, and do many other sci-fi things.</p><h3>Why Does It Scare Us</h3><p>Would
    you trust millions of tiny and smart robots in your own body? I didn’t think so.</p><p>The
    reason is always the same: hacking. Whoever controls the nanobots, controls everything.
    Despite the fact that a decentralized system would be more resilient than a centralized
    one, a smart virus would be enough to destroy just about anything. Just program
    one nanobot to replicate its code in other nanobots and destroy itself after an
    hour. And watch the world collapse.</p><h3>Should We Be Scared?</h3><p>Probably.</p><p>Hacking
    will always be an issue. But one thing is hacking a bank account, another is hacking
    the air, the ocean, the buildings, human bodies. All it would take is one smart
    motivated angry person to destroy the world.</p><p>On the other hand, security
    grows together with hacking techniques. A technology as advanced as nanites is
    expected to be safe and secure. This is not enough to guarantee that nanites won’t
    destroy us, but I don’t think that would be the case.</p><p>I think that many
    other things could destroy us far before nanites will.</p><h2>6. Designer Babies</h2><p><img
    src="https://cdn-images-1.medium.com/max/11520/0*pPGH9ctbonDJfbPa" alt="Photo
    by [Shirota Yuri](https://unsplash.com/@itshoobastank?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@itshoobastank?utm_source=medium&utm_medium=referral">Shirota
    Yuri</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>A
    <a href="https://en.wikipedia.org/wiki/Designer_baby">designer baby</a> is a baby
    who has been artificially created by genetic code manipulation.</p><p>Our advances
    in understanding the genetic code have been wonderful. We have been able to <a
    href="https://www.scientificamerican.com/article/20-years-after-dolly-the-sheep-led-the-way-where-is-cloning-now/">clone
    animals</a> and <a href="https://www.theguardian.com/technology/2019/aug/11/the-five-chimeras-human-monkey-hybrid-genetic">build
    real chimeras</a>.</p><p>The purpose of designer babies is to create genetically
    strong humans, without diseases and with the desired features. You can build a
    tall, smart, kind, athletic kid without having to rely on the randomness of the
    genetic lottery.</p><h3>Why Does It Scare Us</h3><p>When we think of human genetic
    alteration and designer babies, we think of eugenics, then we think of Hitler
    and that triggers us.</p><p>It’s normal to be scared of genetic alterations. Messing
    with genes is commonly referred to as “playing God”, since it means manipulating
    the fabric of life itself. Messing with our genes too much may create something
    that isn’t even human.</p><p>If we feel the need to design our baby with particular
    features, it’s like we are giving these features an importance that is greater
    than human life itself.</p><p>In other words, this seemingly goes against the
    moral law that a child must be loved “no matter what”.</p><p>This also goes against
    every effort we have made in the past decades in trying to overcome racial differences.</p><p>We
    have always had trouble with genetic differences. These differences, like human
    races, are often reflected in class differences. Some decades ago, especially
    in the US, blacks and whites belonged to two different social classes. Now this
    distinction doesn’t formally exist anymore, but it’s still strongly present in
    human minds (just look at what’s happening in the US right now).</p><p>Designer
    babies will likely bring another class problem that is way worse than the racial
    one and the one described when talking about cryonics. What do you think will
    happen when rich people will start designing perfect kids while poor kids won’t
    be able to afford it? Will we have riots and #undesignedlivesmatter movements?</p><h3>Should
    We Be Scared?</h3><p>Maybe a little.</p><p>But the only real reason why we should
    be scared is the one just described, that is the risk of the birth of a new societal
    gap.</p><p>Meanwhile, the eugenics argument has to be put in context. The main
    reason why eugenics is such a bad word today, is the whole Hitler thing.</p><p>But
    there is a big difference between killing an “unhealthy” being and preventing
    it from being born.</p><p>And there is another big difference between choosing
    who mates with who and allowing any happy couple to have their genetically perfect
    child.</p><p>As long as “different” people aren’t treated differently, and people
    are allowed to mate with whoever they want, designer babies should not only be
    okay, but even encouraged.</p><p>Why am I saying such a controversial thing?</p><p>Seriously,
    what’s wrong in designing the features of your baby, instead of letting randomness
    choosing them for you? If you know you have a genetic disease, would you risk
    your child to carry it as well? I don’t know you, but I think that in that case,
    it would be crueler not to design your baby.</p><p>I really want to make this
    clear. Eugenics is not inherently bad if performed before conception (or before
    the fetus gains consciousness, although I don&#39;t want to make a pro-choice
    type of argument here). If you know your future child will have a disease, wouldn’t
    you want to spare them a life of suffering?</p><p>If you can’t afford such treatment,
    and your child is born with such disease, it doesn’t mean that they don’t deserve
    all the love of the world. They are not “unwanted”. You just wanted to give them
    a better life. And you still love them “no matter what”. They are worth no less
    than a genetically perfect child.</p><p>The problem is not genetic alteration
    itself, it’s society. The problem is that we let genetic features define us, while
    they should be just that, features. Anyone should have a healthy and happy child.
    Why risk unnecessary suffering just because you are afraid to go against God,
    nature, or the universe?</p><h2>7. Immersive Reality and Brain-Computer Interfaces</h2><p><img
    src="https://cdn-images-1.medium.com/max/9856/0*_QYglzRL5kWbWwPr" alt="Photo by
    [Laurens Derks](https://unsplash.com/@flderks?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@flderks?utm_source=medium&utm_medium=referral">Laurens
    Derks</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>You
    may be familiar with Augmented Reality (AR) and Virtual Reality (VR). What you
    may be less familiar with are Immersive Reality (IR) and Brain-Computer Interfaces
    (BCI).</p><p>IR consists of immersing you into another reality by injecting that
    reality into your brain. In other words, it directly manipulates your brain waves
    to create experiences.</p><p>BCIs are the interfaces that allow for this manipulation.
    Imagine that you can reprogram your brain. Since the brain is the source of, well,
    pretty much everything you experience, having control over it can be very powerful.</p><p>With
    BCIs, you could not only immerse yourself into another reality, but also suppress
    your fears, change your personality, read 1,000 books in one second, communicate
    telepathically with other people, control robots (including nanites), control
    connected objects telekinetically, and get many other sci-fi superpowers.</p><h3>Why
    Does It Scare Us</h3><p>There are two aspects to be taken into consideration.</p><p>One
    is the perception of reality. IR, especially if used in videogames, can make you
    lose touch with your actual reality. You will spend more time in IR than in actual
    reality. You may not recognize the latter anymore.</p><p>Another aspect is that
    BCIs can turn you into something that is not human, or at least deprive you of
    basic human experiences. What will be of you when you will acquire all the superpowers
    mentioned above? If you can reprogram your mind just like a software, what will
    your life look like? What will happen when the basic experience of talking to
    another human being will be outdated because you can just communicate telepathically?</p><p>And
    what if, again, our minds get hacked?</p><h3>Should We Be Scared?</h3><p>Maybe
    a little.</p><p>Losing touch with reality has been a human habit since the Stone
    Age. Seventy thousand years ago (or probably more), we invented fiction. Since
    then, our ability to deliver fiction has always improved: oral stories, written
    stories, acts, movies, videogames, virtual realities.</p><p>It is just part of
    human nature. As long as you can give meaning to your life, does it even matter
    in which reality do you spend most of your time, whether it’s real or virtual?
    Hell, even our own reality <a href="https://en.wikipedia.org/wiki/Simulation_hypothesis">can
    be just a simulation</a>. It doesn’t mean that it’s not meaningful. As long as
    you have consciousness, your life is meaningful, independently of the reality
    that hosts it.</p><p>But what if BCIs do more than immersing you into another
    reality? What if they change the structure of your mind? Like many other things,
    it depends on how it plays out.</p><p>I think that BCI superpowers won’t inherently
    be a bad thing, just like coffee is not a bad thing when it wakes you up, alcohol
    is not a bad thing when it makes you a bit dizzy, and weed is not a bad thing
    when it makes you a little relaxed (sorry, conservatives).</p><p>But what if you
    overdo it? What if it is addictive? What if it’s less like coffee and more like
    cocaine? Well, again, it depends on how it plays out. Society will need to come
    up with norms to regulate those experiences if necessary, while psychologists
    and neurologists should better understand the impact of these technologies on
    our minds before they become commonplace.</p><h2>8. Mind Upload</h2><p><img src="https://cdn-images-1.medium.com/max/7438/0*CkYSarX-EmvbrVOr"
    alt="Photo by [Robby McCullough](https://unsplash.com/@mybbor?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@mybbor?utm_source=medium&utm_medium=referral">Robby
    McCullough</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>Take
    the previous point, and stretch it to the extreme. You don’t just immerse yourself
    into another reality, you take your bags and move there.</p><p>I have recently
    finished the new Amazon series <em>Upload</em>. I suggest you give it a try, it’s
    pretty good.</p><p>In the <em>Upload</em> world, people can choose, instead of
    dying, to upload their minds into a virtual afterlife.</p><p>This may eventually
    happen for real. Your body may die, your brain may die, but the <em>information</em>
    in your mind can be exported and stored on a digital device. Your mind will be
    a file in a hard disk, in a USB stick, or in the cloud. Then you can keep living
    through a computer program that transforms the structure of that file in a way
    that is similar to the one in which electrical stimuli transform the structure
    of your brain.</p><h3>Why Does It Scare Us</h3><p>Sounds crazy? I know, right?
    That’s why it’s scary.</p><p>We don’t really know what will happen to our consciousness
    after an upload. And the scariest thing is that we may never be able to know it.</p><p>The
    thing is, yes, it’s crazy to think that you can live in a USB stick, but it’s
    also crazy to think that consciousness has to be dependent on a biological substratum.
    Why does it matter whether a neuron is made of proteins or information bits?</p><p>It
    isn’t even like your consciousness is stored in your particular brain cells. Your
    neurons are changed all the time, yet your consciousness is always there (yes,
    <a href="https://en.wikipedia.org/wiki/Neurogenesis">new neurons are always created</a>,
    even if they don’t reproduce). Consciousness has to reside in <em>information</em>,
    so it could live in a USB stick too. Theoretically.</p><h3>Should We Be Scared?</h3><p>Probably.</p><p>Imagine
    what would happen if consciousness wasn’t retained after an upload. If every human
    will eventually upload, we will basically be extinct. There would be just a computer
    program running for nothing, and that’s it.</p><p>We may never know the answer.
    You can’t just ask someone if they have a consciousness, the answer will obviously
    be positive, since it relies on the same set of memories and phenomena that you
    can find in a human brain.</p><p>I personally think that consciousness will be
    retained. To be more precise, I think that consciousness isn’t “stored” in the
    brain or in a USB stick, but it’s something that arises when there are interactions,
    whether they are synaptic impulses or CPU cycles. But we can’t really prove that.</p><p>This
    doesn’t mean that we should ignore the problem. Chances are that mind upload will
    eventually happen, so it’s better if neuroscientists, engineers, and <a href="https://medium.com/predict/forget-about-coding-the-job-of-the-future-is-philosophy-33acadcee05a">philosophers</a>
    at least <em>try</em> to find an answer.</p><h2>9. Artificial General Intelligence</h2><p><img
    src="https://cdn-images-1.medium.com/max/9212/0*uoqWILQnn8y78gD4" alt="Photo by
    [Franck V.](https://unsplash.com/@franckinjapan?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@franckinjapan?utm_source=medium&utm_medium=referral">Franck
    V.</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p><a
    href="https://en.wikipedia.org/wiki/Artificial_general_intelligence">Artificial
    General Intelligence</a> (AGI) is the <a href="https://www.amazon.com/Our-Final-Invention-Artificial-Intelligence/dp/0312622376">last
    invention</a> we will ever need to make. An AGI is an AI that, like humans, can
    learn anything, not just one specific task like current AIs.</p><p>When an AGI
    will be created, it will recursively improve itself by becoming more intelligent.
    At some point, it will be an <a href="https://en.wikipedia.org/wiki/Superintelligence">Artificial
    Super Intelligence</a> (ASI), a being so smart that we would be like ants to it.</p><p>At
    this point, two things can happen. Either the ASI will build a utopia for us,
    or it will drive us towards extinction. There is no in-between.</p><h3>Why Does
    It Scare Us</h3><p>Movies like <em>Terminator</em>, <em>Ex Machina</em>,* 2001:
    A Space Odyssey<em>,</em> Transcendence* showed us hypothetical worlds in which
    AIs went rogue.</p><p>There is a lot of confusion about this. Some people believe
    that an AGI can never be created because there is “something” about the human
    mind that can’t be replicated.</p><p>Others believe that an AGI would gain self-consciousness
    and get sick of being the humans’ slave, so it would rebel.</p><p>An AGI will
    likely be created at some point, because there is no reason to believe that there
    is that “something” about the human mind, especially about human <em>intelligence</em>.
    Also, an AGI won’t gain self-consciousness, because intelligence and consciousness
    are two separate things.</p><p>Yet there are different reasons to be scared.</p><h3>Should
    We Be Scared?</h3><p>Yes.</p><p>The problem with AI is that it’s difficult to
    tell it what its goals and boundaries should be. We are messy, we are complicated,
    we don’t know what we want.</p><p>If AGI goals aren’t <em>aligned</em> with ours,
    we incur the Alignment Problem, and very bad things can happen.</p><p>Let’s take
    for example the <a href="https://wiki.lesswrong.com/wiki/Paperclip_maximizer">paperclip
    maximizer</a> experiment. A simple task like producing paperclips can turn into
    an existential risk for us. Why?</p><p>Because an AGI would always find the most
    efficient way to reach its goals. For example, it could turn all the atoms in
    the Earth into paperclips, including our bodies.</p><p>If we specify not to kill
    us, it will still find a loophole to make our lives miserable. To avoid this,
    we have to specify every single condition. And it’s not simple.</p><p>It’s not
    that AGI will actively try to kill us. It’s just amazingly difficult not to hurt
    us. We need many things in order to live a good life, and we need to make sure
    that AGI doesn’t compromise these things by mistake.</p><p>There are some instances
    though in which AGI would actively want to kill us. Since we are so unpredictable,
    AGI may think that we would get scared and try to stop it from reaching the goals
    that we ourselves gave it.</p><p>This is probably the most difficult problem we
    will ever have to solve. And also the last one.</p><p>If you want to further explore
    this subject, I recommend you read <em>Superintelligence</em> by Nick Bostrom.
    It uses a strong academic language, but it’s a worthy read.</p><p>Since I was
    15 or something, I have dreamt to build an AGI. Now, I dream to make sure that,
    when it will come, AGI won’t kill us.</p><p>Technology is a wonderful thing, but
    it can also be scary. This has never been as true as it is now. We have a kind
    of power that we would have never imagined before.</p><p>Technological improvements
    can only be good if they are guided by wisdom improvements. If we can’t make wise
    choices on how to use God-like technologies, we are doomed for sure.</p><p>EDIT:
    I wasn’t expecting the huge success this story got. I am really grateful for that.</p><p>Still,
    as I expected, this story generated some controversies and critiques. Unfortunately,
    I don’t have the time to respond to everyone personally, so I decided to summarize
    the most common ones here:</p><ul><li><p>English is not my first language. If
    any sentence contains mistakes or sounds too weird, I would gladly appreciate
    any constructive criticism.</p></li><li><p>I didn’t mean this story to be exhaustive.
    Of course, there are many technologies I haven’t mentioned. For example, bioweapons.
    Here, I only wanted to talk about technologies that will likely shape <em>your</em>
    future, i.e. those with sociological ramifications.</p></li><li><p>I am aware
    that this story lacks a spiritual perspective. I am not a spiritual person, and
    even if I were, nobody should impose their spiritual views on others. That said,
    the lack of spirituality doesn’t make my ideas cold or emotionless. Emotions exist
    even without spirituality. One could live a meaningful life even without spirituality.
    That was the whole point of this story! Showing the impact of these technologies
    on what it means to be human. I also explored this subject in <a href="https://medium.com/predict/forget-about-coding-the-job-of-the-future-is-philosophy-33acadcee05a">this
    story</a>.</p></li><li><p>About cryonics, the correct term is <em>vitrification</em>,
    not <em>freezing</em>. I used the latter to keep things simple for the purposes
    of this story, but some readers correctly said that just “freezing” a body would
    kill it. Vitrification is a more complex process that keeps the organic structure
    of the body intact.</p></li><li><p>No, cryonics doesn&#39;t work yet. We don’t
    know how to devitrify a body, but the vitrified bodies have nowhere to go until
    we figure it out.</p></li><li><p>About Personal Decision-Makers, they are supposed
    to make choices for you because they know you better than you know <em>yourself</em>.
    Their main purpose shouldn’t be <em>control</em>. If they are used to control
    people, I agree that they are bad. But if they are only used to accelerate your
    decision process, I don’t think they are bad at all. No, I am not a fascist.</p></li><li><p>About
    sex robots, this was the point I explored with the most depth. The depth was needed
    because the pervasiveness of sex robots will have sociological ramifications that
    are too complex to be explained in a few sentences. It wasn’t because I want to
    fuck a robot :)</p></li><li><p>Yes, I know that not <em>literally</em> everyone
    watches porn :)</p></li><li><p>As one reader pointed out, I overlooked power as
    a motivator for rape. That’s a good point. But we may become so desensitized to
    actual sex that we may find it difficult or even disgusting to do it with real
    humans, when we are used to extremely hot robots. Honestly, I don’t know how this
    will play out.</p></li><li><p>Most of the controversies and doubts were related
    to the AGI point. The dangers of AGI are yet another thing that can’t be explained
    in a few sentences. So, if you are interested, I wrote <a href="https://medium.com/predict/why-we-should-really-be-afraid-of-ai-an-analysis-of-obvious-and-non-obvious-dangers-cb2dfb8f905d">another
    story</a> just to delve into these dangers.</p></li><li><p>I am also aware of
    the AI winters. Yes, we may be heading towards another one. But it doesn’t mean
    that AGI will never be created. Other factors, like the increased computational
    power over the last few decades, play a huge role. Neural networks, for example,
    exist since 1943, but they only started to become pervasive in the last 20 years.</p></li></ul><p>On
    the other hand, this story generated a lot of constructive discussions and I love
    it. Remember, I am fully aware that anything I said can turn out to be wrong.
    Nobody can really predict the future. It’s okay to disagree.</p>'
  :author: I, Human
  :topic: future
- :url: https://medium.com/@sall/the-future-of-web-design-is-hidden-in-the-history-of-architecture-1cc93ea854d0?source=search_post
  :title: The Future of Web Design is Hidden in the History of Architecture
  :content: '<p>The history of Western architecture can teach us a lot about the evolution
    of web design. As forms of art, both are defined by several factors:</p><ol><li><p>They
    serve as places where other people go.</p></li><li><p>They’re engineered to do
    this pragmatic job.</p></li><li><p>The evolution of technology limits this engineering.</p></li><li><p>And
    yet, they’re definitely still art.</p></li></ol><p>Within these constraints, both
    have progressed along remarkably similar paths, building on the past and reacting
    to it in similar ways. If you want to know where web design is heading, just look
    at where architecture has already gone.</p><h2><strong><em>I. Neolithic</em></strong></h2><h3><em>Simple,
    limited structures</em></h3><p><img src="https://cdn-images-1.medium.com/max/4182/1*mCWATHKKKlzsX8dD8MqjVA.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*ghZaQXXN2fYkYrfdJYSZGA.png"
    alt="Stonehenge, c. 3000–2000 BC; W3.org, c. 1992"><em>Stonehenge, c. 3000–2000
    BC; W3.org, c. 1992</em></p><p>Aside from playing a bit with size and position,
    it was a feat just to get something in place.</p><h2><strong><em>II. Classical</em></strong></h2><h3><em>Order
    and proportion, with some embellishment</em></h3><p><img src="https://cdn-images-1.medium.com/max/4842/1*f2gsChJHjus9eLdjFEIzOw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*TQU6ZLN_vssghuP-613Utw.png"
    alt="The Parthenon, c. 437 BC.; Yahoo.com, c. 1996."><em>The Parthenon, c. 437
    BC.; Yahoo.com, c. 1996.</em></p><p>The Classical period refined proportions and
    hierarchies, introducing clearly-divided sections that served different purposes.
    The mediums (stone, pixel) were also stylized to mimic prior materials: the stone
    <a href="http://en.wikipedia.org/wiki/Triglyph">triglyphs</a> represented wooden
    beams, just as the 3D buttons represented physical buttons.</p><h2><strong><em>III.
    Romanesque</em></strong></h2><h3><em>Thicker forms and rounder edges</em></h3><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*chauRJvCv56HpTs1nCF4tw.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*1the-Vzdaq0w1y8LSUs6cQ.png" alt="Maria
    Laach Abbey, c. 1093; Apple.com c. 2000"><em>Maria Laach Abbey, c. 1093; Apple.com
    c. 2000</em></p><p>While softening the edges, the Romanesque period also thickened
    the walls and dividers — and menus, and buttons — to produce bulkier, heavier,
    more clickable forms.</p><h2><strong><em>IV. Gothic</em></strong></h2><h3><em>Ornate
    and mesmerizing</em></h3><p><img src="https://cdn-images-1.medium.com/max/5620/1*CxazrdKKBH-eCVB2u1OywQ.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*VDTxwlP-X4-wEyPOuV2CpQ.gif"
    alt="Reims Cathedral, c. 1211; Maroon5.com, c. 2005"><em>Reims Cathedral, c. 1211;
    Maroon5.com, c. 2005</em></p><p>CSS and Flash were the stained glass of web design.
    With the fundamentals in place, we began pushing materials beyond the limits of
    what seemed possible. Gothic architecture transformed stone into gravity-defying
    spectacles that took your breath away. And though it’s hard to remember now, those
    early Flash and CSS sites amazed us just as much with pixels.</p><p>And yes, I
    did just compare an old Maroon 5 website to Reims Cathedral.</p><h2><strong><em>V.
    Renaissance</em></strong></h2><h3><em>Clean, logical, and precise</em></h3><p><img
    src="https://cdn-images-1.medium.com/max/2972/1*gtwdqeRuZSyfaoQxM4L7FQ.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2880/1*B-XeGiotbS5H43Ni74k1Yw.png" alt="Villa
    La Rotonda, c. 1567; Rdio.com, c. 2012"><em>Villa La Rotonda, c. 1567; Rdio.com,
    c. 2012</em></p><p>This is where we are today. It’s uncanny how similar the recent
    “<a href="http://en.wikipedia.org/wiki/Flat_design">flat design</a>” movement
    is to the Renaissance. Renaissance architecture called for a return to Classical
    logic. Simple geometric forms replaced ornate complexity. Designs became cleaner.
    People started publishing treatises with the new rules, and it all got a little
    more meta.</p><h3><em>And then we start getting into the future…</em></h3><h2><strong><em>VI.
    Baroque</em></strong></h2><h3><em>Twisting all the rules</em></h3><p><img src="https://cdn-images-1.medium.com/max/4206/1*DIPapak1TwBFRiQRsSF6Lw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*857MBtelE37U5n3Z4rdnPw.png"
    alt="San Carlo alle Quattro Fontane, c. 1638; TBD, c. 2017"><em>San Carlo alle
    Quattro Fontane, c. 1638; TBD, c. 2017</em></p><p>Being so logical and precise
    is fun for only so long. Eventually we’ll just start breaking rules. In architecture
    that meant literally breaking apart Classic elements and twisting them into complex
    forms. Compared with the Renaissance intellectualism, Baroque designs were emotional
    and theatric.</p><p>How will we do this with web design? It’s hard to say. But
    wait for it — it’s coming in a couple years.</p><h2><strong><em>VII. Neoclassical</em></strong></h2><h3><em>Harkening
    back to the past</em></h3><p><img src="https://cdn-images-1.medium.com/max/2000/1*Xwp2gZPBpPzxno-78vy0WQ.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*MIyf7rh2DQEiMbce81Y2LA.png"
    alt="Panthéon (Paris), c. 1790; TBD, c. 2022"><em>Panthéon (Paris), c. 1790; TBD,
    c. 2022</em></p><p>Everything comes full circle. Once we progress enough, we start
    to glorify our Classical beginnings and go full retro. It just takes time. Neoclassical
    web design is a ways ahead — that old Yahoo website still looks pretty lame to
    us, not sacred. But six, seven years from now? It’ll be cool again.</p><h2><strong><em>VIII.
    After that, who knows?</em></strong></h2><p>Well, we kinda know. It will likely
    be some form of Neoromanesque or Neogothic. Something neo. Art continually repeats
    itself in the form of revivals. But eventually? A new technology and a new world
    view will arrive that we can’t even imagine today.</p><p>Then things will get
    weird.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*vnO6VnW4DLGPQP03Hztw4Q.png"
    alt=""></p><p><em>Image Credits:</em> <em>Stonehenge by <a href="https://www.flickr.com/photos/jborsboom/10407020315/in/photolist-gRCGyK-nakW6F-dy256o-8UkcYy-4Z9Zsf-BxfNm-8ceoTb-aoQyRK-aoQDHD-aoQHgH-obn63b-5LbAwA-2Q3Xw-5pV7Sa-inYS8g-inYRDa-4CwfVy-6BYtRd-aoQzr4-aoTjDC-aoTAzW-aoQv3X-aoTdTd-aoTkXo-aoTnF9-aoQC22-8nL2WM-dxVtCx-a7RXq4-a7RTxv-amL1EU-7ivaGg-eLwaDE-pC8ftY-7YAt9a-mhE2CS-gJJogU-inYRey-inYRSs-inYQWQ-bvwa8T-inYHGZ-WX58-463zV-aoQw5i-aoQQQp-aoTgPL-aoThRd-9FtDkL-dxVjeM">jborsboom</a>;
    The Parthenon by <a href="https://www.flickr.com/photos/ajbear/299112351/in/photolist-sr2Fv-b55Vy6-b55LJt-b55Rza-b55Nva-hd4UdN-hd68YP-hd4WAJ-a7ASPk-8cpGjC-rx3KdF-6niL8r-a8obRR-b56qoc-5a2c7o-b561oa-b569j6-b567kg-b563MH-5SK6TK-9T7eA5-8dnFBc-5SPrVL-2NKvpw-9Bauvq-b562Sa-b55YKH-b55Y1B-b55Xca-b55JjP-a8q4yY-nwQfx9-b56ji8-b56hf2-b56diV-b56bpg-b561Ye-b55ZAT-b55UNp-b55T9P-b55QCM-b55GqX-b55EBt-b55DR4-b56oez-b56fjt-b564Ur-b55Sni-b56moz-b55TSK">AJ
    Alfieri-Crispin</a>; Maria Laach Abbey by <a href="http://en.wikipedia.org/wiki/Maria_Laach_Abbey#/media/File:Maria_Laach_02.jpg">Berthold
    Werner</a>; Reims Cathedral by <a href="https://www.flickr.com/photos/thearchigeek/6402154661/in/photolist-aKJHwV-bcmadv-o2XLi-7s2Zvv-75jj2j-aKJLAe-aKJPo8-aKJS7e-aKevy4-5BiJat-o2YM3-9hanhJ-75fsac-acTcxR-fnqAh-4Aq3c-nanL4C-4ApYv-4ApHr-fMZTcS-4ApC8-4SLaEL-ukyMz-4ATaYd-8EBh6W-4ApsF-8Ey7sr-8EBgXu-8EBh3w-8EBgQL-8Ey7kz-4ATcHh-fnq8Z-4uMapb-DTcUS-sm1Aj-DTcQ5-DTcRB-fMHu7k-4kZYUe-4ApkU-nvgTv-gztQa-4SGfee-6Lx1dW-gztQk-gztQd-4ATc2d-bWck2J-h2edyF">Archigeek</a>;
    Amazing animated Maroon 5 GIF by <a href="https://medium.com/@nick">Nick</a>;
    Villa La Rotonda by <a href="https://www.flickr.com/photos/atelier_flir/15108398972/in/photolist-ewjBBB-ewnNof-ewnLyW-ewjBvV-ewnMVE-ewjC98-pJ5LX2-3fJFG1-cVpRLw-cVpTZ1-cVpWso-cVpUZh-cVpQkL-cVpPwA-3fJGiS-3fJF2U-kpWbws-dMZTAC-dMZTTJ-dMZTK5-dMUkzi-dMZTwQ-hdugDJ-nfrdrW-8PKPpe-bCQ62i-7VCi7X-j7P3xe-mY6tXH-bCQ6Jn-mY6s54-mY6qkx-p25uDs-bBGwUn-bBGxDx-bBGx9T-ckxkZj-fz6tvQ-4HEpgF-oJCc9R-p25vWY-oJBPHC-kB97jD-7Zogvb-oJCqdu-ckxjAy-ckxknh-ckxkab-ckxjof-ckxkF9">Timothy
    Brown</a>; San Carlo alle Quattro Fontane by <a href="https://www.flickr.com/photos/wsifrancis/2680121463/in/photolist-55QjJK-dWZZnF-5HMDYD-55QiM8-55UvDs-46uZse-sq9L9Q-55UtZ1-dq42zg-dq432T-dX6DV5-9KNZ2w-7BSwqz-7BSvS2-dTPkMf-dTHHvr-8N2Hvp-4UW9hF-C25ds-2V2uSq-7tnCex-55UuE7-55QhZF-dnHdRf-iFjc5c-9iG9LK-54kwKZ-9pEdE3-a827RR-a827Hc-a827JK-a827KF-wZ27d-a84ZdQ-a827Tr-a827UK-5x6gLH-9aBDx-a84Z2U-k417Mx-k3ZTQa-CJ1Ev-k41WP2-eaWHjC-k43YkL-skPfwv-5xaEvS-5xaEuG-65x9zM-2oUtfv">wsifrancis</a>;
    Panthéon by <a href="https://www.flickr.com/photos/marko8904/8230383893/in/photolist-dxhSoz-dxkC3M-6vzmEa-4BriqR-4Bvzn7-8zWviD-6vDQgA-bZEpzN-bZEq9u-6vzb5F-dzvhto-9eTdU-5g8rSP-8D5Xo2-4qDSfs-4ZsL3J-8D5ZPt-8D5Z7H-8D61xn-dxr6do-dxr6vh-dxr5TS-dxkDiz-dxkCFR-dxkE3r-dzpR18-8D9BWz-8D9FaB-8DcNvf-8DcK3N-8DcL9J-8DcNeb-8DcKRu-8DcP1o-8DcM5o-8DcKt7-8DcNHQ-8DcKG3-8D9DNg-8D9E6g-axbTib-axbTSA-ax9cr2-ax9aPR-axbU9d-axbTdq-axbUA1-axbUv9-axbUff-axbTab">Marko
    Kudjerski</a>; Guggenheim Museum Bilbao by <a href="https://www.flickr.com/photos/wojtekgurak/5301814016/in/photolist-95vbAu-ajscMu-qpiDUS-aoMqCv-dDvQXN-em4TFY-9Zsjxf-n7jWx1-6g9Hr1-bw9ttc-6g9HtQ-ao2UuT-6g5r5X-n8yP51-5nh4D5-nkd1nP-asf5D7-arYo5w-27BNLa-2jyq1-cpNLkh-nhtD9J-dDvArW-fpwCdy-dDqr5v-chW89w-48hoUG-fphP6x-8Yz4Lw-6fUeQA-asE4Cb-prz5F1-2Ts7H-5boAwp-8jYvd4-6g9J5o-efEs78-4rw3xs-pe98cY-9uGv5E-cpm77-dDqdrK-fhUXjq-4t2SUo-dv6mzm-7uGMH1-fhDcrX-fpxaAL-fh9Hqc-dX3vj6">Wojtek
    Gurak</a></em></p>'
  :author: Mike Sall
  :topic: future
- :url: https://medium.com/@thinkoutsidetheblox/why-bitcoin-and-crypto-have-no-future-4f95980bb774?source=search_post
  :title: Why Bitcoin and Crypto Have No Future
  :content: '<p>Why do Bitcoin and cryptoassets have no future…</p><p>when the NYSE
    is creating the cryptocurrency trading platform <a href="https://www.reuters.com/article/us-ice-cryptocurrency-bakkt/nyse-owner-ice-to-form-new-company-for-digital-assets-idUSKBN1KO1QN">Bakkt</a>
    in collaboration with Microsoft and Starbucks with physically backed Bitcoin futures
    contracts.</p><p>when <a href="https://www.investinblockchain.com/fidelity-investments-cryptocurrency/">Fidelity</a>
    is offering it to its clients and has been mining it since 2015.</p><p>when <a
    href="https://www.ccn.com/apple-pioneer-steve-wozniak-has-co-founded-a-blockchain-investment-firm/">Steve
    Wozniak</a> is co-founding a cryptoasset investment firm.</p><p>when Katy Perry
    IG’d this!</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*zLk2D3NiLwCwsw0xkdEaTg.png"
    alt="Cryptos coming at you like a dark horse"><em>Cryptos coming at you like a
    dark horse</em></p><p>when <a href="https://techcrunch.com/2017/06/01/brave-ico-35-million-30-seconds-brendan-eich/">Brendan
    Eich</a>, creator of JavaScript and Mozilla, started Brave Browser with a built-in
    ad-blocker and Basic Attention Token (BAT) to reward content creators.</p><p>when
    <a href="https://www.investinblockchain.com/qtum-partnership-amazon-web-services-china/">Amazon
    Web Services</a> partnered with QTUM.</p><p>when the <a href="https://www.coindesk.com/gates-foundation-use-ripple-interledger-tech-mobile-payments-push/">Bill
    &amp; Melinda Gates Foundation</a> is utilizing Ripple’s interledger protocol
    to help with payment services for the financially impoverished and unbanked.</p><p>when
    <a href="http://fortune.com/2017/10/16/ibm-blockchain-stellar/">IBM</a> is partnering
    with Stellar Lumens (XLM) for cross-border payment solutions.</p><p>when <a href="https://news.bitcoin.com/after-the-boss-calls-bitcoin-a-fraud-jp-morgan-buys-the-dip/">Jamie
    Dimon</a> tells all that it Bitcoin is a “fraud” and that if he catches any employees
    who own it he would fire them, while in the background JP Morgan and Morgan Stanley
    bought Bitcoin ETNs on the dip. And then they launched <a href="https://www.jpmorgan.com/global/news/digital-coin-payments">JPM
    coin</a>!</p><p>when the <a href="https://www.theverge.com/2018/7/13/17568766/mlb-cryptocurrency-baseball-game-summer">MLB</a>
    has a licensing agreement for a crypto-based game on the blockchain using the
    ERC-721 standard for non-fungible tokens.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*w7A5VFZdqlUlX_fAVaqZ1w.png"
    alt=""></p><p>when <a href="http://fortune.com/2018/04/06/george-soros-cryptocurrency-hedge-fund-bitcoin/">George
    Soros</a> initially bashed cryptocurrencies, only to later buy a stack of Bitcoin
    at $6k.</p><p>when <a href="https://www.coindesk.com/alibaba-ibm-lead-global-blockchain-patent-drive-says-report/">Alibaba
    and IBM</a> have the most blockchain patents in the world.</p><p>when <a href="https://www.cnbc.com/2018/10/05/yale-investment-chief-david-swensen-jumps-into-crypto-with-bets-on-two-silicon-valley-funds.html">Yale’s
    endowment</a> invested $400 million in cyptoasset funds.</p><p>when the <a href="https://www.theverge.com/2017/12/4/16732952/winklevoss-twins-bitcoin-billionaires-surge">Winklevoss
    twins</a> took $11 million of their Facebook money and put it into Bitcoin in
    2013 when it was $120 each.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*SeQCvXWnxRG5txaQWvVEqg.jpeg"
    alt="can you row to the moon?"><em>can you row to the moon?</em></p><p>Should
    I go on?</p><p>when <a href="https://www.marketwatch.com/story/cybersecurity-legend-bets-his-manhood-that-bitcoin-reaches-500000-mark-with-three-years-2017-07-18">John
    McAfee bets his manhood</a> that Bitcoin is going to the moon.</p><p>when <a href="https://www.bloomberg.com/news/articles/2018-05-16/square-s-dorsey-is-all-in-on-bitcoin-as-currency-of-the-future">Jack
    Dorsey, CEO of Twitter and Square</a>, thinks Bitcoin is the currency of the future.</p><p>when
    <a href="https://news.bitcoin.com/richard-branson-blockchain-revolution/">Richard
    Branson</a> thinks Bitcoin will bring an economic revolution.</p><p>when <a href="https://www.marketwatch.com/story/goldman-sachs-backed-circle-goes-live-with-currency-linked-stablecoin-and-anyone-can-issue-it-2018-09-26">Goldman-Sachs
    backed Circle</a> launched a crypto finance company.</p><p>when <a href="https://www.digitaltransactions.net/first-it-was-trading-through-cash-app-now-square-patents-a-network-for-crypto-acceptance/">Square’s
    Cash App</a> allowed users to buy and sell Bitcoin.</p><p>when <a href="https://www.newsbtc.com/2018/10/03/coinbase-to-be-valued-at-8-billion-after-500m-investment-crypto-community-bullish/">Coinbase</a>
    is valued at $8B.</p><p>when the founder of YouTube and the founder of Twitch
    are advising <a href="https://www.forbes.com/sites/johnkoetsier/2017/11/21/new-vr-streaming-service-bittorrent-meets-blockchain-meets-youtube-meets-twitch/#659f5f6a30f8">Theta
    Token (THETA)</a>.</p><p>when <a href="https://techcrunch.com/2018/08/10/crypto-mining-giant-bitmain-on-target-for-10b-revenue-this-year/">Bitmain</a>
    is on track for $10 billion in revenue this year after around $4 billion last
    year.</p><p>when <a href="https://finance.yahoo.com/news/crypto-exchange-binance-more-profitable-131925667.html">Binance</a>
    made more in profit in Q2 2018 than Deutsche Bank.</p><p>when <a href="https://finance.yahoo.com/news/reddit-co-founder-im-betting-bitcoin-despite-volatility-140356264.html">Reddit
    co-founder (and husband of Serena Williams — dont forget that) Alexis Ohanian</a>
    is betting on Bitcoin as a hedge to economic crises.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*r-SJn1Lsok0d-uHO9r0xZQ.jpeg"
    alt="i read it on reddit"><em>i read it on reddit</em></p><p>when <a href="https://www.ethnews.com/blockchains-llc-acquiring-over-60000-acres-in-nevada-to-showcase-blockchain-applications-yes-ethereum-no-mining">Blockchains,
    LLC bought 60,000 acres</a> for their company that will incubate and innovate
    Ethereum-based blockchain ventures.</p><p>when the co-founder of Wikipedia is
    now working on its decentralized counterpart <a href="https://www.forbes.com/sites/peterhigh/2018/02/20/with-everipedia-wikipedias-co-founder-takes-aim-at-his-old-organization/#fd9590d62fbe">Everipedia
    (IQ)</a>.</p><p>when <a href="https://www.bbc.com/news/newsbeat-44560789">Akon
    is launching his own cryptocurrency Akoin</a> to help bring security to the currency
    system in Africa.</p><p>when <a href="https://dailyhodl.com/2018/09/30/ashton-kutcher-and-vc-sound-ventures-strive-for-social-impact-through-ripple-for-good/">Ashton
    Kutcher donated $4 million in XRP to Ellen DeGeneres’ charity</a> by transferring
    it to her in a matter of seconds.</p><p>when <a href="https://www.cnbc.com/2017/12/12/social-capitals-palihapitiya-says-bitcoin-is-going-to-1-million-in-the-next-20-years.html">Chamath
    Palihapitiya</a>, co-owner of the Golden State Warriors and head of Social Capital,
    invested early in Bitcoin and thinks it’s going to $1 million per coin.</p><p>when
    <a href="https://www.ibm.com/blogs/systems/plastic-bank-deploys-blockchain-to-reduce-ocean-plastic/">Plastic
    Bank</a> is helping those in developing countries earn cryptocurrency while also
    curing plastic ocean pollution — I know you’ve seen those IBM commercials.</p><p>when
    <a href="https://www.coindesk.com/investing-app-robinhood-launches-crypto-trading-in-5-us-states/">Robinhood</a>
    offers the purchase of cryptos commission-free.</p><p>when <a href="https://www.nytimes.com/2018/06/14/technology/steve-bannon-bitcoin.html">Steve
    Bannon</a> is betting on Bitcoin and launching his own cryptocurrency.</p><p>when
    <a href="https://www.forbes.com/sites/yoavvilner/2018/10/03/bill-clinton-speaks-at-swell-by-ripple-as-regulatory-concerns-grow/#118851ea22fc">Bill
    Clinton</a> spoke at the Swell Conference in support of Ripple and blockchain
    technology.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*7Ql9inFfecF9ASTgxaeo5w.jpeg"
    alt="*“The permutations and possibilities [of blockchain] are staggeringly great.”*"><strong>“The
    permutations and possibilities [of blockchain] are staggeringly great.”</strong></p><p>when
    former <a href="https://cryptoslate.com/former-trump-aide-and-goldman-sachs-exec-gary-cohn-joins-blockchain-startup/">Trump
    aide and Goldman Sachs exec Gary Cohn</a> is joining a blockchain startup.</p><p>when
    the <a href="https://www.coindesk.com/national-football-league-union-partners-with-blockchain-startup/">NFL</a>
    purchased a stake in blockchain startup SportsCastr.</p><p>when the NBA goes crypto
    as the Sacramento Kings mine Ethereum, Bitmain sponsors the Houston Rockets, and
    former commissioner David Stern backs FanChain.</p><p>when <a href="https://news.bitcoin.com/first-soros-now-rockefellers-move-into-cryptocurrency/">Rockefeller-owned
    Venrock</a> is investing in cryptocurrency.</p><p>when <a href="https://money.cnn.com/2018/08/10/technology/overstock-blockchain-bitcoin-investment-earnings/index.html">Overstock.com</a>
    is going full-on crypto.</p><p>when <a href="https://www.forbes.com/sites/nikolaikuznetsov/2017/07/24/how-emerging-markets-and-blockchain-can-bring-an-end-to-poverty/#56dbd1cc4a0c">cryptocurrencies
    can end poverty</a> and provide financial freedom to those in financial need.</p><p>When
    Facebook, with mega partners such as Visa, Mastercard, Lyft, Spotify, Uber, and
    eBay is <a href="https://www.theblockcrypto.com/2019/06/18/facebook-libra-cryptocurrency-calibra-launch/">launching
    its Libra cryptocurrency</a> and open source blockchain.</p><p><img src="https://cdn-images-1.medium.com/max/5000/1*_pqxK8Nc0AMwGF6GZ29-9A.jpeg"
    alt=""></p><p>When Microsoft is building a <a href="https://www.wired.com/story/microsoft-wants-protect-identity-bitcoin/">decentralized
    digital ID solution</a> on the Bitcoin blockchain.</p><p>When <a href="https://www.ft.com/content/54dd4854-bd06-11e9-b350-db00d509634e">New
    Zealand</a> legalizes companies to pay their employees’ salaries in cryptocurrencies.</p><p>When
    <a href="https://fortune.com/2019/05/13/bitcoin-comes-to-whole-foods-major-retailers-in-coup-for-digital-currency/">Flexa</a>
    partnered with Gemini to launch an initiative that will see major retailers such
    as Whole Foods, Crate &amp; Barrel, Nordstrom, and Gamestop accept BTC, ETH, BCH,
    LTC, ZEC and GUSD using Flexa’s SPEDN app.</p><p>When <a href="https://www.ccn.com/youtubes-biggest-star-pewdiepie-swaps-stream-to-blockchain-video-platform/">PewDiePie</a>
    partnered to stream exclusively on DLive’s decentralized video streaming platform.</p><p>When
    search engine powerhouse Google is partnered with <a href="https://decrypt.co/7527/google-blockchain-plan-chainlink-ethereum">Chainlink</a>
    and <a href="https://cloud.google.com/blog/products/gcp/working-with-hedera-hashgraph-to-support-the-next-generation-of-distributed-ledger-technology">Hedera
    Hashgraph</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*oqjKK6RRSNBGgIGV7zrYrg.jpeg"
    alt="cryptos: from earth to moon"><em>cryptos: from earth to moon</em></p><p>Yeah.
    This has no future.</p><p>Accumulate, HODL, and think outside the blox!</p><p>Donations
    are much appreciated (Please send me a message if you would like to donate a cryptocurrency
    that is not listed below):</p><p>BTC/BCH/BSV: 1PASkYbbru5LmGQeRC9Uvpys4H3ERWRDnU</p><p>BTC
    (Lightning Network): <a href="https://tippin.me/@outsidethebloxx">https://tippin.me/@outsidethebloxx</a></p><p>ETH/ERC20/ETC:
    0x11aAA6046fC3Fe0574B76C789F9ef9ee18231e92</p><p>XRP: rh9AS7Kkwv1ZK1SXfPFVbLtDpRdEjUwxqT</p><p>LTC:
    LeECs7MmB7RSphknyGQbhWGx1qfaEVAqFv</p><p>XLM: GCSPLTDEC6V72A4FD6VCMRFPJJ3U6BJNBQRVUGBSQ7MKCOCIZNXH63LW</p><p>NEO/ONT/NEP5:
    AGBdwPpaJQqKuqGvmhvmD8Wwhch7T4A7om</p><p>EOS (&amp; EOS-based tokens): EOS7A6wspn6Np9hW1u7N2BJoNrfrdkQ8ZSdpwUzxqeTVaLdTKetxt</p><p>TRX:
    TAvEUdzb5WzdSvc68qTVqtGLPRRKPh7cJm</p><p>DGB: DPKf7wswhbTJoS3r9cS3awaao29JwYMfCx</p><p>ADA:
    DdzFFzCqrhswyHYweLbKSmZPAp6FSbYN8p2Mq71jGSxEzc1mj8pUt4W4GX7e3fPR9x5jRRTG5rrv55Pj12TCX5pvWj6S1F8wnDWYMdGv</p><p>DASH:
    Xk3YkkzbexZuAMzC9WuHtFDRCUUCnHDQ5w</p><p>XMR: 4AczKwtTkbSizu53rY75o6Pf4iAajA51A8JMLLAUm24YB47SYfS1kBndfWckMHUNB5VepCjhaKiAjA8K6PGj8AXC1REfskG</p><p>XTZ:
    tz1baVVXve4wTXMPwAx5YBsWzXbJVBUomKvq</p><p>ZEC: t1ULHCnB1DbGd1cqWCA29xGDs1RW2e8mwVJ</p><p>USDT:
    14oLYRJTKiZd46efeF5vR6HY4Dw8iudgaw</p><p>QTUM: QZ8xVt2ormyycw9oceDyor9cjdpFCUW7e4</p><p>WAN:
    0x84996aEb313F291E6bCB4433bfaa509641df0997</p><p>ICX: hx68e6e6c7d52a59b5a252b089e2f062dca84ea14f</p><p>ELA:
    ETm6FmhVvr6ZATk8z3Q75tkyGLw6wATUGc</p><p>NAS (&amp; NAS-based tokens): n1Pp3j4PUs8LGpBA9KWng83yt5RgaMhrV5z</p><p>IOTA:
    SSOOCTLYWCNHGCJUMDCDPG9JPRWIOUVWKHEMQEIZCJMTMERMFWKNUXQQMWJMLKEUFNSW9XBJNZLVCJLSB</p><p>ZEN:
    znYxnqCGf7coUTQmAbERYrQhhTLUSSoCoFb</p><p>VET/VTHO: 0xB56CC47d99d639Caa83b667b737f6b1f43381f85</p><p>WAVES:
    waves://3P5nKfirYnuUk32XmSmKYx8bJ3PXbXYXLcS</p><p>KMD: RWghjqoHSTK5ZnEwpG4dsTR1xGpkbsYQUL</p><p>NULS:
    Nse59LoXgo4YnFFArRLZTdavJhDZDJnG</p><p>RDD: Rugt3D2rYRrPcGkjonrHBaXW5exwCxm6rg</p><p>DOGE:
    DHtxgTYaaA9MUN9EuCG6eMDWBNTj359Hix</p><p>AION: 0xa00fcbedfd93868c1ec749b859211e4f0875ee9079488c1caba6f6d3010579f9</p><p>CLO:
    0x631926E224491D69583f032936bdA6cD8B4ccEc1</p><p>POA: 0x39CF4FdbF40245e064Cbe4F7F5210f6190848C67</p><p>GO:
    0x606456fe041476e6c620D41781f092EeF974a595</p><p>NANO: xrb_1zf9kapr1qmg3csqpn1edi1aqr8cprsn35zf3g6bpt55otqufutpinf8abcr</p><p>RVN:
    RTKUxSo2qyu32XM9BWCorvgAM2HYWTjXcz</p><p>TOMO: 0xB3C1f85eE9DD139c04509813455AdC6c30F5Bc8f</p><p>NEM:</p><p>deposit
    address: NC64UFOWRO6AVMWFV2BFX2NT6W2GURK2EOX6FFMZ</p><p>deposit message: 107352434</p><p>SKY:
    2F5VBKCWRjzqyxZHVVQyGR8C9KLw1tQ4B9E</p><p>ACT: ACT8LcXFsogDL7CCZ6VCxnGszfom3cig4ML4</p><p>BTCP:
    b1RLa7eFGykKZ1qzPYE9YqdMHu6heuVRHHu</p><p>PayPal: <a href="http://paypal.me/rompo007">paypal.me/rompo007</a></p><p>Venmo:
    @rompo007</p><p>Cash App: $rompo007</p><p>Referral links:</p><p><a href="https://www.coinbase.com/join/5a1bb3ddfb6d88033153070d">https://www.coinbase.com/join/5a1bb3ddfb6d88033153070d</a></p><p>Binance:
    <a href="https://www.binance.com/?ref=12956962">https://www.binance.com/?ref=12956962</a></p><p>Kucoin:
    <a href="https://www.kucoin.com/#/?r=1schb">https://www.kucoin.com/#/?r=1schb</a></p><p>Huobi:
    <a href="https://www.huobi.br.com/topic/invited/?invite_code=gtwa3">https://www.huobi.br.com/topic/invited/?invite_code=gtwa3</a></p><p>Cash
    App:<a href="https://cash.me/app/VPMVWQV">https://cash.me/app/VPMVWQV</a></p>'
  :author: Think Outside the Blox
  :topic: future
- :url: https://medium.com/@DonotInnovate/73-mind-blowing-implications-of-a-driverless-future-58d23d1f338d?source=search_post
  :title: 73 Mind-Blowing Implications of a Driverless Future
  :content: '<p>73 Mind-Blowing Implications of Driverless Cars and Trucks</p><p>I
    originally wrote and published a version of this article in September 2016. Since
    then, quite a bit has happened, further cementing my view that these changes are
    coming and that the implications will be even more substantial. I decided it was
    time to update this article with some additional ideas and a few changes.</p><p>As
    I write this, Uber just announced that it just ordered 24,000 self-driving Volvos.
    Tesla just released an electric, long-haul tractor trailer with extraordinary
    technical specs (range, performance) and self-driving capabilities (<a href="https://www.reuters.com/article/us-ups-tesla-orders/ups-reserves-125-tesla-semi-trucks-largest-public-pre-order-yet-idUSKBN1ED1QM">UPS
    just preordered 125!</a>). And, Tesla just announced what will probably be the
    quickest production car ever made — perhaps the fastest. It will go zero to sixty
    in about the time it takes you to read zero to sixty. And, of course, it will
    be able to drive itself. The future is quickly becoming now. <a href="https://techcrunch.com/2018/01/29/waymo-orders-thousands-of-pacificas-for-2018-self-driving-fleet-rollout/?ncid=rss">Google
    just ordered thousands of Chryslers</a> for its self-driving fleet (that are already
    on the roads in AZ).</p><p>In September of 2016, Uber had just rolled out its
    first self-driving taxis in <a href="https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwjsz4nXxYrPAhXLHB4KHZaPAegQFggqMAA&url=https%3A%2F%2Fwww.washingtonpost.com%2Fbusiness%2Finside-pittsburghs-drivers-seat-move-on-ubers-autonomous-car-testing%2F2016%2F09%2F02%2Fc5d2462a-6fc7-11e6-9705-23e51a2f424d_story.html&usg=AFQjCNHAMLN4XLH1Aw6GQmFGAeGJuwxCWA">Pittsburgh</a>,
    <a href="https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=4&cad=rja&uact=8&ved=0ahUKEwiN7YvpxYrPAhVG1B4KHT2eCXQQFgglMAM&url=http%3A%2F%2Fqz.com%2F524400%2Ftesla-just-transformed-the-model-s-into-a-nearly-driverless-car%2F&usg=AFQjCNG74pnv32_UFtjYLB4XUWROnqWWcw&bvm=bv.132479545,d.dmo">Tesla</a>
    and <a href="https://www.mercedes-benz.com/en/mercedes-benz/innovation/research-vehicle-f-015-luxury-in-motion/">Mercedes
    </a>were rolling out limited self-driving capabilities and <a href="http://fortune.com/2016/04/20/singapore-driverless-cars/">cities
    around the world</a> were negotiating with companies who want to bring self-driving
    cars and <a href="https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwj5tIf6xYrPAhUH2B4KHZP8DosQtwIIHDAA&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D9pltUUxI__E&usg=AFQjCNEqYTkkjHOfmIDzdQy9O9qtbsGtAg&bvm=bv.132479545,d.dmo">trucks</a>
    to their cities. Since then, all of the major car companies have announced significant
    steps towards mostly or entirely electric vehicles, more investments have been
    made in autonomous vehicles, driverless trucks now seem to be leading rather than
    following in terms of the first large scale implementations and there’ve been
    a few more incidents (i.e. accidents).</p><p>I believe that the timeframe for
    significant adoption of this technology has shrunk in the past year as technology
    has gotten better faster and as the trucking industry has increased its level
    of interest and investment.</p><p>I believe that my daughter, who is now just
    over 1 years old, will never have to learn to drive or own a car.</p><p><em>The
    impact of driverless vehicles will be profound and impact almost every part of
    our lives.</em></p><p>Below are my updated thoughts about what a driverless future
    will be like. Some of these updates are from feedback to my original article (thanks
    to those who contributed!!!), some are based on technology advances in the past
    year and others are just my own speculations.</p><p><strong>What could happen
    when cars and trucks drive themselves?</strong></p><ol><li><p>People won’t own
    their own cars. Transport will be delivered as a service from companies who own
    fleets of self-driving vehicles. There are so many technical, economic, safety
    advantages to the transportation-as-a-service that this change may come much faster
    than most people expect. Owning a vehicle as an individual will become a novelty
    for collectors and maybe competitive racers.</p></li><li><p>Software/technology
    companies will own more of the world’s economy as companies like Uber, Google
    and Amazon turn transportation into a pay-as-you-go service. Software will indeed
    eat this world. Over time, they’ll own so much data about people, patterns, routes
    and obstacles that new entrants will have huge barriers to enter the market</p></li><li><p>Without
    government intervention (or some sort of organized movement), there will be a
    tremendous transfer of wealth to a very small number of people who own the software,
    battery/power manufacturing, vehicle servicing and charging/power generation/maintenance
    infrastructure. There will be massive consolidation of companies serving these
    markets as scale and efficiency will become even more valuable. Cars (perhaps
    they’ll be renamed with some sort-of-clever acronym) will become like the routers
    that run the Internet — most consumers won’t know or care who made them or who
    owns them.</p></li><li><p>Vehicle designs will change radically — vehicles won’t
    need to withstand crashes in the same way, all vehicles will be electric (self-driving
    + software + service providers = all electric). They may look different, come
    in very different shapes and sizes, maybe attach to each other in some situations.
    There will likely be many significant innovations in materials used for vehicle
    construction — for example, tires and brakes will be re-optimized with very different
    assumptions, especially around variability of loads and much more controlled environments.
    The bodies will likely be primarily made of composites (like carbon fiber and
    fiberglass) and 3D printed. Electric vehicles with no driver controls will require
    1/10th or fewer the number of parts (perhaps even 1/100th) and thus will be quicker
    to produce and require much less labor. There may even be designs with almost
    no moving parts (other than wheels and motors, obviously).</p></li><li><p>Vehicles
    will mostly swap batteries rather than serve as the host of battery charging.
    Batteries will be charged in distributed and highly optimized centers — likely
    owned by the same company as the vehicles or another national vendor. There may
    be some entrepreneurial opportunity and a marketplace for battery charging and
    swapping, but this industry will likely be consolidated quickly. The batteries
    will be exchanged without human intervention — likely in a carwash-like drive
    thru</p></li><li><p>Vehicles (being electric) will be able to provide portable
    power for a variety of purposes (which will also be sold as a service) — construction
    job sites (why use generators), disaster/power failures, events, etc. They may
    even temporarily or permanently replace power distribution networks (i.e. power
    lines) for remote locations — imagine a distributed power generation network with
    autonomous vehicles providing “last mile” services to some locations</p></li><li><p>Driver’s
    licenses will slowly go away as will the Department of Motor Vehicles in most
    states. Other forms of ID may emerge as people no longer carry driver’s licenses.
    This will probably correspond with the inevitable digitization of all personal
    identification — via prints, retina scans or other biometric scanning</p></li><li><p>There
    won’t be any parking lots or parking spaces on roads or in buildings. Garages
    will be repurposed — maybe as mini loading docks for people and deliveries. Aesthetics
    of homes and commercial buildings will change as parking lots and spaces go away.
    There will be a multi-year boom in landscaping and basement and garage conversions
    as these spaces become available</p></li><li><p>Traffic policing will become redundant.
    Police transport will also likely change quite a bit. Unmanned police vehicles
    may become more common and police officers may use commercial transportation to
    move around routinely. This may dramatically change the nature of policing, with
    newfound resources from the lack of traffic policing and dramatically less time
    spent moving around</p></li><li><p>There will be no more local mechanics, car
    dealers, consumer car washes, auto parts stores or gas stations. Towns that have
    been built around major thoroughfares will change or fade</p></li><li><p>The auto
    insurance industry as we know it will go away (as will the significant investing
    power of the major players of this industry). Most car companies will go out of
    business, as will most of their enormous supplier networks. There will be many
    fewer net vehicles on the road (maybe 1/10th, perhaps even less) that are also
    more durable, made of fewer parts and much more commoditized</p></li><li><p>Traffic
    lights and signs will become obsolete. Vehicles may not even have headlights as
    infrared and radar take the place of the human light spectrum. The relationship
    between pedestrians (and bicycles) and cars and trucks will likely change dramatically.
    Some will come in the form of cultural and behavioral changes as people travel
    in groups more regularly and walking or cycling becomes practical in places where
    it isn’t today</p></li><li><p>Multi-modal transportation will become a more integrated
    and normal part of our ways of moving around. In other words, we’ll often take
    one type of vehicle to another, especially when traveling longer distances. With
    coordination and integration, the elimination of parking and more deterministic
    patterns, it will become ever-more efficient to combine modes of transport</p></li><li><p>The
    power grid will change. Power stations via alternative power sources will become
    more competitive and local. Consumers and small businesses with solar panels,
    small scale tidal or wave power generators, windmills and other local power generation
    will be able to sell KiloWattHours to the companies who own the vehicles. This
    will change “net metering” rules and possibly upset the overall power delivery
    model. It might even be the beginning of truly distributed power creation and
    transport. There will likely be a significant boom in innovation in power production
    and delivery models. Over time, ownership of these services will probably be consolidated
    across a very small number of companies</p></li><li><p>Traditional petroleum products
    (and other fossil fuels) will become much less valuable as electric cars replace
    fuel powered vehicles and as alternative energy sources become more viable with
    portability of power (transmission and conversion eat tons of power). There are
    many geopolitical implications to this possible shift. As implications of climate
    change become ever-clearer and present, these trends will likely accelerate. Petroleum
    will continue to be valuable for making plastics and other derived materials,
    but will not be burned for energy at any scale. Many companies, oil-rich countries
    and investors have already begun accommodating for these changes</p></li><li><p>Entertainment
    funding will change as the auto industry’s ad spending goes away. Think about
    how many ads you see or hear about cars, car financing, car insurance, car accessories
    and car dealers. There are likely to be many other structural and cultural changes
    that come from the dramatic changes to the transportation industry. We’ll stop
    saying “shift into high gear” and other driving-related colloquialisms as the
    references will be lost on future generations</p></li><li><p>The recent corporate
    tax rate reductions in the “..Act to Provide for Reconciliation Pursuant to Titles
    II and V of the Concurrent Resolution on the Budget for Fiscal Year 2018” will
    accelerate investments in automation including self-driving vehicles and other
    forms of transportation automation. Flush with new cash and incentives to invest
    capital soon, many businesses will invest in technology and solutions that reduce
    their labor costs.</p></li><li><p>The car financing industry will go away, as
    will the newly huge derivative market for packaged sub-prime auto loans which
    will likely itself cause a version of the 2008–2009 financial crisis as it blows
    up.</p></li><li><p>Increases in unemployment, increased student loan, vehicle
    and other debt defaults could quickly spiral into a full depression. The world
    that emerges on the other side will likely have even more dramatic income and
    wealth stratification as entry level jobs related to transportation and the entire
    supply chain of the existing transportation system go away. The convergence of
    this with hyper-automation in production and service delivery (AI, robotics, low-cost
    computing, business consolidation, etc) may permanently change how societies are
    organized and how people spend their time</p></li><li><p>There will be many new
    innovations in luggage and bags as people no longer keep stuff in cars and loading
    and unloading packages from vehicles becomes much more automated. The traditional
    trunk size and shape will change. Trailers or other similar detachable devices
    will become much more commonplace to add storage space to vehicles. Many additional
    on demand services will become available as transportation for goods and services
    becomes more ubiquitous and cheaper. Imagine being able to design, 3D print and
    put on an outfit as you travel to a party or the office (if you’re still going
    to an office)…</p></li><li><p>Consumers will have more money as transportation
    (a major cost, especially for lower income people and families) gets much cheaper
    and ubiquitous — though this may be offset by dramatic reductions in employment
    as technology changes many times faster than people’s ability to adapt to new
    types of work</p></li><li><p>Demand for taxi and truck drivers will go down, eventually
    to zero. Someone born today might not understand what a truck driver is or even
    understand why someone would do that job — much like people born in the last 30
    years don’t understand how someone could be employed as a switchboard operator</p></li><li><p>The
    politics will get ugly as lobbyists for the auto and oil industries unsuccessfully
    try to stop the driverless car. They’ll get even uglier as the federal government
    deals with assuming huge pension obligations and other legacy costs associated
    with the auto industry. My guess is that these pension obgligations won’t ultimately
    be honored and certain communities will be devastated. The same may be true of
    pollution clean-up efforts around the factories and chemical plants that were
    once major components of the vehicle supply chain</p></li><li><p>The new players
    in vehicle design and manufacturing will be a mix of companies like Uber, Google
    and Amazon and companies you don’t yet know. There will probably be 2 or 3 major
    players who control &gt;80% of the customer-facing transportation market. There
    may become API-like access to these networks for smaller players — much like app
    marketplaces for iPhone and Android. However, the majority of the revenue will
    flow to a few large players as it does today to Apple and Google for smartphones</p></li><li><p>Supply
    chains will be disrupted as shipping changes. Algorithms will allow trucks to
    be fuller. Excess (latent) capacity will be priced cheaper. New middlemen and
    warehousing models will emerge. As shipping gets cheaper, faster and generally
    easier, retail storefronts will continue to lose footing in the marketplace.</p></li><li><p>The
    role of malls and other shopping areas will continue to shift — to be replaced
    by places people go for services, not products. There will be virtually no face
    to face purchases of physical goods.</p></li><li><p>Amazon and/or a few other
    large players will put Fedex, UPS and USPS out of business as their transportation
    network becomes orders of magnitude more cost efficient than existing models —
    largely from a lack of legacy costs like pensions, higher union labor costs and
    regulations (especially USPS) that won’t keep up with the pace of technology change.
    3D printing will also contribute to this as many day-to-day products are printed
    at home rather than purchased.</p></li><li><p>The same vehicles will often transport
    people and goods as algorithms optimize all routes. And, off-peak utilization
    will allow for other very inexpensive delivery options. In other words, packages
    will be increasingly delivered at night. Add autonomous drone aircraft to this
    mix and there’ll be very little reason to believe that traditional carriers (Fedex,
    USPS, UPS, etc) will survive at all.</p></li><li><p>Roads will be much emptier
    and smaller (over time) as self-driving cars need much less space between them
    (a major cause of traffic today), people will share vehicles more than today (carpooling),
    traffic flow will be better regulated and algorithmic timing (i.e. leave at 10
    versus 9:30) will optimize infrastructure utilization. Roads will also likely
    be smoother and turns optimally banked for passenger comfort. High speed underground
    and above ground tunnels (maybe integrating hyperloop technology or this <a href="http://www.arrivo-loop.com/updates/">novel
    magnetic track solution)</a> will become the high speed network for long haul
    travel.</p></li><li><p>Short hop domestic air travel may be largely displaced
    by multi-modal travel in autonomous vehicles. This may be countered by the advent
    of lower cost, more <a href="https://techcrunch.com/2017/02/14/dubai-plans-to-introduce-flying-drone-taxis-as-early-as-this-summer/">automated
    air travel</a>. This too may become part of integrated, multi-modal transportation.</p></li><li><p>Roads
    will wear out much more slowly with fewer vehicle miles, lighter vehicles (with
    less safety requirements). New road materials will be developed that drain better,
    last longer and are more environmentally friendly. These materials might even
    be power generating (solar or reclamation from vehicle kinetic energy). At the
    extreme, they may even be replaced by radically different designs — tunnels, magnetic
    tracks, other hyper-optimized materials</p></li><li><p>Premium vehicle services
    will have more compartmentalized privacy, more comfort, good business features
    (quiet, wifi, bluetooth for each passenger, etc), massage services and beds for
    sleeping. They may also allow for meaningful in-transit real and virtual meetings.
    This will also likely include aromatherapy, many versions of in-vehicle entertainment
    systems and even virtual passengers to keep you company.</p></li><li><p>Exhilaration
    and emotion will almost entirely leave transportation. People won’t brag about
    how nice, fast, comfortable their cars are. Speed will be measured by times between
    end points, not acceleration, handling or top speed.</p></li><li><p>Cities will
    become much more dense as fewer roads and vehicles will be needed and transport
    will be cheaper and more available. The “walkable city” will continue to be more
    desirable as walking and biking become easier and more commonplace. When costs
    and timeframes of transit change, so will the dynamics of who lives and works
    where.</p></li><li><p>People will know when they leave, when they’ll get where
    they’re going. There will be few excuses for being late. We will be able to leave
    later and cram more into a day. We’ll also be able to better track kids, spouses,
    employees and so forth. We’ll be able to know exactly when someone will arrive
    and when someone needs to leave to be somewhere at a particular time.</p></li><li><p>There
    will be no more DUI/OUI offenses. Restaurants and bars will sell more alcohol.
    People will consume more as they no longer need to consider how to get home and
    will be able to consume inside vehicles</p></li><li><p>We’ll have less privacy
    as interior cameras and usage logs will track when and where we go and have gone.
    Exterior cameras will also probably record surroundings, including people. This
    may have a positive impact on crime, but will open up many complex privacy issues
    and likely many lawsuits. Some people may find clever ways to game the system
    — with physical and digital disguises and spoofing.</p></li><li><p>Many lawyers
    will lose sources of revenue — traffic offenses, crash litigation will reduce
    dramatically. Litigation will more likely be “big company versus big company”
    or “individuals against big companies”, not individuals against each other. These
    will settle more quickly with less variability. Lobbyists will probably succeed
    in changing the rules of litigation to favor the bigger companies, further reducing
    the legal revenue related to transportation. Forced arbitration and other similar
    clauses will become an explicit component of our contractual relationship with
    transportation providers.</p></li><li><p>Some countries will nationalize parts
    of their self-driving transportation networks which will result in lower costs,
    fewer disruptions and less innovation.</p></li><li><p>Cities, towns and police
    forces will lose revenue from traffic tickets, tolls (likely replaced, if not
    eliminated) and fuel tax revenues drop precipitously. These will probably be replaced
    by new taxes (probably on vehicle miles). These may become a major political hot-button
    issue differentiating parties as there will probably be a range of regressive
    versus progressive tax models. Most likely, this will be a highly regressive tax
    in the US, as fuel taxes are today.</p></li><li><p>Some employers and/or government
    programs will begin partially or entirely subsidizing transportation for employees
    and/or people who need the help. The tax treatment of this perk will also be very
    political.</p></li><li><p>Ambulance and other emergency vehicles will likely be
    used less and change in nature. More people will take regular autonomous vehicles
    instead of ambulances. Ambulances will transport people faster. Same may be true
    of military vehicles.</p></li><li><p>There will be significant innovations in
    first response capabilities as dependencies on people become reduced over time
    and as distributed staging of capacity becomes more common.</p></li><li><p>Airports
    will allow vehicles right into the terminals, maybe even onto the tarmac, as increased
    controls and security become possible. Terminal design may change dramatically
    as transportation to and from becomes normalized and integrated. The entire nature
    of air travel may change as integrated, multi-modal transport gets more sophisticated.
    Hyper-loops, high speed rail, automated aircraft and other forms of rapid travel
    will gain as traditional hub and spoke air travel on relatively large planes lose
    ground.</p></li><li><p>Innovative app-like marketplaces will open up for in-transit
    purchases, ranging from concierge services to food to exercise to merchandise
    to education to entertainment purchases. VR will likely play a large role in this.
    With integrated systems, VR (via headsets or screens or holograms) will become
    standard fare for trips more than a few minutes in duration.</p></li><li><p>Transportation
    will become more tightly integrated and packaged into many services — dinner includes
    the ride, hotel includes local transport, etc. This may even extend to apartments,
    short-term rentals (like AirBnB) and other service providers.</p></li><li><p>Local
    transport of nearly everything will become ubiquitous and cheap — food, everything
    in your local stores. Drones will likely be integrated into vehicle designs to
    deal with “last few feet” on pickup and delivery. This will accelerate the demise
    of traditional retail stores and their local economic impact.</p></li><li><p>Biking
    and walking will become easier, safer and more common as roads get safer and less
    congested, new pathways (reclaimed from roads/parking lots/roadside parking) come
    online and with cheap, reliable transport available as a backup.</p></li><li><p>More
    people will participate in vehicle racing (cars, off road, motorcycles) to replace
    their emotional connection to driving. Virtual racing experiences may also grow
    in popularity as fewer people have the real experience of driving.</p></li><li><p>Many,
    many fewer people will be injured or killed on roads, though we’ll expect zero
    and be disproportionately upset when accidents do happen. Hacking and non-malicious
    technical issues will replace traffic as the main cause of delays. Over time,
    resilience will increase in the systems.</p></li><li><p>Hacking of vehicles will
    be a serious issue. New software and communications companies and technologies
    will emerge to address these issues. We’ll see the first vehicle hacking and its
    consequences. Highly distributed computing, perhaps using some form of blockchain,
    will likely become part of the solution as a counterbalance to systemic catastrophes
    — such as many vehicles being affected simultaneously. There will probably be
    a debate about whether and how law enforcement can control, observe and restrict
    transportation.</p></li><li><p>Many roads and bridges will be privatized as a
    small number of companies control most transport and make deals with municipalities.
    Over time, government may entirely stop funding roads, bridges and tunnels. There
    will be a significant legislative push to privatize more and more of the transportation
    network. Much like Internet traffic, there will likely become tiers of prioritization
    and some notion of in-network versus out-of-network travel and tolls for interconnection.
    Regulators will have a tough time keeping up with these changes. Most of this
    will be transparent to end users, but will probably create enormous barriers to
    entry for transportation start-ups and ultimately reduce options for consumers.</p></li><li><p>Innovators
    will come along with many awesome uses for driveways and garages that no longer
    contain cars.</p></li><li><p>There will be a new network of clean, safe, pay-to-use
    restrooms and other services (food, drinks, etc) that become part of the value-add
    of competing service providers</p></li><li><p>Mobility for seniors and people
    with disabilities will be greatly improved (over time)</p></li><li><p>Parents
    will have more options to move around their kids on their own. Premium secure
    end-to-end children’s transport services will likely emerge. This may change many
    family relationships and increase the accessibility of services to parents and
    children. It may also further stratify the experiences of families with higher
    income and those with lower income.</p></li><li><p>Person to person movement of
    goods will become cheaper and open up new markets — think about borrowing a tool
    or buying something on Craigslist. Latent capacity will make transporting goods
    very inexpensive. This may also open up new opportunities for P2P services at
    a smaller scale — like preparing food or cleaning clothes.</p></li><li><p>People
    will be able to eat/drink in transit (like on a train or plane), consume more
    information (reading, podcasts, video, etc). This will open up time for other
    activities and perhaps increased productivity.</p></li><li><p>Some people may
    have their own “pods” to get into which will then be picked up by an autonomous
    vehicle, moved between vehicles automatically for logistic efficiencies. These
    may come in varieties of luxury and quality — the Louis Vuitton pod may replace
    the Louis Vuitton trunk as the mark of luxury travel</p></li><li><p>There will
    be no more getaway vehicles or police vehicle chases.</p></li><li><p>Vehicles
    will likely be filled to the brim with advertising of all sorts (much of which
    you could probably act on in-route), though there will probably be ways to pay
    more to have an ad free experience. This will include highly personalized en route
    advertising that is particularly relevant to who you are, where you’re going.</p></li><li><p>These
    innovations will make it to the developing world where congestion today is often
    remarkably bad and hugely costly. Pollution levels will come down dramatically.
    Even more people will move to the cities. Productivity levels will go up. Fortunes
    will be made as these changes happen. Some countries and cities will be transformed
    for the better. Some others will likely experience hyper-privatization, consolidation
    and monopoly-like controls. This may play out much like the roll-out of cell services
    in these countries — fast, consolidated and inexpensive.</p></li><li><p>Payment
    options will be greatly expanded, with packaged deals like cell phones, pre-paid
    models, pay-as-you-go models being offered. Digital currency transacted automatically
    via phones/devices will probably quickly replace traditional cash or credit card
    payments.</p></li><li><p>There will likely be some very clever innovations for
    movement of pets, equipment, luggage and other non-people items. Autonomous vehicles
    in the medium future (10–20 years) may have radically different designs that support
    carrying significantly more payload.</p></li><li><p>Some creative marketers will
    offer to partially or fully subsidize rides where customers deliver value — by
    taking surveys, by participating in virtual focus groups, by promoting their brand
    via social media, etc.</p></li><li><p>Sensors of all sorts will be embedded in
    vehicles that will have secondary uses — like improving weather forecasting, crime
    detection and prevention, finding fugitives, infrastructure conditions (such as
    potholes). This data will be monetized, likely by the companies who own the transportation
    services.</p></li><li><p>Companies like Google and Facebook will add to their
    databases everything about customer movements and locations. Unlike GPS chips
    that only tell them where someone is at the moment (and where they’ve been), autonomous
    vehicle systems will know where you’re going in real-time (and with whom).</p></li><li><p>Autonomous
    vehicles will create some new jobs and opportunities for entrepreneurs. However,
    these will be off-set many times by extraordinary job losses by nearly everyone
    in the transportation value chain today. In the autonomous future, a large number
    of jobs will go away. This includes drivers (which is in many states today the
    most common job), mechanics, gas station employees, most of the people who make
    cars and car parts or support those who do (due to huge consolidation of makers
    and supply chains and manufacturing automation), the marketing supply chain for
    vehicles, many people who work on and build roads/bridges, employees of vehicle
    insurance and financing companies (and their partners/suppliers), toll booth operators
    (most of whom have already been displaced), many employees of restaurants that
    support travelers, truck stops, retail workers and all the people whose businesses
    support these different types of companies and workers.</p></li><li><p>There will
    be some hardcore hold-outs who really like driving. But, over time, they’ll become
    a less statistically relevant voting group as younger people, who’ve never driven,
    will outnumber them. At first, this may be a 50 state regulated system — where
    driving yourself may actually become illegal in some states in the next 10 years
    while other states may continue to allow it for a long time. Some states will
    try, unsuccessfully, to block autonomous vehicles.</p></li><li><p>There will be
    lots of discussions about new types of economic systems — from universal basic
    income to new variations of socialism to a more regulated capitalist system —
    that will result from the enormous impacts of autonomous vehicles.</p></li><li><p>In
    the path to a truly driverless future, there will be a number of key tipping points.
    At the moment, freight delivery may push autonomous vehicle use sooner than people
    transport. Large trucking companies may have the financial means and legislative
    influence to make rapid, dramatic changes. They are also better positioned to
    support hybrid approaches where only parts of their fleet or parts of the routes
    are automated.</p></li><li><p>Autonomous vehicles will radically change the power
    centers of the world. They will be the beginning of the end of burning hydrocarbons.
    The powerful interests who control these industries today will fight viciously
    to stop this. There may even be wars to slow down this process as oil prices start
    to plummet and demand dries up.</p></li><li><p>Autonomous vehicles will continue
    to play a larger role in all aspects of war — from surveillance to troop/robot
    movement to logistics support to actual engagement. Drones will be complemented
    by additional on-the-ground, in-space, in-the-water and under-the-water autonomous
    vehicles.</p></li></ol><p>Note: My original article was inspired by a presentation
    by <a href="https://medium.com/u/18b42f74698f">Ryan Chin</a>, CEO of <a href="http://optimusride.com/">Optimus
    Ride</a>speak at an MIT event about autonomous vehicles. He really got me thinking
    about how profound these advances could be to our lives. I’m sure some of my thoughts
    above came from him.</p>'
  :author: Geoff Nesnow
  :topic: future
- :url: https://medium.com/@cdixon/eleven-reasons-to-be-excited-about-the-future-of-technology-ef5f9b939cb2?source=search_post
  :title: Eleven Reasons To Be Excited About The Future of Technology
  :content: '<p>“The strongest force propelling human progress has been the swift
    advance and wide diffusion of technology.” — The Economist</p><p>In the year 1820,
    a person could <a href="https://ourworldindata.org/life-expectancy/">expect to
    live</a> less than 35 years, 94% of the global population <a href="https://ourworldindata.org/world-poverty/">lived
    in extreme poverty</a>, and less that 20% of the population was literate. Today,
    human life expectancy is over 70 years, less that 10% of the global population
    lives in extreme poverty, and <a href="http://www.oecd.org/statistics/How-was-life.pdf">over
    80% of people</a> are literate. These improvements are due mainly to advances
    in technology, beginning in the industrial age and continuing today in the information
    age.</p><p>There are many exciting new technologies that will continue to transform
    the world and improve human welfare. Here are eleven of them.</p><h2>1. Self-Driving
    Cars</h2><p>Self-driving cars exist today that are safer than human-driven cars
    in most driving conditions. Over the next 3–5 years they‘ll get even safer, and
    will begin to go mainstream.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*HfoJs9tCyyr6VeLvD45wyQ.gif"
    alt=""></p><p>The <a href="http://www.who.int/mediacentre/factsheets/fs358/en/">World
    Health Organization estimates</a> that 1.25 million people die from car-related
    injuries per year. Half of the deaths are pedestrians, bicyclists, and motorcyclists
    hit by cars. Cars are the leading cause of death for people ages 15–29 years old.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*SNGdeK4GNUhjL6wlh7sfJw.png" alt=""></p><p>Just
    as cars reshaped the world in the 20th century, so will self-driving cars in the
    21st century. In most cities, <a href="http://oldurbanist.blogspot.com.es/2011/12/we-are-25-looking-at-street-area.html">between
    20–30%</a> of usable space is taken up by parking spaces, and most cars are parked
    <a href="http://www.reinventingparking.org/2013/02/cars-are-parked-95-of-time-lets-check.html">about
    95%</a> of the time. Self-driving cars will be in almost continuous use (most
    likely hailed from a smartphone app), thereby dramatically reducing the need for
    parking. Cars will communicate with one another to avoid accidents and traffic
    jams, and riders will be able to spend commuting time on other activities like
    work, education, and socializing.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*k6w2wkkREpVeu9_cS2xxtg.png"
    alt="Source: [Tech Insider](http://www.techinsider.io/chris-dixon-future-of-self-driving-cars-interview-2016-6)"><em>Source:
    <a href="http://www.techinsider.io/chris-dixon-future-of-self-driving-cars-interview-2016-6">Tech
    Insider</a></em></p><h2>2. Clean Energy</h2><p>Attempts to fight climate change
    by reducing the demand for energy <a href="https://en.wikipedia.org/wiki/World_energy_consumption">haven’t
    worked</a>. Fortunately, scientists, engineers, and entrepreneurs have been working
    hard on the supply side to make clean energy convenient and cost-effective.</p><p>Due
    to steady technological and manufacturing advances, the price of solar cells has
    <a href="http://www.saskwind.ca/wind-cost-decline/">dropped 99.5% since 1977</a>.
    Solar will soon be more cost efficient than fossil fuels. The cost of wind energy
    has also dropped to an all-time low, and in the last decade represented about
    a <a href="http://energy.gov/articles/top-10-things-you-didnt-know-about-wind-power">third
    of newly installed</a> US energy capacity.</p><p>Forward thinking organizations
    are taking advantage of this. For example, in India there is an initiative to
    convert airports to self-sustaining clean energy.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*idAW1ONI_iIeevzPaUv-pg.png"
    alt="Airport in Kochi, India (source: [Clean Technica](http://cleantechnica.com/2015/08/21/1st-airport-world-go-100-solar-india/))"><em>Airport
    in Kochi, India (source: <a href="http://cleantechnica.com/2015/08/21/1st-airport-world-go-100-solar-india/">Clean
    Technica</a>)</em></p><p>Tesla is making high-performance, affordable electric
    cars, and <a href="http://www.treehugger.com/cars/tesla-built-858-new-charging-stations-us-over-past-12-months.html">installing</a>
    electric charging stations <a href="http://mashable.com/2016/04/01/tesla-supercharger-expansion/#v93tzyDFl5qR">worldwide</a>.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*YwcTRiWETVn4aXiZhEJtcg.png" alt="Tesla
    Model 3 and US supercharger locations"><em>Tesla Model 3 and US supercharger locations</em></p><p>There
    are hopeful signs that clean energy could soon be reaching a tipping point. For
    example, in Japan, there are now more electric charging stations than gas stations.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*RNmY6abYWA2n2W6EgP3lcA.png" alt="Source:
    [The Guardian](https://www.theguardian.com/world/2016/may/10/japan-electric-car-charge-points-petrol-stations)"><em>Source:
    <a href="https://www.theguardian.com/world/2016/may/10/japan-electric-car-charge-points-petrol-stations">The
    Guardian</a></em></p><p>And Germany produces so much renewable energy, it sometimes
    produces even more than it can use.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*wETYiSDThJ5fQYIVWuw8aA.png"
    alt="Source: [Time Magazine](http://time.com/4325882/german-renewable-energy-high/)"><em>Source:
    <a href="http://time.com/4325882/german-renewable-energy-high/">Time Magazine</a></em></p><h2>3.
    Virtual and Augmented Reality</h2><p>Computer processors only recently became
    fast enough to power comfortable and convincing virtual and augmented reality
    experiences. Companies like Facebook, Google, Apple, and Microsoft are investing
    billions of dollars to make VR and AR more immersive, comfortable, and affordable.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*6cmd8P-bPYRU1olrJHsvfw.gif" alt="Toybox
    demo from Oculus"><em>Toybox demo from Oculus</em></p><p>People sometimes think
    VR and AR will be used only for gaming, but over time they will be used for all
    sorts of activities. For example, we’ll use them to manipulate 3-D objects:</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*q_pqQCTcTETf4G-ARUm00A.jpeg" alt="Augmented
    reality computer interface (from [Iron Man](http://www.imdb.com/title/tt0371746/))"><em>Augmented
    reality computer interface (from <a href="http://www.imdb.com/title/tt0371746/">Iron
    Man</a>)</em></p><p>To meet with friends and colleagues from around the world:</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*MJcHcqCWEzGxDIVDGpcHcA.jpeg" alt="Augmented
    reality teleconference (from [The Kingsman](http://www.imdb.com/title/tt2802144/))"><em>Augmented
    reality teleconference (from <a href="http://www.imdb.com/title/tt2802144/">The
    Kingsman</a>)</em></p><p>And even for medical applications, like treating phobias
    or helping rehabilitate paralysis victims:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*q_J7Ql2iVfdDYc5t6hM98Q.png"
    alt="Source: [New Scientist](https://www.newscientist.com/article/2100780-virtual-reality-helps-eight-paralysed-people-feel-their-legs/)"><em>Source:
    <a href="https://www.newscientist.com/article/2100780-virtual-reality-helps-eight-paralysed-people-feel-their-legs/">New
    Scientist</a></em></p><p>VR and AR have been dreamed about by science fiction
    fans for decades. In the next few years, they’ll finally become a mainstream reality.</p><h2>4.
    Drones and Flying Cars</h2><blockquote><h1>“Roads? Where we’re going we don’t
    need… roads.” — Dr. Emmet Brown</h1></blockquote><p>GPS started out as a military
    technology but is now used to hail taxis, get mapping directions, and hunt Pokémon.
    Likewise, drones started out as a military technology, but are increasingly being
    used for a wide range of consumer and commercial applications.</p><p>For example,
    drones are being used to inspect critical infrastructure like bridges and power
    lines, to survey areas struck by natural disasters, and many other creative uses
    like fighting animal poaching.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*hLhAdWXECMyNLwrHfad6pA.png"
    alt="Source: [NBC News](http://www.nbcnews.com/news/world/air-shepherd-uses-drones-stop-elephant-rhino-poachers-africa-n335801)"><em>Source:
    <a href="http://www.nbcnews.com/news/world/air-shepherd-uses-drones-stop-elephant-rhino-poachers-africa-n335801">NBC
    News</a></em></p><p>Amazon and Google are building drones to deliver household
    items.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*s1eQciCtoaD_AaovzJouAA.gif"
    alt="Amazon delivery drone"><em>Amazon delivery drone</em></p><p>The startup <a
    href="http://flyzipline.com/product/">Zipline</a> uses drones to deliver medical
    supplies to remote villages that can’t be accessed by roads.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*BDepNtZOTWXNOi5F4Dk3Dg.png"
    alt="Source: [The Verge](http://www.theverge.com/2016/8/2/12350274/zipline-drone-delivery-us-launch-blood-medicine)"><em>Source:
    <a href="http://www.theverge.com/2016/8/2/12350274/zipline-drone-delivery-us-launch-blood-medicine">The
    Verge</a></em></p><p>There is also a new wave of startups working on flying cars
    (including <a href="http://www.bloomberg.com/news/articles/2016-06-09/welcome-to-larry-page-s-secret-flying-car-factories">two</a>
    funded by the cofounder of Google, Larry Page).</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*FJyVIp3MI_k7mVM5obpSsA.png"
    alt="The Terrafugia TF-X flying car ([source](https://thestack.com/world/2015/12/18/flying-car-receives-u-s-airspace-approval-for-testing/))"><em>The
    Terrafugia TF-X flying car (<a href="https://thestack.com/world/2015/12/18/flying-car-receives-u-s-airspace-approval-for-testing/">source</a>)</em></p><p>Flying
    cars use the same advanced technology used in drones but are large enough to carry
    people. Due to advances in materials, batteries, and software, flying cars will
    be significantly more affordable and convenient than today’s planes and helicopters.</p><h2>5.
    Artificial Intelligence</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*I2dRn7D8ZZM7nI2IvvMFDw.jpeg"
    alt=""></p><blockquote><p>‘’It may be a hundred years before a computer beats
    humans at Go — maybe even longer.” — <a href="http://www.nytimes.com/1997/07/29/science/to-test-a-powerful-computer-play-an-ancient-game.html?pagewanted=all">New
    York Times, 1997</a>“Master of Go Board Game Is Walloped by Google Computer Program”
    —<a href="http://www.nytimes.com/2016/03/10/world/asia/google-alphago-lee-se-dol.html">
    New York Times, 2016</a></p></blockquote><p>Artificial intelligence has made rapid
    advances in the last decade, due to new algorithms and massive increases in data
    collection and computing power.</p><p>AI can be applied to almost any field. For
    example, in photography an AI technique called artistic style transfer transforms
    photographs into the style of a given painter:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*aHFJuj-jhnP4zHY1dD7tRA.png"
    alt="[Source](https://no2147483647.wordpress.com/2015/12/21/deep-learning-for-hackers-with-mxnet-2/)"><em><a
    href="https://no2147483647.wordpress.com/2015/12/21/deep-learning-for-hackers-with-mxnet-2/">Source</a></em></p><p>Google
    built an AI system that controls its datacenter power systems, saving hundreds
    of millions of dollars in energy costs.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*HpTNGOsV1a0PpqjQZNXKEQ.png"
    alt="Source: [Bloomberg](http://www.bloomberg.com/news/articles/2016-07-19/google-cuts-its-giant-electricity-bill-with-deepmind-powered-ai)"><em>Source:
    <a href="http://www.bloomberg.com/news/articles/2016-07-19/google-cuts-its-giant-electricity-bill-with-deepmind-powered-ai">Bloomberg</a></em></p><p>The
    broad promise of AI is to liberate people from repetitive mental tasks the same
    way the industrial revolution liberated people from repetitive physical tasks.</p><blockquote><p>“If
    AI can help humans become better chess players, it stands to reason that it can
    help us become better pilots, better doctors, better judges, better teachers.”
    — <a href="http://www.wired.com/2014/10/future-of-artificial-intelligence/">Kevin
    Kelly</a></p></blockquote><p>Some people worry that AI will destroy jobs. History
    has shown that while new technology does indeed eliminate jobs, it also creates
    new and better jobs to replace them. For example, with advent of the personal
    computer, the number of typographer jobs dropped, but the increase in graphic
    designer jobs more than made up for it.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*c_lt2s5TuSoOfmPb_Rv46w.png"
    alt="Source: [Harvard Business Review](https://hbr.org/2016/03/computers-dont-kill-jobs-but-do-increase-inequality)"><em>Source:
    <a href="https://hbr.org/2016/03/computers-dont-kill-jobs-but-do-increase-inequality">Harvard
    Business Review</a></em></p><p>It is much easier to imagine jobs that will go
    away than new jobs that will be created. Today millions of people work as app
    developers, ride-sharing drivers, drone operators, and social media marketers—
    jobs that didn’t exist and would have been difficult to even imagine ten years
    ago.</p><h2>6. Pocket Supercomputers for Everyone</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*5tt6F_Cxnf5n7J5v6Lx0Ug.png"
    alt=""></p><p>By 2020, 80% of adults on earth <a href="">will have</a> an internet-connected
    smartphone. An iPhone 6 has about 2 billion transistors, roughly 625 times more
    transistors than a 1995 Intel Pentium computer. Today’s smartphones are what used
    to be considered supercomputers.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*vovBLv3ePKce3dPrU3q9Lg.png"
    alt="Visitors to the pope (source: [Business Insider](http://www.businessinsider.com/vatican-square-2005-and-2013-2013-3))"><em>Visitors
    to the pope (source: <a href="http://www.businessinsider.com/vatican-square-2005-and-2013-2013-3">Business
    Insider</a>)</em></p><p>Internet-connected smartphones give ordinary people abilities
    that, just a short time ago, were only available to an elite few:</p><blockquote><p>“Right
    now, a Masai warrior on a mobile phone in the middle of Kenya has better mobile
    communications than the president did 25 years ago. If he’s on a smart phone using
    Google, he has access to more information than the U.S. president did just 15
    years ago.” — <a href="http://edition.cnn.com/2012/05/06/opinion/diamandis-abundance-innovation/">Peter
    Diamandis</a></p></blockquote><h2>7. Cryptocurrencies and Blockchains</h2><blockquote><h1>“If
    you asked people in 1989 what they needed to make their life better, it was unlikely
    that they would have said a decentralized network of information nodes that are
    linked using hypertext.” — <a href="http://farmerandfarmer.org/mastery/builder.html">Farmer
    &amp; Farmer</a></h1></blockquote><p>Protocols are the plumbing of the internet.
    Most of the protocols we use today were developed decades ago by academia and
    government. Since then, protocol development mostly stopped as energy shifted
    to developing proprietary systems like social networks and messaging apps.</p><p>Cryptocurrency
    and blockchain technologies are <a href="http://avc.com/2016/07/the-golden-age-of-open-protocols/">changing
    this</a> by providing a new business model for internet protocols. This year alone,
    <a href="https://medium.com/the-coinbase-blog/app-coins-and-the-dawn-of-the-decentralized-business-model-8b8c951e734f#.2atvp1cxd">hundreds
    of millions of dollars</a> were raised for a broad range of innovative blockchain-based
    protocols.</p><p>Protocols based on blockchains also have capabilities that previous
    protocols didn’t. For example, <a href="https://en.wikipedia.org/wiki/Ethereum">Ethereum</a>
    is a new blockchain-based protocol that can be used to create smart contracts
    and trusted databases that are immune to corruption and censorship.</p><h2>8.
    High-Quality Online Education</h2><p>While college tuition <a href="http://www.cnbc.com/2015/06/16/why-college-costs-are-so-high-and-rising.html">skyrockets</a>,
    anyone with a smartphone can study almost any topic online, accessing educational
    content that is mostly free and increasingly high-quality.</p><p>Encyclopedia
    Britannica <a href="http://www.csmonitor.com/Business/Latest-News-Wires/2012/0314/Encyclopaedia-Britannica-After-244-years-in-print-only-digital-copies-sold">used
    to cost $1,400</a>. Now anyone with a smartphone can instantly access Wikipedia.
    You used to have to go to school or buy programming books to learn computer programming.
    Now you can learn from a community of over 40 million programmers at <a href="http://stackoverflow.com">Stack
    Overflow</a>. YouTube has millions of hours of free tutorials and lectures, many
    of which are produced by top professors and universities.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*NZTqnqYbOPv6sf7gCVLz8g.png"
    alt="UC Berkeley Physics on [Youtube](https://www.youtube.com/user/UCBerkeley/videos?sort=p&amp;view=0&amp;flow=list)"><em>UC
    Berkeley Physics on <a href="https://www.youtube.com/user/UCBerkeley/videos?sort=p&view=0&flow=list">Youtube</a></em></p><p>The
    quality of online education is getting better all the time. For the last 15 years,
    <a href="http://ocw.mit.edu/index.htm">MIT has been recording lectures</a> and
    compiling materials that cover over 2000 courses.</p><blockquote><p>“The idea
    is simple: to publish all of our course materials online and make them widely
    available to everyone.” — Dick K.P. Yue, Professor, MIT School of Engineering</p></blockquote><p>As
    perhaps the greatest research university in the world, MIT has always been ahead
    of the trends. Over the next decade, expect many other schools to follow MIT’s
    lead.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*W-i0QTotXS-K4MU9qbpylQ.png"
    alt="Source: [Futurism](http://futurism.com/free-ivy-league-education-access-over-2000-classes-from-mit-for-nothing/)"><em>Source:
    <a href="http://futurism.com/free-ivy-league-education-access-over-2000-classes-from-mit-for-nothing/">Futurism</a></em></p><h2>9.
    Better Food through Science</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*O5VQyJRhI2-sHYzZPrHSBQ.png"
    alt="Source: [National Geographic](http://environment.nationalgeographic.com/environment/freshwater/embedded-water/)"><em>Source:
    <a href="http://environment.nationalgeographic.com/environment/freshwater/embedded-water/">National
    Geographic</a></em></p><p>Earth is running out of farmable land and fresh water.
    This is partly because our food production systems are incredibly inefficient.
    It takes an astounding 1799 gallons of water to produce 1 pound of beef.</p><p>Fortunately,
    a variety of new technologies are being developed to improve our food system.</p><p>For
    example, entrepreneurs are developing new food products that are tasty and nutritious
    substitutes for traditional foods but far more environmentally friendly. The startup
    <a href="http://www.impossiblefoods.com/">Impossible Foods</a> invented meat products
    that look and taste like the real thing but are actually made of plants.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*bUV4b3Xp0mvvdA8dp1hMtA.png" alt="Impossible
    Food’s plant-based burger (source: [Tech Insider](http://www.techinsider.io/the-impossible-foods-burger-review-vegetarian-2016-8))"><em>Impossible
    Food’s plant-based burger (source: <a href="http://www.techinsider.io/the-impossible-foods-burger-review-vegetarian-2016-8">Tech
    Insider</a>)</em></p><p>Their burger <a href="http://www.impossiblefoods.com/our-burger">uses</a>
    95% less land, 74% less water, and produces 87% less greenhouse gas emissions
    than traditional burgers. Other startups are creating plant-based replacements
    for <a href="http://ripplefoods.com/">milk</a>, <a href="https://www.hamptoncreek.com/">eggs</a>,
    and other common foods. <a href="http://soylent.com/">Soylent</a> is a healthy,
    inexpensive meal replacement that uses advanced engineered <a href="http://terravia.com/Terravia_Sustainability.pdf">ingredients</a>
    that are much friendlier to the environment than traditional ingredients.</p><p>Some
    of these products are developed using genetic modification, a powerful scientific
    technique that has been widely mischaracterized as dangerous. According to a <a
    href="https://www.geneticliteracyproject.org/2015/01/29/pewaaas-study-scientific-consensus-on-gmo-safety-stronger-than-for-global-warming/">study</a>
    by the Pew Organization, 88% of scientists think genetically modified foods are
    safe.</p><p>Another exciting development in food production is automated indoor
    farming. Due to advances in solar energy, sensors, lighting, robotics, and artificial
    intelligence, indoor farms have become viable alternatives to traditional outdoor
    farms.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*0Jyjlgj1KU2yfBqo7quCLQ.png"
    alt="Aerofarms indoor farm (Source: [New York Times](http://www.nytimes.com/2016/07/24/nyregion/food-produced-by-the-high-tech-urban-farming-reaches-new-heights.html?_r=1))"><em>Aerofarms
    indoor farm (Source: <a href="http://www.nytimes.com/2016/07/24/nyregion/food-produced-by-the-high-tech-urban-farming-reaches-new-heights.html?_r=1">New
    York Times</a>)</em></p><p>Compared to traditional farms, automated indoor farms
    use roughly 10 times less water and land. Crops are harvested many more times
    per year, there is no dependency on weather, and no need to use pesticides.</p><h2>10.
    Computerized Medicine</h2><p>Until recently, computers have only been at the periphery
    of medicine, used primarily for research and record keeping. Today, the combination
    of computer science and medicine is leading to a variety of breakthroughs.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*IjKrWZdlbB2ksis_Dmia5A.png" alt=""></p><p>For
    example, just fifteen years ago, it cost $3B to sequence a human genome. Today,
    the cost is about a thousand dollars and continues to drop. Genetic sequencing
    will soon be a routine part of medicine.</p><p>Genetic sequencing generates massive
    amounts of data that can be analyzed using powerful data analysis software. One
    application is analyzing <a href="http://a16z.com/2016/06/09/freenome/">blood
    samples</a> for early detection of cancer. Further genetic analysis can help determine
    the <a href="http://www.businessinsider.com/super-cheap-genome-sequencing-by-2020-2014-10">best
    course</a> of treatment.</p><p>Another application of computers to medicine is
    in prosthetic limbs. Here a young girl is using prosthetic hands she controls
    using her upper-arm muscles:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*jVH1wxchOJ5qJzT46s907A.gif"
    alt="Source: [Open Bionics](https://twitter.com/openbionics/status/755691739147538432)"><em>Source:
    <a href="https://twitter.com/openbionics/status/755691739147538432">Open Bionics</a></em></p><p>Soon
    we’ll have the technology to control prothetic limbs with just our thoughts using
    <a href="http://news.uci.edu/feature/to-walk-again/">brain-to-machine interfaces</a>.</p><p>Computers
    are also becoming increasingly effective at diagnosing diseases. An artificial
    intelligence system recently diagnosed a rare disease that human doctors failed
    to diagnose by finding hidden patterns in 20 million cancer records.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*OEgWlj9sp2mCV0PrT9yp8A.png" alt="Source:
    [International Business Times](http://www.ibtimes.co.uk/ibms-watson-cracks-medical-mystery-life-saving-diagnosis-patient-who-baffled-doctors-1574963)"><em>Source:
    <a href="http://www.ibtimes.co.uk/ibms-watson-cracks-medical-mystery-life-saving-diagnosis-patient-who-baffled-doctors-1574963">International
    Business Times</a></em></p><h2>11.** A New Space Age**</h2><p>Since the beginning
    of the space age in the 1950s, the vast majority of space funding has come from
    governments. But that funding has been in decline: for example, NASA’s budget
    <a href="https://en.wikipedia.org/wiki/Budget_of_NASA">dropped</a> from about
    4.5% of the federal budget in the 1960s to about 0.5% of the federal budget today.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*paniidrx59zPQjq_q6rUHA.png" alt="Source:
    [Fortune](http://fortune.com/2016/02/22/vcs-invested-more-in-space-startups-last-year/)"><em>Source:
    <a href="http://fortune.com/2016/02/22/vcs-invested-more-in-space-startups-last-year/">Fortune</a></em></p><p>The
    good news is that private space companies have started filling the void. These
    companies provide a wide range of products and services, including rocket launches,
    scientific research, communications and imaging satellites, and emerging speculative
    business models like asteroid mining.</p><p>The most famous private space company
    is Elon Musk’s SpaceX, which successfully sent rockets into space that can return
    home to be reused.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*5iiaQsTBu1tQ_hTy8fupXg.gif"
    alt="SpaceX Falcon 9 [landing](https://www.youtube.com/watch?v=_ZXu_rYF51M)"><em>SpaceX
    Falcon 9 <a href="https://www.youtube.com/watch?v=_ZXu_rYF51M">landing</a></em></p><p>Perhaps
    the most intriguing private space company is <a href="http://www.planetaryresources.com/">Planetary
    Resources</a>, which is trying to pioneer a new industry: mining minerals from
    asteroids.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*6zvea6z14lJ6inZQsVBsBA.png"
    alt="[Asteroid mining](https://www.youtube.com/watch?v=n9EMcyfGMDA)"><em><a href="https://www.youtube.com/watch?v=n9EMcyfGMDA">Asteroid
    mining</a></em></p><p>If successful, asteroid mining could lead to a new gold
    rush in outer space. Like previous gold rushes, this could lead to speculative
    excess, but also dramatically increased funding for new technologies and infrastructure.</p><p>These
    are just a few of the amazing technologies we’ll see developed in the coming decades.
    2016 is just the beginning of a new age of wonders. As futurist Kevin Kelly <a
    href="https://www.linkedin.com/pulse/internet-still-beginning-its-kevin-kelly">says</a>:</p><blockquote><p>If
    we could climb into a time machine, journey 30 years into the future, and from
    that vantage look back to today, we’d realize that most of the greatest products
    running the lives of citizens in 2050 were not invented until after 2016. People
    in the future will look at their holodecks and wearable virtual reality contact
    lenses and downloadable avatars and AI interfaces and say, “Oh, you didn’t really
    have the internet” — or whatever they’ll call it — “back then.”So, the truth:
    Right now, today, in 2016 is the best time to start up. There has never been a
    better day in the whole history of the world to invent something. There has never
    been a better time with more opportunities, more openings, lower barriers, higher
    benefit/ risk ratios, better returns, greater upside than now. Right now, this
    minute. This is the moment that folks in the future will look back at and say,
    “Oh, to have been alive and well back then!”</p></blockquote>'
  :author: Chris Dixon
  :topic: future
- :url: https://medium.com/@briaeliza/if-you-feel-unsure-about-the-future-you-dont-need-more-inspiration-you-need-better-principles-5c63289d6e0c?source=search_post
  :title: If You Feel Unsure About The Future, You Don’t Need More Inspiration, You
    Need Better Principles
  :content: '<p>Photo by Nicole Wolf on Unsplash</p><p>If you feel lost, or as though
    you don’t know where you want your life to go next, or worse, fear that everything
    you have built could come crashing down, you don’t need more inspiration. You
    don’t need more positive thinking. You do not need more Pinterest photos or aspirational
    quotes.</p><p>When you have money problems, you need money principles.</p><p>When
    you have relationship problems, you need relationship principles.</p><p>When you
    have work problems, you need work principles.</p><p>When you have life problems,
    you need life principles.</p><p>More money does not solve money problems. Different
    relationships do not solve relationship problems. New work does not solve work
    problems. Your future life will not solve your life problems.</p><p>This is because
    money does not make you good with money. Love does not make you love yourself.
    Relationships don’t make you good at relationships. Work doesn’t make you good
    at your job, or capable of work/life balance.</p><p>Problems don’t inherently
    make you a stronger person unless you change and adapt. <strong>The variable here
    is you. The common denominator is whether or not you shift your foundational perspective
    on the world, and how you behave within it.</strong></p><p>Let’s be very clear:
    Someone who makes $500K can be as seriously in debt and struggling as someone
    who makes $50K, and in fact, this happens more often than you would ever think.
    People who make less money are required to learn how to manage it better, and
    people who make more think they can eschew principles because of the quantity
    they are attaining.</p><p>You can screw up your dream relationship just as quickly
    as you can a hookup, because the way you relate to others is an issue with you,
    not something that shifts depending on whether or not you meet the most perfect
    person you never triggers or annoys you and relates to you with unconditional
    positive regard.</p><p>You can be just as unhappy in your ideal job, with your
    perfect hours, at your most desired pay rate, if you don’t know how to ration
    your time, or relate to others in your workplace, or move your career forward.
    People who are “living their dreams” and “following their passion” can be just
    as unhappy as people who are not.</p><p>If you don’t have principles, your life
    is not going to get better just because you envision and then try to create a
    new one. Those problems are only going to follow you, and get bigger as your life
    does.</p><h3>The good things that happen to us in life are like a magnifier. They
    show us where we still need to grow. True love shows us to ourselves. Money shows
    us to ourselves. Dream jobs show us to ourselves. The good, the bad, the desperately-needs-to-change-right-now.</h3><p>If
    you don’t have principles now, you won’t have them later. If you don’t have the
    money principle of living beneath your means, you won’t be able to do it when
    you have more money.</p><p>If you don’t have the relationship principle of not
    relying on others for your sense of self, it won’t magically resolve itself when
    you meet the “right person,” you’ll just sabotage that relationship, too.</p><h2>What
    is a principle?</h2><p>A principle is a fundamental truth that you can use to
    build the foundation of your life. A principle is not an opinion, or a belief.
    A principle is a matter of cause and effect.</p><p>Principles can become personal
    guidelines.</p><p>Some examples of money principles are the following: keep overhead
    costs low, get out and stay out of debt, live beneath your means, save for a rainy
    day.</p><p>Many financial experts advocate to prioritize debt repayment as the
    beginning of financial health. This is because one day of accrued interest probably
    own’t impact you that much. But 20 years will, to the tune of tens of thousands
    of dollars, if not more.</p><p>In the same way, one day of gained interest in
    investments won’t make a big difference. But 20 years will, to an even more significant
    margin.</p><h3>The point of having principles is that it shifts you from short-term
    survival to long-term thriving.</h3><p>Most things in our lives are governed by
    principles. Stephen Covey explains this well:</p><blockquote><p>Principles are
    a natural law like gravity. It’s different than a value. Values are subjective;
    principles are objective. Gravity… if you drop something, gravity controls.</p></blockquote><p>What
    this means is that if we are committed to the principle of eating good food each
    day, we will inevitably reap the benefit of better or improved health. If we write
    a sentence each day, we will inevitably write a book. If we commit to paying off
    a portion of our debts each month, we will inevitably pay them off. If we invest
    consistently and wisely, we will eventually see a return.</p><p>Our lives are
    governed by principles, as Benjamin Hardy explains:</p><blockquote><p>Most people
    cram for tests while in college. But can you cram if you’re a farmer? Can you
    forget to plant in the spring, slack-off all summer, and then work hard during
    the fall? Of course not. A farm is a natural system governed by principles.So
    are you.<em>The law of the harvest *is always in effect. What you plant, you must
    harvest. Furthermore, what you plant consistently overtime eventually yields a
    <a href="https://www.amazon.com/Compound-Effect-Darren-Hardy/dp/159315724X/ref=sr_1_1?ie=UTF8&qid=1468940772&sr=8-1&keywords=the+compound+effect">*compounded
    </a></em>or exponential harvest.You often don’t experience the consequences of
    your actions immediately, which can be deceiving. If you smoked one cigarette,
    you probably wouldn’t get cancer. If you spent $10 on coffee just one day, it
    probably wouldn’t affect your financial life. However, overtime, these habits
    have drastic outcomes. It turns out, $10 daily over 50 years at 5% compounding
    interest becomes $816,000.</p></blockquote><p>When you make an investment, you
    don’t expect to see a return that day. In the same way, you can go to sleep feeling
    accomplished knowing that you chipped away at your future, just by adhering to
    your principles.</p><p>Little things, done repeatedly and over time, become the
    big things.</p><h2>Why is inspiration ineffective here?</h2><p>Inspiration can
    be misleading. Big dreams not backed by strategized plans are big flops waiting
    to happen.</p><p>Inspiration means you take a feeling and elaborate on it. You
    allow your mind to wander, you piece together pretty pictures and create an image
    of how you’d like your life to feel.</p><p>Principles are boring. They aren’t
    inspiring. They are the laws of nature.</p><p>Principles are not immediately gratifying.</p><p>They
    do not make us feel better right away.</p><p>That’s why we often reach for inspiration,
    but find it to be ineffective. This is because we get our minds and hearts set
    on a vague idea of what we think we want, without ever really evaluating whether
    or not we want to engage in the *daily work and effort *it would take to get there.</p><p>When
    we don’t pair inspiration with the principles it takes to achieve those dreams,
    we become more lost and disappointed than ever before.</p><h2>How do I start developing
    my own principles?</h2><p>Nobody is born with excellent principles, they are something
    that you learn.</p><p>However, there are many different principles in life, and
    really, some may contradict one another. That’s why it’s important to adopt your
    own, that fit your goals and your life.</p><p>Begin with this:</p><ul><li><p>What
    do you value?</p></li><li><p>What do you want to experience in your life?</p></li><li><p>What
    makes you uneasy or gives you anxiety?</p></li></ul><p>The answers could be something
    like this:</p><p>I value relationships, and so by principle, I am going to prioritize
    them when given the opportunity. Alternatively, by principle, I value honest and
    positive relationships, so I’m not going to be in dating limbo anymore, unless
    someone commits within a reasonable amount of time, I will regard their hesitation
    as a “no.”</p><p>Perhaps you value financial freedom, and so by principle, you
    are going to put your extra cash toward repaying debt or building savings or investments.
    Perhaps you value travel and freedom, and so by principle, you are going to start
    working for yourself and always prioritize being able to work remotely or make
    your own schedule.</p><p>When you are clear on what your principles are, you can
    build your life from a really genuine, healthy place. You can start working toward
    goals that support what you do and do not want to experience, that will make you
    the calmest and happiest version of yourself.</p><p>A good life is built from
    the inside out, and is based on a foundation of self-conduct and prioritization.
    It’s not as dreamy as a vision board, but it’s a lot more effective.</p>'
  :author: Brianna Wiest
  :topic: future
- :url: https://medium.com/@FEhrsam/blockchain-governance-programming-our-future-c3bfe30f2d74?source=search_post
  :title: 'Blockchain Governance: Programming Our Future'
  :content: '<p>This post describes why blockchain governance design is one of the
    most important problems out there, its critical components, current approaches,
    potential future approaches, and concludes with suggestions for the community.</p><h3>Why
    Blockchain Governance Matters</h3><p>As with organisms, the most successful blockchains
    will be those that can best adapt to their environments. Assuming these systems
    need to evolve to survive, <a href="https://en.wikipedia.org/wiki/Butterfly_effect">initial
    design</a> is important, but** over a long enough timeline, the mechanisms for
    change are <a href="https://en.wikipedia.org/wiki/Natural_selection">most</a>
    <a href="https://briankeng.com/2015/07/a-little-bit-of-slope/">important</a>.**</p><p>As
    a result, I believe <strong>governance is the most vital problem in the space.
    **Other fundamental problems like scalability are <a href="https://medium.com/@FEhrsam/funding-the-evolution-of-blockchains-87d160988481">arguably
    best approached</a> by using governance to set the right incentives for people
    to solve them.</strong> **Yet little research has gone into governance and it
    feels poorly understood.</p><p><img src="https://cdn-images-1.medium.com/max/2724/1*N7VAEAH8-_Sqxmy8_0bgNQ.png"
    alt="Evolutionary tree of life, from [Leonard Eisenberg](https://www.evogeneao.com/explore/tree-of-life-explorer)."><em>Evolutionary
    tree of life, from <a href="https://www.evogeneao.com/explore/tree-of-life-explorer">Leonard
    Eisenberg</a>.</em></p><p>Satoshi showed us the immense power of releasing a blockchain-based
    incentive structure into the world. A 9 page <a href="https://bitcoin.org/bitcoin.pdf">whitepaper</a>
    spawned a $150bn cryptocurrency, a computer network <a href="https://www.reddit.com/r/Bitcoin/comments/5kfuxk/how_powerful_is_the_bitcoin_network/">bigger
    than the top 500 supercomputers by 10,000x</a>, and a diverse ecosystem of developers,
    users, and companies. This was arguably one of the highest leverage actions in
    human history. It showed the power of blockchains as networks that can connect
    everyone and bootstrap themselves into existence if well constructed.</p><p>We
    are increasingly living in digital networks, spending an average of <a href="http://www.kpcb.com/internet-trends">11
    hours a day on screens</a> in the US with over half of that on internet connected
    devices, growing 11% each year. However, these networks are highly centralized
    (Facebook, Google, Apple, Twitter) and <a href="http://fortune.com/2017/01/04/google-facebook-ad-industry/">continue
    to consolidate</a>. In the current model, all of the profit and power of a network
    is within one company, and you’re either inside or you’re outside. It’s important
    the networks we live in serve our best interests. With blockchains emerging as
    the new global infrastructure, <strong>we have the opportunity to create vastly
    different power structures and program the future we want for ourselves.</strong></p><p>For
    these reasons, I believe <strong>blockchain governance system design is one of
    the highest leverage activities known.</strong></p><h3>A Cambrian Explosion</h3><p>It’s
    rare a new government or central bank gets created, and even more rare to see
    experimentation with a new form of governance when it does.</p><p>Blockchains
    are unique because they 1) allow thousands of governance systems and monetary
    policies to be tried at the speed of software with 2) in some cases, much lower
    consequences of failure. As a result, *<em>there will be a <a href="https://en.wikipedia.org/wiki/Cambrian_explosion">Cambrian
    explosion</a> of economic and governance designs *</em>where many approaches will
    be tried in parallel at hyperspeed. To be clear, I am including economic design
    and monetary policy (said another way, incentive structure) in governance because,
    like other aspects of the system, they can be modified as time passes.</p><p><img
    src="https://cdn-images-1.medium.com/max/2374/1*SDRcq6gCVc4TcI5YUnrY3g.jpeg" alt=""></p><p>Many
    of these attempts will be spectacular failures. With millions of algorithmic central
    banks we will have millions of crypto <a href="https://en.wikipedia.org/wiki/Black_Wednesday">George
    Soroses trying to break the Bank of England</a>. Through this process, <strong>blockchains
    may teach us more about governance in the next 10 years than we have learned from
    the “real world” in the last 100 years.</strong></p><h3>Two Critical Components
    of Governance</h3><p><strong>1. Incentives</strong></p><p>Each group in the system
    has their own incentives.** **Those incentives are not always 100% aligned with
    all other groups in the system. Groups will propose changes over time which are
    <a href="https://www.monticello.org/site/jefferson/natural-progress-things-spurious-quotation">advantageous
    for them</a>. Organisms are biased towards their own survival. This commonly manifests
    in changes to the reward structure, monetary policy, or balances of power.</p><p><strong>2.
    Mechanisms for coordination</strong></p><p>Since it’s unlikely all groups have
    100% incentive alignment at all times, the ability for each group to coordinate
    around their common incentives is critical for them to affect change. If one group
    can coordinate better than another it creates power imbalances in their favor.</p><p>In
    practice, a major factor is how much coordination can be done on-chain vs. off-chain,
    where on-chain coordination makes coordinating easier. In some new blockchains,
    on-chain coordination allows the rules or even the ledger history itself to be
    changed.</p><h3>Current Approaches</h3><p>What follows is a dissection of the
    benefits and drawbacks of today’s two largest blockchains: Bitcoin and Ethereum.
    We are currently in the primordial ooze phase of blockchain governance. Systems
    are simple and little has been tried.</p><h3>Bitcoin</h3><p>Bitcoin was the first
    successful attempt to create a standalone blockchain. Let’s examine it as a base:</p><p><strong>1.
    Incentives</strong></p><ul><li><p>Developers: increase value of existing token
    holdings, social recognition, maintain power for control over future direction.</p></li><li><p>Miners:
    increase value of existing token holdings, expected future block rewards, and
    expected future transactions fees.</p></li><li><p>Users: increase value of existing
    token holdings, increase functional utility (e.g. store of value, uncensorable
    transactions, file storage).</p></li></ul><p><strong>2. Mechanisms for coordination</strong></p><p>Mostly
    off-chain. Developers coordinate through the Bitcoin Improvement Proposals (<a
    href="https://en.bitcoin.it/wiki/Bitcoin_Improvement_Proposals">BIPs</a>) process
    and a <a href="https://lists.ozlabs.org/pipermail/bitcoin-dev-moderation/">mailing
    list</a>. Miners can coordinate on-chain in the sense that they are creating the
    chain itself.</p><p><strong>Resulting system</strong></p><p>The <strong>checks
    and balances system created is somewhat analogous to the US government</strong>
    and has a number of benefits. Similar to the Senate submitting new bills, developers
    submit pull requests. Similar to the judiciary, miners decide whether or not to
    actually adopt the laws in practice. Similar to the executive branch, the nodes
    of the network can veto by not running a version which aligns with what the miners
    are running. And similar to citizens, the users can revolt. Finally, economic
    incentives dictate that it is in everyone’s best interest to maintain trust in
    the system. For example: if miners alienated all the users, the tokens would decrease
    in value and they would go out of business. <strong>As the first system of its
    kind, it’s incredible that Bitcoin is still going strong.</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2986/1*GM32YcRx7C_XgheMWld4RA.png" alt="Bitcoin
    as branches of US Government. Image from [Buck Perley](https://medium.com/@BuckPerley/crypto-governance-f1318affbbe0)."><em>Bitcoin
    as branches of US Government. Image from <a href="https://medium.com/@BuckPerley/crypto-governance-f1318affbbe0">Buck
    Perley</a>.</em></p><p>There are risks to the system caused by asymmetries in
    incentives. Miners push for changes which increase future cumulative transaction
    fees, while developers don’t care as long as the value of Bitcoin keeps going
    up. Developers’ direct economic incentives are weak. New developers have little
    incentive to work on Bitcoin because there is no direct way to earn money by doing
    it. As a result, they often work on new projects — either by creating Ethereum
    tokens, entirely new chains, or companies. No new blood entering increases the
    perception and reality of early developers as the most knowledgable and experienced.
    This <a href="https://medium.com/@BuckPerley/crypto-governance-f1318affbbe0">results</a>
    in <strong>a self-reinforcing cycle of more power becoming concentrated in a small
    group of early core developers, slower technological advancement, and conservatism</strong>.
    Developers are at risk of being bribed since they have a lot of power but weak
    economic incentives. Some <a href="http://chaincode.com/">early holders</a> and
    <a href="https://bitcoinmagazine.com/articles/gavin-andresen-core-developers-join-mits-digital-currency-initiative-1429743725/">universities</a>
    have sponsored developers, but with limited impact thus far.</p><p>Similarly,
    asymmetries in ability to coordinate give miners disproportionate power. Communication
    amongst miners is easier because they are a small and concentrated group. Since
    mining is a business with economies of scale, we’d expect <strong>a continued
    trend towards <a href="https://en.wikipedia.org/wiki/Natural_monopoly">natural
    monopoly</a> in mining</strong> and even greater coordination advantage. As a
    reference point, <a href="https://pbs.twimg.com/media/CVhkEhtUAAAl0LH.jpg">95%
    of mining power was able to sit on one small stage</a> 2 years ago. Miners can
    also gain disproportionate power by bribing developers or hiring their own. Finally,
    the checks and balances system of Bitcoin relies on some level of transparency:
    for example, users becoming aware of a single miner gaining more than 51% of the
    hashing power or developers having some level of independence. And a miner who
    was able to gain &gt;51% of hashing power would be incented to remain anonymous.
    Rather than sparking a specific catastrophic event, this would cause an unknowing
    descent into a centralized world of control through censorship and asset freezing.</p><h3>Ethereum</h3><p>The
    systemic incentives and mechanisms of coordination in Ethereum are similar to
    Bitcoin at the moment.</p><p>Dynamics will change as Ethereum <a href="https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/">moves
    to proof of stake</a>. The power of miners will be replaced by anyone who holds
    a sufficient amount of Ether to run a virtual miner (a “validator”). This is especially
    true as solutions like <a href="https://1protocol.com">1protocol</a> will allow
    even the smallest Ether holder to participate, <strong>flattening the distinction
    between a miner and a user, and potentially reducing the biggest centralization
    risk in Bitcoin.</strong></p><p>The incentives of core developers remain the same.
    Coordination around challenging issues has been swifter and smoother than in Bitcoin
    to date. This is due to 1) a culture more open to change because <a href="https://coinjournal.net/vitalik-buterin-early-versions-ethereum-supposed-launch-bitcoin/">Ethereum
    was created as a reaction to what could not be done in a rigid Bitcoin environment</a>
    and 2) direction from Vitalik who is widely trusted in the community.</p><p>Current
    weaknesses in the model include 1) over reliance on its creator (Vitalik) and
    2) like Bitcoin, limited ways to incentivize core development, forcing more projects
    to create tokens to support themselves. Vitalik is <a href="https://twitter.com/VitalikButerin/status/928172344631115776">making
    a conscious effort to step back</a>, which will be a delicate process.</p><h3>New
    Chains Experimenting with On-Chain Governance</h3><p>New blockchains are making
    it much easier to coordinate by enabling on-chain governance.</p><p><strong>Tezos</strong></p><p>In
    <a href="https://www.tezos.com/">Tezos</a>, <a href="https://www.quora.com/How-is-Tezos-different-from-Ethereum?share=d5c26090&srid=OAAh">anyone
    can submit a change to the governance structure</a> in the form of a code update.
    An on-chain vote occurs, and if passed, the update makes its way on to a test
    network. After a period of time on the test network, a confirmation vote occurs,
    at which point the change goes live on the main network. They call this concept
    a “self-amending ledger”.</p><p>Such a system is interesting because <strong>it
    shifts power towards users and away from the more centralized group of developers
    and miners.</strong> On the developer side, anyone can submit a change, and most
    importantly, everyone has an economic incentive to do it. Contributions are rewarded
    by the community with newly minted tokens through <a href="https://medium.com/@FEhrsam/funding-the-evolution-of-blockchains-87d160988481">inflation
    funding</a>. This shifts from the current Bitcoin and Ethereum dynamics where
    a new developer has little incentive to evolve the protocol, thus power tends
    to concentrate amongst the existing developers, to one where everyone has equal
    earning power.</p><p>This also enables users to directly coordinate on-chain,
    dramatically increasing their power and reducing the power of miners compared
    to a system like Bitcoin or Ethereum.</p><p><img src="https://cdn-images-1.medium.com/max/2130/1*sKjsh_IrxHvST_aZbaGk_g.png"
    alt=""></p><p><strong>DFINITY</strong></p><p>One step further would be a system
    which allows on-chain votes to the rules of the system like Tezos <em>and</em>
    <a href="https://medium.com/dfinity/the-dfinity-blockchain-nervous-system-a5dd1783288e">direct,
    retroactive changes to the ledger itself</a>. In other words, if something happens
    that tokenholders do not like (ex: a hack, a marketplace selling drugs), they
    can <strong>roll back or edit the ledger in addition to the rules of governance
    themselves</strong>. <a href="https://dfinity.org">DFINITY</a>, an in-development
    blockchain, is taking this approach. Proponents of this system point to events
    like hard fork caused by The DAO hack and the recent <a href="https://paritytech.io/blog/security-alert.html">$150m
    Parity multi-sig bug</a> and suggest such events would be much smoother if everyone
    could just vote to undo them. On the flip side, this system allows direct censorship
    and peoples’ tokens to be forcibly taken. As we saw with Ethereum’s hard fork
    to revert The DAO hack, this is possible with existing blockchains, but requires
    higher friction through off-chain coordination and hard forking instead of on-chain
    coordination with no forking.</p><p>DFINITY is maximally flexible. Depending on
    what parts of the protocol Tezos allows to be changed, it is possible protocol
    changes effectively let you re-write the ledger as in DFINITY. As a result, it’s
    likely these systems will have different voting thresholds for different changes,
    perhaps requiring a supermajority for some things and a simple majority for others.</p><h3>The
    Double-Edged Sword of On-Chain Governance</h3><p>On-chain governance is a double
    edged sword. On the upside it helps make sure a process is consistently followed
    which can increase coordination and fairness. It also allows for quicker decision
    making. On the downside it’s risky because the metasystem becomes harder to change
    once instituted. Like anything put directly into code, *<em>it can be exploited
    or <a href="https://en.wikipedia.org/wiki/Nomic">gamed</a> more quickly and easily
    if flawed. *</em>Vlad Zamfir, a principal architect of Ethereum’s proof of stake,
    <a href="https://www.youtube.com/watch?v=9RtSod8EXn4&feature=youtu.be&t=2h33m39s">feels</a>
    “the risks far outweigh the rewards” and “represent an extremely risky proposition”.</p><p>For
    some use cases, tending towards being static may be good. This may be especially
    true for store of value. <strong>Perhaps lower level protocols should lean toward
    stasis and conservatism — “measure twice and cut once” — while higher level protocols
    should be more flexible — “move fast and break things”.</strong> In the words
    of Calvin Coolidge: <a href="https://coolidgefoundation.org/blog/kill-bad-bills/">“it
    is much more important to kill bad bills than to pass good ones”</a>. Like established
    companies, some of the more established protocols may be able to watch what new
    protocols do and adopt techniques which seem to be working. This seems especially
    true of Ethereum which has shown a willingness to hard fork and the ability to
    maintain network value through them. Consequently, I’d expect to see the most
    innovation in the next few years from Ethereum tokens and entirely new chains.</p><p>It’s
    probable we haven’t found the best governance systems yet, which means a more
    general system which allows many different methods to be tried is valuable, if
    for nothing more than <a href="https://en.wikipedia.org/wiki/Nomic">learning</a>.
    <a href="https://en.m.wikipedia.org/wiki/Automata_theory">A more complex system
    can simulate less complex ones, but the reverse is generally hard.</a></p><p>The
    most interesting learnings will come from exploring the balance of mutability
    so systems can evolve and immutability for stability.</p><h3>Future Approaches</h3><p>Next
    we’ll talk about future governance strategies with potential which have yet to
    be tried.</p><p><strong>Futarchy</strong></p><p>In <a href="https://en.wikipedia.org/wiki/Futarchy">futarchy</a>,
    <strong>society defines its values and then prediction markets are used to decide
    what actions will maximize those values</strong>. Said another <a href="https://blog.ethereum.org/2014/08/21/introduction-futarchy/">way</a>:
    <a href="http://mason.gmu.edu/%7Erhanson/futarchy.html">“vote on values, bet on
    beliefs”</a>. It was <a href="http://mason.gmu.edu/%7Erhanson/futarchy2000.pdf">originally
    proposed</a> in 2000 by <a href="http://www.overcomingbias.com/bio">Robin Hanson</a>,
    an economics professor at George Mason University.</p><p><a href="https://en.wikipedia.org/wiki/Ralph_Merkle">Ralph
    Merkle</a> has a particularly eye-opening proposal for a blockchain implementation
    of futarchy in his paper called <a href="http://merkle.com/papers/DAOdemocracyDraft.pdf">DAOs,
    Democracy, and Governance</a>. In his proposal, every citizen is polled once a
    year and asked the question “how satisfied were you this year on a scale of 0
    to 1?”. Averaged together, these give an overall societal welfare score. A prediction
    market on this welfare score is developed for every year for the next 100 years,
    where traders can speculate on the welfare score for any year into the future.
    An overall future welfare score is then created by averaging the scores for the
    next 100 years, weighting earlier years more than future years. When a new bill
    is introduced, there is a 1 week period where markets speculate on whether the
    overall welfare score will go up or down if the bill is passed. If the bill is
    passed, the traders who bet on the overall welfare going up now own the overall
    welfare contracts they bet on. They will make money if they are right and lose
    money if they are wrong.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*ckQP_t0rBlgVJMIvK_jmtg.png"
    alt="Example of futarchy for deciding whether or not to fire a CEO where the value
    to maximize is revenue. Image from [ConsenSys](https://medium.com/@ConsenSys/markets-for-the-future-c73fa73fe35d)."><em>Example
    of futarchy for deciding whether or not to fire a CEO where the value to maximize
    is revenue. Image from <a href="https://medium.com/@ConsenSys/markets-for-the-future-c73fa73fe35d">ConsenSys</a>.</em></p><p>This
    system could be incredibly powerful for a few reasons. First, voting becomes extremely
    simple. People don’t need to vote, they are just asked about one thing once a
    year: their satisfaction. Second, people do not need to develop extensive knowledge
    of candidates or bills. This is important because candidates are often persuasive
    and bills are complex to the point where it is hard for a domain-specific researcher
    to understand their implications, let alone an elected official or an average
    citizen. Instead, we rely on the wisdom of the markets. Like trading in stocks,
    only people who are extremely well informed on a topic will bet on it — otherwise
    they are likely to lose money to others who are better informed. Finally, it is
    a system where <strong>market incentives are aligned with societal values.</strong></p><p>In
    futarchy the devil is in the implementation details. <a href="http://www.overcomingbias.com/2016/07/merkles-futarchy.html">Hard
    problems include</a> the governance metaproblem of how to decide on the societal
    value(s) to maximize in the first place and making sure people aren’t incented
    to <a href="https://en.wikipedia.org/wiki/Gibbard%E2%80%93Satterthwaite_theorem">tactically
    vote</a> an extreme satisfaction score of 0 or 1 to swing policy.</p><p><strong>Setting
    goal functions is both important and tricky, as there are always unforeseen consequences.</strong>
    For example, in the case of capitalism, this can manifest in rising wealth inequality
    and environmental externalities. In the case of artificial intelligence, this
    can manifest in <a href="https://wiki.lesswrong.com/wiki/Wireheading">wireheading</a>
    or rapidly maximizing something at the unexpected expense of other things, commonly
    illustrated through the example of a <a href="https://wiki.lesswrong.com/wiki/Paperclip_maximizer">paperclip
    maximizer</a> which destroys everything to build as many paperclips as possible.
    These are serious concerns, as I believe <a href="https://twitter.com/FEhrsam/status/912388216396824576">the
    most powerful AIs will be bootstrapped into existence on the blockchain</a> by
    using tokenized incentives for everyone to feed them the best data and algorithms.
    If this is true, blockchain governance is the largest determinant of our future
    trajectory as a species. More on this in a future post.</p><p><strong>Liquid Democracy</strong></p><p><a
    href="https://en.wikipedia.org/wiki/Delegative_democracy">Liquid democracy</a>
    is system where everyone has the ability to vote themselves, to delegate their
    vote to someone else, and to remove the delegation of their vote at any time.
    In the U.S. we do not have a liquid democracy because we cannot vote on many bills
    directly (our representatives do that for us) and once we elect a representative,
    they are typically in office for 4 years.</p><p>This seems like it will be used
    in proof of stake blockchains given its simplicity.</p><p><strong>Quadratic Voting</strong></p><p><a
    href="http://ericposner.com/quadratic-voting/">Quadratic voting</a> is a system
    of buying votes, where each additional vote costs twice as much as the one before
    it. In other words, money buys votes, but with strong diminishing returns. <a
    href="https://www.reddit.com/r/ethereum/comments/4rtpmm/on_coinlock_voting_futarchy_and_optimal/">Vitalik
    proposed</a> a variant on this he calls “quadratic coin lock voting” where N coins
    let you make N * k votes by locking up those coins for a time period of k². This
    is a nice modification because it aligns incentives over time: more voting power
    requires living with your decisions for longer. In a tokenized world with little
    friction of entering or leaving a community, this is especially important.</p><h3>Voting
    with People or Money?</h3><p>A major problem with one person = one vote systems
    on the blockchain is their susceptibility to sybil attacks. Near zero cost to
    create infinite accounts means it’s easy to generate infinite votes. This is why
    the default model in proof of stake and Ethereum-based token governance is one
    token = one vote.</p><p>Blockchain-based identity systems like <a href="https://www.civic.com/">Civic</a>
    can help enable one person = one vote systems. However, anonymity is likely to
    be preserved in most cryptocurrencies. Identity gives each coin its own unique
    history, which can be subjectively judged to be more or less clean than that of
    another coin, causing <a href="https://en.wikipedia.org/wiki/Fungibility">fungibility</a>
    to break down. One potential approach is a balance between identity and money:
    a fully verified identity gets 100% of the voting power of their money, a partially
    verified identity gets 50%, and an entirely anonymous identity gets 25%.</p><p>As
    mentioned in quadratic voting, other mechanisms which weight community members
    differently independent of real-world identity are likely to evolve. For example,
    a new token holder may have diminished voting power until they have been a member
    of the community for a while, similar to not being able to vote until you are
    a full citizen of a country.</p><p>In any case, <strong>today’s world would look
    a lot different if modern governments ran on voting with money, so this change
    in defaults is not to be taken lightly.</strong></p><p>Finally,** reputation within
    a token community will be critical.** This is already shown through indirect means,
    where Vitalik’s suggestions carry a lot of weight in the Ethereum community. In
    a liquid democracy system reputation manifests in the number of votes delegated
    to a particular person. Someone with high reputation and no money could have 10
    million Ether delegated to them and have tremendous governing power.</p><h3>Other
    Tools</h3><p>Simple <strong>off-chain futures markets have already shown themselves
    as a powerful tool</strong>. In the recently proposed and contentious Bitcoin
    <a href="https://www.coindesk.com/explainer-what-is-segwit2x-and-what-does-it-mean-for-bitcoin/">SegWit2x</a>
    fork, futures markets speculated on the expected value of SegWit2x vs. non-SegWit2x
    chains. The markets consistently valued a SegWit2x chain <a href="https://www.reddit.com/r/Bitcoin/comments/75xncv/2x_futures_prices_drops_below_02_btc/">at
    less than 20%</a> of a non-SegWit2x chain for 3 weeks. Supporters of SegWit2x
    then <a href="https://lists.linuxfoundation.org/pipermail/bitcoin-segwit2x/2017-November/000685.html">called
    off</a> their forking efforts because they felt they had “not built sufficient
    consensus”. While it’s hard to know exactly what caused them to reach this conclusion,
    it seems like futures markets were a strong indicator of lack of support.</p><p><img
    src="https://cdn-images-1.medium.com/max/4304/1*KSPwq45dIQJxAekdSwCakg.png" alt="Futures
    markets on Bitcoin’s SegWit2x"><em>Futures markets on Bitcoin’s SegWit2x</em></p><p>Other
    tools are being built for governance and standardization at different layers.
    <a href="https://zeppelinos.org/">ZeppelinOS</a> is <a href="https://github.com/OpenZeppelin/zeppelin-solidity">a
    series of basic libraries</a> which are commonly being used as the base of Ethereum
    token systems, covering things like token sale mechanics, token vesting, and access
    controls to the treasury of the project. <a href="http://aragon.one">Aragon</a>
    is trying to create standard implementations of these systems in the same way
    Delaware C corporations implement corporations in a standard way.</p><h3>Forking</h3><p>It’s
    worth noting that forking is always an option. Applying Albert Hirschman’s classic
    <a href="https://en.wikipedia.org/wiki/Exit,_Voice,_and_Loyalty">voice or exit</a>
    paradigm for affecting change in a system, <strong>voice is governance, weak exit
    is selling your coins, and strong exit is forking.</strong></p><p>We’ve seen many
    examples of forking so far, and this is great! In physical nations forking is
    nearly impossible. This was also the case in software until blockchains emerged.
    They make it easy to take all the code and state of a system and try a new path.
    In the Web 2.0 world,** forking is the equivalent of Facebook allowing any competitor
    to take their entire database and codebase to a competitor. **Don’t like how Facebook
    is operating it’s newsfeed? Create a fork with all the same code, social connections,
    and photos.</p><p><strong>The ability to fork significantly reduces lock-in and
    increases diversity</strong>, allowing many <a href="https://medium.com/@FEhrsam/accelerating-evolution-through-forking-6b0bba85a2ba">more
    paths</a> to be tried than we would ever see in modern governments, central banks,
    or Web 2.0 companies. As in <a href="https://www.investopedia.com/terms/s/spinoff.asp">corporate
    spinoffs</a>, forking is also beneficial when two niche chains can more effectively
    serve distinct needs than one chain ineffectively serving both sets of needs.</p><p>However,
    it is still valuable to avoid hard forks when possible. A <a href="https://bitcoin.stackexchange.com/questions/9173/what-is-a-hard-fork">hard
    fork</a> is a non-backwards compatible change. Downsides of hard forks include:</p><ol><li><p>Reducing
    network effects. Not everyone is speaking the same language anymore.</p></li><li><p>Creating
    work. Anyone who was using the forked protocol probably had their code broken.
    In a world that is increasingly interconnected through transparent and trustless
    code execution, these effects compound.</p></li><li><p>Reducing trust. Now that
    we’ve had a breaking change, those previously referencing the protocol must now
    go outside the blockchain and somehow figure out what the “right” new version
    is to use.</p></li></ol><p>Because of the dramatically reduced friction for exit,
    the need for effective voice (governance) is more critical than ever. It is trivial
    to fork a blockchain and copy all of its code and state. So <strong>the value
    isn’t in the chain of data, it’s in the community and social consensus around
    a chain</strong>. Governance is what keeps communities together and, in turn,
    gives a token value.</p><h3>Community Suggestions</h3><p><strong>For users:</strong>
    Spend more time looking at the governance system of your blockchain, less time
    on the issue of the day. <strong>Current events are just a manifestation of the
    larger system that caused them.</strong> So while it’s easy to get riled up by
    the news, the highest leverage point for change comes from designing or changing
    the system, not arguing about its current manifestations.</p><p><strong>For developers:</strong>
    Try <a href="https://medium.com/@FEhrsam/funding-the-evolution-of-blockchains-87d160988481">inflation
    funding</a>. And if you are creating a new token using a simple 1 token = 1 vote
    system, <strong>consider quadratic coin lock voting</strong> as a low risk/high
    return alternative.</p><p><strong>For everyone:</strong> Watch and learn from
    the experiments that will be run on the new on-chain governance systems.</p><h3>Conclusion</h3><p>Like
    organisms, the ability of a blockchain to succeed over time is based on its ability
    to evolve. This evolution will bring about many decisions on direction, and it
    is the governance around those decisions which most strongly determine the outcome
    of the system. <strong>If programming in the system is important, the <a href="https://en.wikipedia.org/wiki/Metaprogramming">metaprogramming</a>
    of the system itself is most important.</strong></p><p><strong>I believe governance
    should be the primary focus of investors in the space.</strong> The fundamentals
    of cryptoeconomics and overarching governance schemas of these networks are critical
    to survival, under-appreciated, and poorly understood. Investors can add significant
    value through the luxury of being able to observe and learn from multiple projects
    at one time.** **They should be active in the governance of the tokens they participate
    in and transparent with a community if they feel the design of the system can
    be improved.</p><p><strong>We are birthing into existence systems which transcend
    us.</strong> In the same way democracy and capitalism as systems determine so
    much of the emergent behavior around us, blockchains will do the same with even
    greater reach. These systems are organisms which take on <a href="http://slatestarcodex.com/2014/07/30/meditations-on-moloch/">lives
    of their own</a> and are more concerned with <a href="https://en.wikipedia.org/wiki/Instrumental_convergence">perpetuating
    themselves</a> than the individuals which comprise them. As technology stretches
    these systems to their limits, the implications become more pronounced. So we’d
    be wise to carefully consider the structure of these systems while we can. Like
    any new powerful technology, <strong>blockchains are a tool that can go in many
    different directions. Used well, we can create a world with greater prosperity
    and freedom. Used poorly, we can create systems which lead us to places we <a
    href="https://www.youtube.com/watch?v=ST86JM1RPl0">didn’t intend to go</a>.</strong></p><p><em>Thanks
    to <a href="https://twitter.com/VitalikButerin">Vitalik Buterin</a>, <a href="https://twitter.com/BuckPerley">Buck
    Perley</a>, <a href="https://medium.com/@simondlr/vlad-zamfirs-thoughts-around-softer-topics-around-blockchains-9fc354462a2d">Vlad
    Zamfir</a>, <a href="https://blog.aragon.one/team-interviews-luke-aragons-research-lead-5baf553d89bd">Luke
    Duncan</a>, <a href="https://twitter.com/brian_armstrong">Brian Armstrong</a>,
    <a href="http://www.merkle.com">Ralph Merkle</a>, <a href="https://epicenter.tv/episode/136/">Arthur
    Brietman</a>, <a href="https://twitter.com/juliagalef">Julia Galef</a>,</em> <a
    href="https://twitter.com/dominic_w">*Dominic Williams</a>, <a href="https://twitter.com/licuende">Luis
    Iván Cuende</a>, <a href="https://twitter.com/matthuang">Matt Huang</a>, <a href="https://twitter.com/demibrener">Demian
    Brenier</a>,* <a href="https://twitter.com/AndreaCoravos">*Andy Coravos</a>, <a
    href="https://twitter.com/cburniske">Chris Burniske</a>, <a href="https://engineering.coinbase.com/@jimpo">Jim
    Posen</a>, <a href="https://twitter.com/balajis">Balaji Srinivasan</a>, <a href="https://www.linkedin.com/in/scottpnolan/">Scott
    Nolan</a>, <a href="http://eladgil.com/">Elad Gil</a>, <a href="https://twitter.com/cdixon">Chris
    Dixon</a>, <a href="https://twitter.com/maksim_s">Maksim Stepanenko</a>, <a href="http://continuations.com/">Albert
    Wenger</a>, <a href="https://twitter.com/simondlr">Simon de la Rouviere</a>,*
    <a href="http://madeby.sophiacui.com/">*Sophia Cui</a>,* <a href="http://lucas.metastable.capital">*Lucas
    Ryan</a>, <a href="https://www.linkedin.com/in/jaygraber/">Jay Graber</a>, and
    <a href="https://twitter.com/whyrusleeping">Jeromy Johnson</a> for conversations
    and ideas which contributed to this post.*</p>'
  :author: Fred Ehrsam
  :topic: future
- :url: https://medium.com/kaizen-habits/7-modern-life-habits-doing-the-most-damage-to-your-brain-e392c9cfee42?source=search_post---------0
  :title: 7 Modern Life Habits That Can Be Incredibly Bad For Your Brain Health
  :content: '<p>Lifestyle habits that influence your cognitive health and what to
    do about them</p><p><img src="https://cdn-images-1.medium.com/max/3968/1*7zisdYgxVntRV9ff3mdCbw.png"
    alt="Image from [rawpixel.com](http://rawpixel.com/)"><em>Image from <a href="http://rawpixel.com/">rawpixel.com</a></em></p><p>In
    an era of better technology, we are all being rewired to do more to the detriment
    of our brains. According to <a href="https://www.telegraph.co.uk/health-fitness/mind/7-everyday-ways-you-are-ruining-your-iq/">experts</a>,
    our modern lifestyle is chipping away at neural pathways and making us slower,
    denser and less capable of original thought. Hyperconnectivity is increasingly
    taking its toll on our brains. In the end, we end up less productive and ineffective.</p><p>When
    it comes to our health, we don’t always think about nurturing our brains the way
    we nourish our bodies. But to be our most productive self, we need to do more
    of what improves our brain health, and less of what causes cognitive decline.
    Start by adjusting your daily habits and avoiding these common modern habits —
    your mind will thank you.</p><h3>1. The brain drain of inactivity</h3><p>Physical
    inactivity has its price tags — It’s linked to the development of chronic health
    problems like heart disease, obesity, depression, dementia, and cancer. Many people
    are too busy to make time for “basic movement activities” that can slow cognitive
    decline — walking, cycling, stretching, etc.</p><p>Being sedentary changes the
    shape of certain neurons in the brain, according to a <a href="http://www.ncbi.nlm.nih.gov/pubmed/24114875">new
    study</a> in the *Journal of Comparative Neurology *that suggests a link between
    inactivity and mental decline.</p><p>Regular physical activity can benefit you
    cognitively — increase brain chemicals which promote better memory and learning,
    and medically. You know this though. Knowledge of the benefits of exercise is
    not a problem in the modern world, it’s the application of relevant information.</p><h3>2.
    Think you’re multitasking? Think again</h3><p>Our smartphones have become Swiss
    army knives. We use them all the time. We text while we’re walking across the
    street, catch up on email while commuting, read or listen to podcasts while standing
    in a queue.</p><p>You’ve likely heard that multitasking is bad for your productivity.
    It turns out, it’s a habit that also rewires the brain and makes you less effective.</p><p>Earl
    Miller, a neuroscientist at MIT and one of the world experts on divided attention,
    says that our brains are “not wired to multitask well… When people think they’re
    multitasking, they’re actually just switching from one task to another very rapidly.
    And every time they do, there’s a cognitive cost in doing so.”</p><p>Multitasking
    also <a href="https://www.theguardian.com/science/2015/jan/18/modern-world-bad-for-brain-daniel-j-levitin-organized-mind-information-overload">increases</a>
    the stress hormone cortisol as well as the fight-or-flight hormone adrenaline,
    which can overstimulate your brain and cause mental fog or scrambled thinking.</p><h3>3.
    Information overload leads to unnecessary overstimulation of the brain</h3><p>The
    sheer volume of emails, social updates, and notifications we receive can be overwhelming
    — it takes a huge bite out of the day for many people. The constant stream of
    content if not managed can cause stress and lead to decision overload.</p><p>“Too
    Much Information” that, “Information overload is one of the biggest irritations
    in modern life”, <a href="https://www.economist.com/business/2011/06/30/too-much-information">writes</a>
    Schumpeter of <em>The Economist.</em></p><p>Some people proudly boast of how many
    things they can juggle in a single day. Glenn Wilson, former visiting professor
    of psychology at Gresham College, London <a href="https://www.theguardian.com/science/2015/jan/18/modern-world-bad-for-brain-daniel-j-levitin-organized-mind-information-overload">found</a>
    out in his research that being in a situation where you are trying to concentrate
    on a task, and an email is sitting unread in your inbox, can reduce your effective
    IQ by 10 points.</p><p>To maximize your brain every day, use better tools and
    settings to filter information throughout the day. Be proactive about how you
    consume media. Prepare your brain to ignore unnecessary information. When you
    organize your day with these principles in mind, you will likely increase your
    brain’s efficiency significantly.</p><h3>4. Sitting for too long is hurting you</h3><p>Sitting
    is one of the worst things we can do for our health. A new UCLA <a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0195549">study</a>
    reports that people who are more sedentary have thinning in brain regions linked
    to memory.</p><p>It finds that sitting isn’t just a physical health risk — it’s
    a neurological risk as well. The authors <a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0195549">write</a>
    in their paper, “it is possible that sedentary behaviour is a more significant
    predictor of brain structure, specifically [medial temporal lobe] thickness, and
    that physical activity, even at higher levels, is not sufficient to offset the
    harmful effects of sitting for extended periods of time.”</p><p>You can reduce
    the amount of sitting you do by adopting interventions like moderate walking,
    standing while working, even for just 10 minutes at a time, standup meetings —
    it offers the opportunity to sit less, move more and conduct short meetings.</p><h3>5.
    All that screen time can negatively impact our mental and emotional wellbeing</h3><p>Today,
    face-to-face interactions are increasingly being replaced by digital tools. People
    spend more time online than ever before.</p><p>“Anything with a screen — television,
    phones, tablets, computers, video games — constitutes screen time,” explains Tom
    Kersting, a licensed psychotherapist and an expert in the field of mental health
    and parenting in the digital age. “If the majority of our waking hours entails
    looking at a screen, then we know it is way too much.”</p><p>A face-to-face conversation
    is incredibly beneficial for your brain. A <a href="https://news.umich.edu/ten-minutes-of-talking-has-a-mental-payoff/">study
    </a>by the University of Michigan found that even just 10 minutes per day of conversation
    with another person improved memory and cognition.</p><p>“In our study, socializing
    was just as effective as more traditional kinds of mental exercise in boosting
    memory and intellectual performance,” said Oscar Ybarra, a psychologist at the
    U-M Institute for Social Research (ISR) and a lead author of the study with ISR
    psychologist Eugene Burnstein and psychologist Piotr Winkielman from the University
    of California, San Diego.</p><p>The lack of true personal interaction limits the
    brain’s opportunities to make better connections. It can also lead to loneliness
    and depression — mental conditions that contribute significantly to reduced brain
    health.</p><p>Looking at screens all day can hurt your eyes, ears, neck, shoulders,
    back, wrists, and forearms. It also interferes with getting a good night’s sleep.</p><p>According
    to <a href="https://aaptiv.com/magazine/ways-screen-time-impacts-health">experts</a>,
    excessive screen time has a negative effect on intellectual abilities as well
    as emotional well-being.</p><p>Set clear boundaries with screens to avoid developing
    detrimental habits. The goal isn’t to avoid screen time entirely, as that’s not
    realistic in modern life. However, if you’re going to use a device, be mindful.</p><h3>6.
    It’s surprisingly easy for your headphones to damage the parts of the ear vital
    to healthy hearing</h3><p>People, by nature, love to switch up the volume. It
    makes the music sounds more “fun” and immersive. In the age of noise-cancelling
    earbuds and headphones, you can easily damage your hearing.</p><p>When the rest
    of the world gets too distracting, it’s tempting to pop in your earbuds, crank
    up your favourite tunes, and close yourself off to focus better.</p><p>If you
    consistently blast your music too loudly, you can damage your hearing. But it’s
    not just your ears: Hearing loss in older adults is linked to brain problems,
    such as Alzheimer’s and loss of brain tissue.</p><p>When your brain has to work
    so hard to understand what’s being said around you, it can’t store what you’ve
    heard into memory. So, protect your hearing by adjusting the volume of your headphones
    — it’s an excellent way to preserve your hearing and allow your brain to work
    better.</p><p>“One test we recommend is to remove your headphones, keeping them
    at your preferred volume, and hold them out in front of you at an arm’s length.
    Can you hear the music clearly? If so, try turning it down and repeating again,”
    writes <em>Headphonesty</em>. Always aim to take regular breaks during the course
    of the day to give your ears a much-needed rest.</p><h3>7. Sleeping poorly upsets
    your brain</h3><p>Insufficient sleep is a huge problem for many busy professionals.
    Sleep deprivation can have serious short-term and long-term consequences — it
    can delay reaction times, glucose levels, mood, headache, impaired memory, and
    hormone imbalances. Recent <a href="https://www.cnn.com/2014/09/04/health/no-sleep-brain-size/index.html">research</a>
    shows that not getting enough sleep may actually shrink your brain.</p><p>Sleep
    is absolutely essential for your brain. When you deprive your brain healthy sleep,
    how it process information, consolidates memories, make connections, and clear
    out toxins suffers.</p><p>Lack of sleep slows down your thinking, impairs your
    memory, concentration, judgment, and decision-making, and impedes learning.</p><p>Improving
    your sleep habits could be an important way to improve brain health. 7–8 hours/night
    of good sleep is essential for stimulating new connections and brain growth.</p><p>If
    you are concerned about the health of your brain and the quality of your thinking
    now or in the future, learn to take care of your brain. A few simple changes to
    your lifestyle could boost your memory, learning, mental resilience and overall
    health of your brain.</p>'
  :author: Kaizen Habits
  :topic: health
- :url: https://elemental.medium.com/the-healthiest-people-in-the-world-dont-go-to-the-gym-d3eb6bb1e7d0?source=search_post---------1
  :title: The Healthiest People in the World Don’t Go to the Gym
  :content: <p>Go ahead and cancel your membership, you already have the tools you
    need</p><p><img src="https://cdn-images-1.medium.com/max/5572/0*nzpu-Xc22pQEkhTz"
    alt="Photo by [Arturo Castaneyra](https://unsplash.com/@castaneyra?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@castaneyra?utm_source=medium&utm_medium=referral">Arturo
    Castaneyra</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>If
    you want to be as healthy as possible, there are no treadmills or weight machines
    required.</p><p>Don’t just take my word for it — look to the longest-lived people
    in the world for proof.</p><p>People in the world’s <a href="http://time.com/5160475/blue-zones-healthy-long-lives/">Blue
    Zones</a>— the places around the world with the highest life expectancy — <a href="https://www.bluezones.com/2016/11/power-9/">don’t
    pump iron, run marathons or join gyms</a><em>.</em></p><p>Instead, they live in
    environments that constantly nudge them into moving without even thinking about
    it. This means that they grow gardens, walk throughout the day, and minimize mechanical
    conveniences for house and yard work.</p><p>In fact, Blue Zones researchers determined
    that routine natural movement is one of the most impactful ways to increase your
    life span, and a common habit among the world’s longest-lived populations.</p><p>Of
    course this might not seem realistic in our current knowledge economy, where we’re
    often tied to a desk and in front of a computer screen all day.</p><p>Moving naturally
    throughout the day might sound pleasant and romantic, but the reality is that
    100 years ago only 10% of us had sedentary jobs, whereas today it’s 90%.</p><p>However,
    there are still easy ways to add more movement into your busy lifestyle.</p><p>One
    of the best ways to do this is to use an active mode of transportation. This could
    mean walking your kids to school, walking or biking to the grocery store, to a
    friend’s house, or out to dinner.</p><p>Ideally you could walk or bike to work
    as well (or walk/bike to the bus or train station, if that’s more feasible).</p><p>Research
    shows that the <a href="http://www.andrewmerle.com/blog/2017/9/10/the-ideal-work-commute-will-make-you-happier-and-healthier">best
    work commute you can have is a 15-minute walk each way</a>, but any physical activity
    built in along your commute is a plus. On the flip side, the <a href="http://www.npr.org/2011/10/19/141514467/small-changes-can-help-you-thrive-happily">daily
    car commute is the number two thing Americans hate the most on a daily basis</a>,
    behind only housework (but maybe housework would be more enjoyable if you reminded
    yourself of the life-extending natural movement involved!).</p><p>If active transportation
    isn’t possible in your community, you can still find time to go out for a walk.</p><p>A
    recent study from the <a href="https://www.cancer.org/latest-news/study-even-a-little-walking-may-help-you-live-longer.html">American
    Cancer Society</a> revealed that walking for six hours per week resulted in a
    lower risk of dying from cardiovascular disease, respiratory disease, and cancer
    than not being active at all. But the research also showed that walking even as
    little as two hours per week could reduce the risk of disease and help you live
    longer.</p><p><a href="http://www.andrewmerle.com/blog/2017/9/24/this-is-how-to-exercise-to-sharpen-your-mind">Walking
    is also great medicine for</a> your mind. A <a href="https://books.google.com/books?id=-DXRDgAAQBAJ&pg=PT164&dq=%22a+daily+walk+could+cut+our+risk+of+developing+dementia%22+Anders+Hansen&hl=en&sa=X&ved=0ahUKEwjU5uGpw4TWAhVFQiYKHeQDAocQ6AEIKjAA#v=onepage&q=%22a%20daily%20walk%20could%20cut%20our%20risk%20of%20developing%20dementia%22%20Anders%20Hansen&f=false">daily
    walk could reduce the risk of dementia by 40%</a>, according to Anders Hansen,
    a physician and psychiatry specialist from the Karolinska Institute in Sweden.</p><p>If
    long walks aren’t your thing, break it up by taking several smaller walks per
    day instead (five minutes per hour).</p><p>Make it a point to stand at your desk,
    or at least get up and move around regularly throughout the day. Get outside at
    lunch for some fresh air.</p><p>The bottom line is that our bodies were designed
    to move.</p><p>And that doesn’t necessarily mean going to the gym.</p><p>You don’t
    need to lift heavy weights or grind through high intensity interval workouts to
    live a long and healthy life.</p><p>Simple, natural movement can be even more
    impactful.</p><p>Do as the world’s centenarians do — move naturally.</p>
  :author: A Supercomputer Analyzed Covid-19 — and an Interesting New Theory Has Emerged
  :topic: health
- :url: https://medium.com/matter/heres-why-public-wifi-is-a-public-health-hazard-dd5b8dcb55e6?source=search_post---------2
  :title: Here’s Why Public Wifi is a Public Health Hazard
  :content: '<p>Maybe Better If You Don’t Read This Story on Public WiFi<center></p><h3>We
    took a hacker to a café and, in 20 minutes, he knew where everyone else was born,
    what schools they attended, and the last five things they googled.</center></h3><p><center><strong>By
    <a href="https://twitter.com/mauritsmartijn">Maurits Martijn</a>, from <a href="http://thecorrespondent.com">*De
    Correspondent</a>****Translated from Dutch by Jona Meijers</strong>***<em>Illustrations
    by Kristina Collantes</em></center></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*Mp6iBJ6Wr3tkJQKXzoCBRA.png"
    alt=""></p><p><strong>In his backpack,</strong> Wouter Slotboom, 34, carries around
    a small black device, slightly larger than a pack of cigarettes, with an antenna
    on it. I meet Wouter by chance at a random cafe in the center of Amsterdam. It
    is a sunny day and almost all the tables are occupied. Some people talk, others
    are working on their laptops or playing with their smartphones.</p><p>Wouter removes
    his laptop from his backpack, puts the black device on the table, and hides it
    under a menu. A waitress passes by and we ask for two coffees and the password
    for the WiFi network. Meanwhile, Wouter switches on his laptop and device, launches
    some programs, and soon the screen starts to fill with green text lines. It gradually
    becomes clear that Wouter’s device is connecting to the laptops, smartphones,
    and tablets of cafe visitors.</p><p>On his screen, phrases like “iPhone Joris”
    and “Simone’s MacBook” start to appear. The device’s antenna is intercepting the
    signals that are being sent from the laptops, smartphones, and tablets around
    us.</p><p>More text starts to appear on the screen. We are able to see which WiFi
    networks the devices were previously connected to. Sometimes the names of the
    networks are composed of mostly numbers and random letters, making it hard to
    trace them to a definite location, but more often than not, these WiFi networks
    give away the place they belong to.</p><p>We learn that Joris had previously visited
    McDonald’s, probably spent his vacation in Spain (lots of Spanish-language network
    names), and had been kart-racing (he had connected to a network belonging to a
    well-known local kart-racing center). Martin, another café visitor, had been logged
    on to the network of Heathrow airport and the American airline Southwest. In Amsterdam,
    he’s probably staying at the White Tulip Hostel. He had also paid a visit to a
    coffee shop called The Bulldog.<center></p><h3>Session 1:</center></h3><p><center></p><h2>Let
    everyone connect to our fake network</center></h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*AjZJmRgU8tCzcH29Wk6YXg.jpeg"
    alt=""></p><p><strong>The waitress serves</strong> us our coffee and hands us
    the WiFi password. After Slotboom is connected, he is able to provide all the
    visitors with an internet connection and to redirect all internet traffic through
    his little device.</p><p>Most smartphones, laptops, and tablets automatically
    search and connect to WiFi networks. They usually prefer a network with a previously
    established connection. If you have ever logged on to the T-Mobile network on
    the train, for example, your device will search for a T-Mobile network in the
    area.</p><p>Slotboom’s device is capable of registering these searches and appearing
    as that trusted WiFi network. I suddenly see the name of my home network appear
    on my iPhone’s list of available networks, as well as my workplace, and a list
    of cafes, hotel lobbies, trains, and other public places I’ve visited. My phone
    automatically connects itself to one of these networks, which all belong to the
    black device.</p><p>Slotboom can also broadcast a fictitious network name, making
    users believe they are actually connecting to the network of the place they’re
    visiting. For example, if a place has a WiFi network consisting of random letters
    and numbers (Fritzbox xyz123), Slotboom is able to provide the network name (Starbucks).
    People, he says, are much more willing to connect to these.</p><p>We see more
    and more visitors log on to our* <em>fictitious</em> *network. The siren song
    of the little black device appears to be irresistible. Already 20 smartphones
    and laptops are ours. If he wanted to, Slotboom could now completely ruin the
    lives of the people connected: He can retrieve their passwords, steal their identity,
    and plunder their bank accounts. Later today, he will show me how. I have given
    him permission to hack me in order to demonstrate what he is capable of, though
    it could be done to anyone with a smartphone in search of a network, or a laptop
    connecting to a WiFi network.</p><p>Everything, with very few exceptions, can
    be cracked.</p><p>The idea that public WiFi networks are not secure is not exactly
    news. It is, however, news that can’t be repeated often enough. There are currently
    more than <a href="http://www.emarketer.com/Article/Smartphone-Users-Worldwide-Will-Total-175-Billion-2014/1010536">1.43
    billion smartphone users worldwide</a> and more than 150 million smartphone owners
    in the U.S. More than <a href="http://www.gallup.com/poll/166745/americans-tech-tastes-change-times.aspx">92
    million</a> American adults own a tablet and more than <a href="http://quickfacts.census.gov/qfd/states/00000.html">155
    million</a> own a laptop. Each year the worldwide demand for more laptops and
    tablets increases. In 2013, an estimated 206 million tablets and 180 million laptops
    were sold worldwide. Probably everyone with a portable device has once been connected
    to a public WiFi network: while having a coffee, on the train, or at a hotel.</p><p>The
    good news is that some networks are better protected than others; some email and
    social media services use encryption methods that are more secure than their competitors.
    But spend a day walking in the city with Wouter Slotboom, and you’ll find that
    almost everything and everyone connected to a WiFi network can be hacked. A <a
    href="https://www.riskbasedsecurity.com/reports/2013-DataBreachQuickView.pdf">study</a>
    from threat intelligence consultancy Risk Based Security estimates that more than
    822 million <a href="https://www.riskbasedsecurity.com/2014/02/2013-data-breach-quickview/">records</a>
    <a href="http://nakedsecurity.sophos.com/2014/02/19/2013-an-epic-year-for-data-breaches-with-over-800-million-records-lost/">were
    exposed</a> worldwide in 2013, including credit card numbers, birth dates, medical
    information, phone numbers, social security numbers, addresses, user names, emails,
    names, and passwords. Sixty-five percent of those records came from the U.S. According
    to IT security firm Kaspersky Lab, in 2013 an estimated 37.3 million users worldwide
    and 4.5 million Americans were the victim of phishing—or pharming—attempts, meaning
    payment details were stolen from hacked computers, smartphones, or website users.</p><p>Report
    after report shows that digital identity fraud is an increasingly common problem.
    Hackers and cybercriminals currently have many different tricks at their disposal.
    But the prevalence of open, unprotected WiFi networks does make it extremely easy
    for them. The Netherlands National Cyber ​​Security Center, a division of the
    Ministry of Security and Justice, did not issue the following advice in vain:
    “It is not advisable to use open WiFi networks in public places. If these networks
    are used, work or financial related activities should better be avoided.”</p><p>Slotboom
    calls himself an “ethical hacker,” or one of the good guys; a technology buff
    who wants to reveal the potential dangers of the internet and technology. He advises
    individuals and companies on how to better protect themselves and their information.
    He does this, as he did today, usually by demonstrating how easy it is to inflict
    damage. Because really, it’s child’s play: The device is cheap, and the software
    for intercepting traffic is very easy to use and is readily available for download.
    “All you need is 70 Euros, an average IQ, and a little patience,” he says. I will
    refrain from elaborating on some of the more technical aspects, such as equipment,
    software, and apps needed to go about hacking people.<center></p><h3>Session 2:</center></h3><p><center></p><h2>Scanning
    for name, passwords, and sexual orientation</center></h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*3xtOEHNi9oXoT5iAV5jBMw.jpeg"
    alt=""></p><p><strong>Armed with Slotboom’s</strong> backpack, we move to a coffeehouse
    that is known for the beautiful flowers drawn in the foam of the lattes, and as
    a popular spot for freelancers working on laptops. This place is now packed with
    people concentrating on their screens.</p><p>Slotboom switches on his equipment.
    He takes us through the same steps, and within a couple of minutes, 20 or so devices
    are connected to ours. Again we see their Mac-addresses and login history, and
    in some cases their owners’ names. At my request, we now go a step further.</p><p>Slotboom
    launches another program (also readily available for download), which allows him
    to extract even more information from the connected smartphones and laptops. We
    are able to see the specifications of the mobile phone models (Samsung Galaxy
    S4), the language settings for the different devices, and the version of the operating
    system used (iOS 7.0.5). If a device has an outdated operating system, for example,
    there are always known “bugs,” or holes in the security system that can be easily
    exploited. With this kind of information, you have what you need to break into
    the operating system and take over the device. A sampling of the coffeehouse customers
    reveals that none of the connected devices have the latest version of the operating
    system installed. For all these legacy systems, a known bug is listed online.</p><p>We
    can now see some of the actual internet traffic of those around us. We see that
    someone with a MacBook is browsing the site <a href="http://www.nu.nl/">Nu.nl</a>.
    We can see that many devices are sending documents using WeTransfer, some are
    connecting to Dropbox, and some show activity on Tumblr. We see that someone has
    just logged on to FourSquare. The name of this person is also shown, and, after
    googling his name, we recognize him as the person sitting just a few feet away
    from us.</p><p>Information comes flooding in, even from visitors who are not*
    *actively working or surfing. Many email programs and apps constantly make contact
    with their servers—a necessary step for a device to retrieve new emails. For some
    devices and programs, we are able to see what information is being sent, and to
    which server.</p><p>And now it’s getting really personal. We see that one visitor
    has the gay dating app Grindr installed on his smartphone. We also see the name
    and type of the smartphone he’s using (iPhone 5s). We stop here, but it would
    be a breeze to find out to who the phone belongs to. We also see that someone’s
    phone is attempting to connect to a server in Russia, sending the password along
    with it, which we are able to intercept.<center></p><h3>Session 3:</center></h3><p><center></p><h2>Obtaining
    information on occupation, hobbies, and relational problems</center></h2><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*LWZjOpC98xJT1WX9CpBZBg.jpeg" alt=""></p><p><strong>Many
    apps, programs,</strong> websites, and types of software make use of encryption
    technologies. These are there to ensure that the information sent and received
    from a device is not accessible to unauthorized eyes. But once the user is connected
    to Slotboom’s WiFi network, these security measures can be circumvented relatively
    easily, with the help of decryption software.</p><p>To our shared surprise, we
    see an app sending personal information to a company that sells online advertising.
    Among other things, we see the location data, technical information of the phone,
    and information of the WiFi network. We can also see the name (first and last)
    of a woman using the social bookmarking* *website Delicious. Delicious allows
    users to share websites—bookmarks—they are interested in. In principle, the pages
    that users of Delicious share are available publicly, yet we can’t help feeling
    like voyeurs when we realize just how much we are able to learn about this woman
    on the basis of this information.</p><p>First we google her name, which immediately
    allows us to determine what she looks like and where in the coffeehouse she is
    sitting. We learn that she was born in a different European country and only recently
    moved to the Netherlands. Through Delicious we discover that she’s been visiting
    the website of a Dutch language course and she has bookmarked a website with information
    on the Dutch integration course.</p><p>In less than 20 minutes, here’s what we’ve
    learned about the woman sitting 10 feet from us: where she was born, where she
    studied, that she has an interest in yoga, that she’s bookmarked an online offer
    for a anti-snore mantras, recently visited Thailand and Laos, and shows a remarkable
    interest in sites that offer tips on how to save a relationship.</p><p>Slotboom
    shows me some more hacker tricks. Using an app on his phone, he is able to change
    specific words on any website. For example, whenever the word “Opstelten” (the
    name of a Dutch politician) is mentioned, people see the word “Dutroux” (the name
    of a convicted serial killer) rendered on the page instead. We tested it and it
    works. We try another trick: Anyone loading a website that includes pictures gets
    to see a picture selected by Slotboom. This all sounds funny if you’re looking
    for some mischief, but it also makes it possible to load images of child pornography
    on someone’s smartphone, the possession of which is a criminal offense.<center></p><h2>Password
    intercepted</center></h2><p><strong>We visit yet</strong> another cafe. My last
    request to Slotboom is to show me what he would do if he wanted to really harm
    me. He asks me to go to Live.com (the Microsoft email site) and enter a random
    username and password. A few seconds later, the information I just typed appears
    on his screen. “Now I have the login details of your email account,” Slotboom
    says. “The first thing I would do is change the password of your account and indicate
    to other services you use that I have forgotten my password. Most people use the
    same email account for all services. And those new passwords will then be sent
    to your mailbox, which means I will have them at my disposal as well.” We do the
    same for Facebook: Slotboom is able to intercept the login name and password I
    entered with relative ease.</p><p>Another trick that Slotboom uses is to divert
    my internet traffic. For example, whenever I try to access the webpage of my bank,
    he has instructed his program to re-direct me to a page he owns: a cloned site
    that appears to be identical to the trusted site, but is in fact completely controlled
    by Slotboom. Hackers call this DNS* *spoofing. The information I entered on the
    site is stored on the server owned by Slotboom. Within 20 minutes he’s obtained
    the login details, including passwords for my Live.com, SNS Bank, Facebook, and
    DigiD accounts.</p><p>I will never again be connecting to an insecure public WiFi
    network without taking security measures.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*2UTDNFJKz2Jtp8ZcZiVILA.jpeg"
    alt=""></p><p><em>This article originally appeared in Dutch online journalism
    platform, <a href="https://decorrespondent.nl/1101/What-we-give-away-when-we-log-on-to-a-public-Wi-Fi-network/31040493-53737dba">*De
    Correspondent.</a></em> All names in this article are fictitious, except for Wouter
    Slotboom’s. We handled the intercepted data with the utmost care and erased it
    immediately after our last meeting.*<center><em>Follow Matter on <a href="http://twitter.com/readmatter">Twitter</a>
    | Like us on <a href="http://facebook.com/readmatter">Facebook</a> | Subscribe
    to our <a href="http://eepurl.com/0eY7T">newsletter</a></em></center></p>'
  :author: Matter
  :topic: health
- :url: https://medium.com/mind-cafe/6-habits-of-highly-healthy-brains-ef0c1c86014b?source=search_post---------3
  :title: 6 Habits of Highly Healthy Brains
  :content: '<p>Key lifestyle habits that can help keep your brain healthy.</p><p><img
    src="https://cdn-images-1.medium.com/max/6912/1*gbN__eGQps2TcqmiITZd-A.jpeg" alt="Photo
    by [Alina Grubnyak](https://unsplash.com/@alinnnaaaa?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/brain?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@alinnnaaaa?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Alina
    Grubnyak</a> on <a href="https://unsplash.com/s/photos/brain?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>The
    relationships between our brain and body and the world around us is complex. What
    you do or don’t do can significantly change your health and wellbeing.</p><p>A
    healthy brain is determined by biological and physiological factors — genes, hormones,
    the immune system, nutrition, exercise, and other lifestyle choices.</p><p>Social,
    psychological and environmental factors including relationships, stress, emotions,
    mindset, life events, and current circumstances also contribute to your brain
    health.</p><p>Each element can impact others in a multi-directional and dynamic
    way. For example, your thoughts can influence your physical health (which is why
    chronic stress can lead to abnormal heart rhythms or heart attacks).</p><p>Everyone
    wants to live an active, vibrant life for as long as possible. And that goal depends
    on robust brain health. You can’t do much about your genes, but other physiological,
    social and environmental factors can be modified to improve your brain.</p><p>Our
    brains naturally decline if we do nothing to protect them. However, if we intervene
    early, we can slow the decline process — it’s easier to protect a healthy brain
    than to try to repair damage once it’s done.</p><p>You can improve your lifestyle
    habits to promote a highly healthy brain — one free of physical or mental illness,
    disease, and pain. We have more control over our aging brains than we realize.</p><p>These
    habits are just a reminder — you already know the importance of these lifestyle
    choices. It pays to make a conscious effort to help yourself — your brain will
    thank you.</p><h3>1. Healthy brains know the long-term value of brain food</h3><p>That
    means eating lots of foods associated with slowing cognitive decline — blueberries,
    vegetables (leafy greens — kale, spinach, broccoli), whole grains, getting protein
    from fish and legumes and choosing healthy unsaturated fats (olive oil) over saturated
    fats (butter).</p><p>The connection between what goes into your body and how your
    brain performs is strong. This diet is also good for your brain, heart, and blood
    vessels.</p><p>“Omega-3 fats from fish or nuts fight inflammation associated with
    neurodegeneration. Fruit and vegetables combat age-related oxidative stress that
    causes wear and tear on brain cells,” says Dr. Gary Small, a professor of psychiatry
    and aging, and director of the Longevity Center at the Semel Institute for Neuroscience
    &amp; Human Behavior, University of California, Los Angeles.</p><h3>2. A healthy
    brain creates calm: It really matters!</h3><p>Find your moment or place of calm
    and separate yourself from chronic stress.</p><p>Chronic stress can change the
    wiring of our brains.“Stress shrinks the brain’s memory centres, and the stress
    hormone cortisol temporarily impairs memory,” says Dr Small.</p><p>To reverse
    stress and improve your mood and memory, adopt relaxation methods like meditation.
    “Meditation even rewires the brain and improves measures of chromosomes’ telomere
    (protective cap) length, which predicts longer life expectancy” argues Dr Small.</p><p>Find
    your place or moment of calm, and do something pleasurable that makes you come
    alive — a personal passion project can help you destress.</p><h3>3. Even 20 minutes
    of daily brisk walking is beneficial to maintain a healthy brain</h3><p>Physical
    activity is one of the best things you can do for your brain and body. You already
    know the countless benefits of exercising.</p><p>There is a lot of <a href="https://cp.neurology.org/content/8/3/257">research</a>
    that has found that nearly any type of physical activity — walking, running, cycling,
    minimal weight-lifting and even mindful exercise such as yoga contributes to improved
    cognitive performance.</p><p>Exercise stimulates the brain to release brain-derived
    neurotrophic factor (BDNF), a molecule essential for repairing brain cells and
    creating connections between them.</p><p>Physical activity also boosts endorphins,
    which can lift your mood. “Aerobic exercise helps improve the health of brain
    tissue by increasing blood flow to the brain and reducing the chances of injury
    to the brain from cholesterol buildup in blood vessels and from high blood pressure,”
    says Dr Joel Salinas, a neurologist at Harvard-affiliated Massachusetts General
    Hospital.</p><p>A simple walk outdoors gets you away from digital devices and
    into nature. You’ll do your best thinking when walking.</p><h3>4. Engaging in
    mentally stimulating activities creates new brain connections and more cognitive
    reserve</h3><p>Stimulating and challenging the brain helps it stay fit and firing.
    Spend some time in new thoughts.</p><p>To improve your brain health, try to do
    one activity that challenges the mind every day — spend some time in new thoughts.
    The desire to learn and understand other people, ideas, cultures and concepts
    can boost your brain.</p><p>“…higher cognitive activity endows the brain with
    a greater ability to endure the effects of brain pathologies compared to a person
    with lower cognitive engagement throughout life,” says David S. Knopman, M.D.,
    a clinical neurologist involved in research in late-life cognitive disorders.</p><p>Lifelong
    learning and mentally challenging work build cognitive reserve. Find reasonably
    challenging activities you can practice regularly — try activities that combine
    mental, social and physical challenges.</p><h3>5. Make meaningful connections
    to stay sharp</h3><p>We’re social creatures — meaningful social connections make
    us happier. Happiness makes your brain work better.</p><p>Psychological studies
    show that conversation stimulates the brain. It may seem effortless to many, but
    it requires a complex combination of skills including attention, memory, thinking,
    speech and social awareness.</p><p>A <a href="https://ajph.aphapublications.org/doi/full/10.2105/AJPH.2007.115923">study</a>
    published in the *American Journal of Public Health *found that better social
    interaction can help protect the brain against dementia and Alzheimer’s.</p><p>Social
    connections are as important to our flourishing as the need for food, safety,
    and shelter. The urge to connect is a life-long human need.</p><p>Matthew Lieberman,
    a social psychologist, neuroscientist, and author of *Social: Why Our Brains Are
    Wired to Connect, *sees the brain as the center of the social self. He writes
    in his book, “It’s hard to find meaning in what we do if at some level it doesn’t
    help someone else or make someone happier.”</p><p>Researchers at the Oregon Health
    &amp; Science University and the University of Michigan have <a href="https://myhometouch.com/articles/social-interaction-and-brain-health">suggested</a>
    that human interaction and conversation could be the keys to maintaining brain
    function as we grow older.</p><p>Supportive friends, family and social connections
    helps you live longer, happier and healthier. Socialising reduces the harmful
    effects of stress</p><h3>6. A healthy brain doesn’t overlook or underappreciate
    quality sleep and “wakeful rest”</h3><p>Sleep is the number one, fundamental bedrock
    of good health. A good night sleep every night should be a priority, not a luxury.</p><p>“Without
    good sleep, we see increased anxiety and stress. Sleep is restorative, helping
    you be more mentally energetic and productive,” advises Sandra Bond Chapman, Ph.D.,
    founder and chief director of the Center for BrainHealth at the University of
    Texas at Dallas and author of <em>Make Your Brain Smarter.</em></p><p>Apart from
    getting a good and quality night sleep, make time for “wakeful rest” — it pays
    to plan breaks in between your busy schedule. Plan downtime on your calendar.</p><p>After
    a busy day, give your brain time to recover — sit back, close your eyes and let
    your mind wander (spontaneous thought in our wakeful life)— in the knowledge that
    your brain is busy consolidating information.</p><p>In a study on <em>Boosting
    Long-Term Memory via Wakeful Rest, *the authors found that “</em>wakeful rest*”
    — without any external stimulation — allows the brain to consolidate the memories
    of what it has learned.</p><p>It is never too early or too late to start living
    more healthily. Your daily habits have more impact on how long and how well you
    live — plan to eat well, take short walks, engage in mental stimulation, and manage
    your social connections for better brain health.</p>'
  :author: Mind Cafe
  :topic: health
- :url: https://medium.com/anxy-magazine/facebook-s-mental-health-problem-9c48374c1bd8?source=search_post---------4
  :title: Facebook’s Mental Health Problem
  :content: '<p>The most important thing I learned in 2015? That depression and social
    media do not go well together at all.</p><p><img src="https://cdn-images-1.medium.com/max/2880/1*A-eekcg_7mCIdPr6oVjvjQ.png"
    alt=""></p><p>The first time I deleted the Facebook app from my phone was in October
    2014. It wasn’t a considered decision. Rather, it felt like dumping a half-eaten
    tub of ice cream before I could gobble down the whole thing and feel sick, or
    deleting the number of a man who clearly doesn’t have my best interests at heart:
    a panicked intervention by reason to prevent my out-of-control animal instinct
    from doing further harm to myself.</p><p>That October I suffered my first bout
    of depression in over 10 years. Once I realised what was going (it took me a while),
    I swiftly pulled out of all work projects and withdrew to the care of very close
    friends and the quiet safety of my home. I tried to read books and failed; I tried
    to watch films and couldn’t focus for more than a few minutes at a time. My attention
    span, never a soldier, had shrivelled up. So I found myself clutching my phone
    and switching between the Facebook, Instagram, and Twitter apps for hours at a
    time. Not to post — I couldn’t think of anything — but to consume. Yet with every
    double-tap on the home button, with every pull-to-refresh motion, things got worse.</p><blockquote><h1>Every
    receding wave left a despair more profound than the one before — yet every time
    I wanted nothing more than the comforting waters to return. Pull to refresh.</h1></blockquote><p>It
    was a sensation like nothing I’d known before, like consuming a particularly vile
    drug: A quickening of the heartbeat, a wave of warmth and comfort, then a bleak,
    sickly, and tense emptiness, like the tide withdrawing from the shore and leaving
    nothing but loneliness in its damp wake. No matter how desperately I clutched
    at it, the water ran through my fingers, and every receding wave left a despair
    more profound than the one before— yet every time I wanted nothing more than the
    comforting waters to return. Pull to refresh.</p><p>It was a nauseating vicious
    cycle, and I had to get out. There was no one there to help me because I wouldn’t
    have known how to explain it. All I had were brief instances when the fog lifted
    a little and I was able to see that something bad was going on. I waited for one
    of those instances, then mustered all available energy and made what seemed, at
    the time, one of the most important decisions of my life: I deleted the Facebook
    app. Then Instagram. Then Twitter. I turned off all notifications, of which there’d
    been many. Except for text messages and calls from close friends and family, my
    phone was now silent. The world was suddenly much smaller, much more manageable,
    much more intimate. It allowed me to get better. And a few weeks later, without
    much thinking about it, I was back on social media.</p><p>The story might have
    ended there—had my depression not returned with a vengeance in the spring, plunging
    me right back into that horrible, horrible vicious cycle. Off the social apps
    went. But this time, maybe because I needed something to hold on to and pseudo-scientific
    inquiry felt like a good enough straw, I set out to understand what exactly was
    going on here.</p><p>It quickly turned out that it wasn’t just me. The friends
    and acquaintances I spoke to who had been through episodes of depression all told
    similar stories: during depression, social media was off limits. Some had taken
    breaks. Others had deleted their accounts. One had been ordered by his therapist
    to get off Facebook. Nobody had given it much thought. Most considered it simply
    another of the many mysteries surrounding depression, this weird disease of which
    not very much is known except common symptoms and general statistics.</p><p><strong>Common
    symptoms</strong>: You’re <em>very</em> low on energy. You can’t concentrate.
    You can’t deal with people. You can’t deal with stress. You may suffer headaches,
    back pain, sleeping disorders, and wildly varying appetite. Most of the time,
    you are not so much sad but catatonic. You just don’t feel anything. Except like
    a loser. And you can’t escape it. As Sylvia Plath wrote: “[W]herever I sat — on
    the deck of a ship or at a street café in Paris or Bangkok — I would be sitting
    under the same glass bell jar, stewing in my own sour air.”</p><p><strong>General
    statistics</strong>: The German Ministry for Education and Research states that
    the probability of experiencing major depression once in your life lies between
    16 and 20 percent in Germany, where I live. The U.S. National Institute of Mental
    Health says that in 2012, an estimated 16 million adults in the US, or 6.9 percent
    of the adult population, had suffered at least one major depressive episode in
    the past year. The World Health Organisation estimates there are 350 million people
    suffering from depression globally, and that by 2020 it will be the second most
    widespread disease in the world.</p><p>This is shoddy statistics, but: 350 million
    people is one quarter of Facebook’s global user base.</p><p>There is no scientific
    research to back up my claim or explain this link between depression and social
    media use — or at least I haven’t been able to find any. There are plenty of studies
    into how social media may <em>cause</em> depression, but the evidence is thin:
    For every study <a href="http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0069841">claiming
    proof</a> that social media is harmful, <a href="http://www.jahonline.org/article/S1054-139X%2812%2900209-1/abstract?cc=y=">there’s
    another</a> saying it isn’t. (<a href="http://www.eurekalert.org/pub_releases/2015-02/uom-ifu020315.php">One
    study from the University of Missouri from February 2015</a> basically tried to
    settle the debate by saying it all depends on how you use it. Stalk acquaintances
    and compare your life to theirs, and bang, here comes depression. Dotingly check
    on your friends and family, and you’ll be happy. Which begs the question: Have
    the researchers ever actually used Facebook?)</p><blockquote><h1>“Oh yes, I see
    that a lot,” my psychiatrist said matter-of-factly when I asked her whether her
    other depressive patients were also unable to use social media. “One even dumped
    her phone recently.”</h1></blockquote><p>Yet while there may be no research into
    the effect social media may have on an already existing depression, to specialists
    that effect appears so obvious that it isn’t even particularly noteworthy. “Oh
    yes, I see that a lot,” my psychiatrist at the Psychiatric University Clinic of
    Berlin’s Charité hospital said matter-of-factly when I asked her whether her other
    depressive patients were also unable to use social media. “One even dumped her
    phone recently.” That’s because social media and constant availability cause stress,
    she explained. “Also, when you’re suffering from depression, you don’t usually
    want to see other people’s amazing lives.”</p><p>Seeking more explanations, I
    went all the way up the food chain to Professor Isabella Heuser, director of the
    Charité’s Clinic for Psychiatry and Psychotherapy, who swiftly confirmed my psychiatrist’s
    assessment of the incompatibility of depression and social media. (While nearly
    all patients she’s seen stay off social media altogether, she did concede that
    some patients go on Facebook when they can’t sleep at night, although she says
    they generally don’t, or can’t, talk about their depression on the platform and
    don’t get anything positive out of the experience).</p><p>I laid out to her what
    I’d found out through self-observation.</p><ol><li><p>That I wasn’t able to perform
    for social media anymore. I used to go through life mentally composing tweets
    and spotting photo opportunities for Instagram. That was unthinkable now. The
    mere thought caused so much anxiety that I could barely unclench my jaws.</p></li><li><p>That
    I now consciously suffered from comparing my life to others’, which was also new.</p></li><li><p>That
    I was experiencing a powerful craving for instant gratification that also felt
    incredibly harmful — remember the receding waters — and that wreaked further havoc
    to my already suffering attention span.</p></li></ol><p>“Well, it’s easy to explain
    <em>that</em> physiologically,” Professor Heuser said when she heard the last
    point. “Through your daily engagement with social media your brain has learned
    that when you log on in the morning, a pleasant feeling will follow. Escapism,
    a positive world. That’s dopamine, anticipation, and you can still experience
    that. However, the positive feeling that usually follows — your organism can’t
    mount that response anymore. That’s a classic symptom of depression. You can’t
    feel joy or connection to others anymore.” And because my brain knows what joy
    used to feel like, she explained, its absence, that emptiness, is experienced
    subconsciously as painful. The fact that I found it so hard to resist the lure
    of said dopamine release was also easy to explain, she said: “Will has to do with
    energy. And depression is characterised precisely by a lack of energy.” And as
    far as my attention span went, well, if it had been low before, depression may
    now simply have pushed it below a threshold that I considered tolerable.</p><blockquote><h1>I
    took to my Facebook feed in search of material and the further I went back, the
    more jealous I felt <em>at my own life</em> as I had portrayed it.</h1></blockquote><p>So
    far, so medically straightforward. But what about the sudden sense of inferiority?
    I told Professor Heuser of one particularly crass example: Shortly before my second
    break-down, an artist friend had asked me to participate in a video examining
    the way we portray ourselves and our accomplishments, both online and off. I was
    to read out a few of my own social media posts. I took to my Facebook feed in
    search of material and the further I went back, the more jealous I felt <em>at
    my own life</em> as I had portrayed it. There they were, my glowing posts from
    Istanbul, Tokyo, and New York City, my tales of adventures in the West Bank and
    the Baltic Sea, the stories I’d written and magazines I’d edited, my clever commentary
    on current affairs, all rounded off by likes and comments from people I’d met
    (or not) at some point in my life — irrevocable proof that I’d once been successful,
    popular, joyful, happy even. At roughly 12 months into the past I was so overcome
    by self-pity that I had to break the whole thing off.</p><p>Professor Heuser thought
    for a moment. “That’s only indirectly related to social media,” she finally said.
    “People suffering from depression are incredibly creative at convincing themselves
    they are losers. But we live in a world that’s hyper-communicative — not really
    communicative, but narcissistic. Everybody is always ‘sharing’ something, only
    that it isn’t really sharing, it’s posting something to a wall in the hope that
    as many people as possible will come past and ‘like’ it. The purpose is to feed
    our narcissism. It is a many-voiced monologue, a cacophony. Everybody is posting
    something, but we aren’t talking to each other.”</p><p>This isn’t novel criticism
    to be levelled at either social media or contemporary culture, and under any other
    circumstance, I would have waved it away as Luddite. However, now for the first
    time in over 10 years of social media use did I actually understand it, feel the
    truth of it in my guts—and I realised to what extent I had happily played along.
    I was reminded of that famous quote by Carl Gustav Jung, the founder of analytical
    psychology: “Loneliness does not come from having no people about one, but from
    being unable to communicate the things that seem important to oneself.” To a healthy
    person, some phoney dialogue might appear tedious at worst. But to someone suffering
    from depression, the superficiality of social media may just be outrightly harmful.</p><p><img
    src="https://cdn-images-1.medium.com/max/2880/1*GRbZ6wTCqt5Q0xf9L19Rpg.png" alt=""></p><p>That’s
    an issue the media technologist and writer Deanna Zandt addressed in a <a href="https://www.youtube.com/watch?v=DYq-1HaIlOg">talk
    she gave at Personal Democracy Forum</a> in June 2015. Zandt presented the audience
    with a sample of photos from her social media feeds. In all of them she was all
    smiles; she was also, she revealed, at the time spiralling into the worst depressive
    period of her life. “The dissonance that was created for me by what was actually
    happening in my life versus what I thought I should be publicly sharing with my
    community made my condition that much worse.”</p><blockquote><h1>“All of this
    is leading us down this dangerous path of alienation. And not just from each other,
    but from our own selves. We’re walking down a technological thrust into collective
    depressive dissonance.”</h1></blockquote><p>Zandt blames digital culture’s focus
    on purity for blowing up the scale at which how we present ourselves in public
    differs from how we actually feel. “All of this is leading us down this dangerous
    path of alienation. And not just from each other, but from our own selves. We’re
    walking down a technological thrust into collective depressive dissonance.” Instead
    of building tools for “silly human mammals” who are “easily trained by positive
    reinforcement,” she argues, technologists should embrace the messiness of human
    life and put it into the core of the products they build. She doesn’t purport
    to know what this would look like, but her demand is clear: Digital culture should
    allow for that space between authenticity, connection, and vulnerability — in
    other words, intimacy.</p><p>Deanna Zandt, I hear you. But I am no media technologist.
    My solution to the problem posed by the incompatibility of depression and social
    media didn’t aim to change anyone’s life but my own. Yet maybe it was no less
    radical: Ruthlessly dispose of all fake intimacy and superficial interactions
    and focus what little energy I had on real connection. Take my feeble attention
    span and put it into the equivalent of an incubator. Learn to consider myself
    a worthy human being without the positive reinforcement of Twitter favs.</p><p>Which
    reminds me: Do people still call them favs?</p><p>I have been mostly off social
    media for seven months now. I have also deleted all non-social apps that trigger
    dopamine release and lure with escapism, like shopping apps and games. When I
    want to escape, I read a novel, and when I can’t concentrate, I go for a walk.
    I often leave the house without my phone. I have sworn off multitasking to the
    extent that for a while, I’ve even stopped listening to music while I work. And
    it made me feel *a lot *better. Sometimes I wish I were strong enough to delete
    my account on Facebook, which I now regard as the most dangerous of all social
    networks. As it is, I’ll keep my URL blocker on, limiting my daily dispense of
    methadone to 10 minutes and appreciating that they’ve made a separate Messenger
    app.</p><p>This wasn’t an easy article for me to write, and an even harder one
    to publish. I have become a much more private person in recent months and anyway,
    writing about depression does not fit with the professional version of myself
    I used to present online.</p><p>But while I’m worried about exposure, I also believe
    depression should be something we talk about more openly—everything else just
    feels ridiculous at this point. Ultimately I, like many other people, will have
    to find a way to cope with social media, just like I’ve had to learn to cope with
    the ready availability of sugary foods: through awareness and self-control. I
    don’t expect Twitter or Facebook to help me, just like I don’t expect Kraft Foods
    to do so. But I’d like to at least be aware of the risk factors — be they a propensity
    for diabetes, or depression.</p>'
  :author: Anxy Magazine
  :topic: health
- :url: https://humanparts.medium.com/honest-thoughts-from-a-veteran-about-gun-control-and-mental-health-c74930488e28?source=search_post---------5
  :title: Honest Thoughts From a Veteran About Gun Control and Mental Health
  :content: '<p>‘Common sense gun laws,’ a lost generation, and realistic solutions
    about what needs to change</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*HqP2ttyY3prRfAb6YH1szg.jpeg"
    alt="Ramadi, Iraq (Finger ALWAYS off trigger… proper training goes a long way,
    folks). Photos courtesy of the author."><em>Ramadi, Iraq (Finger ALWAYS off trigger…
    proper training goes a long way, folks). Photos courtesy of the author.</em></p><p>“What
    the hell do you need that weapon for?”</p><p>I whistled low through my teeth,
    feeling the tension mount as the comment lingered in the air. Each of us were
    desperate for someone to point out the obvious, yet when it happened I wanted
    to crawl under a table, eat popcorn, and watch from afar. I thought my fellow
    soldier’s comment would provoke a war of words but he doubled down and used a
    scorched-earth tactic.</p><p>“Is it so you can look cool in your office while
    jerking it to PowerPoint slides while we’re the ones left to catch bullets?”</p><p>The
    staff officer was visibly shocked and then turned a fury red.</p><p>“Get ahold
    of your soldier, first sergeant!” He roared.</p><p>While the rest of us tried
    to suppress giggles, our first sergeant clapped the insult-lobbing platoon sergeant
    on the neck and hurried him away.</p><p>The whole incident started when my Army
    unit discovered that the staff officers from our command were trying to commandeer
    our M4 carbine rifles. They planned to leave us with older M16 models that lacked
    optics and night vision capabilities. This became a point of contention, as almost
    all the staff officers had orders to work in a cubicle inside Baghdad’s Green
    Zone, while my team of 30 was being sent to Ramadi, Iraq. At the time, Ramadi
    was the most violent city on Earth, accounting for half of all daily attacks that
    happened in the country of Iraq. That same year, Ramadi <a href="https://en.wikipedia.org/wiki/Battle_of_Ramadi_(2006)">would
    also account for half of all deaths</a> that occurred in the United States Marine
    Corps between 2006 and 2007.</p><p>In the end, my team lucked out. The brigade
    commander stepped in and remained adamant that those in combat environments would
    receive the newer weapons.</p><p>Since leaving the military, I’ve been surprised
    by the number of people I’ve encountered who want to show me their AR-15s (the
    civilian version of an M4 or M16). They show them off as if we suddenly have a
    bond because they bought a weapon I went to war with and can strip apart blindfolded.</p><p>I
    always ask the same question: “What made you choose the AR-15?”</p><p>With my
    fellow veterans, it’s an easy answer. The AR-15 is the weapon we’re most familiar
    with. Durable. Lightweight. Personally, it’s what I’m most comfortable hunting
    with (especially boar).</p><blockquote><h1>Some of the responsibilities that come
    with being a soldier include gun control.</h1></blockquote><p>A few of the people
    I’ve asked have responded with legitimate and responsible answers. A few others
    were collectors. But after hearing most people’s reasons, my internal response
    is the same as my fellow sergeant’s outburst. Basically, these people just want
    to look cool.* *They want to play “military” without ever enlisting. Some have
    even shown me that they have the latest tactical gear, leaving me wondering why
    they want all the bells and whistles that come along with being a soldier, yet
    none of the responsibilities. And believe it or not, some of the responsibilities
    that come with being a soldier include gun control.</p><h2>Why the military does
    a better job at gun control than anyone</h2><p>One thing that has baffled me over
    the years is that I can go to the grocery store and buy a pack of Tic Tacs and
    then walk across the street and buy a gun. I’m not baffled that I can buy a gun,
    as I believe it’s an important liberty to have. But what concerns me is the ease
    and utter lack of training required to buy a tool that has no purpose other than
    to kill something.</p><p>A knife can be used for cooking and a bat for baseball.
    But a gun? Unless you’re collecting them for a museum, the point of a gun is to
    kill something.</p><p><strong>Let me give you a breakdown of how the military
    gets gun control right, and society has the process backwards:</strong></p><p>When
    you enlist in the military, you spend several weeks learning weapons safety and
    training. Before you are ever allowed to fire a weapon, you must be able to disassemble
    the rifle, clean it, and then reassemble it. You take tests and quizzes asking
    you questions pertaining to the distance and speed a bullet can travel. Once you
    pass your exams, you will then be allowed to fire the weapon under the supervision
    and training of drill sergeants and weapons experts. Finally, you must qualify
    with your weapon on targets. If you’re unable to do that, they will not allow
    you to graduate from basic training.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*sTCDldYMP1j_kpT7XexbfA.jpeg"
    alt="Even overseas, training and practice is vital towards safety."><em>Even overseas,
    training and practice is vital towards safety.</em></p><p>In the military, every
    weapon has a serial number. If that weapon gets lost or misplaced, they know “who
    done it” and there are serious repercussions. If you own a personal weapon, you
    must register it with the base you’re stationed at.</p><p>In combat or on duty,
    if it’s determined you’re mentally unfit to carry out your duties, your weapon
    is confiscated. You’ll then go through counseling until you’re deemed fit to once
    more carry out your duties. I’ve seen it happen on more than one occasion.</p><p>Now
    compare that to the process of any random person buying a gun in the United States,
    where there’s no required training and no one who determines whether you’re mentally
    sound.</p><h2><strong>“See! This is why we need common sense gun laws,” you say</strong></h2><p>We’re
    all tired of mass shootings and know something needs to change. Like you, I fear
    for my child’s safety at school, and I believe there are reforms that need to
    take place. The current battle cry is “common sense gun laws” but when pressed,
    most people can’t articulate what the hell that means aside from emotionally vague
    sentiments.</p><p>The most common argument for gun control is to ban certain styles
    of weapons from the populace or ensure greater safety measures — but you’re more
    likely to hear polarizing extremes when this is discussed, as opposed to a thoughtful
    and well-informed debate. Let me show you an example of how most people don’t
    know what they’re talking about.</p><h3><strong>Pop quiz, HotShot! (Bonus points
    if you get the reference.)</strong></h3><p>Below is a photo of your standard AR-15
    with collapsible buttstock, rail sights for optics, and a 30-round magazine. Below
    that is a Ruger Mini 14.</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*FJKWjKnzJ0C-wknYEDTuQg.png"
    alt="An AR-15 SAINT | [Springfield Armory](http://www.springfield-armory.com/products/saint/)"><em>An
    AR-15 SAINT | <a href="http://www.springfield-armory.com/products/saint/">Springfield
    Armory</a></em></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*mvaMrd6MCphhf2imFYK_uQ.png"
    alt="A Ruger Mini 14 | [Ruger](https://ruger.com/products/mini14RanchRifle/models.html)"><em>A
    Ruger Mini 14 | <a href="https://ruger.com/products/mini14RanchRifle/models.html">Ruger</a></em></p><ol><li><p>Can
    you tell me the difference between the two?</p></li><li><p>Which one of these
    should be banned (and why) under “common sense” gun laws?</p></li></ol><p>Most
    people will point to the AR-15 as the weapon that needs a ban because they associate
    the AR-15 with mass shootings. Aside from that, they know little to nothing about
    guns. When I ask about the Ruger Mini 14, however, people assume it’s just your
    standard hunting rifle. But nothing could be further from the truth.</p><p>Both
    weapons are semi-automatic rifles that fire .223 caliber bullets. Both have the
    option of collapsible buttstocks, advanced optics, and customization. In fact,
    here’s a Ruger Mini 14 with custom, tactical options:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*EtBKgQc1tbaSbNnvuvLEQA.png"
    alt="A Ruger Mini 14 Model 5846 | [Ruger](https://ruger.com/products/mini14TacticalRifle/specSheets/5846.html)"><em>A
    Ruger Mini 14 Model 5846 | <a href="https://ruger.com/products/mini14TacticalRifle/specSheets/5846.html">Ruger</a></em></p><p>Yet,
    there is no difference in the lethality between the Ruger mini 14 with tactical
    options and the version without. It just looks different because one has wood
    paneling. Thus, when most people say “common sense gun laws” they’re really saying
    “ban weapons that look scary.”</p><p>Another argument is to ban semi-automatic
    weapons. The only problem with that is that you’d need to ban pistols, most rifles,
    and some shotguns if you want to go with that category. A semi-automatic weapon
    is nothing more than a weapon whose firing mechanism you don’t have to re-cock.
    When the bullet shell ejects, it loads the next bullet into the chamber. The speed
    at which you can fire the weapon depends solely on how fast you can pull the trigger.</p><h2>Potential
    solutions</h2><p>If we want to impart common sense gun laws and not let our emotions
    or misinformation dictate the outcome, perhaps we should follow the same lead
    as the military:</p><ol><li>*<em>You’re required to go through training and orientation
    first. *</em>You must be able to disassemble the weapon and clean it, plus know
    the difference between bullet calibers and rate of fire. Afterwards, you’ll be
    supervised by a weapons instructor and pass target practice. Then, and only then,
    will you be allowed to take the weapon home. (Veterans and law enforcement are
    exempt.)</li></ol><p><strong>2. Your weapon will be registered with the local
    police and you’re responsible for its whereabouts.</strong> <em>(</em>This needs
    to be true to a greater degree than what we have in place now.<em>)</em> Parents,
    if your kids get hold of your weapons and do something dumb, you’re responsible
    in the same way that you would be if they were driving your car and hit someone.
    There are repercussions on your end too.</p><p>*<em>3. Required mental health
    and criminal background checks. *</em>(It’s embarrassing that I even have to state
    this.) This is perhaps the largest part of the issue that doesn’t have any proper
    solutions.</p><h2>If we don’t address mental health, we miss a huge part of the
    problem</h2><p>In October 2016, one of my good friends killed herself. I was the
    last person to speak with her before she put a gun to her head and ended her life.</p><p>When
    I found out that she’d committed suicide with a firearm, I was angry. She should
    have never been allowed to buy a weapon in the first place. I knew firsthand of
    her long history with mental illness, and her issues were well documented with
    psychiatrists. She even informed her clinician that due to a recent divorce, she
    was struggling with suicidal ideation. A few days prior to ending her life, she
    bought a handgun. That weapon would be how she exited this world.</p><p><a href="http://heartsupport.com/">As
    someone who works inside the mental health industry</a>, I’ll be the first to
    tell you that this is a major issue left unaddressed. I’ve been working on a new
    program (with a mental health expert) to help men and women combat depression.
    Often when I speak with men and women about their depression, anxiety, or other
    mental health issues and I ask what they think the reason behind their issues
    is, they say, “I don’t know.”</p><p>However, I have a hunch that the men and women
    responding** <strong>do know; they’re</strong> **just avoiding a deeper or more
    intimate conversation. So we surveyed over 500 men and women and the results were
    staggering. In the survey, our respondents could choose as many answers as they
    wanted that felt relevant to their situation. We asked things like “Does past
    pain or trauma play a part in your depression?” and “Are emotional or relational
    issues part of your depression?”</p><p>75% of respondents said stress and difficult
    life situations were the number one reason behind their depression. Relational
    issues with others and not knowing how to handle their emotions also affected
    60% of those who responded. Unresolved past pain and lacking purpose or direction
    in life accounted for more than half of all respondents. Less than 5% said they
    “didn’t know” the reason behind their depression, and that number is misleading
    because almost every person chose another reason in addition to “I don’t know.”</p><p>What
    we’re seeing is an entire generation of people who no longer have the skills necessary
    to face adversity or learn how to become resilient men and women. Bullying in
    schools is endemic, and it’s no longer just the kid from the traumatic home who’s
    lashing out. It’s the “mean girls” and the cool kids asserting dominance and slighting
    even their closest friends because that’s what they see on social media and from
    celebrities. <a href="https://www.cbsnews.com/news/many-americans-are-lonely-survey-finds/">More
    people are more lonely and isolated than ever before</a> and they’re lashing out,
    too. Men, in particular, have toxic views of masculinity, like: “<a href="https://byrslf.co/thoughts-on-the-vegas-shooting-14af397cee2c">Real
    men do everything on their own. Real men don’t cry. Real men express anger through
    violence.</a>”</p><p>I’ve heard people tell me “I got bullied and didn’t shoot
    anyone.” Yeah, me neither. I even got stitches from a school bully. But there’s
    a saying in the military’s SERE school (Survival, Evasion, Resistance, and Escape),
    which is where you learn to experience torture as a prisoner of war: “Everyone
    breaks.”</p><p>You’ve probably heard that phrase in the movies or from political
    hearings on torture, too. Once you’ve experienced bullying, isolation, or trauma
    long enough, you too will snap.</p><p>As we’re seeing, because of the increase
    in mental health issues and people not knowing how to develop healthy coping mechanisms,
    is that people are snapping. Some people are already there, and others are on
    their way. And if we allow people with these issues access to firearms? It’s the
    perfect storm.</p><p>I have friends who struggle with rampant feelings of worthlessness
    or are cutting themselves. I know people who deal with suicide ideation. They
    should not have access to a firearm until they’re healed.</p><p>The argument will
    then become: “That heaps more shame on me for having mental health issues, and
    I should have the same freedom as others.” But I don’t let my daughter play underneath
    the kitchen sink where the Drano is and say, “I hope this works out. I want you
    to have the freedoms I do.” That’s irresponsible. What’s responsible is restricting
    her freedoms.</p><p>So what should we do? One solution (which won’t fix everything
    but is a start) is to require counselors, social workers, and psychiatrists to
    report men and women to a database where they’ll be restricted from owning a firearm
    until they are deemed emotionally healthy once more. We already do this with convicted
    felons, so it’s not a stretch.</p><h2>You might say: I still think “assault rifles”
    should be banned</h2><p>I’ll make a compromise with you but first, a clarification:</p><p>There
    is no such thing as an “assault rifle.” I’m assuming you think AR stands for “Assault
    Rifle” but it’s only a branding for “Armalite Rifle.” Instead, you would have
    to determine what qualifies as an assault rifle based on caliber size and capabilities.
    If you instead banned every gun that has the qualities of an AR-15, you can end
    up banning standard hunting rifles, too. Thus, the whole situation is fickle and
    volatile because everyone’s emotions are involved on both sides of the aisle.
    Just like you, I’m sick of seeing death at every corner and I fear for my child’s
    safety. Something has to be done.</p><p>To compromise, I’d even be okay with the
    following: Let law enforcement and veterans be the only ones eligible to own the
    “scary weapons.”** **(But first, the populace would have to define which weapons
    are okay based on caliber and capability; as stated, that’s more nuanced than
    most people care to explain. It’s easier to say “ban this particular gun” as opposed
    to doing research and becoming knowledgeable on the subject).</p><p>The reason
    I suggest this is because in this case, less than 1% of the population would own
    a particular brand of firearm. Maybe then veterans will finally get the care and
    access to mental health we’ve been begging for from the VA and our fellow peers
    (as well as you, dear reader). It also provides a valuable service as far as checks
    and balances for the government and 2nd Amendment enthusiasts which ties into
    the next objection.</p><h2>You might say: Why did you suggest only veterans and
    law enforcement get to have AR-15s?</h2><p>Let me shoot you straight: The reason
    I suggested it is because if there was ever a revolution to overthrow a tyrannical
    government, you know who’d be leading it? Veterans and law enforcement. Not you
    and your hunting buddies. You literally hunt a dumb animal. Deers, ducks, and
    boar are dumb. You think you and your friends are gonna go all <em>Walking Dead</em>
    and suddenly know military tactics, flanking techniques, and urban warfare? Please.</p><blockquote><h1>Human
    beings were not meant to kill each other. There’s something deep inside of us
    that knows it’s wrong.</h1></blockquote><p>History will back this up too. Just
    review every major uprising from the American Revolution to the Civil War. Who
    led it? Military veterans ranging from George Washington to Artemas Ward. Veterans
    will be the ones to ensure tyrannical governments are overthrown, not a bunch
    of hunters with AR-15s. Plus, like I stated earlier, I think most people want
    that gun to look cool and fake-play being a soldier. So if you really want it,
    enlist and serve.</p><h2>You might say: Can’t we arm our teachers?</h2><p>Just….
    no. That’s the worst idea ever.</p><p>Human beings were not meant to kill each
    other. There’s something deep inside of us that knows it’s wrong. Even in war,
    it wreaks havoc on those of us who’ve endured watching another man die. No one
    captured this more clearly than David Ayer in the movie <em>Fury</em>. In one
    of the most standout moments of the movie, Shia LeBoeuf’s character meets a recruit
    and tells him:</p><p>“Wait’ll you see it.”</p><p>“See what?”</p><p>“What a man
    can do to another man.”</p><p>I want no part of that responsibility on our educators.
    Leave it to law enforcement.</p><p><img src="https://cdn-images-1.medium.com/max/2250/1*_sNJmROMcO9WUcT_CRh-SQ.jpeg"
    alt="Seriously people?"><em>Seriously people?</em></p><h2>Final thoughts</h2><p>I
    realize this is an emotionally charged topic, with men and women on opposing sides
    of the fence. I have tried to the best of my ability to take a middle road and
    propose realistic solutions. All or nothing arguments get us nowhere and divide
    us further, and then we only surround ourselves in an echo chamber of people who
    believe as we do. We must attempt to reach across the aisle and propose solutions
    based on reality, not pipe dreams.</p><p>To those who feel like guns are the sole
    problem and that by outlawing them all, much of society’s ills would be solved,
    I would remind you that even if we could destroy every gun on this planet, you
    cannot remove a man’s capacity for violence.</p><p>To those who feel guns are
    the solution: The pen has always accomplished more than the sword. The sword is
    a result of the pen when necessary, but we should not long for violence. It should
    be a last resort. From the Federalist papers, to Jesus, to Gandhi, to our own
    government writing laws, words can accomplish great feats. Our children are reaping
    the consequences of our inability to compromise. Please don’t let them be the
    ones to bear our sins.</p><p>There is a middle road available. Now we must come
    together to find it.</p><p><em>For additional reading, I highly recommend Brené
    Brown’s post, “<a href="https://brenebrown.com/blog/2017/11/08/gun-reform-speaking-truth-bullshit-practicing-civility-effecting-change/">Gun
    Reform: Speaking Truth to Bullshit, Practicing Civility, and Effecting Change</a>”</em></p>'
  :author: What Does It Mean to Be a Man?
  :topic: health
- :url: https://medium.com/hackernoon/im-32-and-spent-200k-on-biohacking-became-calmer-thinner-extroverted-healthier-happier-2a2e846ae113?source=search_post---------6
  :title: I’m 32 and spent $200k on biohacking. Became calmer, thinner, extroverted,
    healthier & happier.
  :content: '<p>Other deep-dive articles by Serge:<a href="https://hackernoon.com/how-i-set-and-execute-50-year-goals-why-i-see-cutting-in-lines-as-morally-right-f4d0ce28574f"><strong>How
    I set and execute 50-year goals.</strong><em>In my previous articles, I talked
    a lot about how to use biohacking to become more productive, healthier, and more…</em>hackernoon.com</a><a
    href="https://hackernoon.com/biohack-your-intelligence-now-or-become-obsolete-97cdd15e395f"><strong>How
    to biohack your intelligence — with everything from sex to modafinil to MDMA</strong><em>I
    had some free time over the holidays and wrote this article to showcase, on the
    basis of a personal story, many…</em>hackernoon.com</a></p><h2>Intro</h2><p>This
    post is about how to use modern science and personalized medicine to make yourself
    healthier, more productive and happier. Every day.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*NazrVtwfPp6jnrarZPmKCQ.png"
    alt=""></p><h3><strong>Executive Summary (key points)</strong>:</h3><ul><li><p>I
    am a tech CEO who wanted to have better energy, mood, focus, happiness, confidence,
    willpower, intelligence, health and longevity.</p></li><li><p>Over the last 4–5
    years, my main hobby has been to get that by hacking my body and mind using a
    logical, science-based approach.</p></li><li><p>As part of that I have optimized
    my sleep, nutrition and exercise, done thousands of tests, taken dozens of prescription
    drugs and hundreds of supplements (<strong>part</strong> of the pills I take <strong>every
    day</strong> below), worked with some amazing doctors, meditated &gt;1000 times,
    did psychotherapy, took MDMA, and spent ~$200,000 on all this.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2844/1*C5SnoUOKVVwmUKE7_5FCdw.png" alt=""></p><ul><li>The
    results have been awesome. Objectively I dropped body fat 26%=&gt;10% (data below),
    got my VO2Max to ~70 (very high), improved lots of biomarkers (some examples also
    below, lots more here: <a href="https://medium.com/@sergefaguet/hundreds-of-biomarkers-i-test-in-pursuit-of-focus-health-energy-confidence-and-happiness-dd01572c518b">https://medium.com/@sergefaguet/hundreds-of-biomarkers-i-test-in-pursuit-of-focus-health-energy-confidence-and-happiness-dd01572c518b</a>).
    And subjectively I feel much happier, calmer, energetic, stable, confident, focused.
    And intelligent, if you think of intelligence as applied ability to solve complex
    problems.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*p0pN2w4a_YVTvNKrpy2Hew.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2140/1*9HBEz5WBA8V41JasaZ0iTQ.png"
    alt="81% improvement in free testosterone in ~2 months"><em>81% improvement in
    free testosterone in ~2 months</em></p><p><img src="https://cdn-images-1.medium.com/max/2024/1*Q3oFMM__92gRvASqjc4WTw.png"
    alt="4x reduction in blood mercury in 1 year"><em>4x reduction in blood mercury
    in 1 year</em></p><ul><li><p>This blog post is an overview of what I do and why.
    From it I’ll start a bunch of more detailed posts.</p></li><li><p>I include a
    lot of personal health data, test files, what bacteria live in my poop (yes, really).
    Feel free to share all this. I don’t care about my privacy.</p></li><li><p>If
    you are a journalist or someone looking to discuss personalized health in a public
    way, I am happy to talk. I think this will have a huge impact on society (and
    especially significantly increase inequality — people like me will be able to
    enhance our performance, increase our wealth, and invest more and more into enhancing
    our performance further).</p></li></ul><p><strong>LEGAL DISCLAIMER: IT IS VERY
    IMPORTANT THAT YOU THINK CAREFULLY, EVALUATE YOUR OWN HEALTH, AND CONSIDER PROFESSIONAL
    ADVICE BEFORE YOU THINK ABOUT DOING ANY OF THE THINGS I DO. WE ARE ALL VERY DIFFERENT
    AND WHAT WORKS FOR ME MAY BE DANGEROUS OR USELESS FOR YOU. I AM NOT A DOCTOR.
    THIS IS NOT MEDICAL ADVICE. THIS IS JUST MY PERSONAL STORY.</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*drw9BqK7FBBKVniUI59bEA.png" alt=""></p><h3><strong>Briefly
    about me</strong>:</h3><p>Serge Faguet, Russian, 32, Cornell undergrad / Stanford
    MBA-dropout, started some tech companies (TokBox — leading B2B video communication
    infrastructure company bought by Telefonica; Ostrovok — largest online travel
    co in Russia, profitable with ~$500m gross turnover in 2017; new stealth-at-this-point
    AI co in Silicon Valley; been through Ycombinator; worked at Google very briefly).</p><p>Before
    all this I had a lot of challenges with anxieties, insecurities, introversion,
    weight, focus, anger management, bad moods, procrastination, and other things
    that many of us struggle with. Now all of them are effectively gone. I mean, I
    wrote these two huge posts in one weekend and didn’t procrastinate for a minute.</p><h3><strong>Why
    I do this stuff</strong>:</h3><p><img src="https://cdn-images-1.medium.com/max/2000/1*b6IOHzr6H0PA2Ma95XCEdQ.png"
    alt=""></p><p>It seems obvious that whatever our goals are in life, certain things
    can help. I (and many others) want to be more energetic, have better willpower,
    not have bad moods, have the confidence to talk with the cute girl in the line
    at the supermarket.</p><p>All these things depend on transient mental states.
    And they in turn depend on your biochemistry (amongst other things). If you ever
    meditated, took drugs, had a bad night of sleep, or been sick you know this to
    be true: with these biochemical fluctuations your personality changes, and behaviors
    can become much easier or harder.</p><p>My goal is simple: manipulate my biochemistry
    to get more of the things I want, and less of the things I do not want.</p><h3><strong>What
    I want</strong>:</h3><p>Good mood, confidence, focus, energy, willpower, stress
    resilience, brainpower, calm, health, longevity, removal of social anxieties/inhibitions.
    All the time. With minimal investment of time and minimal risk.</p><h3><strong>What
    I do — overview</strong>:</h3><p>I attack 6 major blocks:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*W5yiJKJS61tl4k7Oy2Wqmg.png"
    alt=""></p><p>In this post I will give just an overview of things I feel are most
    important in each area, and then in future posts will dig in at length.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*LpreFCSMTymDKFWmySN6mA.png" alt=""></p><p>Important
    note: all these go together. You cannot sleep well while eating like shit, not
    exercising, and stressing out. And you cannot exercise/eat well/not stress out
    if you sleep badly.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*Z2Cs0T6ATUC75wroScOSwg.png"
    alt=""></p><p>In all these areas I use roughly the following framework to decide
    regarding specific tactics:</p><ul><li><p>Is it scientifically sound? (i.e. are
    there studies if such are feasible?)</p></li><li><p>Is it logically sound? (i.e.
    is there a sound explanation behind the tactic?)</p></li><li><p>Is the estimated
    cost (risk, money, time/energy) worth the estimated benefit?</p></li><li><p>Do
    independent smart experts (e.g. doctors) agree with the approach? Do they actually
    practice the approach themselves and with their families?</p></li><li><p>Do I
    track my objective/subjective metrics related to the tactic, if feasible?</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*6kat9U9JjIJEwkkUXSCB0Q.png" alt=""></p><p>I
    am actually very conservative and paranoid about these things. For example, I
    take months to research and talk with people before I decide to take a new compound,
    start with low doses, and consult with several independent experts. Be careful
    and don’t screw yourself up with this kind of thing.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*tRKkJz5VU4OG4eIhhYMrKQ.png"
    alt=""></p><h3>Objective:</h3><p>Get plenty of restorative deep and REM sleep
    on a regular basis.</p><h3>Key tactics:</h3><ul><li>Measure stages. I heard from
    private individuals that they compared a lot of devices with a proper sleep lab
    and the best device for measuring appears to be the Oura Ring. <a href="https://ouraring.com/">https://ouraring.com/</a>
    ; an example of measurements they give is below. I’m quite happy with my metrics,
    it seems I get a lot of deep sleep although my RHR/HRV used to be better, not
    sure why.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2860/1*PSReSH8IcUkKnD7fqsWNlw.png"
    alt=""></p><ul><li><p>Block blue light 3–4 hours before sleep. Here is an example
    of glasses that do that. <a href="https://gunnar.com/">https://gunnar.com/</a>
    (you want the orange-tinted versions)</p></li><li><p>Have your bedroom dark (as
    dark as possible, maybe use an eye mask), cold (18–19 celsius) and humid. Consider
    Chilipad, very useful. <a href="https://www.chilitechnology.com/">https://www.chilitechnology.com/</a></p></li><li><p>Wake
    at exactly the same time each morning. This is hard, but easier than going to
    sleep at the same time (which is just impossible).</p></li><li><p>Evaluate things
    that seem to help or disrupt sleep. You won’t be able to do a serious study but
    you can notice certain trends (e.g. for me even a small amount of alcohol is disruptive;
    late workouts lead to elevated heart rate etc.)</p></li></ul><p>This book has
    more info if you’d like to really dig in <a href="http://biohackingbook.com/">http://biohackingbook.com/</a>
    (you want the free chapter on sleep, I don’t like the other ones as much)</p><p>Sleep
    is essential to willpower, which is essential to everything else here.</p><p>Keep
    in mind that things in other sections will help a lot. In a future post I will
    dig into a lot more detail and describe my personal journey to better sleep.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*bBUpCK60Lg2XiRslodFWoQ.png" alt=""></p><h3>Objective:</h3><p>Eat
    good stuff. Don’t eat bad stuff. Habituate.</p><h3>Objective (sciencey version):</h3><p>minimize
    insulin levels, maximize glucose disposal, optimize various growth factors (IGF-1,
    mTOR etc.) towards things we want (e.g. muscle) and away from what we don’t want
    (e.g. cancer).</p><h3>Key tactics:</h3><p><img src="https://cdn-images-1.medium.com/max/2000/1*B0NnuvKTlKc4_doXxxkltg.png"
    alt=""></p><ul><li><p>Do not eat sugar in any form. Sugar is poison. This means
    no candy, fruit juices, bread, pasta, honey etc. There are many disagreements
    about nutrition science. That sugar is extremely bad for you is not one of them.</p></li><li><p>Do
    not eat processed foods. Eat natural food instead.</p></li><li><p>Do not eat cheap
    industrially-farmed animal products.</p></li><li><p>Eat mostly plants although
    I feel going entirely vegetarian for health reasons is not justified.</p></li><li><p>Eat
    organic when possible, especially when discussing animal products. Generally spend
    more money on food — the cheaper the food, the more “hacks” the producer used
    to be able to deliver that price. Many of these hacks are harmful — they inject
    saline solution to increase weight, feed dead animals to live animals, use antibiotics
    a lot etc.</p></li><li><p>In my opinion one shouldn’t drink any alcohol (screws
    up sleep) or add any salt (increases blood pressure) to food.</p></li><li><p>I
    do intermittent fasting where for 3 days a week I eat only once a day. You can
    search for this online, there appears to be a lot of research that suggests this
    is a good idea. It is also surprisingly easy after the first couple times.</p></li><li><p>I
    also try to eat ketogenic (high-fat-low-carb) but that is very, very hard to achieve.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*cll1aC8kuK4BMdjIe6lavw.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*pmE7y-VA5ruDHMstB8W1ww.png" alt=""></p><p>Nutrition
    compliance is generally incredibly hard and may take years to develop. Don’t try
    to do this all at once, it is too hard. Just try to make small steps to improve.
    I still occasionally eat bread or pasta or have a glass of wine.</p><p>In a future
    post, I will describe how I gradually, slowly and very painfully improved in this
    regard.</p><p><img src="https://cdn-images-1.medium.com/max/2028/1*t_ZkN_2MejVHeyH_pTjMkw.png"
    alt=""></p><h3>Objective:</h3><p>Maximize metabolic benefits (hormones, insulin
    sensitivity). Minimize time spent and risk of injury.</p><h3>Key tactics:</h3><ul><li><p>Warmup.
    I recommend these articles. Fortunate enough to know both Peter and Jesse and
    they describe it much better than I ever could. <a href="http://eatingacademy.com/personal/move-defines-live">http://eatingacademy.com/personal/move-defines-live</a>
    <a href="http://eatingacademy.com/personal/move-defines-live-part-ii">http://eatingacademy.com/personal/move-defines-live-part-ii</a></p></li><li><p>Spend
    majority of your gym time on hip-hinge exercises — deadlift, squat, leg press.
    The logic is that this activates the largest muscles in your body =&gt; much more
    gain than exercising small muscles (e.g. biceps). Important: hip-hinge exercises
    should be first practiced with a good personal trainer. They are risky because
    you can damage your lower back.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*6EXHaXvpgS-rzrIhEc3xKw.png"
    alt=""></p><ul><li><p>HIIT. Basically if you run, walk and do other constant-speed
    aerobics you should change to high-intensity intervals. They burn less muscle,
    spend less time, and deliver greater metabolic results. Look online, there is
    a lot of info about this.</p></li><li><p>Minimize sitting. Get a standing desk
    or something.</p></li></ul><p>I do the following:</p><ol><li><p>2–3x a week gym
    with 15 min warmup, 45 min hip-hinge exercise, 30–45 min other muscle groups in
    order of declining size.</p></li><li><p>2–3x a week on non-gym days 20-min HIIT
    run: 5 min warmup, 8 sets of 20–30 sec all-out, 60–90 sec walking, 5 min warmdown.
    If you do it right, you feel close to sick after this.</p></li></ol><p>I found
    gym to be one of the easiest routines to set up. Having personal trainers helped
    a lot. Now it is such an ingrained habit that I don’t need them anymore.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*idpPeXPambTiVB1pFgP7yQ.png" alt=""></p><h3>Objective:</h3><p>Maximize
    stress resilience, social support, sense of purpose. Eliminate bad moods.</p><h3>Key
    tactics:</h3><p><img src="https://cdn-images-1.medium.com/max/2000/1*3ARFxV7OXMJn3JQfZiDDXg.png"
    alt=""></p><ul><li>Meditation. It definitely works. This deserves a separate post.
    But in short, I meditate daily, and found that it has significant benefits. The
    biggest is that recently I started to realize that the “self” and “free will”
    are cognitive illusions, and that makes it very easy to dissipate any negative
    moods, desires or emotions. I recommend the book Waking Up by Sam Harris here
    (as long as you are not an easily-offended religious person). <a href="https://www.samharris.org/waking-up">https://www.samharris.org/waking-up</a></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2052/1*3i9h9FFhwySoJcITYd9dsQ.png" alt=""></p><ul><li>Psychotherapy.
    Also a separate post. In short, I come to my therapist (who is also a Stanford/Harvard
    neurobiologist focused on helping high-performance people perform even better)
    with questions like “how do I enhance my intelligence?” “how do I eliminate bad
    mood days?” “how do I find it trivially easy to always chat with girls I find
    attractive?” etc. and we discuss concrete strategies based on research, other
    high-performer patients he sees etc. If you have not tried psychotherapy you really
    should, it is awesome.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*ep8-9LFOq2TmAJ5xEf9Gyw.png"
    alt=""></p><ul><li>Never, ever lie about anything to anyone. Counterintuitive,
    but this seems to be a huge social hack and people like you a lot more if you
    always tell everyone the truth, no matter how embarrassing or hurtful. I used
    to lie a lot and am trying to completely stop. Also recommend the awesome short
    book “Lying” by Sam Harris which outlines this argument better than I ever could.
    <a href="https://www.samharris.org/books/lying">https://www.samharris.org/books/lying</a></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*1GAY042M6HfpgRku80kcDQ.png" alt=""></p><ul><li>For
    me, it took awhile to figure out what I want from sex. Eventually I realized there
    are two major disagreements I have with how society approaches it, and the key
    to mental health in my case is to say “fuck social norms,” and just do what you
    want (as long as all participants consent and nobody is hurt). Specifically:</li></ul><ol><li><p>I
    want to be public about my sexual habits, fetishes, porn preferences and the like
    because I believe they are nothing to be embarrassed of.</p></li><li><p>I want
    to be in relationships with awesome women I find extremely attractive, but at
    the same time openly (i.e. with everyone’s consent and participation) have sex
    with other women. Constant sexual novelty/excitement, emotional closeness and
    complete trust/transparency are all non-negotiable for me. Society says one can’t
    have it all in this regard. Personal experience and some knowledge of the intimate
    lives of other people clearly say otherwise.</p></li></ol><p>I don’t talk much
    about sense of purpose because I never lacked it. I don’t know how to help discover
    that.</p><p>Mental health is the most complex of all the things listed here, and
    is helped by all other sections. So there will be a lot of extra posts on this.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*qhr6_QxC8DI1joVD5cD8uA.png" alt=""></p><h3>Objective:</h3><p>Discover
    your bugs and fix them if possible. Everyone has bugs.</p><h3>Key tactics:</h3><ul><li><p>Blood
    testing.</p></li><li><p>Genetic testing.</p></li><li><p>Other (fat %, CIMT, heart
    tests, CGM, Toxins, microbiome, allergies). Some of these are useful already,
    some just fascinating but not clear in terms of actionables.</p></li></ul><p>I
    wrote a very detailed separate post that includes a huge number of tests I have
    done, how I interpret them etc. Read it here, I promise it is very interesting,
    and it lists hundreds of metrics I consider. It is here: <a href="https://medium.com/@sergefaguet/hundreds-of-biomarkers-i-test-in-pursuit-of-focus-health-energy-confidence-and-happiness-dd01572c518b">https://medium.com/@sergefaguet/hundreds-of-biomarkers-i-test-in-pursuit-of-focus-health-energy-confidence-and-happiness-dd01572c518b</a></p><p>Interpretation
    is hard. This is a new field, the data is very complex, and if you really want
    to get value out of this, you have to spend a lot of time and effort. It is just
    the way it is.</p><p><img src="https://cdn-images-1.medium.com/max/2040/1*kIoXMhrz88TZeuYZb7_D3Q.png"
    alt=""></p><p>Also if you look at the testing post, you will see that:</p><ol><li><p>I
    have not screwed myself up despite all this stuff I do. My health seems to be
    exceptionally good across a large number of tests I have done, and in fact I appear
    to biologically be significantly younger than 32 if we use biomarkers as proxies
    for aging (interesting idea, but not enough data yet for rigorous predictions).</p></li><li><p>There
    is a lot of data out there that can help you understand your risks and how to
    fix them. It is important to know your metrics.</p></li></ol><p><img src="https://cdn-images-1.medium.com/max/2004/1*B_9iTzbCDl0gH2-we-gEfg.png"
    alt=""></p><h3>Objective:</h3><p>Depends on the specific intervention.</p><h3>Key
    tactics I use:</h3><p><img src="https://cdn-images-1.medium.com/max/2000/1*3v95llSv-WoTUv0JgV5_Jw.png"
    alt=""></p><ul><li>Metfromin. This is an anti-diabetes drug that lowers blood
    sugar without causing hypoglycemia. It appears to be beneficial in preventing
    cancer and heart disease and is currently in an FDA-approved trial as the first
    ever treatment for aging. It is extremely safe. I take 1gr morning / 1gr evening
    of the extended release version.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*eDQBzIl4kx8j2IdWk5Pp3g.png"
    alt=""></p><ul><li>Lithium. I use it as a mood stabilizer + as something that
    may have beneficial cognitive effects. I take ~100–150mg/day lithium carbonate
    in the evening. Lower doses are unlikely to have noticeable effects. Higher doses
    may start having negative effects. Lithium is toxic in high doses so something
    to be careful about.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*mWANGsSNZOAFnFKu0A63MQ.png"
    alt=""></p><ul><li>Modafinil. Excellent cognitive enhancer. I take 100–200mg/day.
    Just read this overview in Scientific American: <a href="https://www.scientificamerican.com/article/a-safe-drug-to-boost-brainpower/">https://www.scientificamerican.com/article/a-safe-drug-to-boost-brainpower/</a>;
    I have also taken Adderall for many years and found it to cause a lot of problems
    (anxiety and over-focus on the wrong things) so stopped.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2072/1*Wl5xEK7OVrmV3aOL4OhU6w.png"
    alt=""></p><ul><li>SSRI antidepressants. I take 10mg escitalopram daily. It makes
    everything just a little bit nicer and more enjoyable. That is worth a lot to
    me.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*wxlMnau4XuidvE9HKO-qRA.png"
    alt=""></p><ul><li><p>Thyroid hormones. I take 25mcg T4 + 20mcg T3. I have below-average
    thyroid hormones and had a noticeable improvement in mood, energy and cognitive
    function after I started.</p></li><li><p>Growth hormone. I take 0.5 ml of somatropin
    per day as morning injection. My IGF-1 is naturally very low (115–125) and this
    boosts it to a below-average 160–180. This is controversial because many people
    try to lower their IGF-1 in order to enhance cancer resistance. The reason I take
    it is that I decided I have more to gain by raising it a bit and getting better
    muscle growth/fat disposal. It also may have some cognitive and neuroprotective
    benefits.</p></li><li><p>Estrogen blockler. I take 50mg clomid 3x per week and
    cycle it on and off. The reason is that I have below-average-ish testosterone
    with very low LH/FSH. So that part is clearly a bottleneck, and voila — clomid
    significantly raises testosterone. I feel more energy and better mood. Also incredibly
    horny all the time :)</p></li><li><p>Phenibut (GABAph). Just started this and
    don’t really have any data, but subjectively it seems to make sleep a bit more
    restorative and enjoyable. docparsley.com is the supplement I use.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*IUaoZuECUghIRJsF7y-ZEA.png" alt="Yes,
    you are right, i could have come up with a better image for MDMA. H-A is more
    associated with other drugs."><em>Yes, you are right, i could have come up with
    a better image for MDMA. H-A is more associated with other drugs.</em></p><ul><li><p>MDMA.
    I will write a whole post about this later. I have only taken it once, and it
    has been a truly transformative experience that helped me get rid of a lot of
    social anxieties and become more extroverted and sexually liberated — all things
    I really wanted. The effects persist. MDMA is legal in a couple places in the
    world (e.g. Portugal) plus the FDA is currently running a trial on it for PTSD.
    It really ought to be legalized.</p></li><li><p><strong>LEGAL DISCLAIMER: DO NOT
    TAKE DRUGS THAT ARE ILLEGAL IN YOUR HOME COUNTRY. DO NOT DO ANYTHING ILLEGAL.</strong></p></li><li><p><strong>MEDICAL
    NOTE: CHECK FOR DRUG INTERACTIONS, ESPECIALLY WITH MDMA. <em>IN PARTICULAR, MAO
    INHIBITOR ANTIDEPRESSANTS + MDMA IS LETHAL</em>.</strong></p></li><li><p>Supplements.
    I take a bunch of other compounds that are non-pharmaceuticals. The general idea
    is that I try to take things that may be beneficial and are unlikely to be harmful.
    Many of these are likely useless, I just don’t know which ones.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*EZmNskq6Qsz0Ub5xOM0kDA.png" alt=""></p><p>Above
    are some of the supplements (not including pharmaceuticals) I currently take.
    A top-notch medical research team I work with went through a large number of studies
    related to most of these and felt the ones at the top are quite likely useful,
    the middle probably useful, and no opinion on the ones at the bottom. None of
    these supplements were thought at all likely to be harmful.</p><p>Keep in mind:
    pharmaceuticals act very differently on different people. Some of these may be
    useless of harmful for you, even if they benefit me. I have gradually phased these
    in over years of self-experimentation and deep understanding of how they work.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*xlkFJCdP6_gIuFbflTqJ5Q.png" alt=""></p><p><strong>LEGAL
    DISCLAIMER: I AM NOT RECOMMENDING YOU TAKE ANY MEDICINE WITHOUT PROFESSIONAL SUPERVISION.
    PRESCRIPTION DRUGS SHOULD ONLY BE TAKEN BY PRESCRIPTION FROM A REPUTABLE DOCTOR.
    I AM NOT A DOCTOR.</strong></p><h3><strong>Closing thoughts</strong>:</h3><ul><li><p>This
    is a long journey. If you want to get value out of this it will take years. The
    earlier in life you start, the more compound return benefits you will get.</p></li><li><p>All
    this goes together and reinforces each other. For example if you sleep badly,
    you can’t do the other things well. You just won’t have the willpower.</p></li><li><p>People
    think of medicine as “healing the sick.” But actually because who is sick is subjective,
    medicine can also upgrade healthy people on key dimensions. Simple example: I
    use nearly-invisible hearing aids despite having ok hearing. They boost my hearing
    to levels significantly above the average human. This can help formulate better
    responses in conversation, be more persuasive because you hear voice tones better,
    and many other things that give the user social advantages over others.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*YZcVD1zEFltWyhIenRrcDQ.png" alt=""></p><p>On
    that note. I think given the way healthcare is organized today, this kind of personalized
    medicine could significantly increase social inequality beyond where it is now.</p><p>People
    like me will be able to pay for this out of pocket and use off-label prescriptions
    from private doctors who focus on upgrading and prevention rather than merely
    healing. Downstream the extra mood, energy, focus, health, willpower and social
    skills — enhanced over decades — will accrue further and further advantages to
    people who upgrade themselves, which will lead to a cycle of further concentration
    of wealth.</p><p>I don’t have any suggestions on this, just pointing out that
    this will be a far bigger problem than many other social-justice issues that get
    attention today.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*A0l1rkSfsQaaz3vKG0nEgQ.png"
    alt=""></p><h3><strong>In future posts, I plan to go in-depth on</strong>:</h3><ul><li><p>Detailed
    journeys in food, sleep, meditation.</p></li><li><p>Genetic/genomic testing. Seems
    so promising, yet right now delivers so little actionable value (personal or commercial).</p></li><li><p>In-depth
    descriptions of a couple of my psychotherapy sessions so that people get a sense
    of how this awesome tool can be used.</p></li><li><p>My MDMA experience, how I
    think about using it as a therapeutic tool in the future, how I think about safety.</p></li><li><p>Detailed
    thoughts around sex. Trying to figure out how to be extremely public and honest
    about this without being subject to a lot of trolling, or losing business opportunities.</p></li><li><p>Enhancing
    willpower, which is key to all this.</p></li><li><p>Discussion of life extension
    approaches (or rather aging slowdown approaches). I think there is a very good
    chance we will be able to significantly extend our lives in the near future.</p></li><li><p>Human
    enhancement. There are many things out there already that significantly increase
    your competitiveness in society. The biggest one is intelligence amplification,
    which is already possible and which I for one feel I am successfully doing.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*lPV5bhQazE-Pt5l4Lct2Uw.png" alt=""></p><p>Thanks
    to everyone who has read this, I hope it has been useful! Also again reminding
    — read this other post if you did not already <a href="https://medium.com/@sergefaguet/hundreds-of-biomarkers-i-test-in-pursuit-of-focus-health-energy-confidence-and-happiness-dd01572c518b">https://medium.com/@sergefaguet/hundreds-of-biomarkers-i-test-in-pursuit-of-focus-health-energy-confidence-and-happiness-dd01572c518b</a></p><p>I
    am also happy to speak at high-quality events/podcasts, talk with journalists
    about all this — feel free to reach out! Best is to send me a message on Facebook
    Messenger (<a href="https://www.facebook.com/sergef">https://www.facebook.com/sergef</a>)
    or Instagram (<a href="https://www.instagram.com/sergefaguet/">https://www.instagram.com/sergefaguet/</a>).</p><h2>EDIT:
    I noticed that very few people read the post about biomarkers. So decided to include
    it in full below.</h2><h2>Hundreds of biomarkers I test in pursuit of focus, health,
    energy, confidence and happiness.</h2><p>This post is an in-depth review of hundreds
    of biomarkers I test with real data and commentary — insulin resistance, hormones,
    ketones, microbiome, toxins, athletic capabilities, bodyfat, mercury, allergies
    and a lot more. The idea is to illustrate the biomarkers I check and ways I interpret
    them. I have no sense of privacy at all so feel free to use in whatever way you
    like.</p><p>This is meant to be read together with my main post on biohacking:
    <a href="https://medium.com/@sergefaguet/im-32-and-spent-200k-on-biohacking-became-calmer-thinner-extroverted-healthier-happier-2a2e846ae113">https://medium.com/@sergefaguet/im-32-and-spent-200k-on-biohacking-became-calmer-thinner-extroverted-healthier-happier-2a2e846ae113</a></p><p>My
    interpretation at the end of this is that I am extremely healthy, much younger
    than my chronological age, perform much better than the vast majority of humans
    on many dimensions, and will live longer/healthier than anyone who has ever lived
    as of 2017.</p><p>Bold claims — partially designed to persuade you to read this
    long post :) Let’s jump into it.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*_1iOdcZa_31UAgX0rsTMIg.png"
    alt=""></p><p>Cholesterols:</p><ul><li><p>All except Lp(a) in optimal territory,
    some significantly better. I should add that this is despite the fact that I eat
    an extremely high-fat ketogenic diet, so at least for me the idea that cholesterol
    raises cholesterol is clearly false.</p></li><li><p>Particle numbers are more
    important than milligrams / deciliter.</p></li><li><p>Lp(a) is an annoying genetic
    factor that helps blood clotting and significantly increases cardio risks. It
    can’t be fixed at the moment, but there are drugs on the horizon that target this
    and that I will take. This is the perfect illustration that we were designed for
    a different world where wounds were a greater risk than heart disease. And that
    it is time to take matters into our own hands.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*1gVD6S6yFIQv4eGXuxd4Vg.png"
    alt=""></p><p>Excellent on inflammation markers — way better than suggested optima,
    CRP below detection limit. There is a lot of evidence that suggests inflammation
    is key in all major aging diseases (cancer, heart disease, neurodegenerative disease)
    so happy to see this. Everyone should know their inflammation markers.</p><p>Also
    great on endothelial function which is key for preventing heart disease.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*sTnZm8WWlpYiMy146Vw6uQ.png" alt=""></p><p>Here
    should mention some key genetics things you should be aware of, especially your
    ApoE (key to Alzheimers risk) and MTHFR (which is what screws up my B12 metabolism).</p><p>My
    TSH is actually not great, the lab is wrong to consider that optimal. Optimal
    is under 2, so my thyroid is working a bit harder than it should. Wrong lab range
    is partially because reference ranges are based on sick people.</p><p>You should
    know your Vitamin D and homocysteine. My Vitamin D started at around ~24 and I
    supplemented it up. My homocysteine started at ~12 and I supplemented it down
    into optimal territory with a lot of B-vitamins. Both markers have significant
    associations with key diseases</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*kOQOMHYfGyJrGLTFtVqayg.png"
    alt=""></p><p>(credit <a href="http://www.marksdailyapple.com">www.marksdailyapple.com</a>
    — a great blog about health!)</p><p>The screen above shows data compiled from
    a bunch of studies suggesting that relatively high levels of Vitamin D are protective
    against a number of diseases. It is very unlikely you will get to these levels
    without supplementing unless you are a lifeguard on a beach in Israel.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*uNjhY96mfuNChqMiu8CGUg.png" alt=""></p><p>Here
    the most important thing is that I have exceptional kidney function (eGFR and
    Cystatin-C) — in the top 5–10% of people in my age group. Especially important
    for me because all my supplements add workload on kidneys. eGFR is one of the
    key markers evaluated to calculate people’s “true biological age.”</p><p><img
    src="https://cdn-images-1.medium.com/max/2048/1*_n26amYGQ4KPEQn-qYTt5A.png" alt=""></p><p>This
    all mostly has to do with insulin sensitivity which is one of the most key pathways
    in the body in terms of staving off aging and disease. My baseline glucose, insulin
    and HbA1c are actually not that great, but they don’t matter as much.</p><p>What
    matters the most is the OGTT (“Postprandial Evaluation” in the image above) —
    a test where you measure markers, then ingest a lot of fast sugar, then measure
    again couple more times after defined periods. This test shows the dynamics of
    how efficiently your body gets rid of sugar. In my case, it is extremely good
    — basically drinking 75mg of a very sugary solution has barely elevated my sugar,
    and then a small amount of insulin removed a huge amount of glucose out of my
    blood, taking me down to 46mg/dl. Most people would feel quite hypoglycemic here
    but I don’t because my sugar is constantly low and my body is used to it.</p><p>Alpha-hydroxybutyrate
    is raised because of my ketogenic diet.</p><p>Ferritin is fairly low because I
    eat well and give blood to do all these tests! This is quite key, especially for
    men. Lower iron is hypothesized to be one of the reasons why women live longer.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*S9iYFRyMNTFp1cCNq5HqqA.png" alt=""></p><p>OK,
    so more on insulin/glucose pathways. Sorry about the Russian in the images. Above
    is a test called RQ (respiratory quotient) of how much oxygen/co2 you process
    at rest (you basically put on a gas exchange mask that is also used for VO2max
    tests below, and sit calmly). What it tells me is that my body runs 85–100% entirely
    on fat, a little on protein, and not at all on carbs. Which is exactly what you
    want. I start using the carbs in my body as a dominant energy source only after
    I get to &gt;150 heartbeats/minute. This enhances athletic performance since glucose
    storage in the body is limited.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*0K2CB0cAYIaBo1fjQHaN5A.png"
    alt=""></p><p>(credit Peter Attia @ <a href="http://eatingacademy.com">http://eatingacademy.com</a>
    — great blog by one of the most knowledgeable people about preventative medicine
    in the world, in particular about insulin resistance and ketogenic diets)</p><p>If
    you read up about how cancer cells preferentially eat sugar, how ketogenic diets
    are more metabolically efficient and generate less waste byproducts per unit of
    energy etc., you will see that keeping your insulin/glucose pathways extremely
    optimized is an interesting opportunity for material life and healthspan extension.
    Not to mention body fat % reduction. This also deserves a whole separate post.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*Fsj1WHsvLHVDnZ4BsyHPLQ.png" alt=""></p><p>On
    that note, here is my body fat graph. This was done in 33 separate measurements
    by the same personal trainer with the same equipment via measuring ~15 different
    sites for subcutaneous fat with calipers. This is error-prone. DEXA scans are
    better, but we didn’t have easy equipment access on a constant basis.</p><p>I
    think the absolute values are suspect, and bioimpedance suggests I am in the 10–11%
    range right now rather than ~7%. But the directional trend is very clear and encouraging.
    Also cool that I actually barely lost any weight, so I added a lot of muscle which
    has major health benefits (if you want a great detailed book on how muscle enhances
    your health, read <a href="https://www.amazon.com/Body-Science-Research-Program-Results-ebook/dp/B001NLL38S/">https://www.amazon.com/Body-Science-Research-Program-Results-ebook/dp/B001NLL38S/</a>).</p><p>I
    don’t good have before-and-after pics but I definitely used to be chubby, as all
    my friends and employees are delighted to keep reminding me :)</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*tOzVXYeKOKIKLuWS_bxr9g.png"
    alt=""></p><p>Also for those that are interested in ketogenic diets, you measure
    them via glucometers + ketometers similar to mine above. Be warned that keto blood
    strips are quite expensive. And that actually getting to a level of ketosis like
    mine above (after a ~16hr fast) will take a long time and a lot of work.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*n3c2xYHr2Vof3oZp8xO0FQ.png" alt=""></p><p>Also
    you can use CGM — an implant that tracks your glucose in real-time and sends data
    to your iphone. This can help figure out which exact foods, activities etc. alter
    your glucose and are harmful. The above image is from a night a couple years ago
    when I was stressed, stayed up late, and ate a lot of chocolate while sitting
    in a bathtub. Note how big the late-night jump is relative to the increase with
    good food around 6pm. This graph very clearly and unambiguously tells me “hey
    dude, you are fucking yourself by eating this sugary garbage. Like you just fucked
    yourself right now — look, let me show you in real-time how you are damaging your
    health!” Motivational stuff.</p><p>CGMs are very cool, but expensive (the Dexcom
    G5 I used was &gt;$4,000) and a huge hassle. I do think this is the future and
    plan to use them a lot though. Imagine real-time monitoring of testosterone connected
    to a pump that keeps it at optimal levels depending on time of day or activity!
    This is already feasible (albeit not with all molecules), someone just needs to
    engineer it.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*vddwe3-bumw_2rRlVnri3Q.png"
    alt=""></p><p>OK, back to more blood testing! Some notes:</p><ul><li><p>My liver
    markers are great, which is also important in my case because of all the load
    my supplements and meds put on the liver. People often ask me how I know all these
    pills don’t screw up my liver. This is how I know.</p></li><li><p>Hormones deserve
    an entire separate post. Mine are not great, the hypothesis is that this is due
    to a childhood head trauma interfering with the pituitary’s function. For example
    my brother has very similar Lp(a), homocysteine etc problems, but he is much taller
    than me, which suggests childhood environmentally-driven growth hormone disruption.</p></li></ul><p>As
    I mention in my main framework post, I boost thyroid hormones, IGF-1 and testosterone.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*D-MRbp99WWyQavhEQ5woTg.png" alt=""></p><p>Testosterone
    deserves a special mention. In short, I have average-ish testosterone but low
    LH/FSH (which serve as inputs to testosterone). What controls FSH/LH is binding
    of estrogen at the pituitary gland. And because estrogen is a testosterone downstream
    product, there is a feedback loop.</p><p>So what I did is take an “estrogen blocker”
    which competitively occupies the same sites estrogen occupies at the pituitary,
    without inhibiting FSH/LH. The result can clearly be seen above — in a very short
    period of time (2 months), free testosterone jumped a lot. This has a noticeable
    effect on mood and energy. Also very noticeable effect on wanting to have sex
    all the time:)</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*6BQp7dmkDBzCa2g8N1dXqw.png"
    alt=""></p><p>This is a basic blood panel. Nothing too interesting, you basically
    just do these to make sure nothing is screwed up.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*iDFShDSxnCRqxzAJQCPQxA.png"
    alt=""></p><p>I have high EPA/DHA and Omega 3s in general + low Omega 6 and trans
    fats. Result of great diet + supplementation. This is basically what you want
    too.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*2ObRzrRDIJIJVggA8KzR3g.png"
    alt=""></p><p>OK, so in the graph above you can see I had elevated mercury and
    got rid of it. The hypothesis is that it is due to a dental amalgam. I fixed it
    by stopping eating any large predatory fish + enhancing liver detox capabilities
    via B-vitamins and the like.</p><p>Mercury is likely to interfere with a lot of
    neurobiological processes and contribute to many issues such as mood disorders.
    Good riddance.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*3B1TfiP7Fhi--U8Wm7A80w.png"
    alt=""></p><p>This is a CIMT test. It basically shows the thickness of your neck
    arteries, which appears to be very predictive of cardio risks a long time in advance.
    Another factor that suggests that my lifestyle approach is working. The cool thing
    is that this compares you with people in your own age demographic, so I know that
    unless something changes, I should have low cardio risk even when I am 85. Cool
    test, non-invasive, highly recommended.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*eyKTKMU0S1h18AlDcR7OmA.png"
    alt=""></p><p>VO2Max is a measure of how your body performs in terms of gas exchange,
    and as such evaluates the capabilities of your cardiovascular and pulmonary systems.
    You measure it by exercising while wearing respiratory gas analysis equipment
    as in the photo of me above. As the quotes from New York Times above highlight,
    it appears to significantly predict lifespan and “fitness age.”</p><p>My VO2Max
    has risen a lot over time and is very high, not far from Olympic medalist levels
    although I have just about zero athletic accomplishments. I mostly credit high-intensity
    interval training and weights training, but I don’t really know. More recently
    in a period when I stopped doing HIIT, I saw this metric worsen. Another good
    indicator that I’m doing something right though.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*70sJOwF31tOGdiJbpvTipA.png"
    alt=""></p><p>The above is from a test called “GI Effects” by Genova Diagnostics.
    It tests your poop (which is very fun to mail) for bacteria, parasites, metabolites
    and a lot of other interesting things.</p><p>I think this is a very fascinating
    test, but I have no idea how to really use it yet beyond “do not take antibiotics,
    do take probiotics &amp; prebiotics”. Microbiome is a super exciting new frontier
    of health, but we don’t know whether certain microbes cause health states or simply
    correlate with them. If you want to learn more, take this great class on Coursera
    which I did and learned a lot from <a href="https://www.coursera.org/learn/microbiome">https://www.coursera.org/learn/microbiome</a></p><p><a
    href="https://drive.google.com/file/d/0BzeKcwaaUlObZlhEWFotenk4d0U/view?usp=sharing">https://drive.google.com/file/d/0BzeKcwaaUlObZlhEWFotenk4d0U/view?usp=sharing</a></p><p>Anyway,
    my latest entire test is linked to above. Now the entire internet knows exactly
    what bacterial strains live in my poop as of 2017. Enjoy :)</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*8v9dUy71O3HO1AS7TsFV5Q.png"
    alt=""></p><p>This is an interesting test (Genova Diagnostic Toxic Effects) that
    suggests somewhere I was getting significant exposure to VOCs (which are definitely
    bad for you). The actions I took were to enhance office/home ventilation, not
    eat/drink from plastic containers, not stand next to people who smoke.</p><p>On
    that last note, one time I took this test after smoking some pure-weed joints
    (which I do very rarely), and the toxins went off the charts high. If you can’t
    stop smoking, at least vape. Inhaling burned weed or tobacco is incredibly bad
    for you, I was shocked by the levels of toxic chemicals I saw in myself after
    just one evening of several joints.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*Uh_GhmaONRbmnQNcl02wRA.png"
    alt=""></p><p>This is from two tests of allergies/sensitivities by Cyrex. The
    reason I took it is that if you eat products you are sensitive to, you may increase
    inflammatory activity in the body which we do not want.</p><p>My takeaways are
    that I shouldn’t eat tuna or scallops, and that I am allergic to certain molds.
    Also that I appear to have a clearly-acquired gelatin sensitivity because of all
    the capsules I take. Fascinating.</p><p>Other interesting tests/metrics:</p><ul><li><p>Resting
    heart rate at night. You can measure via the Oura ring or many other devices.
    Mine is around 55 which is ok, but not great. Kind of irritates me that it isn’t
    better :)</p></li><li><p>heart rate variability is an interesting metric that
    appears to be correlated with health even more than RHR, although I have no idea
    how to interpret it at this point.</p></li><li><p>Blood pressure. Should ideally
    be on the low end. Mine is typically around 100/60. Can be improved by eating
    less salt + drinking hibiscus tea, as well as by a lot of the other lifestyle
    things I list.</p></li></ul><p>There are many other tests I have done, but this
    is already an incredibly long post.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*5A6Q4XvJ8rOJuwPN8qtAgw.png"
    alt=""></p><p>The key takeaways are that:</p><ol><li><p>I have not screwed my
    health up despite all this crazy stuff I do. In fact, my health seems to be exceptionally
    good across a large number of tests I have done — a lot of age-correlated markers
    suggest I am closer to 20 years old, even though I am 32. The markers are also
    continuing to improve. This suggests I am doing something right.</p></li><li><p>There
    is a lot of data out there that can help you understand your risks and how to
    fix them. It is important to know your metrics.</p></li></ol><p>Also here is a
    framework I like using. Below are all-age causes of death in the US. My markers
    suggest that I am at extremely low risk for a large number of them, <strong>even
    in my age group</strong>. So if I maintain a similar set of behaviors (and actually
    I keep improving every year) I should have low risks in my age group when I am
    80 as well unless something screws up.</p><p><img src="https://cdn-images-1.medium.com/max/2108/1*t9MCT_Ota9Zc9sgrE8HJZQ.png"
    alt=""></p><p>With the above framework I also identified that my key risk is cancer
    — which is why I am so focused on low sugar and insulin (which appear to feed
    cancer preferentially, <a href="https://en.wikipedia.org/wiki/Warburg_hypothesis">https://en.wikipedia.org/wiki/Warburg_hypothesis</a>)
    and my immune system which is somewhat weaker due to CMV, so very interested in
    iP stem cell therapies that could replenish naive lymphocytes.</p><p>I expect
    that even without major medical progress, I will be in excellent mental/physical
    condition at 100 and will live longer than any human who has ever lived as of
    2017. With tech progress, it seems likely that immortality is reachable.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*xxvQYKSKPZMHpI5PhI4q4w.png" alt=""></p><p>I
    could be wrong, but I suspect that today there are fewer than 1000 people out
    of 7 billion who know as much about their own health as I do. Because of how onerous,
    expensive, and non-intuitive this is.</p><p>But this should become much more mainstream.
    It really does give you a significant advantage in life across very many areas
    — thanks to this, I often feel “superhuman” because of how much control I have
    over my health and behavior relative to what I see in other people. And humans
    tend to adopt things that enhance their social competitiveness.</p><p>I am happy
    to speak at high-quality events/podcasts, talk with journalists about personalized
    patient-driven medicine etc. — feel free to reach out! Best way to reach me is
    to send me a message on Facebook Messenger (<a href="https://www.facebook.com/sergef">https://www.facebook.com/sergef</a>)
    or Instagram (<a href="https://www.instagram.com/sergefaguet/">https://www.instagram.com/sergefaguet/</a>).</p><hr><h3>Other
    deep-dive articles by Serge:</h3><p><a href="https://hackernoon.com/how-i-set-and-execute-50-year-goals-why-i-see-cutting-in-lines-as-morally-right-f4d0ce28574f"><strong>How
    I set and execute 50-year goals.</strong><em>In my previous articles, I talked
    a lot about how to use biohacking to become more productive, healthier, and more…</em>hackernoon.com</a><a
    href="https://hackernoon.com/biohack-your-intelligence-now-or-become-obsolete-97cdd15e395f"><strong>How
    to biohack your intelligence — with everything from sex to modafinil to MDMA</strong><em>I
    had some free time over the holidays and wrote this article to showcase, on the
    basis of a personal story, many…</em>hackernoon.com</a></p>'
  :author: HackerNoon.com
  :topic: health
- :url: https://medium.com/@kokumura/getting-in-shape-the-easy-way-the-japanese-rule-to-a-healthy-diet-371ce0bf3cb6?source=search_post---------7
  :title: 'Finally Getting in Shape: The Japanese Rule to a Healthy Diet'
  :content: '<p>I’m no biohacker, but I have a profound interest in nutrition, food,
    and how we can optimize our health and well-being. So of course, I always read
    and watch a lot of videos on new research surrounding diets like the ketogenic
    diet, intermittent fasting, paleo, and anything else that claims to be the key
    to optimizing our health.</p><p>Most recently, I tried intermittent fasting for
    7 days. To be fair, I’m no licensed nutritionist and my diet was developed over
    my own research online. Here are some details on how I pursued it:</p><p><strong>When
    I Ate:</strong></p><ul><li>There are multiple ways to intermittent fast, and multiple
    levels of strictness and control, but basically I just skipped breakfast and dessert
    for a week, ate an early dinner, and focused on eating whole foods.</li></ul><p><strong>What
    I Ate:</strong></p><ul><li><p>While I mainly focused on the time frame of when
    I was eating, rather than what I was eating, I was still careful to incorporate
    lots of vegetables and protein to maximize “fullness” without overeating.</p></li><li><p><em>Typical
    meal: Broccoli (boiled), 3 eggs, pan-roasted edamame with chili garlic and cumin,
    bread, hummus, and an apple, with lots of water.</em></p></li></ul><p><strong>What
    Happened:</strong></p><ul><li><p>*<em>First 24 Hours: *</em>I feel great! A little
    hungry before going to bed, but that’s probably because I don’t have dessert sitting
    in my stomach (I was used to treating myself to half a bar of dark chocolate,
    250g, or recently, a piece of pineapple cake that my little sister sent me from
    Taiwan)</p></li><li><p><strong>72 Hours:</strong> I am finding that I am SCARFING
    down all of my meals, because I am so hungry. I would feel incredibly full after
    lunch or dinner, but find myself really hungry again after an hour. I consider
    that I am not eating enough calorie-dense foods. Will add more bread and butter
    to my meals. Generally, I feel pretty good about what I’m doing and can see myself
    continuing this long-run with a few adjustments.</p></li><li><p>*<em>5 Days: *</em>I
    am still hungry all of the time, even after adding more calorie-dense foods to
    my meals. I have a constant headache, feel groggy, and emotionally don’t feel
    so good. I will go from feeling great to feeling really low, and am looking forward
    to the end of the week. I also find myself constantly thinking about food, even
    while I’m eating.</p></li><li><p><strong>7 Days:</strong> Let this end.</p></li></ul><p><strong>Conclusion:</strong></p><p>The
    verdict? It doesn’t work and I absolutely hate it.</p><p>I am no expert or scientist
    and I am just an amateur when it comes to food nutrition, so maybe I didn’t do
    this diet perfectly as prescribed. But if you’re experiencing these signs, I’m
    thinking this diet is not sustainable in the long-run.</p><ul><li><p>Headaches</p></li><li><p>Negative
    emotions</p></li><li><p>Fatigue</p></li><li><p>Grogginess</p></li><li><p>Thinking
    about food all of the time</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*NP_bmQxcOigBukDMXpX3wQ.jpeg"
    alt=""></p><p>In addition to intermittent fasting, I’ve also tried other popular
    diet prescriptions with mixed results, with none of them being long-lasting or
    sustainable.</p><h2><strong>So what is the correct way to eat?</strong></h2><p>How
    do we take control of our diet and optimize our health and well-being for the
    long run? For years, I’ve been following a single rule that has been a staple
    value in my house that I have found is the only one that works for me. It’s not
    intermittent fasting, it’s not keto, and it’s not paleo. Not only has my single
    rule helped me lose weight, but it’s improved my mood, energy, and overall well-being.
    It’s something my mother had taught me, and the whole of Japan knows about it
    too. It’s called: <em>Harahachi-bunme</em></p><p><strong>What is* Harahachi-bunme*?</strong></p><p>Basically,
    if you tell any Japanese person that this is a kind of diet, they’ll look at you
    in a very confused way, and correct you that it’s not really. It’s a long-standing
    Japanese saying that directly translates to “8/10ths your stomach”; meaning, you
    should only eat until you are 80% full.</p><p>It follows very simple principles
    that we should not overindulge in food, and we should be modest about how much
    we eat. Neither starving nor stuffing ourselves, it follows the principle that
    extreme lifestyles are neither good for us nor sustainable, and the key is finding
    balance and a middle ground to satisfy our needs.</p><p>It’s a way of looking
    at food and hunger in an intuitive way, with a focus on nourishment and health
    rather than results like weight-loss or physical benchmarks. These benchmarks
    tend to come naturally over time anyways, because when you practice neither over-indulgent
    eating nor deprivation, your body will respond in a sustainable manner that will
    last you the rest of your life. You must trust that your body knows what it needs.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*vyT5jOuL0C3LnNucetoOCA.jpeg" alt="A
    typical Japanese teishoku meal"><em>A typical Japanese teishoku meal</em></p><h2>How
    to practice <em>Harahachi-bunme</em></h2><p>Basic guidelines behind the principle</p><p><strong>Eat
    when you are hungry.</strong></p><ul><li>For some days this means eating two meals.
    For other days, it means eating four. Days following an intense day of exercise
    may mean you eat breakfast, lunch, dinner, dessert, and snacks in-between. For
    a day of travel and lots of idle sitting, it could mean just one large meal and
    many snacks throughout the day.</li></ul><p><strong>Eat whole, nutrient-dense
    foods.</strong></p><ul><li><p>While not strictly in the saying, harahachi-bunme
    only works when you are eating healthy, nutrient-dense foods. Your body cannot
    accurately measure nourishment and hunger when you are consuming mostly empty
    calories from highly-processed foods. These empty calories lead to overeating
    because you are never able to reach the point of “80% full”. Focus on fruits,
    vegetables, proteins, and whole grains, and your stomach and brain will respond
    accordingly to your needs.</p></li><li><p>By focusing on these kinds of foods,
    you will not only stop hunger pangs, but you will also lose the desire to mindlessly
    eat. Preventing overindulgence will not be a test of willpower, but will become
    a natural response.</p></li></ul><p><strong>Don’t worry about counting or measuring
    things — your body will know</strong></p><ul><li><p>Just eat fruits, vegetables,
    proteins, and whole grains.</p></li><li><p>Is it really that simple? Shouldn’t
    you think about the composition of your macros? How about how these foods are
    cooked? Should it be raw or boiled or baked or pan-fried? This over-excessive
    thinking is what leads to extreme diets. Our bodies are thoughtful and well-run
    machines, and there is no need to obsessively consider these details. Trust your
    body, it will respond appropriately.</p></li><li><p>Tracking micro details won’t
    really be sustainable in the long-run, unless you really enjoy dedicating mental
    energy to thinking about food in this sort of manner (and some people do!). For
    most of us though, just focus on consuming whole foods, limit your refined carbs,
    and your body will know the rest.</p></li></ul><p><strong>Stop when you’re 80%
    full.</strong></p><ul><li><p>This is the most important part, as it guarantees
    how we develop a positive and sustainable relationship with food.</p></li><li><p>There
    are no concrete rules to how you will know when you’re 80% full, but as a guideline,
    I like to eat slowly, and wait at least 30 minutes after eating a full meal to
    determine how I feel. Everyone has different lifestyles and body compositions,
    so it may be difficult to determine what this looks and feels like at first. But
    be patient, feel in tune with what your body is telling you, and if it’s signaling
    hunger, eat. If it’s telling you nothing, don’t eat.</p></li></ul><p><strong>Get
    food off your mind.</strong></p><ul><li>As you practice harahachi-bunme, the idea
    of food should fall to the back of your mind. Stop obsessing over it, and think
    of it as another part of enjoying a fulfilling life. Food should be a part of
    what makes life interesting and enjoyable, but should not be the focus. This practice
    is the most difficult part to attain, and it is the part which will take the most
    time, particularly if you’ve had a problematic or complicated relationship with
    food in the past. But once you reach a point where it can fall back in your mind
    and take a backseat, your mental energy can be reallocated and opened to many
    more interesting life experiences and ideas that aren’t related to diet.</li></ul><p>With
    this perspective shift and change in relationship with food, living will not be
    about eating, but eating will become the fuel and sustenance for a fulfilling
    lifestyle, focused on your family, friends, career, and success.</p><p>Harahachi-bunme
    is not really a diet, and to be honest, it’s not even really a rule. It’s a way
    of intuitive eating and understanding food from a perspective of nourishment and
    sustenance.</p><p>I’ve gone from both ends of the extreme eating spectrum, and
    found that I was neither happy nor productive in either state. Moderation can
    be a lot more difficult than said, but once you master the art of it, your brain
    capacity really does open up for better things.</p><p>So get in touch with your
    thoughts, and get in touch with your body. Love it, nourish it, and treasure it.
    You will feel physically better, emotionally happier, and psychologically more
    engaged with your work and the people around you.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*cHX34umPiyAVIBJTX-RVZA.jpeg"
    alt=""></p><p>If this article was any use to you, please leave a comment or email
    me at kokumura@kakikata.space! I love hearing from you guys, learning from you,
    and listening to the stories you have to share. I reply to every single email
    I get, and want nothing more than to support those who are looking for a bit of
    guidance and ways to help themselves.</p><p>With love,</p><p>Kaki</p>'
  :author: Kaki Okumura
  :topic: health
- :url: https://gen.medium.com/trump-is-a-mental-health-story-652c340f4503?source=search_post---------8
  :title: Trump Is a Mental Health Story
  :content: '<p>Trump Is a Mental Health Story</p><h3>Reporters need to stop covering
    him as if he’s strictly a political one</h3><p><img src="https://cdn-images-1.medium.com/max/11136/1*ls3KJhtB8M_4Ndk5B5g7ig.jpeg"
    alt="Credit: JIM WATSON / Contributor/Getty Images"><em>Credit: JIM WATSON / Contributor/Getty
    Images</em></p><p>In the 818 days since the 2016 election, the *Washington Post
    *has used the word “unprecedented” in reference to President Donald Trump, or
    his associates, about 657 times­ — or almost every day. On just one day in January,
    for example, readers learned of Trump’s “unprecedented steps” to slow immigration,
    his “unprecedented decision” to hold onto his business in the White House, and
    his “unprecedented assault” on the census.</p><p>There is a breathlessness to
    the coverage that, oddly, does not diminish with time. The word “remarkable” appears
    almost as often in the <em>Post</em>, averaging every other day since 2016. We
    read about the “remarkable rift” between the President and his former National
    Security Adviser (Dec. 1, 2017), Trump’s “remarkable ignorance of U.S. history”
    (July 19, 2018), and his “remarkable tweetstorm” against his former lawyer (Dec.
    4, 2018).</p><p>If something happens that often, it can’t be all that remarkable.
    Why do journalists keep using these words? Simple. Because any time news breaks,
    we call political scientists, pollsters, former White House staffers, and opponents
    for analysis, little of which is remotely illuminating. The problem is, we try
    to cover Trump as a political matter. And by doing so, we’re potentially missing
    a big part of the story.</p><p>Imagine if Trump had a seizure during a press conference.
    Would reporters ring up the folks at Brookings and the Cato Institute for comment?
    Would we analyze <a href="https://www.nytimes.com/2019/01/12/upshot/trump-border-wall-polls.html">new
    polling data</a> to help us understand if there is a clever political strategy
    behind his behavior?</p><blockquote><h1>“His behavior is not remarkable. It’s
    predictable. It’s exactly what we’d expect. He just continues to be a consistent
    version of who he appears to be.”</h1></blockquote><p>No. We’d call physicians,
    who would tell us that they can’t formally diagnose the president without seeing
    him, but they can say that a seizure is generally caused by an uncontrolled electrical
    disturbance in the brain. They could then explain that a seizure might be caused
    by epilepsy — and what might happen if epilepsy goes untreated. This context would
    not be inappropriate or biased; it would demystify the president’s behavior and
    help us prepare for what comes next, with significantly less drama and noise.</p><p>So,
    I tried an experiment the other day. To make sense of Trump’s behavior, I did
    not call foreign policy experts or pundits. That would be like calling an astrologer
    to explain a flu pandemic. Instead, I called Wendy Behary, who wrote the book
    <em>Disarming the Narcissist *and has treated hundreds of narcissistic clients,
    including surgeons, Wall Street executives, and other powerful people, in her
    private practice in New Jersey</em>. *It was one of the most useful conversations
    I’ve had about Trump in months.</p><p>Unlike the <em>Washington Post *or the <a
    href="https://www.nytimes.com/2018/11/09/us/politics/trump-whitaker-press-attacks-midterms.html">*New
    York Times</a>,</em> Behary has never once been surprised by Trump’s behavior.
    “His behavior is not remarkable. It’s predictable. It’s exactly what we’d expect,”
    she says. “He just continues to be a consistent version of who he appears to be.”</p><p>So
    far, most of the mainstream stories about Trump’s narcissism have been about whether
    mental health professionals should diagnose him from afar. That’s a worthy debate.
    But journalists are not psychiatrists. We are not bound by the rules of the American
    Psychiatric Association. We are bound by a duty to inform the public, without
    fear, drawing upon any source that may prove useful.</p><p>At this point, it’s
    not biased to acknowledge that Trump behaves in ways that most mental health professionals
    recognize as symptomatic of a larger problem. It’s not unreasonable to ask them
    to help explain and even predict his behavior. In fact, it may be more biased
    <em>not</em> to do so.</p><p>What if we got new sources to help us through this
    “remarkable” time? This doesn’t mean bashing Trump. To the contrary. In order
    to treat her narcissistic clients, Behary has learned to empathize with them.
    This isn’t easy to do, she admits, but it is essential — so that she doesn’t mistake
    them for being strategic or simply evil. “Narcissists don’t set out to harm people,”
    she says. “They will harm you — but it’s to protect themselves. It’s not personal.”
    Taking narcissists personally is a very common waste of time and energy.</p><p>Narcissists,
    for example, need admiration the way addicts need substances. They believe they
    are truly special and yet not appreciated for their gifts, which can lead them
    to act entitled, as if the rules do not apply to them. In their quest for recognition,
    they sometimes exploit others, contradict what they’ve said, and break their promises
    — all the while arguing for (and often truly believing in) their new, alternative
    facts. Once we know this, Trump’s tendency to revise history becomes unsurprising
    and explicable.</p><p>It’s a painful way to live, because no amount of adoration
    will ever be enough. After every victory, feelings of envy, anger, and frustration
    squirm back to the surface. Now, Behary says, Trump is “unraveling.” This, too,
    is predictable, which is why we need to talk about it, out in the open. As the
    bad news stacks up for Trump, including Republican losses in the midterms, a divided
    Congress, and continuing legal investigations, he is likely experiencing profound
    mental agony.</p><p>In this agitated state, narcissists are notoriously bad at
    negotiating, as it turns out. (They are good at bullying, which is not the same
    thing.) Catherine Conner, a family law attorney and mediator in Northern California,
    understands this better than political scientists, because she has helped hundreds
    of people craft child custody agreements and divorce settlements. A crisis, such
    as a divorce, may intensify narcissistic tendencies and make negotiation impossible,
    she says.</p><p>“The only way to create an agreement is to put yourself in the
    other person’s shoes and come up with a package that might appeal to both of you,”
    Conner says. “If they are incapable of seeing the world through anyone else’s
    eyes, they won’t be able to do this. They will just remain stuck on their vision
    of what should be, convinced that everyone will see it their way.”</p><p>This
    would explain why Trump was reportedly <a href="https://www.nytimes.com/2019/01/16/us/politics/trump-shutdown-west-wing-shake-up.html">shocked</a>
    that the Democrats did not agree to his border-wall terms. He was unable to see
    the situation from their point of view. When this kind of intransigence takes
    hold in Conner’s cases, the parties are sometimes forced to rely on judges to
    make the decision.</p><p>In Trump’s case, if he is unable to compromise before
    the government shuts down again in two weeks, the courts might have to get involved.
    Or Trump might just turn the government back on in order to be the hero. “Narcissists
    are so good at showing up as <a href="https://www.cnn.com/2013/06/20/showbiz/music/kanye-west-god-complex-yeezus/index.html">Messiahs</a>,”
    Behary says. If he’s at risk of losing the support of his fan base, which he needs
    in order to stop the pain, he will swoop in to save the day. Because that’s what
    narcissists do.</p><p>Typically, when all else fails and narcissists are unable
    to get the attention and affirmation they need, they play the victim. If the investigations
    continue to intensify, and if Trump begins to lose the affection of his base,
    Fox News pundits, and Republican leaders, he may resign, Behary predicts, based
    on all the narcissists she has treated for decades. “He’ll point the finger and
    say, ‘I was making America great again, and the Democrats stopped me.’”</p><p>Trump
    may not behave this way. Human behavior is complicated. But isn’t it useful to
    know how other people like him tend* *to behave, generally speaking? So let’s
    stop living in the past, under the old rules of journalism and politics. Let’s
    start talking about mental health with the directness and care that our readers
    deserve. If journalists want to help the public understand the world in which
    we live, it is time to find new pundits — the kind who have seen this all before,
    who can empathize with the president and his opponents, and who do not benefit
    from perpetuating the chaos.</p>'
  :author: "“A lot of tenants want to believe the court process is fair, that there
    will be sympathy because they lost their job to a pandemic. They don’t know how
    bad the system is rigged against them.”"
  :topic: health
- :url: https://medium.com/kaizen-habits/3-hobbies-that-can-improve-your-memory-and-maintain-a-healthy-brain-b42ae7b8606e?source=search_post---------9
  :title: 3 Hobbies That Can Improve Your Memory And Maintain a Healthy Brain
  :content: '<p>A healthy lifestyle supports brain health</p><p><img src="https://cdn-images-1.medium.com/max/2788/1*tt3GG0XKcbFNJLCWzQX4qw.png"
    alt="Illustration: [Leslie Soto Valenzuela](https://www.behance.net/lesliesotovalenzuela)"><em>Illustration:
    <a href="https://www.behance.net/lesliesotovalenzuela">Leslie Soto Valenzuela</a></em></p><p>Cognitive
    decline is inevitable as we get older.</p><p><a href="https://www.apa.org/research/action/memory-changes">According</a>
    to the American Psychological Association, “the brain’s volume peaks in the early
    20s and gradually declines for the rest of life”.</p><p>But your lifestyle can
    slow the process. You can preserve and even enhance your mental capabilities as
    you age. Simple behaviour changes can help us stay sharp for as long as possible.
    What you do or don’t do makes a huge difference to your memory skills.</p><p>Pursuing
    both intellectual and physical challenges, as uncomfortable as it may be, is one
    of the best ways to slow the natural memory decline process. New challenges are
    a way to exercise the mind and build new pathways.</p><h2>Embrace New Learning
    Styles/Formats</h2><p>Everyone learns in different ways.</p><p>You might find
    reading enormously effective, while your friend would rather watch a video or
    listen to a podcast. Each path creates differing experiences and memories.</p><blockquote><h1>Most
    people have a dominant style and tend to use that for acquiring new knowledge.
    Others use a combination of different content types— posts, talks, documentaries,
    books (digital and physical) and podcasts.</h1></blockquote><p>Research shows
    that each learning style uses different parts of the brain. By involving more
    of the brain during learning, you can improve your ability to recall information
    and remember more of what you learn.</p><p>I tend to read my books on an iPad.
    I have started reading more physical copies — I’ve ordered dozens of them to read
    in the evenings to stay away from screens every now and then. I’ve also been watching
    more educational documentaries on Netflix.</p><p>A new learning style can improve
    your brain’s processing of information over time. Develop an ability in less dominant
    learning styles and you could find something new in a completely different and
    enjoyable way.</p><h2>Cultivate a Broad Range of Artistic Interests</h2><blockquote><h1>Pablo
    Picasso once said, “Art washes away from the soul the dust of everyday life.”</h1></blockquote><p>Taking
    up a new hobby or rediscovering an old one (drawing, painting, photography, dancing,
    making something in response to music, gardening, etc.) can help you improve your
    focus, mood and memory. Artistic hobbies stimulate the brain to grow new ones
    by using the senses in new ways.</p><p>Learning something new requires you to
    stretch yourself physically, mentally or emotionally. Any hobby that involves
    a great deal of attention to detail can stave off cognitive decline and improve
    your memory.</p><blockquote><h1>Besides relieving stress and engaging the whole
    brain, hands-on artistic pursuits are a form of “neurobics,” <a href="https://blog.soarlifeproducts.com/cognition-memory/building-great-memories-4-hobbies-actually-improve-memory-skills/">says</a>
    Dr. Lawrence Katz in his book, “Keep Your Brain Alive: 83 Neurobic Exercises to
    Prevent Memory Loss and Increase Mental Fitness.”</h1></blockquote><p>Katz says
    art builds connections between the neurons and stimulates the brain to grow new
    ones by using the senses in new ways.</p><p>So, while physical exercise, games
    and meditation have a place in protecting your brain from cognitive decline, don’t
    neglect the benefits of artistic hobbies like drawing, painting, photography or
    learning to music an instrument.</p><p>Einstein was an accomplished amateur violinist.</p><p>His
    son, Hans Albert, once said, “whenever he felt that he had come to the end of
    the road or into a difficult situation in his work, he would take refuge in music,
    and that would usually resolve all the difficulties.”</p><h2>Becoming a Lifelong
    Learner Can Help You Maintain a Healthy Brain</h2><p>A consistently stimulated
    brain may be the key to a vibrant life.</p><p>Life-long learning — the “ongoing,
    voluntary, and self-motivated” pursuit of new knowledge, can keep our brains working
    at optimum levels — which can limit cognitive and memory decline as we age.</p><p>When
    you learn something new, your brain isn’t only getting smarter – it’s getting
    stronger — new information strengthens the pathways between neurons in the brain.</p><p>Any
    time you give your brain new information, you’re helping to protect it against
    the natural deterioration that comes with aging.</p><blockquote><h1>Lifelong learning
    is the key to maintaining cognitive function,” <a href="https://easylivingfl.com/best-brain-boosting-hobby/">says</a>
    Rosebud Roberts in the Mayo Clinic’s study published in Neurology.</h1></blockquote><p>“It’s
    a ‘use it or lose it’ scenario. When you engage in cognitively stimulating activities
    you’re strengthening synaptic connections, but if you don’t use those circuits
    in your brain, the connections degenerate, she adds. Mentally stimulating learning
    in life makes a huge difference in your memory retention.</p><p>Life-long learning
    is a journey, not a destination — there’s never a shortage of new things to learn.
    Choose to learn skills, ideas and concepts you find interesting and the journey
    will be fun.</p><p>A hobby is not just a way to pass the time; it can also keep
    your brain engaged, boost your cognition and improve the quality of your life.
    Make time to pick up a few hobbies. Given what research tells us, they will keep
    your brain wonderfully healthy.</p><p><a href="https://postanly.substack.com/">*Join
    my personal newsletter</a> (tools for wealth, productivity, happiness and growth)
    and get a free ebook “Habit Stacking: Deeper Essays on Personal Growth, Productivity
    and Happiness”.*</p>'
  :author: Kaizen Habits
  :topic: health
- :url: https://medium.com/personal-growth/4-habits-everyone-needs-for-better-mental-health-611394e84aa0?source=search_post
  :title: 4 Habits Everyone Needs for Better Mental Health
  :content: '<p>You are what you habitually do</p><p><img src="https://cdn-images-1.medium.com/max/6586/1*U6Mi5-bELw9Oriw64WzXeg.jpeg"
    alt="Photo by [Andrea Piacquadio](https://www.pexels.com/@olly?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)
    from [Pexels](https://www.pexels.com/photo/photo-of-woman-using-her-laptop-935756/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)"><em>Photo
    by <a href="https://www.pexels.com/@olly?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">Andrea
    Piacquadio</a> from <a href="https://www.pexels.com/photo/photo-of-woman-using-her-laptop-935756/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">Pexels</a></em></p><p>Mental
    health is a frequently misunderstood topic:</p><ul><li><p>Many people believe
    that mental health is predetermined — that you are essentially at the mercy of
    your genetics and brain chemistry.</p></li><li><p>Other people believe that it’s
    simply a matter of will power — this is exemplified by the “just think positive”
    mentality.</p></li></ul><p>But the truth is in the messy middle:</p><blockquote><h1><strong>Mental
    health is not a matter of fate or a single decision—it’s mostly a matter of habits.</strong></h1></blockquote><p>In
    my work as a psychologist, the best way I’ve found to help people strengthen their
    mental health is to help them cultivate healthy habits, especially mental habits.</p><p>This
    doesn’t mean that other factors like your biology or social context don’t matter
    — they definitely do! But for most of us, the thing we have the most control over
    is the habits we choose to build and live by.</p><p>Here are four uncommon habits
    that will improve your mental health and resilience.</p><h2>1. Be curious about
    your own mind.</h2><p><em>Metacognition</em> is the ability to observe and think
    about your own mind and how it works — and it’s a key ingredient for lasting mental
    health.</p><p>Most people act on autopilot, especially when strong emotions are
    involved:</p><ul><li><p>You feel angry and <em>immediately</em> lash out — saying
    something sarcastic, slamming a door, or even just ruminating in your own mind
    about how terrible someone else is.</p></li><li><p>You feel anxious and <em>immediately</em>
    try to distract yourself with meaningless activities or you call a friend for
    reassurance.</p></li><li><p>You feel sad and <em>immediately</em> turn to alcohol
    or food to numb out the pain.</p></li></ul><p>Not only does impulsiveness lead
    to bad decisions, but it prevents us from learning something new about ourselves.</p><p>If
    you always resort to sarcasm anytime you feel angry, for example, your vision
    of what anger is and what it means is quite limited. It’s just a bad feeling that
    leads to saying cruel things.</p><p>On the other hand, if you cultivate the habit
    of observing your thoughts and feelings — especially the uncomfortable ones —
    you can begin to get curious about them.</p><p><strong>When you learn to be curious
    about your own mind, self-awareness and growth are not far behind.</strong></p><p>For
    example, if you took a minute to observe and get curious about your anger, you
    might realize that behind your anger is some fear — fear that people won’t love
    you for who you are, fear that you’ll be alone, maybe even fear of your anger
    itself. Which means that anger, and all the behaviors that come out of it, are
    merely a distraction from the real issue — your fear and insecurity.</p><p>But
    this kind of self-knowledge is only possible if you consistently pause and observe
    your own mind from a place of curiosity.</p><p>The next time you feel a strong
    emotion, hit the pause button. Then ask yourself: <em>What’s going on in my mind
    right now?</em></p><blockquote><h1><em>“Between stimulus and response, there is
    a space… In that space is our power to choose our response. In our response lies
    our growth and freedom.”</em></h1><h1><em>— Viktor Frankl</em></h1></blockquote><h2>2.
    Be compassionate with your suffering.</h2><p>A sure sign of mental health is that
    you are compassionate with yourself when times are hard — that you approach your
    mistakes and suffering in a gentle, rational way, without resorting to extremes.</p><p>In
    my experience as a psychologist, the one thing that unites virtually every one
    of my clients is that they lack the habit of <em>self-compassion</em>.</p><p><strong>Self-compassion
    means that in times of pain or suffering, you treat yourself like you would treat
    a good friend — in an empathetic, balanced, non-judgmental way.</strong></p><p>Ironically,
    while most of us are quite good at being compassionate with other people, we’re
    terrible at being compassionate with ourselves:</p><ul><li><p>When you make a
    mistake, you immediately start criticizing yourself with negative self-talk and
    catastrophic predictions.</p></li><li><p>When you feel upset or afraid, you immediately
    criticize yourself for being weak and discount your pain as silly or trivial.</p></li><li><p>When
    you’re uncertain or confused, you compare yourself to others — as if shame will
    motivate you to figure things out.</p></li></ul><p>In other words, your default
    response to mistakes and pain is to be hard on yourself. This is probably the
    result of a culture that insists that the only way to achieve success in life
    (and therefore happiness) is to be tough on yourself.</p><p>But I see little evidence
    that being hard on yourself improves either your success or happiness in the long
    run. If anything, people who are successful probably got their despite their lack
    of self-compassion, not because of it.</p><p>The antidote to being hard on yourself
    is self-compassion.</p><p>Importantly, <strong>self-compassion doesn’t mean that
    you’re soft or spoiled</strong>, it just means taking a balanced view of your
    mistakes and failures:</p><ul><li><p>Self-compassion means acknowledging your
    failures for what they are without dwelling on them.</p></li><li><p>Self-compassion
    means reminding yourself that you are more than the sum of your mistakes. Far
    more.</p></li><li><p>Self-compassion means acknowledging that just because you
    <em>feel</em> bad doesn’t mean you <em>are</em> bad.</p></li></ul><p><strong>There’s
    no greater strength than the ability to be gentle with yourself.</strong></p><blockquote><h1><em>“</em>The
    soft overcomes the hard.</h1><h1>The slow overcomes the fast.<em>”</em></h1><h1><em>—
    Lao-tzu</em></h1></blockquote><h2>3. Be flexible in your behavior.</h2><p>A tell-tale
    sign of poor mental health is rigid behavior. But its opposite — flexibility —
    is the key to a stronger, more healthy emotional life.</p><p>There’s an old saying
    that the definition of insanity is doing the same thing over and over again and
    expecting a different result each time.</p><p>While most of us probably don’t
    fit the legal criteria for insanity, it’s probably not hard to think back on a
    time when you were suffering emotionally and see the same pattern — getting stuck
    trying the same old things to feel better but only feeling worse.</p><p>For example:</p><ul><li><p>When
    you’re feeling depressed and down, it’s all too easy to isolate yourself and disengage
    from the world.</p></li><li><p>When you’re feeling guilty or ashamed, it’s tempting
    to replay your past mistakes over and over again in a cycle of rumination and
    self-criticism.</p></li><li><p>When you’re feeling anxious and afraid, it’s easy
    to lose yourself in a mindless distraction rather than facing up to your fears.</p></li></ul><p>In
    other words, we all tend to get stuck in habitual ways of responding to stress
    and painful emotions. We feel bad and our default behaviors kick in, often without
    much awareness.</p><p>But here’s the thing…</p><p><strong>You can’t keep doing
    the same old thing and expect new results.</strong></p><ul><li><p>If every time
    you feel anxious, you start worrying — and then find that worrying only makes
    you more anxious — maybe it’s time to think about a new way of responding to anxiety?</p></li><li><p>If
    every time you feel sad, you start ruminating — and then find that ruminating
    only makes you feel worse about yourself — maybe it’s time to think about a new
    way of responding to sadness?</p></li><li><p>If every time you feel angry, you
    criticize other people — and then find that being critical only makes you feel
    worse about yourself in the long run—maybe it’s time to think about a new way
    of responding to your anger?</p></li></ul><p>Instead of defaulting to your same
    old strategies, try to be flexible in how you respond to difficulty:</p><ul><li><p><strong>Take
    a new perspective.</strong> Ask yourself: <em>How would someone else look at this?</em></p></li><li><p><strong>Experiment
    with new behaviors.</strong> Test out what happens when you bite your tongue instead
    of lashing out or call a friend instead of isolating yourself.</p></li><li><p><strong>Study
    other people.</strong> Pay attention to how the people your admire respond to
    difficult situations and stress: <em>What do they do differently and what might
    that look like for me</em>?</p></li></ul><p>Be a scientist in your own life: observe
    what’s not working, formulate a new theory, test it out, and see how it works.</p><p><strong>You
    can think your way into almost any form of suffering, but it’s only through taking
    action that you’ll truly move on.</strong></p><blockquote><h1><em>“You cannot
    change what you are, only what you do.”</em></h1><h1><em>― Philip Pullman</em></h1></blockquote><h2>4.
    Be assertive about your values.</h2><p>The real tragedy of chronic emotional suffering
    is you become so consumed with alleviating your pain that you lose sight of the
    things that matter most — your values and aspirations.</p><p>When we feel any
    kind of pain — including emotional pain — our attention gets drawn to finding
    the quickest possible way to alleviate that pain.</p><p>For example: When your
    finger feels pain and you realize it’s resting on a hot frying pan, all your focus
    and energy go toward getting your hand off the hot pan. And for good reason —
    it would be dangerous and harmful to leave your hand on a hot stove!</p><p>But,
    while pain is often an indicator of danger, that it isn’t always. Emotional pain,
    no matter how severe, isn’t itself dangerous — no amount of sadness or anxiety,
    for example, can harm you.</p><p>But it’s easy to get confused here. It’s easy
    to treat all pain as an indication of danger. And when we do that, it means channeling
    all our attention and energy toward escaping that pain.</p><p>But there’s a cost
    to this instant pain avoidance strategy:</p><p><strong>When you spend all your
    time running away from what you <em>don’t</em> want, there’s little time left
    for running toward what you <em>do</em> want.</strong></p><p>If you suffer from
    chronic mental health issues or emotional struggles, you probably recognize this
    pattern of your life shrinking and narrowing as everything becomes about feeling
    less pain.</p><p>And while this strategy of trying to outrun your pain makes sense
    on an intuitive level, it almost never works in the long-run. And in fact, it
    often makes things worse:</p><ul><li><p>Avoiding your grief by drowning it out
    with constant distraction only perpetuates it.</p></li><li><p>Avoiding your social
    anxiety by not going out as much only intensifies it.</p></li><li><p>Avoiding
    your goals because you’re afraid of failing only makes your self-esteem issues
    worse.</p></li></ul><p>The cure to a life of chronic avoidance is assertiveness.</p><p>Crafting
    the habit of assertiveness means learning to go after what you want with confidence
    and setting boundaries on what you don’t want with strength:</p><ul><li><p>Asking
    for a nicer table at the restaurant even though you’re worried that the waiter
    might think badly of you.</p></li><li><p>Refusing to engage in hostile conversations
    with coworkers, even though it feels good to try and put them in their place.</p></li><li><p>Making
    the decision to leave your job and try a new career even though you’re scared.</p></li></ul><p>In
    the end, the only way to genuinely and consistently feel better is to starting
    moving toward the things that matter most even if you don’t feel like it.</p><p><strong>Let
    reason and values guide your decisions and trust that your feelings will follow
    in time.</strong></p><blockquote><h1><em>“If you don’t know where you are going,
    you might not get there.”</em></h1><h1><em>— Yogi Berra</em></h1></blockquote><h2>All
    you need to know</h2><p>Mental health isn’t determined by your genetics or as
    simple as thinking positive. Mental health is built and maintained through the
    cultivation of healthy, consistent habits:</p><p><strong>Be curious about your
    own mind.</strong></p><p><strong>Be compassionate with your suffering.</strong></p><p><strong>Be
    flexible in your behavior.</strong></p><p><strong>Be assertive about your values.</strong></p><p><a
    href="https://nickwignall.com/newsletter/">**Join my newsletter to get my newest
    articles each week →</a>**</p>'
  :author: Personal Growth
  :topic: health
- :url: https://elemental.medium.com/diet-research-is-deeply-flawed-heres-what-you-should-know-to-eat-healthy-6e27ff47efb0?source=search_post
  :title: Diet Research Is Deeply Flawed. Here’s What You Should Know to Eat Healthy.
  :content: '<p>Elemental asks nutrition expert Dr. David Ludwig why there’s so much
    confusion around what’s good for you and what’s not</p><p><img src="https://cdn-images-1.medium.com/max/4096/1*vJz1xVv1yPFMBw9MRn8Y9g.jpeg"
    alt="Photo: Yuhnl/EyeEm/Getty Images"><em>Photo: Yuhnl/EyeEm/Getty Images</em></p><p>It
    seems like every other week a new study comes out questioning long-held wisdom
    about food and nutrition. First fat was vilified; now it’s considered a part of
    a healthy diet. Eggs used to be off-limits for people with heart problems due
    to the high amount of cholesterol, but that’s no longer the case.</p><p><a href="https://medium.com/@davidludwigmd">Dr.
    David Ludwig</a> is a professor of nutrition at the Harvard School of Public Health
    and author of the number one <em>New York Times</em> bestseller <a href="https://www.drdavidludwig.com/">*Always
    Hungry?</a><em>, a book that explores the dietary drivers of hunger, obesity,
    and metabolic disease. In <a href="https://jamanetwork.com/journals/jama/fullarticle/2748478">a
    new “Viewpoint” paper</a> published in August in the *Journal of the American
    Medical Association</em> (<em>JAMA</em>), Ludwig and his co-authors explain the
    problems with current approaches to dietary research and why this leads to so
    much nutrition confusion.</p><p>Here, <em>Elemental</em> asks Ludwig to elaborate
    on some of these problematic approaches and to share advice for people who feel
    conflicted about what and how to eat.</p><h3><strong>Elemental: What was the impetus
    for the JAMA viewpoint you co-authored?</strong></h3><p>*<em>Dr. David Ludwig:
    *</em>In the course of a week, almost every person will see headlines on diet
    and health that come to opposing conclusions. And we’ve seen through the years
    how what is believed to be an established fact in nutrition is later questioned
    or reversed. We wanted to address the causes of this confusion and the challenges
    facing nutrition research in comparison to other fields that have more established
    track records of assuring research quality.</p><h3><strong>You compare nutrition
    research to drug research. What do you view as the key differences?</strong></h3><p>Pharmaceutical
    research receives lots of financial support, because drugs can be highly profitable.
    A major clinical trial might cost several hundreds of millions of dollars, but
    a successful drug can earn many billions in profits. So the pharmaceutical industry
    is motivated to do these studies right — to design them properly, to make sure
    they have the strength and statistical power to get the right answers. The last
    thing a trial sponsor wants is an inconclusive result. If an experimental drug
    doesn’t work, they want to know it as quickly as possible to avoid wasting additional
    time and money. Consequently, a large infrastructure has grown in recent years
    to support pharmaceutical research, including clinical research organizations
    hired to oversee trials. These CROs have the expert staff and know-how to conduct
    rigorous trials and ensure that all scientific and regulatory standards are properly
    followed.</p><p>Compare this situation to a standard dietary trial. Researchers
    lucky enough to win a government grant from the National Institutes of Health
    (typically 10% of all applications) will have at most $500,000 a year for four
    or five years. While $2 million may sound like a lot, that’s a tiny fraction of
    the budget for a standard drug trial. More typically, nutrition research must
    make do with shoestring budgets cobbled together from small grants provided by
    universities, philanthropies, or the food industry.</p><p>Even as nutrition is
    less well-funded, it’s more complicated. Changing a person’s diet is much more
    difficult than taking a pill or a placebo, and it’s virtually impossible to do
    a double-blind study with food. Diet is personal, involving deeply entrenched
    behavior related to family, community, culture, pleasure, and even values.</p><p>To
    make matters even more challenging, changing one aspect of a diet inevitably affects
    many others as well. If you eat more of one food, you’ll probably eat less of
    another. In a study examining the effects of consuming 10 servings of vegetables
    and fruits a day, participants may naturally tend to eat less processed foods,
    because they’re less hungry. So it can be hard to tell whether any health benefits
    seen in the study are due to eating more veggies and fruits or less of the other
    stuff. At the same time, nutrition trials have difficulty determining whether
    and how diet actually changes. You can’t just measure blood levels of a drug to
    assess compliance with the protocol. The challenge of producing significant diet
    change over the long term and the inability to accurately measure these changes
    create enormous uncertainties.</p><h3><strong>Apart from funding challenges, there’s
    the question of whether the people in these diet studies are actually following
    instructions.</strong></h3><p>This is the elephant in the living room. In most
    clinical trials, people are told to follow one diet or another, and they are given
    a very modest amount of support — maybe a meeting with a dietitian once or twice
    a month. They are then expected to make this major change to their lifestyle on
    their own. This study design is especially common because of the poor funding
    and infrastructure in place for nutrition research. Inexpensive, low-intensity
    interventions are chosen by necessity. But you don’t really know if people follow
    them.</p><p>People can make changes for a few months, but without adequate support,
    they resort back to their habitual ways of eating. Because of this, we often see
    short-term weight loss in obesity trials followed by weight regain after a few
    months. These sorts of findings have been misinterpreted to mean the type of diet
    doesn’t matter. But that conclusion does not logically follow. Instead, it really
    means the intervention failed.</p><p>Imagine there’s a promising new drug that
    might cure childhood leukemia. You conduct a clinical trial with one group of
    people assigned to take the new drug and another group receiving a placebo. But
    it turns out the group assigned to the drug didn’t take it as directed. In this
    scenario, there might be no significant change in cancer treatment success. But
    we wouldn’t interpret that result to mean the drug is ineffective. We would conclude
    that the study was flawed. Unfortunately, the conduct of diet trials isn’t always
    held to this standard.</p><h3><strong>You address the importance of understanding
    biology and behavior. Is one more important than the other in diet trials?</strong></h3><p>Both
    are critical, but it’s important to keep in mind which one you want to study in
    designing a diet trial. Many people can cut back on calories and lose weight on
    any diet temporarily. But after a few days or weeks, hunger increases and their
    metabolism slows down, which is a recipe for weight regain. That’s why we need
    longer-term studies to see how the type of food we eat, beyond calories, might
    alter biology and the success of weight-loss maintenance. But the best diet in
    the world won’t work if people aren’t motivated to follow it. That’s why we also
    need studies of behavior and environment to make the challenges of lifestyle change
    easier and more sustainable.</p><h3><strong>How do we fix this problem?</strong></h3><p>Diet-related
    diseases — including obesity, diabetes, and cardiovascular disease — are the leading
    public health problems today. Whether or not you have one of these conditions,
    you’re paying for them through higher taxes, the cost of Medicare and Medicaid,
    and higher insurance rates. These costs are borne by everybody. And for people
    with a condition like Type 2 diabetes, the personal toll can be huge, including
    limb amputation, kidney failure, blindness, and shortened life expectancy. So
    it’s in everybody’s interest that research into nutrition and disease prevention
    be well funded and done properly.</p><p>Some say we can’t afford new government
    programs [to deal with this]. But today, the economic cost of Type 2 diabetes
    — just one diet-related disease — approaches $500 billion annually. The total
    medical costs and lost worker productivity of diet-related disease may already
    exceed $1 trillion annually. Without action, these figures will only increase,
    contributing to the national budget deficit and threatening the international
    competitiveness of the U.S. economy. A sort of Manhattan Project for diet-related
    disease would cost pennies on the dollar now being spent. What’s lacking is a
    clear national vision to align public health priorities with investment.</p><p>We
    know humans aren’t programmed to gain more weight generation after generation.
    Something has changed in our environment, driving even highly disciplined people
    to gain weight. We have to understand what that’s about. One likely culprit is
    all the processed carbohydrates that crept into our diet during the low-fat diet
    years. But that’s not the whole story, and many other factors are undoubtedly
    contributing. We’ll need long-term, adequately powered studies to sort this out
    once and for all.</p><p>We need to build the capacity to conduct effective nutrition
    research, and this will require sustained investment from Washington, including
    cultivation of a new generation of appropriately trained researchers at academic
    centers around the country.</p><blockquote><h1>“We know humans aren’t programmed
    to gain more weight generation after generation. Something has changed in our
    environment... We have to understand what that’s about.”</h1></blockquote><h3><strong>What
    advice can you offer the general public for reading and consuming news stories
    about nutrition research?</strong></h3><p>Ideally, medical journalists need better
    training to identify basic design flaws in clinical trials so they can convey
    a more balanced view of study strengths and limitations. We don’t want the public
    dragged back and forth with every weak new research finding. As a general rule,
    if a clinical trial on obesity has a small number of participants (fewer than
    20 people), if it’s very short term, or if it doesn’t clearly demonstrate that
    meaningful dietary changes were made, the results can be considered weak.</p><h3><strong>Are
    there certain research journals people could look to for diet studies that are
    more trustworthy?</strong></h3><p>The best studies often wind up in the best journals.
    Some top-rated journals are* JAMA<em>, *New England Journal of Medicine</em>,
    the* Lancet<em>, the</em> BMJ<em>, and *Annals of Internal Medicine</em>. <em>American
    Journal of Clinical Nutrition</em> ranks at the top for the field. But there are
    many other good-quality journals that publish credible research, so a journal’s
    identity by itself is not the whole story.</p><h3><strong>Many people are confused
    about healthy eating. What’s your advice on how to eat healthy?</strong></h3><p>I
    advocate a “low glycemic load” diet — one that controls the surge in blood glucose
    and insulin after the meal. The way to achieve this is by cutting back on processed
    carbohydrates (refined grains, potato products, and sugar); increasing healthy
    fats, like nuts and nut butters, avocado, olive oil, and even dark chocolate;
    and having an adequate amount of protein, which can come from animal or plant-based
    sources. This approach involves a moderate reduction in total carbohydrates but
    still offers lots of flexibility in food choice. For people with diabetes, more
    severe restriction of carbohydrates may have additional benefits.</p><p>Not all
    researchers or clinicians, of course, will agree with this recommendation. That’s
    why we need the definitive research.</p><p>Improving the quality of nutrition
    research will be critical to public health and the international economic competitiveness
    of the U.S. in years to come. The default mode — relying on the pharmaceutical
    industry to devise ever more powerful drugs to treat diseases caused by diet —
    doesn’t make sense. It’s an ounce of prevention for a pound of cure.</p>'
  :author: A Supercomputer Analyzed Covid-19 — and an Interesting New Theory Has Emerged
  :topic: health
- :url: https://elemental.medium.com/is-sharing-your-feelings-always-healthy-a6be3579c4ae?source=search_post
  :title: Is Sharing Your Feelings Always Healthy?
  :content: '<p>Is Sharing Your Feelings Always Healthy?</p><h3>Sometimes spilling
    your guts is not the answer</h3><p><img src="https://cdn-images-1.medium.com/max/11250/1*BE9bewdBJn0lLjJdQnopmg.jpeg"
    alt="Credit: Katerina Sisperova/iStock/Getty"><em>Credit: Katerina Sisperova/iStock/Getty</em></p><p><em>Every
    week, the Nuance will go beyond the basics, offering a deep and researched look
    at the latest science and expert insights on a buzzed-about health topic.</em></p><p>In
    an influential study, a group of Stanford researchers asked pairs of unacquainted
    people to watch and then discuss a documentary about the World War II bombings
    of Hiroshima and Nagasaki.</p><p>As <a href="https://psycnet.apa.org/record/2003-02341-008">part
    of the study</a>, some participants were asked to “behave in such a way that your
    partner does not know you are feeling any emotions at all.” Compared to the people
    who were free to express emotions, those who were told to hide their feelings
    experienced spikes in blood pressure and distraction. Also, compared to the pairs
    who were allowed to express themselves naturally, both people in the emotion “suppression”
    groups tended to feel less rapport and less positivity toward each other.</p><p>This
    study is one of many that suggest concealing emotions can have negative repercussions
    — both for the person doing the concealing and for those around them. More research
    has linked emotion suppression to higher rates of anxiety, <a href="https://www.researchgate.net/profile/Andrea_Ballesio/publication/283514372_Insomnia_and_Emotion_Regulation_Recent_Findings_and_Suggestions_for_Treatment/links/563cca0708aec6f17dd7d9b9/Insomnia-and-Emotion-Regulation-Recent-Findings-and-Suggestions-for-Treatment.pdf">insomnia</a>,
    and other unhealthy outcomes.</p><p>But while suppressing your emotions is often
    bad, experts say it can sometimes lead to better outcomes.</p><p>Of course, there
    are the obvious social situations — ones many of us encounter on a daily basis
    — in which expressing your feelings would be uncomfortable or embarrassing, says
    David Caruso, a psychologist and research affiliate at the Yale Center for Emotional
    Intelligence. If you’re in a meeting with a boss or client, and they say something
    you find “utterly ridiculous,” telling them how you feel would probably do more
    harm than good, Caruso says.</p><p>But even when you’re dealing with people who
    are close to you — a family member or friend — there are situations when spilling
    your guts may exacerbate negative emotions, not assuage them.</p><p>“Emotions
    are contagious, and you can impact the emotions of others by sharing how you feel,”
    Caruso says. He points out that emotions often arise suddenly, can be fleeting,
    and are dependent on a lot of contextual factors, from how well you slept to how
    recently you’ve eaten. “How you’re feeling in the moment can be the product of
    all these unrelated things,” Caruso says. And by expressing what you’re feeling,
    not only do you pass some of your emotion to others, but you also have to deal
    with the aftermath of that disclosure.</p><p>Say that, in a fit of anger or frustration,
    you share your negative feelings with your spouse or a close friend in a way that
    makes that person feel responsible. Opening up may be satisfying in the moment,
    Caruso says, but it could also be damaging to your relationship in the long run.
    In many cases, he says, it would be better for all involved if you took some time
    alone to come to grips with the real root of your feelings.</p><blockquote><h1>“There
    are situations when spilling your guts may exacerbate negative emotions, not assuage
    them.”</h1></blockquote><p>Caruso is quick to add that “there are all sorts of
    costs associated with emotion suppression.” Along with the psychological burden
    of trying to keep your feelings to yourself, you may pay a relationship penalty.
    “When you express an emotion to someone, you’re sending them data on how you’re
    functioning, and that’s a good way to gain that person’s support,” he says.</p><p>Also,
    trying to conceal or swallow your emotions is taxing. “Our brain’s ability to
    attend to and process information is limited when we’re using cognitive resources
    to suppress or emotionally check out,” he says. (Hence the Stanford group’s finding
    that emotion suppression can be distracting.) “But when we just flail around and
    say whatever we’re feeling,” he adds, “we can get into trouble.”</p><p>Other experts
    agree. “The way we’re built, we naturally want to describe what we’re feeling
    to others, but the reality is that sometimes this would hurt other people or would
    be embarrassing to us,” says James Pennebaker, a professor of psychology at the
    University of Texas. And when you share your feelings with someone else, you risk
    them refuting or rejecting the validity of what you told them, which can be devastating.
    “In that situation, you may end up worse off than if you’d kept what you were
    feeling to yourself,” Pennebaker says.</p><p>He says a close examination of your
    emotions and an honest assessment of where they’re coming from can be more helpful
    than simply declaring what you’re feeling. “If you’re just focusing on your emotions,
    you’re often missing the point,” Pennebaker says. “The examination is the helpful
    part.”</p><p>Of course, verbalizing your feelings can help you make sense of them,
    he adds. This is why psychotherapy and other forms of talk therapy, which allow
    you to express your emotions without fear of social or personal blowback, is so
    helpful. “But my research has found that putting your emotions into words by writing
    them down can do what talking would do,” he says.</p><p><a href="https://journals.sagepub.com/doi/abs/10.1111/j.1467-9280.1997.tb00403.x">Some
    of Pennebaker’s work</a> has shown that writing about emotional experiences can
    reduce measures of distress and depression and even improve immune function. Writing
    out how you feel, he says, seems to offer biological, mood, and cognitive benefits
    that are comparable to verbally sharing your feelings — without the risk of angering
    someone or making yourself feel silly or rejected.</p><p>“There’s no right way
    to write about your emotions,” Pennebaker says. “Just find a quiet place and do
    it for 15 minutes, three or four times a week.” He recommends thinking about what
    you’re feeling and why you’re feeling it. You can write your thoughts longhand
    or on a computer — or even with your finger in the air, he says.</p><p>Some of
    Pennebaker’s advice touches on an emotion-regulation strategy known as reappraisal.
    In simple terms, <a href="https://www.ncbi.nlm.nih.gov/pubmed/23765157">reappraisal
    is</a> a method of identifying and reframing the underlying causes of an emotion
    in ways that may allow you to let it go. For example, if you’re feeling angry
    with your partner, recognizing that you’re hungry or stressed out — and that these
    factors, and not the thing your partner did, are the true cause of your anger
    — can help you get over your negative feelings.</p><p>And while reappraisal can
    seem a bit like emotion suppression, <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2483789/">research
    suggests</a> it comes with few of the negative side effects of trying to ignore
    or hide emotions.</p><p>Opening up about your feelings can be a great way to understand
    and manage them, but a “full disclosure” approach to sharing your emotions may
    not always lead to the best outcomes.</p>'
  :author: A Supercomputer Analyzed Covid-19 — and an Interesting New Theory Has Emerged
  :topic: health
- :url: https://elemental.medium.com/these-so-called-vices-are-good-for-your-health-5519333eeb7e?source=search_post
  :title: These So-Called Vices Are Good for Your Health
  :content: '<p>Simple pleasures can go a long way to increasing well-being</p><p><img
    src="https://cdn-images-1.medium.com/max/4500/1*5iAdQ6WdIQminlasijA5tQ.jpeg" alt="Illustration:
    [Johanna Walderdorff](http://www.johannawalderdorff.com/)"><em>Illustration: <a
    href="http://www.johannawalderdorff.com/">Johanna Walderdorff</a></em></p><p>If
    your doctor told you to stop taking your medication and not come back for a checkup
    so soon, you’d be confused. If she followed up by telling you that it’s okay to
    eat some chocolate and fatty foods, enjoy a glass of beer or wine, or have lots
    of coffee, you might reconsider her expertise. But in fact she would be doing
    something far too few medical professionals do: advising patients based on the
    latest available science.</p><p>Much of the health advice people receive today
    is misguided and based on old conventions rather than the latest research. We
    are led to believe that to be healthy, we must spend half our lives in doctors’
    offices, ingest a constant stream of narcotic-strength drugs, consume a spartan
    diet, drink so-called health elixirs that look like witch’s potions, and exercise
    with the intensity of an Olympic athlete and the joy of a KGB recruit. We must
    worry about the food we eat, the tests we don’t take, and the pills we don’t swallow.
    Above all, we must worry. And all that worry costs us dearly — monetarily, emotionally,
    and physically.</p><p>But over the years, mainstream medical studies at respected
    institutions have repeatedly shown that many of the foods and behaviors we’ve
    been warned to avoid all our lives may not really harm us, and when consumed or
    engaged in properly, they may actually be beneficial. The list of good vices includes
    beverages like coffee, which research suggests can lower the risk of Type 2 diabetes
    and possibly protect from Alzheimer’s disease and dementia; foods like chocolate
    and whole-milk raw cheese; lifestyle choices like sleeping late and laughing a
    lot; and downright shocking practices like going to the doctor less, taking fewer
    medications, and avoiding many prescribed but often unnecessary medical procedures.</p><p>We
    don’t necessarily understand the reasons some of these vices can be good for us.
    It’s possible the joy we get from them is partly what makes them healthy. Feeling
    happy diminishes stress and seems to supercharge the immune system, which, among
    other things, may lead to better resistance to certain illnesses. The good news
    doesn’t stop there. Studies have even shown that being happy can help you live
    longer. Ancient Greek physician Hippocrates, the father of medicine, famously
    said, “Let food be thy medicine.” Too often, contemporary medicine says to let
    worry and overprescribed drugs be thy medicine. But in our experience — as a naturopathic
    physician with nearly 40 years of experience, as well as a food and health journalist
    — we say let good friends, family, food, nature, and happiness be thy medicine.</p><blockquote><h1>We
    don’t necessarily understand the reasons some of these vices can be good for us.
    It’s possible the joy we get from them is partly what makes them healthy.</h1></blockquote><p>Though
    we celebrate good vices, by no means do we advocate wanton hedonism. Our point
    is not to encourage people to eat and drink bad foods and smoke and gain weight.
    The point is for people to be happier and healthier by being freer and following
    truth. Alas, not every vice is good for us; your parents were right about the
    wisdom of avoiding many of them. Cigarettes are as bad for you as your mother
    told you they were. A little sugar may be fine, but excessive consumption of candy
    and sweets shouldn’t be part of your daily routine, and bacon, we’re sorry to
    say, appears to be good only for your soul. And if you come across a vice with
    potential upsides that you don’t already engage in, do not start it for health
    reasons. If you don’t enjoy it, it might not provide the same health benefits
    for you that it does for other people.</p><p>We regularly tell patients that no
    matter how busy or stressed they are, they should do something that they look
    forward to each day. It could be something seemingly virtuous—a short walk with
    the dog, a quick bike ride or swim, a delicious dinner—but it could also be a
    quick game of poker or blackjack, or a single malt scotch or cold beer. What’s
    important is that it provides joy. Even if we haven’t discovered the “meaning
    of life,” when we look forward to something each day, it gives that day a little
    more meaning.</p><p>When he was over 70, the late great comedian Rodney Dangerfield
    told an audience that he had just come from his doctor, who told him that if he
    ate right, exercised, and got plenty of fresh air, he’d get old, sick, and die.</p><p>Too
    true.</p><p>Our fate is set, and as far as we know, no one avoids leaving the
    earth when the time comes. What we want to do and can do is to have fun, live
    well, enjoy ourselves, and share health and happiness the best we can, for as
    long as we can.</p><p>If we stretch our time on earth a little longer and live
    a little better, so be it. We do this not by making life more rigid, restrictive,
    and boring, but more colorful, enjoyable, and fulfilling.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*JUzZcQElxr75tjBoOUBDRQ@2x.png"
    alt="*From [*The Good Vices: From Beer to Sex, the Surprising Truth About What’s
    Actually Good for You](https://www.penguinrandomhouse.com/books/557664/the-good-vices-by-dr-harry-ofgang-and-erik-ofgang/)*
    by Dr. Harry Ofgang and Erik Ofgang, to be published on June 4, 2019, by TarcherPerigee,
    an imprint of Penguin Publishing Group, a division of Penguin Random House LLC.
    Copyright © 2019 by Harry Ofgang and Erik Ofgang.*"><strong>From <a href="https://www.penguinrandomhouse.com/books/557664/the-good-vices-by-dr-harry-ofgang-and-erik-ofgang/">*The
    Good Vices: From Beer to Sex, the Surprising Truth About What’s Actually Good
    for You</a>* by Dr. Harry Ofgang and Erik Ofgang, to be published on June 4, 2019,
    by TarcherPerigee, an imprint of Penguin Publishing Group, a division of Penguin
    Random House LLC. Copyright © 2019 by Harry Ofgang and Erik Ofgang.</strong></p>'
  :author: A Supercomputer Analyzed Covid-19 — and an Interesting New Theory Has Emerged
  :topic: health
- :url: https://healthcareinamerica.us/if-youre-right-about-your-fat-friend-s-health-94a3ae1bd0ca?source=search_post
  :title: If you’re right about your fat friend’s health.
  :content: '<p>Your assumptions about your fat friend’s health might be frustratingly
    wrong. But what if they’re right?</p><p><img src="https://cdn-images-1.medium.com/max/2560/1*HyczWig-eCsRqbEwWRM8RQ.jpeg"
    alt="Art via [Animalia Life](http://animalia-life.club/other/human-heart-art.html)."><em>Art
    via <a href="http://animalia-life.club/other/human-heart-art.html">Animalia Life</a>.</em></p><p>A
    friend was visiting from out of town. We’d spent the evening before drinking and
    talking, and were looking forward to a hungover breakfast at a nearby diner.</p><p>The
    week before, I’d been inundated with emails and comments from trolls. <em>You
    won’t be screaming about acceptance when you lose a foot. I hope this fat f</em>**
    knows the strain she puts on her heart when she tries to stand up. You’re damn
    right I’m fat shaming — fat people should be ashamed.*</p><p>My friend’s visit
    was a happy respite, an opportunity to commiserate and blow off steam. We sat
    down at the diner and began a conversation with the couple next to us, an outgoing
    pair, eager to talk about the sports news of the day. After a few minutes of happy
    and boisterous conversation, we each returned to our breakfasts and our respective
    conversations.</p><p>Between my friend’s remarks, pieces of our neighbors’ exchange
    lodged in my skin like shrapnel.</p><p>“She’s the heaviest she’s ever been. She
    won’t hear anything about it from anyone. She says she’s ‘hurt’ and ‘offended’
    when it comes up.” The slim woman next to me salted her eggs and sighed with knowing
    exhaustion. “I told her, just spend one year counting every single thing you eat.
    You’ll be amazed at what happens in a year. I lost ten pounds in three months.
    The weight just melts off.”</p><p>Her companion jumped in. “I could talk to her.
    I lost 15 pounds and kept it off. It’s not hard,” he offered.</p><p>“We all know
    she needs to lose 100 pounds,” she offered, her indignation turning to anger.</p><p>“At
    <em>least</em>,” he added.</p><p>“Right. Probably closer to 150. But we’re not
    allowed to talk about it.”</p><p>My skin stung with the familiarity of the conversation,
    the thin naivety of believing that fat people simply don’t know we’re fat, or
    that we haven’t been told about calorie counting, Whole 30, Keto, Atkins, Paleo,
    Slim Fast, Weight Watchers, Jenny Craig, Nutrisystem, South Beach. That we haven’t
    tried them all.</p><p>The deep belief that there is no difference between losing
    fifteen pounds and ten times as much. The noblesse oblige of becoming a missionary
    for thinness, spreading the Good Word. The ease with which they saw their own
    bodies as accomplishments. The readiness with which they thought of fat bodies
    as failures, pitiable attempts that fell short of their own admirable standards.
    They had mastered the piety and penitence of thinness. Fat people needed their
    salvation.</p><p>I wondered who they were talking about. Was she a daughter? A
    niece? A friend, or a coworker? Was she in denial about her size, as they thought?
    Or did she sense their naked judgment, and decide to save herself the familiar
    pain of justifying the only body she had? Maybe she simply felt exhausted by explaining
    her body to every person who felt entitled to ask. When did she first prove herself
    unqualified, in their eyes, to look after her own body? When did they decide that
    hijacking it was the best way forward?</p><p>“She insists she’s happy, but we
    all know that’s a lie.”</p><p>“I don’t care how happy she is. If she doesn’t make
    some changes, she’s going to die. And it’ll be her own damn fault.”</p><p>And
    there it was: the familiar proclamation of a fat person’s impending demise. The
    exasperation that almost turns to gloating. The ugly satisfaction of predicting
    a fat person’s death.</p><p>“I’m just concerned for her,” she sighed. “I just
    want to know she’s motivated. Is that so much to ask?”</p><p>It was.</p><p>Afterward,
    my friend and I stood outside. I told him about the conversation.</p><p>“Jesus.
    I didn’t hear any of it.” He exhaled heavily. “This was after we spoke to them?”</p><p>I
    nodded.</p><p>“Did you think it might be a performance? Like, maybe they were
    talking so you could hear. Had you thought of that?”</p><p>I hadn’t. My heart
    sunk.</p><p>In the days following, I couldn’t get their conversation out of my
    head. The heartbreak of it wasn’t their gossip or self-satisfaction. It wasn’t
    their entitlement to see fat people’s pain, regret, or motivation. It wasn’t their
    certainty that their response was <em>for her own good. *It was their eager use
    of *health</em> and <em>concern</em> to pass harsh, heartless judgments about
    someone they ostensibly loved.</p><p>Was this how thin people spoke to one another
    when fat people weren’t around? Was this how my family and friends talked about
    me? I had long suspected it was, but hadn’t heard it firsthand.</p><p>At the diner,
    I was a fly on the wall for a conversation that was predicated on my absence.
    I watched my own funeral, heard my own eulogy. It was harsh, unforgiving, exasperated.
    It was controlling, exhausted from exerting its own authority over another person’s
    body. These two had ordained themselves ministers, duty-bound to exorcise her
    fat. All in the name of <em>health</em> and <em>concern.</em></p><p>But their
    conversation didn’t have any hallmarks of concern. Concern is curious, tender,
    loving. Concern is direct and heartfelt. Concern does its work delicately, with
    great care. It looks after the people you hold dear. Concern is rooted in love.
    But their conversation was rooted in power and open contempt.</p><p>Concern for
    fat people is understandable. Every day, local and national news features stories
    about the <em>obesity epidemic</em>, punctuated by footage of fat torsos, presuming
    that showing our faces — our personhood — would cause too much shame. After all,
    who could bear to be seen in a body like ours? But concern — true concern — shows
    itself vulnerably. It does not insist upon itself, shouting out the din around
    it. Concern asks tenderly, walks softly. Concern brings the soft brushes of an
    archeological dig, not a steamroller to pave over what lies beneath. Concern does
    not flatten everything in its path.</p><p>I had been flattened. I could only imagine
    how these strangers’ absent loved one felt.</p><p>Fat people — especially very
    fat people, like me — are frequently met with screwed up faces insisting on <em>health</em>
    and <em>concern.</em> Often, we defend ourselves by insisting that concerns about
    our health are wrongheaded, rooted in faulty and broad assumptions. We rattle
    off our test results and hospital records, citing proudly that we’ve never had
    a heart attack, hypertension, diabetes. We proudly recite our gym schedules and
    the contents of our refrigerators.</p><p>Many fat people live free from the complications
    popularly associated with their bodies. Many fat people don’t have diabetes, just
    like many fat people do have loving partners, despite common depictions of us.
    Although we are not thin, we proudly report, we are happy and we are healthy.</p><p>We
    insist on our goodness by relying on our health. But what we mean is that we are
    tired of automatically being seen as sick. We are exhausted from the work of carrying
    bodies that can only be seen as doomed. We are tired of being heralded as *dead
    men walking, *undead specters from someone else’s morality tale.</p><p>Those defensive
    assertions about our health aren’t wrong, but they don’t reflect every fat person’s
    reality. Some of us aren’t healthy or able-bodied. Some of us struggle with chronic
    illness, mental health issues, eating disorders, disabilities, abuse. Some of
    us have hypertension, diabetes, heart disease. For those fat people, <em>happy
    and healthy</em> is an alienating aspiration, and an unreliable narrator of our
    bodies.</p><p><strong>Fat people’s humanity cannot rest on our happiness or health
    any more than it can rely on our size. Whoever we are, however our bodies came
    to be, <em>health</em> will not deliver us from the well-intentioned bullying
    of *concern.</strong>*</p><p>Our delivery from *concern *lies only with you, the
    stranger who asks about diabetes, or the acquaintance who recommends bariatric
    surgeons. You, the family member who believes we will never find a partner because
    who could love a body like ours? You, the coworker who offers diet advice that’s
    never been requested. You, the friends who complain over breakfast about a friend’s
    size.</p><p>Your assumptions about fat people’s health might be wrong. Your fat
    coworker might deadlift every day after work, or be a competitive swimmer. She
    might agonize over every calorie she eats, as she’s been taught to do. Your fat
    family member might buy all of his produce at the farmer’s market, restricting
    his meals to lean proteins and local vegetables. He might be a model of <em>calories
    in, calories out.</em></p><p>Your assumptions about your fat friend’s health could
    be fundamentally wrong. But what if they’re right?</p><p>What if your fat friend
    really is sick, and has heard so much moralizing about <em>concern</em> and <em>health</em>
    that they’re afraid to tell you? What if your nightmares for the health of your
    fat loved ones are coming true for them? What if your insistence on their failings
    just reminds them of their sickness, and how no one else can understand it, much
    less forgive it?</p><p>Would you respond differently if you knew your fat friend
    were up against the immediacy of a new diagnosis, or the deep fear of a major
    surgery?Would you step into his skin, feel his swiftly beating heart and shallow
    breath, hallmarks of an insurmountable anxiety? Would you feel the way her stomach
    sunk as she realized how many people would blame her for her own demise, and how
    isolated she would truly be in such a deeply frightening situation?</p><p>In the
    face of sickness, real sickness and pain, would you still appoint yourself a grim
    reaper, or an expert sent to save your fat friend from her own body? Or would
    you find a way to love her, to care for her in an unimaginably difficult moment?</p><p>We
    don’t often ask ourselves what our response to fatness says about us, but it says
    so much about our empathy and our character. We spend so much time examining fat
    bodies in front of us that we fail to examine our response to them. We learn not
    to feel the heat and pressure that so many fat people face, and in so doing, we
    ignore our contributions to it. We can’t understand how our actions undercut our
    love for the fat people in our lives.</p><p>No, we don’t often ask those questions.
    Instead, we push away examinations of ourselves in favor of <em>health *and *concern.
    *Instead, we avoid saying *fat</em>. Instead, we defend those who hurt the people
    we love, insisting on their steamroller <em>concern</em>. Instead, we push aside
    the hard work of empathy and opt for the ease and satisfaction of judgment. Instead,
    we take comfort in thinness, believing it to be a sign of mastery and will.</p><p>Instead,
    we walk away from the bigger question: in sickness and health, who do you want
    to be?</p><p>Instead of looking at yourself, you look at me.</p>'
  :author: unknown
  :topic: health
- :url: https://elemental.medium.com/what-your-resting-heart-rate-tells-you-about-your-health-e6cf071c3d59?source=search_post
  :title: What Your Resting Heart Rate Tells You About Your Health
  :content: '<p>It could hint at how long you’ll live</p><p><img src="https://cdn-images-1.medium.com/max/4242/1*Om3m6TkNp8-ys9KLHozFsg.jpeg"
    alt="Photo: KATERYNA KON/SCIENCE PHOTO LIBRARY/Getty Images"><em>Photo: KATERYNA
    KON/SCIENCE PHOTO LIBRARY/Getty Images</em></p><p>Could human lives be extended
    by slowing down our hearts? Triggered by the observation that mammals with a higher
    heart rate live shorter than those with a slower one, this is the question that
    Dr. Herbert J. Levine, an eminent cardiologist and professor emeritus at Tufts
    University School of Medicine, asked in his 1997 <a href="https://www.ncbi.nlm.nih.gov/pubmed/9316546">article</a>
    “Rest Heart Rate and Life Expectancy.”</p><p>To this day, his question has not
    been fully answered. But several recent studies have found important links between
    slower hearts and longer lives, elevating resting heart rate to the level of an
    important health indicator.</p><p>With the increasing popularity of smartwatches
    and other tracking devices, people are more aware than ever of their own resting
    heart rates, a measure defined by the number of heartbeats per minute while at
    rest, like when you’re sitting or lying down, no sooner than two hours after exercising.
    But how exactly to interpret that number, and what to do with that information,
    might not be so clear.</p><p>To complicate things further, resting heart rates
    can widely vary from person to person, as much as 70 beats per minute, according
    to a <a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0227709">new
    study</a> that looked at the largest dataset of daily resting heart rates ever
    collected.</p><h2><strong>What is known</strong></h2><p>The most established fact
    about resting heart rate is that it’s inversely associated with a person’s level
    of physical fitness. In other words: The fitter you are, the lower your resting
    heart rate (elite athletes, for example, tend to have notoriously low heart rates).
    This happens because, as you exercise, your heart muscle becomes stronger and
    requires fewer heartbeats to pump blood.</p><p>When trying to figure out the reason
    why people with lower resting heart rates seem to live longer, researchers assumed
    that there wasn’t a direct, causal association. The main assumption among scientists
    was that people with a slower heartbeat just happened to be fitter and physical
    fitness is what made them live longer.</p><blockquote><h1>“In general, when we
    talk about resting heart rate, there is pretty good evidence that lower is better.”</h1></blockquote><p>That
    assumption was put to test by a study led by Dr. Magnus T. Jensen, head of the
    department of cardiology at the Copenhagen University Hospital Amager &amp; Hvidovre.
    His team analyzed <a href="https://heart.bmj.com/content/99/12/882.full?sid=90e3623c-1250-4b94-928c-0a8f95c5b36b">data</a>
    from almost 2,800 middle-aged men followed for 16 years in Copenhagen. “Every
    individual had had an assessment of VO2 max, which is a measure of fitness level,”
    Jensen says. That data allowed them to conclude that there was in fact a direct
    association, independent of physical fitness, between having a lower heart rate
    and a lower risk of mortality.</p><p>“In general, when we talk about resting heart
    rate, there is pretty good evidence that lower is better,” says Barry A. Franklin,
    PhD, director of preventive cardiology &amp; cardiac rehabilitation at Beaumont
    Health.</p><p>So what’s considered a “normal” range for a resting heart rate?</p><p>According
    to the American Heart Association, a normal resting heart rate ranges from <a
    href="https://www.heart.org/en/health-topics/high-blood-pressure/the-facts-about-high-blood-pressure/all-about-heart-rate-pulse">60–100
    beats per minute</a>. Most experts agree with that statement, although it is not
    an absolute consensus, particularly on the higher end. “I respectfully disagree
    with calling 95 or 100 beats per minute normal,” Franklin says, adding that this
    range might already be linked to a lower life expectancy.</p><p>This week’s comprehensive
    Scripps Research study published in <em>PLOS</em>, showed that what is considered
    “normal” for one person may be abnormal for another. Individuals’ average resting
    heart rates were found to be as low as 40 and as high as 110 beats per minute.
    The researchers took data from wearable devices worn by more than 92,000 people
    over a median of 320 days.</p><p>The study also highlighted that an individual’s
    resting heart rate is pretty much consistent over time, and so deviations from
    the typical rate could be an important sign that something is wrong. “The variability
    of the resting heart rate may provide additional information, not only for cardiovascular
    health but also for pulmonary status, infectious disease detection, reproductive
    health, and possibly more,” says Giorgio Quer, first author of the study.</p><p>One
    of the limitations of the research is that it only tracked the participant’s “normal”
    heart rate, without looking at their actual health. We do not have information
    on the health condition of the individuals, so we cannot say that “normal” also
    means healthy, says Quer.</p><h2><strong>When and how to control your resting
    heart rate</strong></h2><p>There are things you can do to slow it down to a healthier
    rate. One of the most important is exercising regularly. “Even a brisk walking
    program can lower the resting heart rate in 10–12 beats per minute,” says Franklin.</p><blockquote><h1>If
    your resting heart rate is consistently above 100 beats per minute, with or without
    symptoms, you should be evaluated by a doctor.</h1></blockquote><p>While there
    are drugs, such as beta-blockers, that can lower your resting heart rate, healthy
    people with a high resting heart rate but no actual symptoms such as shortness
    of breath or chest pain, shouldn’t take them unless advised by their health care
    provider. “We don’t know if intervening on heart rate with a drug would prolong
    these people’s lives. But we do have an astounding amount of information to prove
    that lifestyle interventions — weight loss, increasing fitness, lowering blood
    pressure — are associated with both a lower heart rate and longevity,” Jensen
    says.</p><p>If your resting heart rate is consistently above 100 beats per minute,
    with or without symptoms such as shortness of breath, chest pain, or dizziness,
    you should be evaluated by a doctor, said Dr. Matthew Martinez, chair of the American
    College of Cardiology’s sports and exercise cardiology section.</p><p>You should
    also pay attention to sudden changes. “Your heart rate will vary during a day,
    after caffeine ingestion, a stressful moment, and even from walking down the hallway,”
    says Martinez. “But rapid changes — of more than 20 beats per minute within a
    minute at rest — should be brought to the attention of a health care provider.”</p><p>Although
    having a lower heart rate is generally considered a good thing, there are a few
    exceptions, Martinez notes. If you are neither an athlete nor a regular exerciser,
    and your heart is beating under 60 beats per minute (a condition called bradycardia),
    that may be a sign of specific medical conditions such as thyroid disease or a
    problem caused by abnormalities in the electrical conduction system, especially
    if symptoms such as dizziness and lightheadedness are present.</p><h2><strong>The
    pros and cons of heart rate trackers</strong></h2><p>Experts find it positive
    that people are more familiar with their heart rates. “It means that people are
    getting more engaged in their health,” says Seth S. Martin, director of the advanced
    lipid disorders program of the Ciccarone Center, Johns Hopkins Medicine. “By being
    better informed and taking a more active role in their health, they can prevent
    downstream problems.”</p><p>Tracking your heart rate could also be useful for
    detecting certain heart rhythm disorders such as atrial fibrillation, which can
    be asymptomatic, according to Dr. Nino Isakadze, a clinical cardiology fellow
    at the Johns Hopkins Hospital. A recent study funded by Apple, the <a href="https://www.nejm.org/doi/full/10.1056/NEJMoa1901183">Apple
    Heart Study</a>, concluded that an Apple Watch app was able to identify atrial
    fibrillation with an 84% accuracy.</p><p>But it’s important not to get overly
    focused on the tracking. “There is a risk of information overload,” says Martinez.
    “I often advise patients about the anxiety that comes with that information and
    how to handle that data. It is an important indicator, but a fixation on the actual
    number is sometimes harmful too.” He advises his patients to check their resting
    heart rate no more than three or four times a week, always choosing different
    times of the day and no sooner than two hours after exercise and one hour after
    caffeine intake. Many tracking devices, such as the Apple Watch, show the average
    daily resting heart rate, which provides a more reliable picture of the speed
    of your heartbeat than checking it at any given moment of the day.</p><p>“There
    is certainly a risk that tracking heart rate can create anxiety which can sometimes
    lead to elevated heart rate and unnecessary doctor visits and testing,” said Isakadze.</p><p>Interpreting
    the data can also be challenging. “There are lots of reasons why your heart rate
    can be abnormal, either high or low. Devices can identify abnormalities, but accuracy
    and utility are still yet to be determined. Identifying all this information without
    understanding what to do with the data can be potentially harmful,” Martinez said.</p><p>Jensen
    shared an anecdote of how people could use that information productively in their
    daily lives. When he asked his Uber driver in London if he was enjoying the heart
    rate feature of his Apple Watch, the man told him he had noticed an increase in
    his beats per minute after starting his own business and going through a high
    level of stress. That made him think about his well-being and lead him to take
    a few days off.</p><p>If it is true that “God has given each of us just so many
    heartbeats,” as the late Dr. Levine was fond of <a href="https://now.tufts.edu/articles/old-school-doc">saying</a>,
    then the slower we play them out, the longer we may live.</p>'
  :author: A Supercomputer Analyzed Covid-19 — and an Interesting New Theory Has Emerged
  :topic: health
- :url: https://medium.com/@thefatshadow/on-your-concern-for-your-fat-friend-s-health-a27df6a1c855?source=search_post
  :title: On your concern for your fat friend’s health.
  :content: '<p>Art from here.</p><p>I hear the familiar hesitation in your voice
    when we speak. The sharp intake of breath, and the disappointing sigh of an unposed
    question, like the hiss of an emptying balloon. With coaxing and reassuring, you
    come out with a familiar question.</p><p><em>But what about your health? Am I
    not even supposed to care?</em></p><p>And with that, you step into a long and
    living history. It stings and disappoints, as it always does. As a fat person,
    someone is always telling me about their concern for my health, and hearing it
    from such a dear friend smarts. I need you to know about your companions — the
    friends, family, colleagues and strangers who have expressed those same concerns
    for as long as I have been fat.</p><p>I was 18 years old the first time someone
    told me I was going to die.</p><p>I had just gotten the first job that I’d been
    truly passionate about, working with poets and novelists whose writing I so admired,
    and had relied on in my adolescence. Luminaries whose work reached its warm hands
    into my ribcage, cradling everything vital and tender there, at a time that felt
    so isolating. A favorite poet was holding a reading, and I was in charge of it.</p><p>I’d
    spent months planning that first event and I couldn’t have been prouder. Dozens
    of people showed up, and everything was going according to plan. I stationed myself
    behind the food, dishing up plates for attendees and welcoming them as they made
    their way through the line. An older man, well dressed, smiled as he accepted
    the plate I handed him.</p><p>“When did you put on all that weight, sweetie?”
    he asked me. “Was it when your dad left?” I felt my face flush, and held my mouth
    stubbornly, clumsily shut. “You don’t have to die just to spite him. And you <em>are</em>
    going to die.”</p><p>My coworker stood next to me, her face a wrench of horror,
    shock, paralysis. Neither of us could muster any response, just slack faces and
    eyes welling with angry tears. We talked about it for hours afterward. <em>Did
    he just decide today was his day to be the grim reaper? Who goes around telling
    strangers they’re going to die?</em> She couldn’t shake it. Neither could I.</p><p>For
    her, that stranger was a grim and gruesome anomaly. But for me, he was more rule
    than exception. His remark, while sensational, was a familiar interruption, an
    abrupt reminder of just how insurmountable my fat body was for those around me.
    Family, friends, classmates and colleagues had long since cast me as a specter,
    frequently reminding me of my death, always couched in <em>concern</em>.</p><p>This
    was not the first time I’d been shaken by someone else’s perception of my body.
    In high school, I’d lived the life of so many fat kids before me, eventually coming
    to the hard-fought conclusion that the only solution was to retreat, weather the
    storm, and wait for high school to end. My passion had been theater, but while
    I auditioned for school plays, I was rarely cast. <em>The role was for a fiancé,
    *explained the lead in the school play. *No offense, but who’s going to fall for
    a big girl? Guys want someone who’s healthy.</em> At my next audition, the hot
    stage lights on my skin felt redundant — my body always seemed to be floodlit
    anyway. I felt like my own shadow, larger than life, unwieldy, the distorted silhouette
    of a real person.</p><p>Teachers expressed concern. One day, I’d brought a salad
    for lunch. In the cafeteria, one teacher suggested that I scrape the croutons
    off to the side. “The carbs can’t be helping,” she said, her voice high pitched
    and apologetic, her face a familiar mask of studied, sympathetic pain. I felt
    the salad turn slimy and sad in my mouth, limp greens coating my tongue. I dropped
    the remainder in the trash, and forwent lunch for the next several days.</p><p>So
    I got a part-time job, using the money to hire a personal trainer. He was fantastic:
    the kind of musclebound man I had learned to fear, but with an openness and kindness
    that consistently caught me off guard. When I first visited him, he asked me what
    my goals were. I said I wanted to stop being unhealthy. “What do you do that’s
    unhealthy?” he asked. “I’m big,” I said. He furrowed his brow, then reframed:
    “your goals could be that you want to be able to go hiking with a friend, or you
    want to run a half-marathon, or you want to be strong enough to pick up your little
    sister. It doesn’t have to be about your weight.”</p><p>I wanted to cry. He had
    seemed so nice, but he didn’t understand. He hadn’t been to the fat camp I’d been
    sent to as a child. He hadn’t seen the sidelong glances as I walked through the
    city, and the echoes of laughter I could never be sure weren’t about me. It <em>did</em>
    have to be about my weight.</p><p>I relented, remembering the work and savings
    that had gotten me there. My goal was to build endurance, so that I could run
    the mile at school without coming in last. And, over months’ worth of work, I
    achieved that goal, and I set another. And another. And another. I kept meeting
    goals, kept getting stronger and healthier. I lost a little bit of weight, but
    I was still fat. And because I was still fat, anyone at any time could decide
    to express <em>concern,</em> a reminder of just how clearly I was failing to meet
    my deepest need: having a different body.</p><p>I launched a new strategy — one
    that I used for years, well into college. I illustrated all the ways I was trying
    to lose weight: writing blog posts about all the meals I was cooking and how healthy
    they were. Opening each conversation with some anecdote that had happened at the
    gym that week.</p><p>Invariably, someone would chime in with a diet suggestion.
    <em>Have you tried *or *Did you know *or *It worked for my sister</em> or <em>Oprah
    says. *It didn’t matter what I said or did. There always seemed to be someone
    ready to offer unsolicited advice. It was a crashing, atonal symphony, discordant
    notes all insistent on their own direction. I kept searching for a melody that
    never came. When I would ask, once in a great while, for a moment of silence,
    I’d see that mask again — the grimace that everyone learns to use with fat people
    — *I’m just concerned for your health.</em></p><p>I had played a game I couldn’t
    win — as long as I was fat, I would always be seen as unhealthy. All of the trying,
    all of the successes, all of the little affirmations and crushing defeats — the
    only part of me that could be seen was the failure. In a fat body, I would always
    be worthy of blame.</p><p>And so, again, I withdrew. I stopped going shopping
    with friends to save myself from the countless sidelong glances from salespeople
    in a straight size store. I stopped going out. I stopped dating, or even talking
    about crushes.</p><p>All of these things, I learned, were for the thin. Dating,
    travel, love, sex, achievement and happiness weren’t for me. They were, the world
    insisted, rewards for the willpower I had, but which my body stubbornly refused
    to manifest. I kept exercising, kept trying new approaches to eating — tallying
    calories and carbs and points. None of them delivered the promised body, the beauty
    standard that was supposed to be so readily won with some effort. My life could
    only begin when I obtained the body that wouldn’t come.</p><p>All the while, family,
    friends, colleagues, classmates and perfect strangers returned to that furrowed
    brow and sing-song voice of concern, giving gift certificates for gyms, ordering
    for me at restaurants, sharing before &amp; after pictures of bariatric surgeries.
    <em>I just want you to be healthy.</em></p><p>The metrics of my health were strong
    — blood pressure fine, cholesterol normal, blood tests clean — but no one ever
    asked about that. The one measure that could be trusted — the shape of my skin
    — answered those unposed questions, and any claims I might make to the contrary
    were suspect at best. My friends and family metamorphosed when we talked about
    my fat body. All of their trust and love transformed into irritation, anger, and
    patronizing concern. Our rapport fell away. I could be trusted with their highs
    and lows, their professional successes and their relationship problems, but not,
    it seemed, with my experience of my own body.</p><p>There was no illustration
    of effort, no gesture sufficient, no health record convincing enough to stop the
    constant remarks and suggestions. Because most of us learn a script to recite
    when we see bodies like mine. <em>I just want you to be happy. I’m concerned about
    your health. It’s probably sugar. It’s probably carbs. It’s probably your workout.
    It’s probably you.</em></p><p>Over time, I’ve come to understand why. Nearly every
    conversation about fatness is a conversation about weight loss — one that considers
    all of us part of the same precarious circumstance. According to those anxiety-soaked
    conversations, we’re all perpetually teetering on the edge of becoming fat. Keeping
    fat at bay is like a foreign threat that’s turned internal, a Red Scare in our
    own bodies. One false move, one indulgent meal, one day without vigilant terror
    could lead any one of us to become fat.</p><p>And <em>fat *means more than just
    the size or shape of your body. In those panic-driven conversations, *fat</em>
    means you’re not trying. It means you’re not loved, because <em>fat *isn’t lovable.
    *Fat *means you’re not strong, not moral, not smart enough to stay alert to the
    threat of *fat. Fat</em> means you’ve failed.</p><p>When others see my body, it
    reminds them of all of that. I’m a manifestation of that cultural nightmare, the
    worst case scenario for their bodies to become. *If you see something, say something.
    *And when others see me, they do. Because if they’re explaining diet advice and
    mortality rates to a fat person, no one could mistake them for one.</p><p>People
    will say things to fat people that are heartless, thoughtless. They would not
    say them to anyone else, and they are not saying them to anyone else. Every warning
    shot we fire about fatness is aimed at ourselves. It is always a flagellation,
    a punishment for perceived failings, past or future, real or feared.</p><p>In
    that way, <em>concern</em> hurts all of us. For those who aren’t fat, it continues
    to feed that anxiety around becoming fat, the unthinkable possibility that always
    surrounds them. And it hurts our relationships. All of a sudden, all of our familiarity,
    friendliness and warmth fell away, replaced by prescriptive, cold and sometimes
    condescending exchanges.</p><p>It hurts me as a fat person because of the message
    it sends. Well-intentioned advice, day after day, week after week, year after
    year, shows me that I am seen first — and sometimes only — as a fat person. It
    is a tidal wave of reminders that I am, despite everything else, failing the one
    measure that matters. No matter how hard I try, how much money I spend or how
    many calories I ration, no matter how strong my mettle, it doesn’t matter. It
    can’t be seen. I don’t have the luxury of an uninterrupted day. Every day someone
    finds a way to show judgment, disdain or concern for the maligned vessel that
    carries me through the world.</p><p>Fat people learn quickly and deeply that our
    bodies are not our own. They are public property, to be commented on, judged,
    prodded, rejected. Others are always entitled to our bodies, and they are never
    our own.</p><p>As an adult, I have eked out practices to reclaim my body, just
    for a moment. I call myself fat. I make jokes about the way I’m perceived. I wear
    bright colors and fitted clothing. I have found my own peace of mind; set aside
    that long line of comments to right an eternally haunted relationship to dieting
    and food; exercised because it makes me happy and makes me feel good. All of that
    amongst those grimacing masks of concern, a Greek chorus foretelling my tragic
    death. <em>Was it when your dad left? You are going to die.</em></p><p>You asked
    if you should care about my health. Of course you should. I would want you to
    care if I fell ill, or if I were struggling with a health condition. But I’m not.
    And looking at me won’t tell you how strong I’ve become, the contents of my doctor’s
    files, the oceans of blood that my sturdy heart pumps through me. My dress size
    isn’t my medical chart. My body — all of our bodies — are too complex and wonderful
    to be reduced to that.</p><p>I am still fat. I live in the body that I have. I
    take care of it, and it reciprocates. I take small measures to tend to my own
    health and take the reins of my own happiness. The Greek chorus is still there,
    repeating <em>glorifying obesity *and *glamorizing an unhealthy lifestyle.</em></p><p>What
    I need from you, dear friend, is to buck that trend. In my life as a fat girl,
    now a fat woman, I have heard every form of concern, prescriptive, tough love
    and lecture. I have become an reluctant expert in weight loss techniques, some
    learned in desperation, others learned by force. I promise, I know.</p><p>What
    I need from you is your friendship. I know what that looks like; what it feels
    like. It is not pitying, not lecturing, not repeating refrains or insisting on
    approaches that I have asked you to abandon. Your friendship is a warm and glowing
    thing, living and responsive, reciprocal and heartfelt. It is not sing-song concern,
    not a stale script with a wooden delivery.</p><p>What I need from you is a respite
    from that relentless chorus. Take off your mask, put down your script. Sit with
    me, friend to friend, eye to eye. Let’s talk.</p><blockquote><h1>Like this piece?
    There are <a href="https://medium.com/@thefatshadow">more like it</a>, including
    <a href="https://medium.com/@thefatshadow/a-request-from-your-fat-friend-what-i-need-when-we-talk-about-bodies-2442b5a8b06d#.oe5uhfohi">A
    request from your fat friend: what I need when we talk about bodies</a> and <a
    href="https://medium.com/@thefatshadow/what-it-s-like-to-be-that-fat-person-sitting-next-to-you-on-the-plane-85006e263778#.f7s4bexmt">What
    it’s like to be that fat person sitting next to you on the plane</a>.</h1></blockquote>'
  :author: Your Fat Friend
  :topic: health
- :url: https://medium.com/@andrewng/woebot-ai-for-mental-health-d0e8632b82ba?source=search_post
  :title: 'Woebot: AI for mental health'
  :content: "<p>Dear friends,</p><p>I’m thrilled to announce I am joining <a href=\"http://woebot.io\">Woebot’s</a>
    board of directors as its Chairman. I will be assisting its CEO, Alison Darcy,
    and the company in its mission to build a chatbot that will help the millions
    of people who struggle with their mental health.</p><p><img src=\"https://cdn-images-1.medium.com/max/4032/1*MqXx8S3jujzuOqu3afsSKw.jpeg\"
    alt=\"With the Woebot team in their San Francisco office\"><em>With the Woebot
    team in their San Francisco office</em></p><p><strong>Mental health care is in
    crisis</strong></p><p>Depression is the<a href=\"http://www.who.int/mediacentre/factsheets/fs369/en/\">
    leading global cause of disability</a>. You probably have friends with depression
    that don’t talk about it. It is stigmatized, which only deepens their anguish.
    On US university campuses, about 50% of students report anxiety or depression
    so severe that they can’t function.</p><p>Apart from the human cost, mental health
    also imposes a huge economic burden. Heart disease costs the US healthcare system
    $147B annually;<a href=\"http://content.healthaffairs.org/content/early/2016/05/13/hlthaff.2015.1659.abstract\">
    mental health costs even more</a>: over $200B.</p><p>Finally, there is a global
    shortage of mental health professionals. Even if you seek help, you might wait
    weeks to see someone.</p><p><strong>Woebot: A chatbot mental health coach</strong></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2400/1*Wh73a26btSAxznUBmRNW4w.png\"
    alt=\"\"></p><p>While a software chatbot will never replace a human therapist,
    Woebot makes it possible to inexpensively deliver counseling to millions. Woebot
    delivers a mood management program based on Cognitive Behavior Therapy (CBT).
    A Stanford University<a href=\"https://mental.jmir.org/2017/2/e19/\"> randomized
    controlled trial</a> showed that Woebot reduced symptoms of depression and anxiety
    in 2 weeks.</p><p>Despite the hype about chatbots, there’ve been few breakaway
    successes. But I think mental health may be “the” killer app for chatbots:</p><ul><li><p>If
    you are feeling depressed at 2am, you may not want to wake up your therapist.
    But a chatbot is there for you 24/7 and is thrilled to talk to you whenever you
    need a friendly ear.</p></li><li><p>Woebot is just a piece of software. It’s okay
    to let him see you on your worst day — it will never judge you.</p></li><li><p>Woebot
    has already had conversations with more users than a typical therapist will in
    an entire career. While these conversations are more basic, as it learns from
    these interactions, it will only get better.</p></li></ul><p><strong>The AI and
    NLP challenge ahead</strong></p><p>Chatbots represent a grand challenge for AI
    and NLP (natural language processing). When a user laments, “I’m surrounded by
    people but feel invisible to them all”, how should Woebot respond? If a user says
    “I’m trying not to use”, can Woebot recognize what this means? What if the user
    says “\U0001F633”?</p><p><img src=\"https://cdn-images-1.medium.com/max/8064/1*0ca4L5Y7GZCQXSISxHR7_w.jpeg\"
    alt=\"Working with Alison Darcy (left) and Pamela Fox (right).\"><em>Working with
    Alison Darcy (left) and Pamela Fox (right).</em></p><p>AI is the new electricity:
    even with its current limitations, it is already transforming multiple industries.
    The transformation of mental health care will help millions of people who struggle
    with their mental health, sometimes through literal life and death decisions.</p><p>Woebot
    already has fantastic engineering and clinical teams. I’m excited to work with
    the company to continue building up its NLP team as well as its AI abilities.
    Just as MOOCs are making high-quality education globally accessible, Woebot will
    make high-quality mental health coaching globally accessible.</p>"
  :author: Andrew Ng
  :topic: health
- :url: https://medium.com/@garyvee/how-i-finally-got-serious-about-my-health-6e413213f84a?source=search_post
  :title: How I Finally Got Serious About My Health
  :content: '<p>It’s About Religion, Not Tactics</p><p><img src="https://cdn-images-1.medium.com/max/2800/1*t8GiZryj4q6Tf4dc37DoMQ.png"
    alt=""></p><p>In June of last year, I wasn’t paying any attention to my health.
    At all.</p><p>I was working eighteen hour days, taking every meeting I could,
    running an agency, investing, and spending time with my family. But I wasn’t making
    any time for my health. It wasn’t a priority.</p><p>And this baffled me. I couldn’t
    understand why I attacked every other thing in my life with such vigor, but not
    this. Why not my health?</p><p>The more I thought about it, the more I realized
    something when it comes to our well-being. <strong>With health and wellness, you’re
    either accountable…or you’re not</strong>. And in every other part of my life
    at that time, I felt accountable.</p><p>The things I am best at are things where
    I am accountable to someone else.</p><p>The sense of responsibility, for example,
    that I have for my businesses, for the 550 people of my agency <a href="http://www.vaynermedia.com/">VaynerMedia</a>,
    is greater than my own well-being. My sense of accountability comes from the fact
    that I feel that I owe it to them.</p><p>I tried to do the same thing with my
    health. “What’s the matter with me?” was something I thought a lot back then.
    If I don’t fix this, I’m going to die. <strong>I’m going to lose.</strong></p><p>All
    the terrible things that could happen were by-products of the process I was living.
    As a practitioner, I needed to find accountability in the trenches of that world.
    I was accountable to my employees in business. I needed to find someone who could
    hold me to those standards in health as well. I needed the same drive that I had
    in business.</p><p>So, what happened? How did I make the switch?</p><p>I introduced
    a person to hold me accountable. I hired a full time trainer. <a href="http://www.ontheregimen.com/">Mike</a>.
    The reason I work out every day is because I don’t want to let Mike down. I have
    to be ready to go at 5:45am because Mike will be upset if I’m not.</p><p>I hacked
    away at what made me tick till I discovered, within myself, what would force me
    to get healthy.</p><p>So that worked for me. I succeeded at finding a way for
    myself to make it work.</p><p>But so often these narratives can be frustrating
    because they leave us with tactics and hacks and ideas…and that’s it. And you’ve
    probably read a bunch of articles on the best stretches, the best fifteen minute
    workouts, the best smoothies.</p><p>The thing is, there is something we aren’t
    addressing enough in this space.</p><p>Here is the real lesson in my narrative
    that applies to everyone: <strong>it’s all about religion, not tactics</strong>.</p><p>It’s
    not about P90X, or CrossFit, or a juice cleanse. It’s about an enormous mental
    shift. It’s about believing in what you do.</p><p>That’s what happened to me.
    Before I even decided what kind of routine I was going to get myself into, I took
    a big step back and self-evaluated. I asked myself questions and tried to become
    as self-aware as possible. I realized my whole accountability thing. I made a
    switch. I refocused.</p><p>The tactic was accountability. But it became a religion
    over the first sixteen months, when I changed my entire thinking.</p><p>I figured
    out exactly what I needed by being brutally honest with myself: I needed someone
    to babysit me. Now all I ask is that you’re equally honest with yourself when
    you answer: What will it really take for you to make the change?</p><p>For some,
    money still may be the bottleneck. To that I say this: Nothing is more important
    than your health. So before you buy that next 42-inch TV, go on an extra vacation,
    or buy season tickets to your favorite sports team, it might be worth taking a
    step back and seeing how you can make a strong financial commitment to your health.
    I am the extreme. It’s not practical for everybody to go out and hire a personal
    trainer, but gym memberships are becoming more affordable, fresh produce is attainable,
    and YouTube has hundreds of free workouts.</p><p>Starting now could mean 20 extra
    years of doing what you love. Isn’t that reason enough? Definitely was for me.</p><p><em>Would
    love to hear your thoughts on all of this. Leave a response below, or shoot me
    a message.</em></p>'
  :author: Gary Vaynerchuk
  :topic: health
- :url: https://medium.com/@gidmk/organic-food-isnt-better-for-your-health-93a35584639d?source=search_post
  :title: Organic Food Isn’t Better For Your Health
  :content: '<p>Environmentally friendly? Maybe. Healthy? Probably not</p><p><img
    src="https://cdn-images-1.medium.com/max/9578/1*fP0voN8faA8-UpbA5Ci-ug.jpeg" alt="Pictured:
    Stock “Organic Food” photo. Apparently, if it comes in a basket, it’s organic"><em>Pictured:
    Stock “Organic Food” photo. Apparently, if it comes in a basket, it’s organic</em></p><p>An
    ongoing argument that I’ve had with almost every “clean eater” that I’ve ever
    met is about organic food. Virtually every person who tries to eat healthy, at
    one point or another, decides to go organic. It’s better for the environment,
    and getting rid of all those nasty chemicals *has *to be good for your health.</p><p>Right?</p><p><img
    src="https://cdn-images-1.medium.com/max/3840/1*dajQhWJTjhqvErOiMkUBkw.jpeg" alt="Pictured:
    Average farm worker, probably"><em>Pictured: Average farm worker, probably</em></p><p>You
    see this everywhere. The first thing that every paleo proponent will earnestly
    tell you is that conventional farming causes everything from <a href="http://paleo.com.au/clean-15-dirty-dozen-updated-list/">cancer
    to autoimmune disease</a>, and pretty much everything in between. A quick glance
    online shows you people demonizing GMOs and pesticides left right and centre,
    with organics apparently the only safe choice in a sea of disease-causing nasties.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*tcWZKJ0Fasli3K0UpPb5SA.png" alt="Pictured:
    Wrong"><em>Pictured: Wrong</em></p><p>But alarmist fearmongering about nasty chemicals
    is all the rage, and despite these claims we all seem to be getting <a href="http://www.who.int/gho/mortality_burden_disease/life_tables/en/">stubbornly
    healthier</a> every year.</p><p>So what does the evidence say about organic food?</p><h3>What
    Is Organic?</h3><p>The first thing to iron out is what organic food actually is.
    This is not such an easy question to answer, surprisingly. Not only does it differ
    from country to country, but the regulation and monitoring of organics can be
    <a href="http://www.abc.net.au/news/2017-04-19/greenwashing-fears-prompts-push-for-tough-organic-labelling-laws/8450452">so
    bad</a> that in some places it’s hard to see any difference between conventional
    farming and organics at all.</p><p>However, a pretty useful definition can be
    found on the website “<a href="http://www.healthy-holistic-living.com/definition-of-organic-food.html">Healthy
    Holistic Living</a>”, because it provides a window into the complete nonsense
    that makes up the health claims for organic foods:</p><blockquote><p>“ Organic
    foods are produced according to certain production standards. For crops, it means
    they were grown without the use of conventional pesticides, artificial fertilizers,
    human waste, or sewage sludge and that they were processed without ionizing radiation
    or food additives. For animals, it means they were reared without the routine
    use of antibiotics and without the use of growth hormones. In most countries,
    organic produce must not be genetically modified”</p></blockquote><p>Basically,
    the idea is that organic food should be farmed like we did in medieval times:
    no ‘artificial’ chemicals, no raw sewage, and animals that are at constant risk
    of nasty infection and death.</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*IuxhJ-oBoodlD4XWn7IHrw.jpeg"
    alt="Pictured: Organic. Yum!"><em>Pictured: Organic. Yum!</em></p><p>There are
    obvious issues with this. No farmer puts raw sewage on their crops, because that
    kills them. Banning artificial fertilizers and conventional pesticides means that
    actually you can use fertilizers and pesticides as long as they are natural and/or
    unconventional. Processing using ionizing radiation is both a) <a href="https://en.wikipedia.org/wiki/Food_irradiation">safe</a>
    and b) kills nasty things like viruses and bacteria <a href="https://en.wikipedia.org/wiki/Food_irradiation">in
    your food</a>.</p><p>I could go on. Actually, I will.</p><p>Genetic modification
    is neither a problem for human health nor actually forbidden in organic farming:
    the only thing that’s forbidden is genetic modification *in a lab. *Humans have
    been genetically modifying food for centuries through a practice known as hybridization,
    which is basically breeding plants to have the desired qualities. It’s how we
    eliminated seeds from the banana, for example.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*Ao94MKThAliwMHKVlR-n5A.jpeg"
    alt="Wheat was one of the first hybridized grain crops, increasing yields by [hundreds
    of times](http://www.nma.gov.au/online_features/defining_moments/featured/federation-wheat)"><em>Wheat
    was one of the first hybridized grain crops, increasing yields by <a href="http://www.nma.gov.au/online_features/defining_moments/featured/federation-wheat">hundreds
    of times</a></em></p><p>Overall, it sounds as if the major factors of organic
    farming — pesticide use, non-GMO etc — might not have the health impact that so
    many people say organics provide.</p><h3>The Evidence</h3><p>Whether organics
    are good for your health has been the subject of a lot of research. From tiny
    studies looking at animals and cells in a lab, to large, well-controlled human
    interventional studies, we’ve looked into the question quite a bit.</p><p>There
    have been a number of systematic reviews looking at the potential health benefits
    of organics. Systematic reviews are studies where scientists look at the entire
    body of literature, searching through hundreds of thousands of studies, to see
    what the evidence for and against a position is.</p><p>And if we look at the systematic
    reviews on organic food, we find the same answer time and again: organic food
    offers <a href="http://ajcn.nutrition.org/content/92/1/203.short">no</a> <a href="http://imsear.li.mahidol.ac.th/bitstream/123456789/135469/1/ijmr2010v131n4p478.pdf">health</a>
    <a href="http://ajcn.nutrition.org/content/90/3/680.short">benefits</a> <a href="http://annals.org/aim/article-abstract/1355685/organic-foods-safer-healthier-than-conventional-alternatives-systematic-review">whatsoever</a>
    when compared to conventionally-farmed food.</p><p>None.</p><p>Organic food is
    no healthier for you than anything else.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*GMQe863f32rdOOr1wiwGJg.jpeg"
    alt="Remember, if it doesn’t come in a basket it’s probably not really organic
    anyway"><em>Remember, if it doesn’t come in a basket it’s probably not really
    organic anyway</em></p><p>This is no surprise. As I mentioned, the things organic
    food protects against may sound terrifying, but actually turn out not to be bad
    for you at all. Yes, pesticides can be dangerous if you chug down bottles of them,
    but the amount you get in the average tomato is in the order of *nanograms. *For
    reference, you have more formaldehyde in your body right now than pesticides.</p><p>Not
    so scary after all when you look at it that way, is it?</p><h3>Bottom Line</h3><p>Organic
    food is popular for a number of reasons. There’s certainly evidence that it is
    <a href="https://theconversation.com/organic-farming-matters-just-not-in-the-way-you-think-74124">better
    for the environment</a> than conventional options, and if you want to spend a
    little extra to make an impact protecting biodiversity then I say good for you.</p><p>But
    the fear of conventional farming is simply irrational. There is good evidence
    that pesticides in the amounts that you’ll find in most supermarket food has <a
    href="http://www.mdpi.com/1660-4601/8/5/1402/htm">no impact on human health whatsoever</a>.
    Conventional farming has revolutionized the world by allowing easy access to fresh
    food all year round — if anything, conventional farming has been responsible for
    saving many millions of lives worldwide.</p><p>The promotion of organic food is
    yet another example of the naturalistic fallacy: that things are healthy because
    they are natural. This is boring nonsense, as anyone who has been bitten by a
    natural viper or had natural tapeworms could tell you. Organic food is just another
    way for con artists to sell health because people are afraid of what they don’t
    understand.</p><p>Ultimately, there is one good reason to eat organic: the environment.</p><p>That’s
    it.</p><p>The evidence shows that organics are no better for your health at all.</p><p><em>If
    you enjoyed, follow me on <a href="https://medium.com/@gidmk">Medium</a>, <a href="https://twitter.com/GidMK">Twitter</a>
    or <a href="https://www.facebook.com/gidmkhealthnerd/">Facebook</a>!</em></p>'
  :author: Gideon M-K; Health Nerd
  :topic: health
- :url: https://medium.com/better-humans/the-50-30-10-10-rule-for-how-to-wake-up-earlier-and-work-on-your-dream-66d63b34554d?source=search_post---------0
  :title: The 50/30/10/10 Rule for How to Wake Up Earlier and Work on Your Dream
  :content: '<p>The 50/30/10/10 Rule for How to Wake Up Earlier and Work on Your Dream</p><p>I
    am not a morning person whatsoever.</p><p>Late last year, I began waking up at
    5:30 AM to write for an hour then drive to work at an engineering firm. It was
    the hardest fucking thing I had done in a long time. But I did it.</p><p>And you
    know what?</p><blockquote><p>I bet you could too.</p></blockquote><p>Imagine how
    much better your day would be if you accomplished your hardest, most important
    work first thing in the morning. The rest of your day would be a breeze. You could
    relax in the evening without feeling like a bum or stressing because you let another
    day slip by without doing what you planned.</p><p>My story of waking up early
    consists of a 50/30/10/10 split of determination, preparation, execution, and
    luck.</p><p>Let me explain…</p><h2><strong>The 50% Determination</strong></h2><p>For
    most of the population, 5:30 AM is not a normal time to be awake. There’s no switch
    you can flip to make yourself consistently wake up that early, especially if doing
    it for your own reasons (i.e. not doing it to avoid being fired).</p><p>Basically,
    it’s going to take some effort.</p><p>It sounds extremely cheesy, but if you want
    to wake up earlier, you’ve got to <strong><em>really want it.</em></strong></p><p>Several
    years ago, I tried waking up earlier to write for my blog before work. I did it
    once and it felt amazing — then I never did it again.</p><blockquote><p>I didn’t
    want it bad enough.</p></blockquote><p>It’s hard to wake up early when you have
    a 7 to 5 PM day job in engineering. It’s much easier to skip writing, go to work,
    consider the day a success, and not work on your own dreams.</p><p>At some point,
    you’ve got to become obsessed with whatever your dream is. For me, that was writing.</p><p>Currently,
    I wake up at 5:30 AM every weekday morning (I give myself an extra hour or two
    to rest on the weekends). I write, then head to work. This article is a product
    of my early rising habit.</p><p>What changed?</p><blockquote><p>I realized I wanted
    to be a writer.</p></blockquote><p>I was no longer satisfied being some mook trying
    to make money online and half-assing it.</p><p>I love engineering, but I don’t
    want to do it forever. I want to be a writer. I still suck at writing, but I want
    to get better. I need to get better. <strong>I’m obsessed with getting better.</strong></p><p>I
    knew if I wanted to be a better writer and change my life, I had to make it a
    priority. That became my determination for waking up earlier.</p><p>If I didn’t
    wake up earlier, I couldn’t write.</p><p>If I couldn’t write, I wasn’t a writer.</p><p>If
    I wasn’t a writer, I wasn’t chasing my dream.</p><p>Until you get to this obsession,
    until you have this revelation, you’ll keep convincing yourself waking up early
    isn’t worth it. You’ll press the snooze and stay in bed.</p><p>How bad do you
    want it? That’s what comes first.</p><h2><strong>The 30% Preparation</strong></h2><p>Determination
    alone brought me about halfway to waking up early consistently. The rest was preparation,
    execution, and luck.</p><p>There were precisely five things I started doing that
    helped prepare me for waking up early.</p><h3><strong>1. Going to bed earlier</strong></h3><p>Most
    people function best on a set amount of sleep. For some lucky few, that’s 6 hours.
    I tend to function better on at least 7–8 hours. I’m guessing maybe you do, too.</p><p>I
    realized that if I planned to wake up 2 hours earlier than normal, and I normally
    sleep 8 hours, I better get to bed 2 hours earlier to keep the status quo and
    my body functioning properly.</p><h3><strong>2. “Winding down” before bed</strong></h3><p>It’s
    hard to convince your body it’s time to fall asleep if you’re operating full throttle
    until you hit the sack. I created a wind-down routine for myself that lets my
    body know it’s time to start preparing for sleep.</p><p>About an hour before bed,
    I stop using any tech devices. On the rare occasion I break my routine, I always
    make sure to dim my phone or laptop screen.</p><p>Then, I’ll make myself a hot
    cup of tea, meditate for about 10 minutes, and get into bed.</p><p>Once there,
    I’ll read from a dimly lit Kindle until I reach a good stopping place or my eyes
    can’t keep themselves open.</p><p>At this point, it’s night-night for Jason.</p><h3><strong>3.
    Planning my morning the day before</strong></h3><p>When I first tried waking up
    early, I’d find myself procrastinating — checking social media and fumbling to
    do something useful. This led to many unsuccessful attempts at waking up early.</p><p>Planning
    my mornings the day before, so that I knew exactly what to work on, helped tremendously.
    I get right to work and don’t waste any time or energy.</p><p>Operating this way,
    my mornings feel like a success, and I want to keep waking up early.</p><h3><strong>4.
    No more drinking caffeine after 2pm</strong></h3><p>This is a rule I implemented
    for myself after reading about <a href="https://www.psychologytoday.com/blog/sleep-newzzz/201312/new-details-caffeine-s-sleep-disrupting-effects">the
    effects of caffeine on sleep.</a> I’m sure this is slightly different for everybody,
    but it works for me.</p><h3><strong>5. Exercising during the day</strong></h3><p>It’s
    proven that <a href="https://sleep.org/articles/exercise-affects-sleep/">those
    who exercise sleep better</a> on a consistent basis. I always try to tire myself
    out with a good workout at some point in the day. Add in all the other stuff above,
    and when it’s time for bed, I have no troubles conking out.</p><p>I’m not saying
    you must do these five things if you want to wake up early, but they helped me
    significantly. At the very least, some sort of plan for waking up early is essential.
    Incorporate some of my preparation ideas above along with your own.</p><h2><strong>The
    10% Execution</strong></h2><p>Now, when the time comes to finally wake up, most
    of the work has already been done for me. The execution piece is straight-forward.
    Here’s how mine looks:</p><p>I set an alarm the night before and say to myself…</p><blockquote><p>“I
    have to get up at five-thirty tomorrow to write.”</p></blockquote><p>Don’t skip
    this step. It might seem silly, but trust me, the mental pep-talk helps.</p><p>Then,
    in the morning upon hearing my alarm, I get up and immediately leave the bedroom.
    No snoozing for this guy. From the moment I reach for my alarm, I keep myself
    in motion and roll out of bed.</p><p>*<em>Don’t *</em>lay in bed checking social
    media, email, or whatever. Just get up and leave the bed.</p><p>*<em>Do *</em>give
    yourself something to look forward to after waking up. For me, that’s a hot cup
    of coffee before getting down to business.</p><p>*<em>Try *</em>setting your alarm
    across the room if you struggle with snoozing. I used to do this but don’t anymore.
    For some strange reason, it actually didn’t work for me, though I’ve heard others
    who do it with success. I found it to be a fun game running to the alarm and seeing
    how fast I could dive back into bed. My brain is weird sometimes.</p><h2><strong>The
    10% Luck</strong></h2><p>As much as I’d like to contribute my success entirely
    to my own actions, I’d be lying.</p><p>About a month after consistently waking
    up early, I felt a dip in motivation. Not everything was going my way:</p><p>I
    was working longer hours at my day job.</p><p>I bought and moved into a new home.</p><p>Things
    were hectic.</p><p>Things were stressful.</p><p>I wanted to sleep in.</p><p>For
    most, these would be viable excuses to give up. However, my (ex-)wife and I had
    just adopted a new puppy. I’ll be damned if that little guy didn’t help me through
    my short slump to stay on habit.</p><p>Every morning without fail, our new puppy,
    Mose, would wake up between 4:30 AM and 5:30 AM having to relieve himself. Not
    wanting the dog to think it was OK to shit on the carpet, I made sure to wake
    up and let him outside. Once I was up, I figured I might as well continue with
    my writing habit.</p><p>Sometimes, a little bit of luck goes a long way.</p><p>Though,
    maybe luck isn’t the right way to phrase this. Maybe “accountability” would be
    better.</p><p>Having a partner to keep you accountable can make a world of difference.
    For me, that happened to be Mose.</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*IClgqmm_s-gG-4aEdvMvSQ.jpeg"
    alt="Hard to hate a face like that."><em>Hard to hate a face like that.</em></p><p>Even
    the obsessed and highly disciplined can fall victim to the perfect storm of life’s
    problems. Prepare for this by having a back-up: an accountability partner to carry
    you through those tough times.</p><p>Create your own luck, so-to-speak.</p><p>And
    now, it’s bedtime for this guy. How about you? See you tomorrow bright and early.</p>'
  :author: Better Humans
  :topic: work
- :url: https://medium.com/better-humans/how-to-set-up-your-iphone-for-productivity-focus-and-your-own-longevity-bb27a68cc3d8?source=search_post---------1
  :title: How to Configure Your iPhone to Work for You, Not Against You
  :content: '<p>How to Configure Your iPhone to Work for You, Not Against You</p><h3>The
    Very, Very Complete Guide to Productivity, Focus, and Your Own Longevity</h3><p>The
    iPhone could be an incredible tool, but most people use their phone as a life-shortening
    distraction device.</p><p>However, if you take the time to follow the steps in
    this article you will be more productive, more focused, and — I’m not joking at
    all — live longer.</p><p>Practically every iPhone setup decision has tradeoffs.
    I will give you optimal defaults and then trust you to make an adult decision
    about whether that default is right for you.</p><p>In addition, because this is
    a long post, I’ve written it in a way to make it easier to skim. Here’s how to
    read the post:</p><ol><li><p>Level 1 — Casual. Read the headlines — figure out
    the details yourself. Most of this isn’t rocket science.</p></li><li><p>Level
    2 — Tutorial. Read the steps underneath the headline. I’ve spelled out every step
    so that you can <a href="https://betterhumans.coach.me/superhuman-cognitive-stamina-9c8cab847d9e">save
    your brain power</a> for something else.</p></li><li><p>Level 3 — Productivity
    Nerd. Below the tutorial steps, I’ve included discussion of the behavior design
    implications. This is for true productivity nerds, i.e. the readers of <a href="http://betterhumans.coach.me">Better
    Humans</a>.</p></li></ol><p>As a bonus, because I know you got excited when you
    saw this was a seventy minute read, I’ve gone all out on getting pedantic about
    productivity and even included three appendixes to give an overview of the behavior
    design principles, to break out the potential financial budget for implementing
    this advice, and then a real-world example from my own phone.</p><p>Also, for
    convenience, here is a clickable table of contents. (The links below work if you’re
    reading in a browser, but not if you’re reading in the app.)</p><pre><code>**Optimize
    First for Single Tasking**#1. [Turn OFF (almost) all notifications](#7a27)#2.
    [Hide social media slot machines](#81d4)#3. [Hide messaging slot machines](#1448)#4.
    [Disable app review requests](#d4a3)#5. [Turn on Do Not Disturb](#b1ad)#6. [Be
    strategic about your wallpaper](#25ea)#7. [Turn off Raise to Wake](#791e)#8. [Add
    the Screen Time widget](#692c)#9. [Add Content Restrictions](#73f0)#10. [(Optional)
    Use Restrictions to turn off Safari](#35ba)#11. [Organize your Apps and Folders
    alphabetically](#c41e)**Switch to Google Cloud to Work Faster**#12. [Choose GMail](#6ab1)#13.
    [Choose Google Calendar](#0041)#14. [Replace Apple Maps with Google Maps](#2735)#15.
    [Install the GBoard keyboard for faster typing](#3666)#16. [Switch to Google Photos](#3fcf)**Install
    These Apps for Productivity**#17. [Use Evernote for all note taking, to-do lists,
    everything](#9c72)#18. [The Case for Calm as your go-to meditation app](#e103)#19.
    [Install the right goal tracker for you](#fe86)#20. [Store all your passwords
    in a password manager, probably LastPass](#4474)#21. [Use Numerical as your default
    calculator](#0d96)#22. [Put the Camera app in your toolbar](#b924)#23. [Use this
    Doppler Radar app](#c248)#24. [Use this Pomodoro app](#cf71)#25. [Use Brain.fm
    for background noise](#88ef)**Use These Apps and Configurations for Deep Learning**#26.
    [Subscribe to these podcasts](#d94e)#27. [Install the Kindle app but never read
    it in bed](#8193)#28. [Use Safari this way](#e1aa)#29. [Organize your home screen
    for deep learning over shallow learning](#d59c)**Use These Apps and Configurations
    for Longevity**#30. [Track steps this way](#2af1)#31. [Prefer Time Restricted
    Eating Over Calorie Counting](#947a)#32. [Schedule Night Shift](#3629)#33. [Set
    up Medical ID](#b582)**Make The Finishing Touches with These Configurations**#34.
    [Change Siri to a man](#c11d)#35. [Change your phone’s name](#9d26)#36. [Turn
    off advertising tracking](#534c)#37. [Set auto-lock to the maximum time](#52cf)#38.
    [Set your personal hotspot password to a random three word phrase](#e63a)#39.
    [Turn on control center everywhere](#2dc6)#40. [Turn on Background App Refresh](#19a0)#41.
    [Delete Garage Band](#2377)#42. [Develop verbal memory for talking to Siri](#9489)#43.
    [Set up these text replacement shortcuts](#f6bb)#44. [Set your address](#4936)#45.
    [Backup this way](#078c)[**Appendix A: Principles](#9076)**[**Appendix B: Budget
    &amp; Costs](#1ffb)**[**Appendix C: Case Study](#3c8e)**[**Appendix D: Updates](#88ab)**</code></pre><h2>#1.
    Turn OFF (almost) all notifications</h2><p>Open the Apple Settings App, then go
    to the Notifications Section. You’re going to need to get good at opening the
    Settings app, so learn to find this icon:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*j4Dp85Nw8fhfY0S07e3Guw.png"
    alt=""></p><p>Go app by app, turning off all notifications.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*1VA6GSvzS1_cw5wJowTFJA.png"
    alt="No badges, almost all notifications off. See below for exceptions."><em>No
    badges, almost all notifications off. See below for exceptions.</em></p><p>By
    the end, the vast majority of your apps should have a notifications setting that
    looks like this, i.e with no notifications:</p><p><img src="https://cdn-images-1.medium.com/max/2236/1*PxSyw_f0NmOoCVL2vCsVxA.png"
    alt="Please, please, please: No notifications is best, but at least turn badges
    off."><em>Please, please, please: No notifications is best, but at least turn
    badges off.</em></p><p>There are only a very few reasons to leave notifications
    on for a particular app. Here are those reasons:</p><ul><li><p><strong>For all
    delivery apps</strong>, leave notifications on. These notifications are supposed
    to only come when you want them to, i.e. if you’re standing on the corner trying
    to get a Lyft. Apps in this category: Uber, Lyft, Postmates, Grubhub, Caviar.
    Of those, Postmates is the biggest offender of spamming you with unwanted interruptive
    notifications. Consider deleting that app.</p></li><li><p>If you get very few
    <strong>text messages</strong>, turn off badging on your Messages app but leave
    banners on. Since you’re setting your phone up to have very few notifications,
    you’ll actually end up seeing most of your text messages on your home screen as
    they come in (previously, they were probably swamped by other notifications).
    Then, the unread badge for messages is just overkill to create anxiety about messages
    you already saw. If you get lots of text messages, then turn off all notifications
    and treat text messages like an inbox that you only check at set intervals. If
    you are one of those people sending hundreds of text messages throughout the day,
    then you are crazy and throwing your life away.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*hm389dAanW_vLLg771cvjQ.png"
    alt="Never allow badges!"><em>Never allow badges!</em></p><ul><li><p>Leave notifications
    on for your <strong>calendar app</strong>. Not missing appointments is basically
    the entire point of a cell phone.</p></li><li><p>Leave notifications on for <strong>Maps
    and Google Maps</strong>. These apps only notify you when you’re actively getting
    directions.</p></li><li><p>Leave notifications on for <strong>phone calls</strong>.
    Although, consider turning them off and updating your voicemail to say that phone
    calls are a dead medium. My voicemail says: “<em>You have reached my voicemail
    which means you tried to call me which means you are a dinosaur. Please upgrade
    your life and try me via text or email.</em>” (It doesn’t really say this.)</p></li><li><p>For
    all the notifications that you left on, go back and <strong>make sure badges are
    turned off</strong>. Badges are the red dots with numbers in them that give you
    anxiety that there’s something important going on in that app. You’ll live longer
    if you never see another badge.</p></li></ul><p>I led with this advice to turn
    off notifications because it’s the most powerful. Also, you’re never going to
    finish reading this post if you leave your notifications turned on.</p><p>These
    are the productivity reasons that should make you wary of notifications.</p><h1>1:
    Notifications are uncontrolled interruptions from your real goals. They prevent
    you from ever getting into a flow state. You should be in control of what you
    do and when — not your phone. I’m going to refer to this over and over as “<strong>your
    phone is a tool, not a boss</strong>.” See Appendix A at the end of this article
    for more.</h1><h1>2: The brain science behind learning requires sustained focus
    to <a href="https://med.stanford.edu/news/all-news/2014/04/neural-activity-promotes-brain-plasticity-through-myelin-growth-study-finds.html">trigger
    myelin growth around active neural pathways</a>. That’s what brain plasticity
    is about. However, if you go around interrupting that process, you’ll never get
    the myelin growth that locks in whatever you were learning. Essentially, notifications
    lead to a stunted life.</h1><h1>3: Those red dots cause anxiety, and anxiety causes
    health problems like heart disease. It’s not hyperbole that I talked about life
    expectancy in the title of this post. Not specific to red dots, but <a href="https://www.webmd.com/mental-health/news/20120731/mild-anxiety-may-shorten-persons-life#1">mild
    anxiety was shown to increase mortality by 20% over a ten year period</a>.</h1><h2>#2.
    Hide social media slot machines</h2><p>‘Slot machine apps’ is a pejorative phrase
    to refer to apps that <a href="https://www.nirandfar.com/2012/03/want-to-hook-your-users-drive-them-crazy.html">use
    variable rate rewards</a> to try to trigger mindless and addictive behavior. That’s
    how the app tries to become your boss — although maybe <em>boss</em> isn’t even
    a strong enough word. These are virtual drugs and due to societal oversight, your
    dealer (Facebook, Twitter, Instagram, Snapchat) is allowed to pose as a respectable
    member of society.</p><p>Thankfully, you can configure all of your social media
    to eliminate the addictive elements.</p><ul><li><p>Move Facebook, Twitter, Snapchat,
    Instagram, Pinterest, Periscope, LinkedIn and Tumblr into a folder on your second
    screen. These are addictions.</p></li><li><p>Some people call this folder ‘Social’
    or ‘Media’. For a while, I titled my folder <em>Worthless</em>. That was overly
    judgmental. I’d recommend calling this folder <em>Leisure</em> so that you’re
    being clear with yourself about when to open it.</p></li><li><p>This setup goes
    a little bit deeper, though: hide your favorite social apps on the second screen
    of <em>that</em> folder.</p></li></ul><p>This <a href="https://medium.com/swlh/distracted-in-2016-reboot-your-phone-with-mindfulness-9f4c8ad46538#.nkm16mi7i">last
    trick comes</a> from <a href="undefined">Tristan Harris</a>.</p><p>Here’s what
    I mean. When your addictions are in the first screen of a folder, they’re still
    visibly calling out to you. Still bad:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*kYVfeaKUUzvfPbd8Ex28mA.png"
    alt="Source: [Tristan Harris](undefined)"><em>Source: <a href="undefined">Tristan
    Harris</a></em></p><p>Instead, move your apps to the second screen of that folder,
    like so (the first screen has just one app, the second screen has the rest):</p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*xuzHYjo0nCbx7JVCFAElcw.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*20L-KMqugjD3j8W9u83X5g.jpeg" alt=""></p><p>This
    second-screen-of-folder-on-second-screen strategy requires that at least one app
    be visible. When you reach this decision point for social media apps, you obviously
    should choose LinkedIn. It’s the least addictive.</p><p>Extra credit for people
    that are actual productivity nuts: just delete all your social media apps.</p><h2>#3.
    Hide messaging slot machines</h2><p>This is the same strategy as #2, just for
    messaging apps. Messaging apps also have a built-in variable rate reward — that’s
    what makes them slot machines.</p><ul><li><p>Move your mail apps, Slack, Messages,
    WhatsApp and Facebook Messenger into a folder on your second screen. You decide
    when you check these. Live a life without interruptions!</p></li><li><p>I call
    my folder Messages. The default iPhone folder name suggestion is Productivity.
    <em>That’s an outright lie</em>.</p></li><li><p>Follow the same trick from #2,
    hide all but one of the apps on the second screen of the folder.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*aFLb9ZCpmft-2cJMLaHq7Q.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*S5JIBhosXOFAaZYoV2UVKg.jpeg" alt="I
    check these on my own schedule and have all notifications turned completely off."><em>I
    check these on my own schedule and have all notifications turned completely off.</em></p><p>The
    productivity secret for inbox management is to decide when you want to check your
    messages. Then, process them all in one big batch. Batch processing puts you in
    control. Unfortunately, most people live life reactively, constantly checking
    their inboxes for messages to react to. For you to reach your full potential,
    you need to switch to a batch processing mindset for all of your inboxes.</p><p>These
    messaging apps should never interrupt you. This goes back to the brain science
    justification in #1. You want to block off your day so that you have some contiguous
    time dedicated to being smart and creative (no interruptions) and then other blocks
    dedicated to rapid task processing (email, etc.). Cal Newport calls this <a href="https://www.amazon.com/dp/B00X47ZVXM/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1&?tag=coachtony-20">Deep
    Work</a> (in a very good book).</p><p>Productivity nuts: consider deleting all
    of these apps. People who set a schedule for when and where they check their inboxes
    often realize they can do all of their emailing from a proper computer. For Slack
    users, private messages and channel notifications are meant to be asynchronous
    — that means you don’t need immediate alerts.</p><h2>#4. Disable App Review requests</h2><p>You
    open an app intending to get work done, and then that app prompts you to leave
    a review. This is an unwanted interruption, and your job is to remove as many
    interruptions as possible.</p><p>So disable these unwanted Review Requests.</p><ul><li>Go
    to Settings &gt; Apple ID &gt; iTunes &amp; App Stores.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*OrdCF6czFceNi77OxOXfCQ.png"
    alt=""></p><p>Is it crazy how we think of computers as productivity devices but
    then allow so many unproductive features? I think it’s crazy. This isn’t just
    some app-developer hack, it’s actually a<a href="https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/ratings-and-reviews/">
    built-in feature provided by Apple</a>. That’s how blind Apple is to the damage
    caused by interrupting your work flow.</p><p>What’s happening with review requests
    is that when you use free apps, you are actually entering a partnership with the
    app developer where you are working on their behalf, often by clicking on advertisements,
    or in the case of app reviews, by acting as marketing.</p><p>Apps with more positive
    reviews get ranked higher by Apple. As a consequence, app developers tend to interrupt
    you with review requests just as you’re doing something productive.</p><p>Do you
    care about the morality of opting out of this partnership? A savvy user can often
    leach off of the hard work of app developers and the money of investors without
    giving anything back. I’ve been doing that with the MoviePass service — seeing
    twice as many movies as I paid for, all subsidized by some venture capital investors.
    (Unfortunately, that gravy train <a href="https://investorplace.com/2018/10/new-funds-hmny-stock/">seems
    to be ending</a>.)</p><p>When you or I do take advantage, we’re basically stealing.
    This sort of stealing is not illegal, but is it bad for your health? The impact
    off morality on longevity is muddy. As close as I could find was <a href="https://www.psychologytoday.com/us/blog/the-human-beast/201302/do-religious-people-really-live-longer">research
    on religious vs. non-religious people within the same country</a>.</p><blockquote><p>Religious
    Americans are reported to have more robust immune systems, lower blood pressure,
    and better recovery times from operations, (although these claims have been disputed).</p></blockquote><p>If
    you’re worried about the effect of morality on your longevity, here a few workarounds.
    Manually go to the App Store, look through your recently updated apps, and add
    reviews to each of them. Share your favorite apps with your friends (as I’m doing
    in this post). Or, opt for the pro or paid versions. I’m finding that I almost
    always prefer to pay for an app.</p><h2>#5. Turn on Do Not Disturb</h2><p>Most
    people should have their phone permanently on Do Not Disturb.</p><p>Do Not Disturb
    is not as severe as you might think, thanks to a sub-feature to “Allow Calls From
    Favorites.” As a result, you can still allow certain people to interrupt you or
    wake you up.</p><p>The trick to getting the Do Not Disturb feature to work all
    day is to turn it on from the same time to the same time, such as from 9am to
    9am. I tested it and that works (I was worried it would effectively turn itself
    on and off again in the same minute).</p><p>If, however, you do want strangers
    to be able to contact you (for example, if you work in sales), then just set Do
    Not Disturb for your sleep and leisure time.</p><ul><li><p>Go to Settings &gt;
    Do Not Disturb</p></li><li><p>Do Not Disturb works a little differently on your
    Mac versus on your iPhone. On the iPhone, you just need to toggle it on and make
    sure you don’t toggle the Scheduled option. But on a Mac, Do Not Disturb is always
    scheduled, so turning it on all day requires hacking the schedule to be something
    like 9am to 9am. Many of you though will prefer to just have it on for a set time,
    say 6pm to 9am.</p></li><li><p>Allow calls from your favorites. Now your Favorites
    list actually takes on more meaning: this is your whitelist of people who you
    would allow to interrupt you.</p></li><li><p>There’s a Repeated Calls option to
    allow repeat callers to get through. Do not select this. We absolutely do not
    want to train telemarketers to think this will work.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*QGM11KNsKsqKZ_xvVUDPZw.png"
    alt="You might want to double check who is on your favorites — I added my dog’s
    vet in order to make sure those calls always came through."><em>You might want
    to double check who is on your favorites — I added my dog’s vet in order to make
    sure those calls always came through.</em></p><p>The justification here is similar
    to the steps above. Limited interruptions is smart for a number of reasons, including
    the science of brain plasticity, the health impact of anxiety, and the productivity
    gains of optimizing for deep work (all covered in more depth in Appendix A below).</p><p>What
    the above Do Not Disturb setting allows you to do is to take a ‘whitelist’ strategy
    to interruptions. So rather than banning telemarketers one-by-one (‘blacklisting’),
    you pre-select the very limited number of people who you would allow to interrupt
    your day. For me, that’s my immediate family, my dog walker, and my dog’s vet.</p><h2>#6.
    Be strategic about your wallpaper</h2><p>The absolute best wallpaper is an all
    black background. Choosing black destroys the idea that your phone is some shiny
    toy that you need to be looking at all the time.</p><p>Plus, with OLED screens
    (most new iPhones), black actually saves battery (<a href="https://appleinsider.com/articles/17/11/10/extreme-test-shows-oled-iphone-x-with-dark-mode-saves-nearly-60-battery-over-3-hours">as
    much as 60%</a>). If you chronically run out of battery or are a true productivity
    nut, then black is the best option for you.</p><ul><li>Go to Settings &gt; Wallpaper
    &gt; Choose a New Wallpaper &gt; Stills. The all-black option is right there at
    the end.</li></ul><p>If you can’t stomach making a thousand dollar phone look
    that ugly, choose the black with rainbow stripe option that’s right next to the
    black option in the Stills. That’s what I’ve done for all the screen shots in
    this article.</p><p><img src="https://cdn-images-1.medium.com/max/2250/1*xuzHYjo0nCbx7JVCFAElcw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*AhMpDZYP1pBbIzmz9GHYxw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*Wqv7XeMiAvHp48MhskuU7A.jpeg"
    alt="Simple background that looks good in all cases."><em>Simple background that
    looks good in all cases.</em></p><p>There are other options:</p><p>If you’re shy,
    choose a wallpaper that will help as a conversation starter.</p><ul><li><p>The
    best conversation starter is a pet. If necessary, go get a pet. Dogs are best
    (<a href="http://animalbehaviorassociates.com/blog/cats-vs-dogs-whos-liked-more/">74%
    of people like dogs, while only 41% like cats</a>). <a href="http://www.humanesociety.org/issues/adopt/tips/top_reasons_adopt.html">Always
    adopt from a pound</a>, rather than from a breeder. As a possible additional effect,
    owning a dog corresponded with a <a href="https://www.nytimes.com/2017/11/22/well/family/dog-owners-live-longer.html">20%
    decrease in mortality</a>.</p></li><li><p>Take a photo of your pet.</p></li><li><p>Go
    to Settings &gt; Wallpaper &gt; Choose a New Wallpaper &gt; Camera Roll</p></li><li><p>Choose
    the picture of your Pet. Pick Still (saves battery life) and Set Both.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*-HF1Wz6PRcODSMfCtn6mcw.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*IKPy7izz68nVQl5gXEyC8A.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*b4d1xBCztMm3I0pFB4S9EQ.jpeg" alt="On
    new OLED screens, this white dog, Eloise, uses more battery power than a Black
    Lab or Scottish Terrier."><em>On new OLED screens, this white dog, Eloise, uses
    more battery power than a Black Lab or Scottish Terrier.</em></p><p>If you find
    inspirational images inspiring:</p><ul><li><p>Confirm that this is you by looking
    at your walls. You’ll have at least one inspirational quote hanging in your home.</p></li><li><p>Go
    browse for killer inspiration (fewer words is better): <a href="http://www.popsugar.com/tech/Inspiring-iPhone-Wallpapers-38163007#photo-38163007">39
    from PopSugar</a>, <a href="http://www.primermagazine.com/2010/live/17-free-inspirational-iphone-backgrounds">Primer</a>,
    <a href="https://www.pinterest.com/explore/inspirational-phone-wallpaper/">Pinterest</a>,
    <a href="http://www.brit.co/inspirational-iphone-backgrounds/">Brit &amp; Co.</a></p></li><li><p>Save
    the image to your phone.</p></li><li><p>Go to Settings &gt; Wallpaper &gt; Choose
    a New Wallpaper &gt; Camera Roll</p></li><li><p>Choose the motivational wallpaper.
    Pick Still (saves battery life) and Set Both.</p></li></ul><p>One problem with
    inspirational images is that words often make your phone feel cluttered. It’s
    better to have an image, like a mountain or a person working out, than it is to
    have a quote or motivational phrase. For example, here’s a reasonable set of affirmations
    that just don’t show up well behind various iPhone icons and widgets.</p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*Ap9h9Viijh5uGyaPRCl6JA.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*p4z7yRzvbiv-dFIOwRASpQ.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*3HnRZGZGfUNV8vz0QqL66w.jpeg" alt="Nice
    affirmations, bad background."><em>Nice affirmations, bad background.</em></p><p>If
    you are going to have affirmation or motivational text, a quick hack is to make
    the background yourself in Instagram Stories. Instagram will let you save the
    Story to your phone’s Photos.</p><p>In this case, try to stick to just a single
    word, and place that word low enough that it shows up below your Do-Not-Disturb
    message. If you take this approach, consider two things:</p><ol><li><p>Try just
    using this for your Lock screen rather than your Home screen. Text often works
    better on your Lock screen than it does behind the apps on your Home screen.</p></li><li><p>Try
    creating a new wallpaper every few weeks that has the same affirmation, but a
    different background. That way you don’t become blind to your affirmation.</p></li></ol><p>Here’s
    an example <a href="undefined">Jonathan Howard</a> sent me when he was reviewing
    a draft of this article:</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*tWTOGB92Izygpezs"
    alt="Credit goes to [May Alba](undefined) who made this for [Jonathan Howard](undefined)"><em>Credit
    goes to <a href="undefined">May Alba</a> who made this for <a href="undefined">Jonathan
    Howard</a></em></p><p>If you still haven’t found a suitable strategy, pick an
    image with a dominant color that tells a color story to prompt one of the below
    emotions.</p><ul><li><p>Red: Passionate, Aggressive, Important</p></li><li><p>Green:
    Natural, Stable, Prosperous</p></li><li><p>Blue: Serene, Trustworthy, Inviting</p></li><li><p>Black:
    Powerful, Sophisticated, Edgy</p></li><li><p>White: Clean, Virtuous, Healthy</p></li></ul><p>Don’t
    pick orange (cheap) or yellow (warning). If you’re not sure? Pick Red. All of
    these color choices will drain your battery more than a black background, but
    you may find the emotional gain to be worthwhile.</p><p>The reality for me is
    that I alternate between a black background and a meaningful picture. There’s
    some possible science supporting the value of small changes to your work environment
    to create a boost in productivity. Unfortunately, I can’t find a citation, although
    I’m 90% certain I read this in <a href="undefined">David Rock</a>’s <a href="https://www.amazon.com/Your-Brain-Work-Strategies-Distraction-ebook/dp/B002Q1YE3K/?tag=coachtony-20">Your
    Brain at Work</a>. The theory is basically that shaking up your environment a
    small amount puts your brain on alert (but not so much that you’re anxious).</p><h2>#7.
    Turn off Raise to Wake</h2><p>The Raise to Wake feature lets you quickly see notifications
    on your lock screen just by lifting your phone.</p><p>This is a bad idea. You
    don’t want to accidentally see notifications on your lock screen when you just
    happen to be moving your phone around. You want only see notifications intentionally.</p><p>Winners
    check their notifications on their own schedule.</p><ul><li>Go to Settings &gt;
    Display &amp; Brightness &gt; Raise to Wake. Turn off.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*P08d1Ve3hwb0hTEtDM7STw.png"
    alt="I’m going to re-use this screen shot two more times when I cover auto-lock
    and night shift."><em>I’m going to re-use this screen shot two more times when
    I cover auto-lock and night shift.</em></p><p>This is yet another setting to make
    sure you’re the boss and your phone is your tool.</p><h2>#8. Add the Screen Time
    widget</h2><p>The Screen Time widget is new from Apple and it helps show you where
    your time is going. Ideally, the Social Media category will be non-existent. Unsurprisingly,
    I’m not going to be able to find a screen shot where that is true.</p><p>To install
    the Screen Time widget:</p><ul><li><p>Swipe to the Today Screen by swiping right
    from your home screen.</p></li><li><p>At the bottom of the Today screen, select
    Edit. This will bring up a list of apps that have widgets.</p></li><li><p>Tap
    the green plus button for Screen Time to enable the widget, and then tap and hold
    on the three-horizontal-lines button to reorder the widget to be near the top.
    By the end of this article you’re going to have three widgets at the top of your
    Today Screen: Google Calendar, Weather, &amp; Screen Time.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*HbBelTPakVyVN0_AmoxbRQ.png" alt=""></p><p>You’re
    going to use this widget as a reality check against your own biased memory.</p><p>This
    article is going to recommend a few more widgets later, and then recommend that
    you build the habit of checking the Today View by swiping right from your home
    screen (conceptually, it lives to the left of your home screen).</p><p>It does
    seem to be roughly true that what gets measured gets done. There are a number
    of variants of that quote, but my favorite is “<a href="http://www.thebusinessofgood.org/articles/september-quote-john-e-jones/">What
    gets measured gets done, what gets measured and fed back gets done well, what
    gets rewarded gets repeated</a>.”</p><p>A goal for many of the steps in this article
    is for you to use your phone less, and to use social media apps much, much less.</p><p>This
    widget is how you’ll know if you’re succeeding. I consider it the feedback part
    of the above quote. Then hopefully the reward is an intrinsic satisfaction in
    your own life and productivity.</p><p>In addition to installing the widget, you
    should set yourself a goal for social media usage. Imagine you had a child and
    were setting a limit for how much television they could watch each day. Is one
    hour reasonable? Probably. Is six hours reasonable? No.</p><p>Now, instead of
    this child, consider instead that you are setting limits for yourself, and that
    social media has replaced your television watching time. How much “leisure” time
    each day do you think is appropriate for yourself? If you’re not sure, choose
    thirty minutes. That’s enough time to scan your Facebook and Instagram, drop tons
    of likes on your friends, tweet once, get the gist of the news, and consume a
    huge dose of <a href="https://twitter.com/dog_rates">We Rate Dogs</a>.</p><h2>#9.
    Add content restrictions</h2><p>Sometimes it’s helpful to block yourself from
    certain websites. I have zero pride preventing me from treating myself like a
    toddler in need of parental controls. The reality is that we all could use some
    strict blocks to prevent our worst habits.</p><p>On the iPhone, the feature to
    block specific websites is hidden inside of Apple’s Limit Adult Websites feature.</p><p>I’m
    not trying to make any point at all about your adult website usage. I just want
    to help you find the feature (and it’s the most deeply buried feature in this
    article).</p><ul><li>Go to Settings &gt; Screen Time &gt; Content &amp; Privacy
    Restrictions &gt; Web Content and then select “Limit Adult Websites.”</li></ul><p>Turning
    on this feature allows you to then add specific websites, which don’t have to
    be adult websites at all.</p><p>What you should consider is whether you have any
    habitual behaviors around checking specific websites and then use this feature
    to break those habits. For example, I used to live in San Francisco and so had
    a habit of checking the website for the daily paper. That’s the one site I block
    because I don’t want to have that habit anymore.</p><p>Additionally, I was a huge
    Grantland reader before it was shut down by ESPN. I still type that URL into my
    browser just out of pure muscle memory.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*D3HS4P8sXJOnUq5Mmhp9jw.png"
    alt="Don’t be shy about turning off certain websites. Disabling bad life choices
    is a great strategy."><em>Don’t be shy about turning off certain websites. Disabling
    bad life choices is a great strategy.</em></p><p>If I were designing content restrictions
    for productivity, I’d have one called Google-only, which would allow you to Google
    any term and then click any result. But you’d be blocked from going directly to
    any sites or clicking deeper into any site.</p><p>However, since I’m not the boss
    at Apple, the solution above is the best available approach and is probably ideal
    for most people. I’ll give a more hardcore solution next.</p><h2>#10. (Optional)
    Use restrictions to turn off Safari</h2><p>None of you are going to do this… but
    I tried a month with no access to a web browser. If you are up for this, I definitely
    want to hear from you.</p><p>The theory is that the browser is one of the addictive
    slot machines that draws your attention and wastes your time.</p><p>So I used
    parental controls to disable Safari.</p><p>In practice, I would very occasionally
    need a web browser, so I’d download the <a href="https://itunes.apple.com/us/app/google-chrome/id535886823?mt=8">Chrome
    app</a>, do my browsing, and then delete the Chrome app.</p><p>If this method
    of reclaiming your phone at all appeals to you, here’s the secret:</p><ul><li>Go
    to Settings &gt; Screen Time &gt; Content &amp; Privacy Restrictions &gt; Allowed
    Apps and then disable Safari.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*LfyYD7DO_sLmXdpSEOcHkQ.png"
    alt="This screen shot is only for the hardest of hardcore phone addiction-breakers."><em>This
    screen shot is only for the hardest of hardcore phone addiction-breakers.</em></p><p>When
    I tested this, I used Chrome as my occasional browser because the path for removing
    access again was shorter. I trusted myself more to delete the Chrome app than
    to remember to find the Safari restriction option that’s hidden behind five taps.</p><h2>#11.
    Organize your apps and folders alphabetically</h2><p>There are four ways to organize
    your apps: by function, by color, by random chance, and alphabetically.</p><p>You’re
    going to organize your screens by function, and you’re also going to organize
    apps into folders by function. The home screen is for tools only. The second screen
    is apps organized into folders. The third screen is for junk, namely Apple apps
    you aren’t allowed to remove.</p><p>However, on each screen and within each folder
    you have to make additional decisions about organizing. You should <strong>choose
    alphabetically</strong>.</p><ul><li><p>On your home screen, organize all of your
    apps by name, with numbers (like 1Password) coming before letters.</p></li><li><p>In
    your folders, organize the apps hidden behind the first screen alphabetically
    as well.</p></li><li><p>On your second screen, organize your folders alphabetically.</p></li><li><p>I’m
    going to leave it mostly up to you on how to organize apps beyond the first screen.
    Probably, they should mostly be inside folders.</p></li><li><p>I think it’s a
    bad sign if you have apps spilling out into a third screen. Put them in folders!
    The only thing on the third screen should be apps that you can’t uninstall. On
    the latest iOS, you can actually uninstall all the Apple apps except for Wallet,
    Safari, Find iPhone, and App Store. I put all these Apple apps into a folder on
    my third screen, mostly as a precaution in case I need them one day. In practice,
    I mostly just use Wallet and get to that through the right-hand button shortcut
    (double press).</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*dNH4B9tueBCbbmPotPNcsQ.png"
    alt="We’ve barely scratched the surface of why this home page looks the way it
    does."><em>We’ve barely scratched the surface of why this home page looks the
    way it does.</em></p><p>The phrase “your phone is a tool, not your boss” is implying
    that you’re the boss. But it’s more subtle than that.</p><p>We want to set your
    phone up so that your rational brain is the boss, and your emotional, addictive,
    worst-decisions brain is asleep or blocked.</p><p>The best explanation for this
    is in the book, <a href="https://www.amazon.com/dp/B00555X8OA/?tag=coachtony-20">Thinking,
    Fast and Slow</a> (or <a href="https://www.nytimes.com/2011/11/27/books/review/thinking-fast-and-slow-by-daniel-kahneman-book-review.html">just
    read the NYT book review for a good overview</a>). The author lays out a model
    for the brain as having two systems.</p><p>The Fast system is our default. It’s
    effortless, instinctual, and functional for staying alive, but also the source
    of most of our worst impulses. It’s the system that likes slot machine apps.</p><p>The
    Slow system is what we think of as our rational brain. It’s analytical, but requires
    effort and intention to access.</p><p>When I train meditation in my <a href="http://bit.ly/2BwcC8S">Heavy
    Mental program</a>, I train a verbal way of moving the thoughts that come up during
    a meditation into our Slow system. That way we can analyze the thought, and then
    drop it. The entire trick is that activating your language center always activates
    your Slow system.</p><p>Here, we’re doing something very similar. When you go
    for an app, I want you to have the actual name of the app in mind. That way it’s
    easier for you to be acting rationally and intentionally. That’s the main reason
    to adopt an alphabetical organizing structure.</p><p>The second good reason is
    that alphabetical is less brittle. Organizing by function is hard because sometimes
    apps have more than one function. Organizing by app name is intellectually trivial
    in comparison.</p><h2>#12. Choose Gmail</h2><p>For the vast majority of people,
    the ideal phone setup is to embrace Google Cloud services (mail, calendar, photos,
    maps) and pair them with Apple hardware.</p><p>If you’re on some other setup,
    like Apple email or Outlook, then stick with that. It’s not worth switching.</p><p>You
    can often configure the Apple apps to connect to the Google services. But it’s
    always better to just use the Google-specific app. In this case, I’m going to
    talk about Gmail.</p><p>Don’t use Apple’s Mail product. Google’s actual Gmail
    app just works more smoothly, especially search.</p><p>And don’t bother with any
    app that promises any sort of “smart” filtering or sorting of your email. Relying
    on somebody else’s algorithms is hugely overrated.</p><ul><li><p>Get <a href="http://gmail.com/">a
    Google account</a> (you probably already have one).</p></li><li><p>Download the
    <a href="https://itunes.apple.com/us/app/gmail-email-by-google/id422689480?mt=8">Gmail
    app</a>.</p></li><li><p>Put the app in that “Messages folder” we created in Step
    #3.</p></li><li><p>And make sure notifications are turned off (also Step #3).</p></li><li><p>Then,
    delete Apple’s mail app. Apple has only recently started letting you delete built-in
    apps. Take advantage of it!</p></li><li><p>Go to Gmail from your computer and
    disable your inbox tabs. You probably think Google is helping you by automatically
    categorizing your incoming email, but you’ll be way better off developing the
    habit of unsubscribing and manually filtering.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*7Z8QuKnhRM1MasSnenguAg.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2584/1*JR4hj_jhMRp91p6GvpQTxw.png"
    alt=""></p><p>I hosted a Q&amp;A with Marshall Hughes, who is our most prolific
    <a href="https://www.coach.me/Marshall/882?ref=DbvXq">Inbox Zero coach</a>. Yes,
    that’s a type of coach — a lot of our coaches zero (do you like my pun?) in on
    specific behavior changes.</p><p>In the Q&amp;A, everyone wanted to ask Marshall
    about email automation tools. And Marshall was adamant that every experience he
    had with clients using automation tools turned out badly. Clients who chose automation
    were bailing on essential inbox habits. They’d given up on the most important
    habit of all, which is to say no to email by constantly unsubscribing and manually
    filtering.</p><p>So, paired with the settings above, you should be working on
    your email habits. That means primarily unsubscribing and blocking aggressively.
    I get a lot of extra email too that I consider FYI — for example, I like having
    a history of all of the newsletters we send out, but I don’t need to read each
    one as they come in to my inbox. I filter those into folders and only check those
    folders occasionally.</p><h2>#13. Choose Google Calendar</h2><p>Sticking with
    the Google Cloud theme, use the native Google Calendar app and ignore Apple’s
    Calendar app.</p><ul><li><p>Install the <a href="https://itunes.apple.com/us/app/google-calendar-time-planner/id909319292?mt=8">Google
    Calendar app</a>.</p></li><li><p>This is an app where you’re going to keep notifications
    on and just turn off badging. Never allow badging anywhere.</p></li><li><p>Then
    enter the Google Calendar settings.</p></li><li><p>You can change the start of
    the week from Sunday to Monday (or in a few locales, Saturday). I’m a Monday person.
    I don’t understand how any person thinks the week starts on Sunday given that
    Sunday is literally part of the weekEND. But whatever, people have strong opinions
    on this and I can’t dissuade them.</p></li><li><p>Disable “Show declined events.”
    You declined the event so that you wouldn’t have to think about it.</p></li><li><p>Disable
    “Show event illustrations.” That’s a nonsense feature.</p></li><li><p>Then, go
    into Default event duration and set the default to 30 minutes. You don’t need
    an hour for most meetings. If you’re the one creating the meeting, you can be
    in charge of saving your and everyone else’s time.</p></li><li><p>Last, add the
    Google Calendar widget to the top of your Today screen: head over to your Today
    screen (swipe right from your home screen) &gt; scroll down to the edit button
    &gt; turn on Google Calendar &gt; Move Google Calendar to the top.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*CMELfmRV9TddKFd37F2M3g.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*D23YwMuoIx-jtbt0etc-JQ.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*al0JOEgTxklJ2hX6CnQknQ.jpeg" alt=""></p><p>The
    two most important subtleties are trying to shorten meetings and building a Today
    screen that’s worthy of a daily habit.</p><p>The Today habit is just you starting
    your day by getting a summary of what’s planned (and later, what the weather is
    like). If you can build this habit, then you can use it to trigger new habits.</p><p>In
    the <a href="https://betterhumans.coach.me/how-to-create-any-habit-with-advice-from-the-four-greatest-habit-masters-9b96528db259">Tiny
    Habits method</a>, checking your calendar would be called an anchor habit. Above
    in the Screen Time section, I’ve already attached a new, not-quite-natural habit
    of checking your Screen Time widget. The reason I think that will work is because
    I trust that you will naturally want to check the calendar and weather, thus triggering
    the new and less natural habit of checking additional widgets.</p><p>On the short
    meetings front, this is literally a chance to save yourself hours each day by
    making the meetings you go to shorter and more focused. The key to focus is to
    have a clear goal, and push directly toward that goal.</p><p>I have one friend,
    a CEO, who wants the time on his calendar to be as precious as the time on a U.S.
    president’s schedule (he told me this during a different administration). If a
    meeting only needs seven minutes, then just give it seven minutes. A different
    friend, also a CEO, set a company policy that if a meeting invite didn’t include
    goals, an agenda, and pre-meeting preparation, you could skip it. The acronym
    there is GAP — no GAP, no need to attend.</p><p>Last, in my screenshot there’s
    a massive amount of time blocked off called “Reserved.” I’m unapologetic about
    scheduling time on my calendar for deep work. You can’t squeeze deep work into
    fifteen minute gaps — you need to carve out contiguous blocks of time. For most
    office workers, I use what Cal Newport calls a “bi-modal day.” That’s where half
    of my day is for deep work and the other is for shallow work, i.e. meetings, email,
    phone calls.</p><h2>#14. Replace Apple Maps with Google Maps</h2><p>Apple Maps
    has gotten better, but it’s still not as good as Google Maps. You’re only going
    to use Apple Maps when you use Siri (it’s Siri’s permanent default).</p><p>Every
    other time, you’re going to use Google Maps.</p><ul><li><p><a href="http://pple.com/us/app">Install
    the Google Maps app</a>.</p></li><li><p>Add Home and Work addresses to My Places
    in the app. This will involve connecting to a Google account. If you have trouble
    and are using a custom Google domain, then you may need to enable some permissions
    from the site admin panel. In that case, these are the <a href="https://productforums.google.com/forum/#!topic/apps/QL9LPYc-_bM">instructions
    that helped me</a>.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2048/1*kqe3IcMeS5ks1vXT0cVA1Q.png"
    alt="Not my real address."><em>Not my real address.</em></p><ul><li><p>Go to Google
    Maps Settings &gt; Navigation settings and turn “Keep map north up” on. This is
    a power setting for people who actually aspire to build their sense of direction.</p></li><li><p>Add
    Google Maps to your home screen. This is another one of those tools-over-drugs
    apps.</p></li></ul><p>This is yet another example of preferring the Google Cloud.
    And the custom settings for Home and Work are just small time-savers. There’s
    not a huge additional productivity explanation.</p><h2>#15. Install the Gboard
    keyboard for faster typing</h2><p>This will let you type faster through swiping.
    The <a href="http://news.softpedia.com/news/New-Record-for-Fastest-Typing-Set-on-Galaxy-S-with-Swype-153274.shtml">world
    record</a> for typing on a phone is set through the swipe method: just swipe your
    finger over the letters of the word you’re trying to type. The keyboard will figure
    out what you mean.</p><p>At first this will feel a little uncomfortable, but it
    will quickly become second nature.</p><p>Gboard, from Google, also has <a href="http://www.cultofmac.com/429335/10-things-you-should-know-about-googles-gboard-keyboard/">a
    bunch more features</a> too like GIF and emoji search.</p><ul><li><p><a href="https://itunes.apple.com/us/app/gboard-search.-gifs.-emojis/id1091700242?mt=8">Install
    the Gboard app</a>.</p></li><li><p>Now go to your Apple Settings &gt; General
    &gt; Keyboard &gt; Add New Keyboard.</p></li><li><p>It’s easy to accidentally
    cycle back to the old default keyboard, so delete that (don’t worry, you can get
    it back). Go to Settings &gt; General &gt; Keyboard &gt; Edit. Then delete the
    default one. It’s probably named as a language, like <em>English (United Kingdom)</em>.</p></li><li><p>If
    Gboard isn’t showing when you go to type a message (perhaps you skipped the above
    step), then hit the globe icon to switch to it.</p></li><li><p>I also set my keyboard
    to black before knowing that I could delete the default Apple Keyboard. That helped
    me know visually which keyboard was active. You can also set your keyboard theme
    by opening the Gboard app and heading to themes.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2250/1*HyaTaXsXG6YXSHMzS8OGiw.jpeg"
    alt="Gboard and swipe makes me more likely to write things down on my phone. This
    is me setting my One Priority for the day."><em>Gboard and swipe makes me more
    likely to write things down on my phone. This is me setting my One Priority for
    the day.</em></p><p>I found that I was so unhappy with the Apple keyboard peck-typing
    that I’d avoid using it altogether. I’m a fast laptop typist, so I’d always postpone
    writing until I got to my desk.</p><p>Now, with swiping, I’m just a little bit
    faster and that’s the difference between not typing anything and being willing
    to type a longer message.</p><p>Where that ties into productivity is what a lot
    of people call the “touch it once” principle. Especially with email, you want
    to avoid reading the same email twice. So if I happen to read a message that needs
    a response, I want to give that response right away.</p><h2>#16. Switch to Google
    Photos</h2><p>This is the last of the settings to use the Google Cloud over Apple’s
    built-in options.</p><p>The main benefit of Google Photos is that the search is
    amazing. They use machine learning to categorize all of your photos so that you
    can later search them. For example, without any work I can find all my selfies
    by just searching for the word <em>me</em>. And I often pull up pictures of my
    dogs by searching for <em>dog</em>. I have even had someone pull up photos of
    a specific handcrafted <a href="https://www.google.com/search?q=greenland+kayak+paddle&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjwku2fhdfdAhWyTt8KHb4wAekQ_AUIDygC&biw=1389&bih=780">*greenland
    kayak paddle</a>*.</p><p>For photos, take the following steps.</p><ul><li><p>Install
    <a href="https://itunes.apple.com/us/app/google-photos/id962194608?mt=8">Google
    Photos app</a> and follow app’s instructions.</p></li><li><p>Place Google Photos
    app on your home screen. This continues our tools-over-drugs theme.</p></li><li><p>If
    you’ve been storing photos in iCloud, this is now redundant. <a href="https://www.quora.com/How-can-I-transfer-photos-from-iCloud-photos-to-Google-Photos">Copy
    your photos over according to these instructions</a>.</p></li><li><p>You can try
    turning off iCloud storage for photos: Apple ID &gt; iCloud &gt; Photos. However,
    when I did this, I ran into trouble so I’ve left it on. This step isn’t crucial.</p></li><li><p>Most
    people will need to pay for Cloud photo storage (this is true for iCloud also).
    I’m currently on <a href="https://drive.google.com/settings/storage?hl=en">Google’s
    $1.99/month plan</a> for 100GB, but am close to needing to upgrade to their $9.99/month
    for 1TB.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*KbQo4_U1uJUfzMalmnt4xw.png"
    alt="That’s Eloise, a pure-bred French Bernard, and Eggs, a mixed Aussie Shepard."><em>That’s
    Eloise, a pure-bred French Bernard, and Eggs, a mixed Aussie Shepard.</em></p><p>I
    end up storing my photos in four places: Google photos, iCloud, laptop and Dropbox
    sync. That’s because I’m paranoid. I should probably take them out of Dropbox.</p><p>Of
    those, Google Photos is far and away the best experience for looking at my photos,
    thanks to the machine learning behind Google’s search. This is an example of where
    a messy-by-design organization structure beats rigid one. Search is more reliable
    and faster than you trying to manually categorize every photo.</p><h2>#17. Use
    Evernote for all note taking, to-do lists, everything</h2><p>If you already love
    your note taking app and to-do list app, then fine, stick with those. This is
    a recommendation where habits beat tools. Don’t switch if you already have strong
    habits.</p><p>However, if you don’t use a note taking app or to-do list app, or
    are unhappy with what you do use, let me give you a guiding theory that will lead
    you to Evernote: go messy and trust search.</p><p>Put your to-do list in Evernote,
    either by creating one long note that you edit every day or a new note for each
    day. Then put all your other notes in Evernote too. Don’t bother particularly
    with categorization. Instead, just trust that you’ll be able to find whatever
    you want later through Evernote’s search.</p><p>What you end up with is a messy
    but long-term functional system. The other approach, constantly switching apps,
    systems, and categorization schemes always breaks. Always.</p><p>One power of
    a messy to-do list is that not everything has to be a check list item. You can
    mix in quick drafts and longer notes to yourself. Or, as I’ve recommended in my
    <a href="https://betterhumans.coach.me/replace-your-to-do-list-with-interstitial-journaling-to-increase-productivity-4e43109d15ef">Interstitial
    Journaling technique</a>, to live mindfully, you should literally intermix short
    journal entries and to-do list items.</p><ul><li><p><a href="https://itunes.apple.com/us/app/evernote-stay-organized/id281796108?mt=8">Install
    the Evernote app</a>.</p></li><li><p>Place it on your home screen.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*IDZrNecdNFhJLgafdGdMEg.png" alt="Here’s
    an example of mixing todo-lists and journaling. This is called Interstitial Journaling."><em>Here’s
    an example of mixing todo-lists and journaling. This is called Interstitial Journaling.</em></p><p>The
    problem with most productivity systems is that they break. As a result, a lot
    of productivity nuts spend a lot of their time creating new productivity systems
    over and over again. This, obviously, is not productive.</p><p>For that reason,
    where possible, I suggest that you choose messy systems over rigid systems. The
    ultimate messy system that I know you’re all familiar with is the paper notebook.
    A paper notebook gives you incredible flexibility: you can take notes however
    you want, write drafts, sketch outlines, draw pictures, write to-do lists, etc.
    A to-do list app just doesn’t allow for that.</p><p>The downside to paper notebooks
    is that it’s impossible (or at least very hard) to find an old note.</p><p>All
    of that is the argument for merging your to-do lists with your notes, and then
    putting them all into a single cloud-backed note taking system with good search
    features.</p><p>Although Evernote has advanced features that may or (probably)
    may not be a pleasure to use, the basics work well and reliably. I recommend starting
    with free and then upgrading ($60/year) if you bump into a limit on bandwidth
    or offline availability.</p><h2>#18. The case for Calm as your go to meditation
    app</h2><p>I learned to meditate from Headspace. That’s a good option. But guided
    meditation is something that you’ll graduate from quickly. Most people I know
    who meditate don’t still need a daily guide.</p><p>Once you graduate to meditating
    on your own, Calm is the much better option because of their built-in timer and
    tracking. I was an advisor in the early days of Calm specifically because of my
    experience building habit tracking apps.</p><ul><li><p>Install the <a href="https://itunes.apple.com/us/app/calm/id571800810?mt=8">Calm
    app</a>.</p></li><li><p>Calm is good enough and important enough to pay for. It’s
    $59.99/year.</p></li><li><p>Find your way to the Open Ended Meditation in the
    Meditation section. Select one with a bell playing every few minutes (my setting
    is for 5 minutes). That way you can sit and meditate for a set period of time
    while also being confident that your phone hasn’t run out of battery.</p></li><li><p>Also
    find your way to the Breathe option in the More section. This can be a very effective
    way to reset your body.</p></li><li><p>I also prefer not having any background
    noise from my meditation app. In Calm, turn this off in the Calm app by heading
    to More &gt; Scenes and then adjusting the Background Volume to zero.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*EVlK1frEWcdH2NyIo0WYkA.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*gqeKFH0-aUARefOvH5Qjrg.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*AVI476ZolGEVyTrgTubHbw.jpeg" alt="The
    breath function in right-most screenshot is also very effective"><em>The breath
    function in right-most screenshot is also very effective</em></p><p>Meditation
    is a productivity and performance practice. The explanation for why is a little
    long, so <a href="https://betterhumans.coach.me/tagged/meditation">I’m mostly
    just going to point you to longer articles we’ve published in Better Humans</a>.
    However, here’s the quick pitch for why the Calm app is about performance and
    not just “calm.”</p><p>A lot of people talk about meditation as a relaxing or
    spiritual practice. That’s fine for them. But you’re reading a productivity article,
    so I’m focused on what meditation does for your productivity.</p><p>The core concept
    comes from the world of deliberate practice, which is when you identify the components
    of skills that are important to your success, and then practice those components
    individually. I want you to approach meditation as a practice session for a skill
    that you’re going to use to help your productivity.</p><p>You should read our
    full article on <a href="https://betterhumans.coach.me/the-complete-guide-to-deliberate-practice-3a70319be3af">Deliberate
    Practice</a> to get a feel for how to design practice for all important life skills.</p><p>With
    meditation, you’re practicing a two-step process that you will use outside of
    the meditation. The first step is becoming aware of where your mind wandered,
    acknowledging the thought and then putting the thought down. Call that Awareness.
    The second step is bringing your focus back to your point of focus (usually your
    breath). Call that Focus.</p><p>This Awareness-Focus loop is what you are practicing
    during a meditation session. A lot of people feel bad if their mind wanders during
    meditation. But you should actually feel good. The more often your mind wanders,
    the more times you get to practice this Awareness-Focus loop. I tell people what
    they are doing is mental pushups. The more wandering they do, the more pushups
    they get in.</p><p>Now that you’ve practiced, here’s a way to then apply the Awareness-Focus
    loop in ways to be more productive by <a href="https://betterhumans.coach.me/this-meditation-exercise-builds-mental-muscle-and-cures-procrastination-2f15faade9f3">beating
    procrastination</a>.</p><h2>#19. Install the right goal tracker for you</h2><p>There
    are basically two philosophies for how to use a goal tracker. Both involve picking
    a set of small goals or habits and marking them off in the app each time you do
    them.</p><p>In the Quantified Self philosophy of goal trackers, you are tracking
    your goals simply out of curiosity because you want to get more information about
    yourself. (The word Goal in Goal Tracker doesn’t even come into play.)</p><p>The
    second philosophy is focused on a goal-oriented behavior-change mindset where
    you are using the goal tracker for motivation and accountability in order to get
    yourself to adopt a new behavior and become a better person.</p><p>I simply do
    not understand the Quantified Self philosophy — don’t they want to improve? Every
    time I go to a Quantified Self event, I feel like I’m surrounded by aliens who
    love data but not growth.</p><blockquote><p>“I got all this data about myself.”
    &gt; “And then what?” &gt; “Nothing.”</p></blockquote><p>It just doesn’t make
    sense.</p><p>So my goal tracker recommendation is for a goal tracker I built.
    It is the foundation of the Coach.me community. Most users and most coaches started
    out by forming habits through this goal tracking app.</p><p>Install the<a href="https://itunes.apple.com/us/app/coach-me-goal-tracking/id530911645?mt=8">
    Coach.me app</a> and consider tracking a few of the <a href="https://medium.com/coach-me-app/top-100-habits-to-track-in-2018-4940bf459d5">101
    most tracked habits in 2018</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*_dyRNLwbs-ap8GbI8J8gbg.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*oca6dMQ6-LFqe-jHCQgTBw.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*7Te465BXOUK59MjRmjwG8w.png"
    alt=""></p><p>Obviously, I’m talking from my own book here. This article is the
    product of prior work that started with this goal tracker and then morphed into
    coaching and personal development publishing. There are many links out there to
    projects we built at Coach.me or articles we published at Better Humans.</p><p>So,
    with the caveat that I’m deeply biased, my position is that I’ve seen all the
    other goal trackers and generally they all use similar formulas and then differentiate
    just a tiny bit on what graphs they show you.</p><p>However, we put every ounce
    of our design effort into something different: your psychology and motivation.
    That includes how we trigger reminders, how we try to avoid triggering guilt,
    how we introduce variable rate rewards for your own good, and how we handle when
    a goal is too challenging for you.</p><p>If you’ve read this far in the article,
    I think you will have picked up on my philosophy, which is that I want to see
    results.</p><h2>#20. Store all your passwords in a password manager, probably
    LastPass</h2><p>Trying to remember hundreds of passwords is a waste of time. Using
    the same password for all your accounts is the fast track to getting hacked.</p><p>There
    are a number of good third-party password managers that are much easier to use
    than Apple’s built in Keychain. If you are already using one, then stick with
    it. This is a principle (covered also in Appendix A) that habits are more important
    than tools. The benefits of your habits around your current password manager outweigh
    the feature benefits of switching to a different manager.</p><p>I use 1Password
    but that’s not what I’m going to recommend to you. I signed up with them a long
    time ago when they had a pay-once option. But now they’ve moved to a subscription
    model that’s quite a bit more expensive than other better options.</p><p>So, if
    you are looking to use a password manager for the first time, then install LastPass.
    It’s the probably best for most people and definitely the least expensive at $24/year.</p><p>Download
    LastPass <a href="https://www.lastpass.com/">here</a>. You’re going to need to
    set it up in three places: as an app on your phone, as an app on your computer,
    and as an extension in your computer’s web browser.</p><p>On your iPhone, you’ll
    also need to configure LastPass to fill passwords in Safari. Select your password
    manager from iOS Settings &gt; Passwords &amp; Accounts &gt; Autofill Passwords.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*OVMQB7iA0FfqCyb3Dbq05w.png" alt="Most
    people will be happiest with LastPass."><em>Most people will be happiest with
    LastPass.</em></p><p>The theory behind the value of a password manager comes down
    to pragmatic security and reduced cognitive load.</p><p>Your parents used to memorize
    people’s phone numbers. Now nobody does that anymore. It should be the same with
    passwords — you have better things to remember. That’s a cognitive load reduction.</p><p>Plus,
    password managers can save time. A common trap is to half-way embrace unique passwords
    for each app or site, but then find yourself constantly forgetting and having
    to go through a lost-password routine. This is wasted time.</p><p>On the security
    front, most people who don’t use a password manager end up reusing passwords.
    So when a hacker gets your password to one site, they get it for all sites. Password
    managers aren’t immune to getting hacked either, but at least if you use a popular
    one you’re likely to hear about it when the hack happens.</p><h2>#21. Use Numerical
    as your default calculator</h2><p>After accuracy, the must-have feature for calculators
    is a history. Otherwise you’re going to make a typo and not notice.</p><p>Unfortunately,
    Apple’s calculator does not ship with a history feature. So:</p><ul><li><p>Install
    the lovely <a href="https://itunes.apple.com/us/app/numerical-calculator-without/id804548449?mt=8">Numerical
    app</a>.</p></li><li><p>Put it on your home screen. This continues the your-phone-is-a-tool-not-a-boss
    trend for your home screen. When you unlock your phone, you want to feel like
    you’ve picked up a tool that’s completely under your control, rather than like
    you’re on a bender and have just walked into a casino. You’re going to love Numerical
    without obsessively using it.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*wtIiLLYpjJaTKJ5hVXclRA.png"
    alt="If the low power % in this screenshot causes you anxiety, we’ll get to meditation
    apps below."><em>If the low power % in this screenshot causes you anxiety, we’ll
    get to meditation apps below.</em></p><p>Notice the second line of numbers at
    the top? That’s a history. Having that history saves you time and reduces your
    errors because you can spot when you’ve fat-fingered an entry. Reduce your anxiety
    and live longer.</p><p>“<a href="https://www.webmd.com/mental-health/news/20120731/mild-anxiety-may-shorten-persons-life#1">Even
    people displaying minor symptoms of psychological distress were found to have
    a 20 percent increased risk of dying over the 10-year study period</a>.” (This
    is the same citation I used in the section about turning off notifications.)</p><h2>#22.
    Put the Camera app in your toolbar</h2><p>Technically, this is quadruply redundant.</p><p>You
    can swipe down to get the camera from your control center, tap the camera on the
    lock screen, or swipe left from your lock screen.</p><p>That last, swipe-left
    from the lock screen is really convenient. Practice that. But also add the camera
    to your toolbar.</p><ul><li><p>Move the camera app to the toolbar.</p></li><li><p>While
    you’re at it, go into Settings &gt; Camera and turn on Preserve Settings. This
    means that the app will remember the last mode you were in, i.e. video or photo.</p></li><li><p>Also
    in Camera settings, if you have enough storage, max out the resolution on Record
    Video and Record Slo-mo.</p></li><li><p>Last, in Camera settings, most people’s
    pictures will be framed better if they turn on grid mode. Do that.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*GXNARqZLPSVQJasaC-hBIA.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*Nku49U_I4WlglrEk97l4oA.png" alt=""></p><p>The
    camera is a great tool for happiness and gratitude. I’m not talking about preening
    in front of the camera all day. I’m talking about capturing the most interesting
    moments of your day for posterity and to share with others.</p><p>Using your camera
    regularly also helps you develop an eye for detail.</p><p>The general theme of
    this article is to set your phone up to be more present in the world. Looking
    for pictures to take is one way to be more engaged with your surroundings. Stopping
    a meal so that you can capture your food, however, is not the path to living in
    the moment.</p><p>If you are wanting to post pictures to Instagram and Facebook,
    you can consider the placement of the Camera app to be a replacement habit that
    allows you to schedule your social media usage. Take a picture in the Camera app
    and then post it later, during your allotted leisure window.</p><h2>#23. Install
    a Doppler Radar app</h2><p>What does 70% chance of rain mean? Sometimes it means
    there’s a 70% chance of rain over 100% of your area. But it can also mean there
    is 100% certainty of rain, but only over part of your 70% of your area.</p><p>That’s
    confusing. And so the only sane way to check the weather is to compare it to the
    Doppler radar. These radars visualize the rain and the direction that the rain
    is heading. That way you can eyeball for yourself if the rain is actually going
    to affect you.</p><p>Download the <a href="https://itunes.apple.com/us/app/noaa-weather-radar-live/id749133753?mt=8">NOAA
    Radar app</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2250/1*16MiLzwYt_LcfWj-5WcaSA.jpeg"
    alt="This Doppler shows rain in the NYC area, but nowhere near where I live in
    Brooklyn."><em>This Doppler shows rain in the NYC area, but nowhere near where
    I live in Brooklyn.</em></p><p>While you’re setting up weather, you should place
    this Doppler app on your home screen, and then go to your Today screen and turn
    on Apple’s Weather widget.</p><p>A big part of productivity is planning. You’ve
    heard a million people complain about how inaccurate weather forecasting is. So
    here’s the solution: be your own forecaster.</p><h2>#24. Use this Pomodoro app</h2><p>The
    idea behind Pomodoro is to be fully focused for a set period of time, usually
    twenty-five minutes, and then have a five minute break.</p><p>This is a way to
    train yourself to avoid procrastination. You end up constantly pushing yourself
    a little bit harder to make it to the end of your work period, knowing that you’ll
    get a short reward after.</p><p>The rules of Pomodoro aren’t complicated, but
    it’s still nice to have a dedicated app. There are two good ones, but I prefer
    <a href="https://itunes.apple.com/us/app/be-focused-pro-focus-timer/id961632517?mt=12">BeFocused
    Pro</a> for $2.99 because it can easily categorize your Pomodoros. For example,
    I’m currently in a Pomodoro that I marked for the Writing category.</p><ul><li>Install
    the <a href="https://itunes.apple.com/us/app/be-focused-pro-focus-timer/id961632517?mt=12">BeFocused
    Pro app</a> and put it on your home screen.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*lKEiufJj90zHRO6CviQgrQ.png"
    alt=""></p><p>When do you use Pomodoro? It’s useful for when you are doing individual
    work, like checking your email or working on a project. You wouldn’t use this
    method during a meeting.</p><p>This is one of a handful of strategies in this
    article for beating procrastination. My intention is that you use all of them
    at once. For example, the Meditation section is mostly focused on meditation as
    training that allows you to catch and overcome the feelings that lead to procrastination.</p><p>Pomodoro
    comes at procrastination from a different perspective. It makes for a smaller,
    more achievable goal. A lot of people get down on themselves if they can’t go
    an entire 8-hour work day without procrastinating. Pomodoro helps you set a more
    achievable goal, say 25 minutes. And if that’s too long, make your Pomodoro even
    shorter. You can always start small and build up to your final goal.</p><p>(The
    third main strategy for beating procrastination is next — using Brain.fm for background
    noise.)</p><h2>#25. Use Brain.fm for background noise</h2><p>A lot of people have
    trained themselves to listen to music while they work. But almost all research
    says that performance is poorer in the presence of a background sound.</p><p>One
    obvious benefit, though, of music is social. You put on your headphones and people
    know not to bother you. I often wear headphones with no sound just to indicate
    to my coworkers that I’m busy.</p><p>The research, however, on <a href="http://musicatwork.net/music-at-work-distracting-or-beneficial/">music
    as a background noise</a> is that it’s tricky — there are occasional benefits
    to productivity but also many, many pitfalls. There is another approach: an emerging
    field of auditory science used to boost focus and reduce mind-wandering.</p><p>Brain.fm
    is the best of these brain music options.</p><ul><li><p>Download the <a href="https://itunes.apple.com/us/app/brain-fm-music-for-the-brain/id1110684238?mt=8">Brain.fm
    app</a>.</p></li><li><p>It’s free for a week and then $49.99 per year.</p></li><li><p>Use
    their focus music while you work if you’re suffering from lack of focus or procrastination.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2250/1*Cl7rwjiRUGQABkfWce0D4g.jpeg" alt=""></p><p>Since
    I come from the world of coaching, I spend most of my time helping people apply
    behavior changes. As a result, I often end up in a place where I think I see certain
    advice working, but I don’t necessarily understand or trust the scientific explanation
    for why that advice works. That’s the case with Brain.fm.</p><p>My experience
    with Brain.fm is that it’s amazing and works exactly as advertised. Sometimes,
    without sound, my brain will have a tendency to wander. With the Brain.fm focus
    music, it some how shuts down that wandering during any dead spots in my work
    (like if I’m waiting for an app to load). As a result, I have more sustained periods
    of focus.</p><p>However, I find their explanation of the science to be inscrutable.
    It sounds exactly like the type of pop-culture brain science that lots of people
    spout. This doesn’t bother me, as long as it works.</p><blockquote><p>The music
    is designed to have effects on neurophysiology via unique acoustic features woven
    into the music (Brain.fm holds patents for key aspects of this process). Examples
    include modulations optimized to evoke entrainment of neural oscillations, filtering
    to exclude distracting sound events, or smooth movement in virtual space to direct
    attention or avoid habituation.</p></blockquote><p>However, Brain.fm have run
    studies funded by the National Science Foundation that back up my experience,
    which is that Brain.fm is better than silence and silence is better than music.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/0*OEDF4N7HVvjAeOEg.jpg" alt=""></p><p>I
    need to emphasize that this is a corporate-run study that magically ended up with
    a self-serving result. So, more than the science, I just want you to take my word
    for it enough to try it out for yourself (remember, there’s a free trial).</p><h2>#26.
    Subscribe to these podcasts</h2><p>Your podcast app should be on your home screen
    and you should train yourself to listen to podcasts during your commute, while
    cleaning, and during light cardio.</p><p>If you listen to podcasts on the bus
    or subway, here’s an important, little-known fact. It’s preferable to just listen!
    You don’t also have to be playing games and scrolling Instagram. Be a <strong>single-tasker</strong>.</p><p>The
    below are where most people should start when it comes to productivity and health
    podcasts.</p><p>Of course, Tim Ferriss is on this list. But I rounded him out
    so that you get a diverse set of ideas and approaches.</p><ul><li><p><a href="https://itunes.apple.com/us/podcast/by-the-book/id1217948628?mt=2">By
    the Book</a>. These two hosts buy a self-improvement book and then test the advice
    for an entire month. This speaks to my heart: I don’t trust anything in personal
    development until I’ve seen it tested by a third party.</p></li><li><p><a href="https://itunes.apple.com/us/podcast/foundmyfitness/id818198322?mt=2">Found
    My Fitness</a>. Dr. Rhonda Patrick pushes my understanding of the science of health,
    with the goal of improving your energy, focus, health and longevity. She’s very
    focused on explaining new research.</p></li><li><p><a href="https://itunes.apple.com/us/podcast/happier-with-gretchen-rubin/id969519520?mt=2">Happier
    with Gretchen Rubin</a>. I find her approach so much more realistic and human
    than most other productivity and habit experts. Plus I’ve used a lot of her tactics
    with our coaches and the results were amazing.</p></li><li><p><a href="https://itunes.apple.com/us/podcast/jocko-podcast/id1070322219?mt=2">Jocko
    Podcast</a>. He’s a former Navy SEAL with a face made for frowning. <a href="https://www.instagram.com/jockowillink/?hl=en">Don’t
    follow his Instagram</a> — that’s just daily pictures of him waking up at 4am
    and rubbing it in your face. Paired with Gretchen, I feel like you’ll get the
    full emotional range of how to approach life. Jocko’s a no nonsense guy and sometimes
    you need to just quit debating and go take an action.</p></li><li><p><a href="https://itunes.apple.com/us/podcast/the-unmistakable-creative-podcast/id352721366?mt=2">Unmistakeable
    Creative</a> with <a href="undefined">Srinivas Rao</a>. Most of his interviews
    have a productivity or personal development angle. He gets great interviews of
    people I haven’t heard from before. I often pull ideas from his podcast.</p></li><li><p><a
    href="https://itunes.apple.com/us/podcast/the-tim-ferriss-show/id863897795?mt=2">Tim
    Ferriss</a>. Of course you should listen. I thought <a href="https://www.youtube.com/watch?v=LYaMtGuCgm8">episode
    #2</a> was life-changing and have been hooked ever since.</p></li></ul><p>Do not
    approach your podcast subscriptions as if you need to listen to every episode.
    Instead, pick and choose the most recent episodes that feel relevant to you.</p><p>I’ve
    never heard anyone who shares my reasoning for why and how to listen to productivity
    and health podcasts. Most people just think having more information is inherently
    good. That’s not my reason.</p><p>Information is never enough for making important
    changes. You need to get emotionally hooked, amped up and committed. The podcast
    format gives you a chance to connect with advice at an emotional level and really
    feel the social proof. That matters.</p><p>Second, most advice only works for
    some people some of the time. I’ve written before that <a href="https://betterhumans.coach.me/why-picking-yourself-back-up-is-the-1-self-improvement-strategy-fe287eb283b1">you
    should approach personal development advice as if it only has a 10% success rate</a>.
    The obvious implication is that you’ll always be needing to try lots of approaches
    until you find the one that works for you. Given that observation, it feels entirely
    natural to me that you would listen to both Jocko Willink and <a href="undefined">Gretchen
    Rubin</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*jp8nmIipetfRmy6LrCi5ew.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*avUxp_QKiizNN_wDWBR3Sg.jpeg"
    alt="Guess which one of these authors wrote a NYT bestseller about happiness?"><em>Guess
    which one of these authors wrote a NYT bestseller about happiness?</em></p><h2>#27.
    Install the Kindle app, but never read it in bed</h2><p>Do not bother with cliff
    notes. There’s more value in being a slow reader, where the stories in the book
    can work on your emotions, and where your brain can roam freely to make connections
    between the words and your own world. So skip book summary apps like Blinklist,
    and embrace reading on the Kindle.</p><p>So, yes, install the <a href="https://itunes.apple.com/us/app/amazon-kindle/id302584613?mt=8">Kindle
    app</a>. This would be a good app for your home screen. Try to replace mindless
    social media usage with deep learning via either reading or podcasts.</p><p>But
    you’re probably not done.</p><p>Do you like to read before bed? Do not bring your
    phone to bed. That kills your sleep, bad sleep kills your health, and <a href="https://www.youtube.com/watch?v=aXflBZXAucQ">eventually
    your bad health is going to kill you</a>. For the “Human Longevity” promise of
    this article, buy a <a href="https://www.amazon.com/dp/B00OQVZDJM/ref=fs_ods_fs_eink_mt&?tag=coachtony-20">Kindle
    Paperwhite</a> and put that next to your bed. If you’re an iPhone owner, you can
    afford this second device.</p><p>Do you want a book recommendation to go with
    this section? I’ve got one you’re not going to hear anywhere else. Go buy the
    <a href="https://www.amazon.com/Dune-Frank-Herbert-ebook/dp/B00B7NPRY8/?tag=coachtony-20">sci-fi
    book Dune</a> and read it in the context of personal development.</p><ul><li><p>The
    lady-witch advisors, the Bene Gesserit, are what happens when you have fine-tuned
    mastery over habit.</p></li><li><p>The human computing Mentats are what’s possible
    through extreme brain training.</p></li><li><p><a href="https://www.youtube.com/watch?v=QrCfivcQe48">The
    Gom Jabbar test of humanity</a>? That’s the mind-over-matter possible through
    meditation. An animal gives in to the illusion of pain; a human can see through
    that illusion.</p></li><li><p><a href="https://en.wikipedia.org/wiki/Butlerian_Jihad">The
    Butlerian Jihad</a> where humanity overthrew and then banned all artificial intelligence?
    That’s what I keep saying here about making your phone a tool, not your boss.</p></li></ul><p>Also,
    two behavior design notes:</p><p>I’m absolutely positioning the Kindle to be a
    replacement habit for Facebook and Twitter. How much smarter would you be if you
    replaced half of your social media usage with reading?</p><p>Second, I have a
    not-very-well supported theory that’s paired with the book <a href="https://www.amazon.com/dp/B00555X8OA/?tag=coachtony-20">Thinking,
    Fast and Slow</a>. The behavior design implication of that book is that you need
    to speak to two systems of the brain. Speaking to the rational, Slow System is
    easy. Just lay out the facts.</p><p>Speaking to the emotional Fast System is much
    harder, namely because it’s so hard to see or introspect on what’s going on in
    there. But if you accept that difficulty (and this is the part of my theory that
    feels like pop brain science), then you realize that you need to start looking
    for ways to rewire your emotional core.</p><p>Then, having accepted that rewiring
    your emotions is part of most behavior design, I’ve started to notice things —
    like that most self-improvement advice is not very rational. That’s by design.
    A self-improvement book is mostly emotional rewiring. That is exactly why you
    need to read the entire book rather than cheating with a summarized version.</p><h2>#28.
    Use Safari this way</h2><p>I’ve tried and like Firefox Focus and Google Chrome,
    but there’s a problem. Either you’ll end up cutting and pasting URLs that auto-opened
    in Safari or you’ll end up having to manage individual app’s preferences about
    how to handle a URL click.</p><p>Skip those complications. Safari is good.</p><p>There’s
    a secret, super rad option in Safari called Reader mode. This mode strips out
    all of the in-article ads, clutter and junk. I find that it does a great job and
    saves me from fat-fingering ads that have been placed inside the body of the article.</p><p>Here’s
    the before and after on an article in Reader mode.</p><p><img src="https://cdn-images-1.medium.com/max/2250/1*oXkO2oGbmD-uLabz_45Flw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*vs8PotT0mq3o_6tqLmgJwQ.jpeg"
    alt="Good bye Car Ad, Hello Steph Curry Article."><em>Good bye Car Ad, Hello Steph
    Curry Article.</em></p><p>To turn on reader mode once, there’s a little four line
    icon at the top left of Safari. I’d managed to find that on my own.</p><p>What
    I hadn’t realized was that if you long press on that icon, you’ll get an option
    to turn on Reader mode permanently for that site. This is amazing and completely
    changed my experience of reading articles on my phone.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*hmf_Y7eqC-r8qNOgWiSI_A.png"
    alt="Long press on the Reader icon on the top left. Then turn it on for the current
    site or all sites."><em>Long press on the Reader icon on the top left. Then turn
    it on for the current site or all sites.</em></p><p>There are two things that
    you’re setting up here.</p><p>One is that you’ll flat out save time by not seeing
    or accidentally tapping any ads. That’s a small productivity gain each day.</p><p>The
    second is related to being in charge of your phone. You don’t want to see ads
    because you don’t want your phone telling you what to buy and when. Advertising
    on your phone breaks the tool-not-boss rule.</p><h2>#29. Organize your home screen
    for deep learning over shallow learning</h2><p>You’ve hidden all of your shallow
    social media experiences in a folder on your second screen. Now, build a replacement
    habit for those dead times in your day when you would be tempted to be on Twitter
    or Facebook.</p><p>Pick the media that actually makes you smarter and then put
    apps for that on your home screen.</p><p>My apps are Medium, Kindle and Podcast.
    Maybe you include the Washington Post (although that’s probably an anxiety producer
    that doesn’t actually need to be checked all day).</p><p>These are your deep learning
    apps and you just need to make sure they are easier to find than your old, shallow,
    addictive apps.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*y-ZYrlepRxTgezrJpY1uCg.png"
    alt="Spotify is hiding on this screen. When do you listen to that? My recommendation
    is to do deep listening, i.e. pick an album and listen to it while single tasking."><em>Spotify
    is hiding on this screen. When do you listen to that? My recommendation is to
    do deep listening, i.e. pick an album and listen to it while single tasking.</em></p><p>Replacement
    habits are a very common strategy in behavior design. The underlying brain science
    is that it’s <a href="https://www.lifehack.org/668583/why-forming-a-new-good-habit-is-easier-than-breaking-a-bad-one">easier
    to create a new habit than to delete an old habit</a>.</p><p>In fact, you don’t
    ever really delete old habits. You might stop using the neural pathway for your
    old habit, but the neurons are still there, waiting for a moment of weakness.
    Eventually those cells will die out. But there isn’t actually a way for you to
    train them to death.</p><p>That’s why we use replacement habits so often. You
    can train a new, strong habit that supersedes your old habit. In this article,
    we’ve come at social media usage in a bunch of ways, all of which work together.
    We’ve tried to short circuit your existing habits by moving the apps, we’ve added
    accountability through Screen Time, and in this section, we’ve finally introduced
    the replacement habit that you’ll do instead.</p><h2>#30. Track steps this way</h2><p>Skip
    this step if you already have a way you track steps. Lots of you have Fitbits
    or other ways to do this.</p><p>If you aren’t already using a pedometer, your
    iPhone will automatically track steps for you in the Health App. However, you
    don’t want to have to open that app in order to see your step count.</p><p>So,
    you’re going to need to install an app that comes with a Today screen widget.
    My recommendation is Pedometer++.</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*IjhiZVTT5VlkpFKlcgsXzw.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*wVUc_fJhGvh95Wro_DwliA.png"
    alt="Widget and in-app views."><em>Widget and in-app views.</em></p><ul><li><p>Go
    to Settings &gt; Privacy&gt; Motion &amp; Fitness and make sure that Fitness Tracking
    is turned on.</p></li><li><p>Then install the <a href="https://itunes.apple.com/us/app/pedometer/id712286167?mt=8">Pedometer++
    app</a>.</p></li><li><p>Add the Pedometer++ to your Today home screen.</p></li></ul><p>You’re
    building up reasons now to check your Today screen daily. That’s good.</p><p>Also,
    I went looking for some research to include here on the benefits of 10,000 steps.
    Unsurprisingly, the pleasing roundness of that number owes more to marketing than
    to any particular science (9,901 steps is practically just as good).</p><p>There
    is quality research on the health benefits of even tiny amounts of walking (much
    less than 10,000 steps): <a href="https://healthcare.utah.edu/publicaffairs/news/2015/04/04-30-15_short_walks_offset_hazards_of_sitting_too_long.php">trading
    two minutes of sitting per hour for two minutes of walking per hour reduced mortality
    by 33%</a>.</p><p>That’s not a justification for doing a full more-is-better 10,000
    steps though. The science for doing more walking is mixed, and requires piecing
    together your own projections. For instance, this <a href="https://www.ncbi.nlm.nih.gov/pubmed/14715035">2004
    Arizona State paper</a> classifies people who walk 10,000 steps as active and
    people who walk 12,500 as highly active. But they leave it up to you to cross
    reference other studies on the health benefits of being in either activity category.</p><p>So,
    my recommendation is to wait on the science and trust your gut instead. For most
    people, walking feels good. It’s a chance to use your body, to build up pride
    in a consistent amount of activity, to listen to podcasts, to see your town or
    city. Those should be reason enough.</p><h2>#31. Prefer time restricted eating
    over calorie counting</h2><p>You’ve heard losing weight is calories in, calories
    out (CICO). And then you might have also heard this <a href="https://betterhumans.coach.me/why-caloric-restriction-fails-9dc18fe9cf23">is
    wrong</a> <a href="https://www.healthline.com/nutrition/debunking-the-calorie-myth">or
    at least misguided</a>.</p><p>The official position in the Better Humans publication
    is that CICO is just the wrong framing. Rather, instead, you need to think: <em>to
    lose weight, I need to burn fat.</em></p><p>Our position is that weight loss is
    all about putting your body into fat-burning situations.</p><p>Calorie restriction,
    it turns out, is not guaranteed to lead to a fat-burning situation. It can instead
    lead to a lower metabolism.</p><p>What does lead to fat loss then? Low carb diets
    and fasting. And the most common form of fasting is time-restricted eating, where
    you fit all your eating into an 8 hour window and then fast for the next 16 hours.
    People refer to this as 16:8.</p><p>Additionally, my experience watching people
    diet (I ran a <a href="https://medium.com/coach-me-app/pursuit-of-the-perfect-diet-be4809e34563">15,000
    person diet</a> study and have had more than 100,000 dieters come through Coach.me),
    is that time restricted eating is an easier behavior change. Basically, it’s easier
    to train your body to skip breakfast than it is to give up carbs, not for a month,
    but for the rest of your actual life.</p><p>Of course, you can combine both approaches.
    But if you had to pick one, I’d start with time restricted eating.</p><p>If you
    absolutely want to go Low Carb, <a href="https://itunes.apple.com/us/app/myfitnesspal/id341232718?mt=8">download
    MyFitnessPal</a> and upgrade ($49.99/year) so that you can track macros. You want
    to keep your carbs below about 50g. If you don’t pay for the upgrade, you’ll only
    be able to see calories and I’m telling you that’s not effective.</p><p>But really,
    where I want you to start is just to skip all of that food restriction stuff and
    start with time restricted eating. As an example, I try to stop eating before
    8pm and then don’t start again until noon the next day.</p><p>To track all of
    this, use an app called Zero and put it on your home screen.</p><ul><li><p>Install
    the <a href="https://itunes.apple.com/us/app/zero-fasting-tracker/id1168348542?mt=8">Zero
    app</a>.</p></li><li><p>When you stop eating today, open the app and start your
    fast.</p></li><li><p>Don’t eat again until your fasting counter hits 16 hours.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*WZ2N3TwYyb03XKbRbBHTmw.png" alt="Most
    of my fasts end up being 14–16 hours, and then there are always a few 20 hour
    fasts. The longest I’ve ever fasted is 46 hours."><em>Most of my fasts end up
    being 14–16 hours, and then there are always a few 20 hour fasts. The longest
    I’ve ever fasted is 46 hours.</em></p><p>The <a href="https://betterhumans.coach.me/why-caloric-restriction-fails-part-2-ec0c0c337649">best
    explanation</a> why fasting leads to burning fat and why simple calorie restriction
    leads to lower metabolism comes from <a href="undefined">Dr. Jason Fung</a>.</p><p>Consider
    that your body has two primary sources for fuel. One is glycogen, i.e. the carbs
    you eat. And the other is stored fat. Your body uses insulin to switch from one
    source to the other.</p><p>Specifically, when you are in a fed state, i.e. you
    ate recently, your body releases insulin, which inhibits your body from burning
    fat. Dr. Fung’s uses a train track visualization below and I always try to keep
    in mind which track I’m intending to be on.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*ngop5o8I_kfu7vQCAe5ahQ.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*4_UCh99w45CIBKj1pbW5Hw.jpeg"
    alt=""></p><h2>#32. Schedule Night Shift starting 4 hours before you normally
    go to bed</h2><p>Night shift “shifts” the colors of your display away from the
    blue spectrum and toward the warmer (redder) spectrum. That’s supposed to help
    you sleep better.</p><ul><li><p>Go to Settings &gt; Display &amp; Brightness &gt;
    Night Shift.</p></li><li><p>Schedule Night Shift starting four hours before your
    normal bed time.</p></li><li><p>Move the warmth slider all the way to the right
    (More Warm).</p></li></ul><p>The standard advice seems to be to avoid screen time
    and blue light starting two hours before your bed time.</p><p>However, my experience
    with sleep coaching is that people are often going to bed much later than they
    should, often because of a phone addiction. Starting Night Shift four hours earlier
    gives you an opportunity to both go to sleep more easily and also to shift your
    bed time up. If you find yourself going to bed earlier, then just get up earlier.
    Congratulations, you’ve become a morning person.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*YoeXoVmrv3aD-b1AXMNxcw.png"
    alt=""></p><p>The case against screens is strong. <a href="http://www.pnas.org/content/112/4/1232">Here
    a quote from one study</a>:</p><blockquote><p>We found that the use of these devices
    before bedtime prolongs the time it takes to fall asleep, delays the circadian
    clock, suppresses levels of the sleep-promoting hormone melatonin, reduces the
    amount and delays the timing of REM sleep, and reduces alertness the following
    morning.</p></blockquote><p>All bad.</p><p>The science for the red shift as a
    solution to all of the above negative effects is much more iffy. In fact, Night
    Shift is a pretty silly feature. The studies say blue light is bad. But at the
    time the Night Shift feature was built, nobody had done proper testing of red
    light. It turns out <a href="https://www.nature.com/articles/lsa2016231">red light
    is also bad</a>.</p><p>So, the reason I like this feature is because it’s a prompt
    to start working on your evening routine to head to bed. Basically, it’s just
    a color coded reminder. That’s it.</p><h2>#33. Set up Medical ID</h2><p>The Medical
    ID feature makes key medical information available to strangers when your phone
    is locked.</p><p>If you are incapacitated during a medical emergency, a stranger
    can go to your power-off screen (long press right button and volume up on modern
    iPhones). That’s where your Medical ID info will be.</p><ul><li><p>Go to Health
    App &gt; Medical ID &gt; Edit</p></li><li><p>Everyone should add an emergency
    medical contact.</p></li><li><p>Your medications and medical conditions would
    be public to anyone who picks up your phone. If that worries you, put a note instead:
    “Call emergency contact for medications and medical conditions.”</p></li><li><p>Knowing
    your blood type doesn’t appear to be very helpful in an emergency situation. <a
    href="https://www.quora.com/How-fast-can-paramedics-find-out-what-my-blood-type-is-in-an-emergency-situation">Paramedics
    aren’t carrying blood</a> — they pump you with fluids instead. Then when you reach
    the hospital, they’ll give you the universal donor, O-negative.</p></li><li><p>I
    labeled myself an Organ Donor and went through Apple’s DonateLife integration.
    Then I tweeted about it. The more people who sign up for Organ Donation, the more
    likely your own life is going to be saved. So the selfish step here is to use
    your own organ donation status to encourage other people to become organ donors.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2062/1*TDmB21NxwqH5EYU7Q8F1Lg.png" alt=""></p><p>I
    see Medical ID as having three practical benefits to you, in order of likelihood.</p><ul><li><p>A
    kind stranger finds your lost phone and calls your emergency contact.</p></li><li><p>You
    have a life-threatening situation, and the doctors call your emergency contact.</p></li><li><p>You
    influence someone else to become an Organ Donor and then they end up donating
    an organ to you. The literal likelihood of this is very, very low.</p></li></ul><h2>#34.
    Change Siri to a man</h2><p>Product designers <a href="https://medium.com/pcmag-access/the-real-reason-voice-assistants-are-female-and-why-it-matters-e99c67b93bde">consistently
    choose female voices for services like Siri and Alexa</a> because culturally we’re
    more comfortable with bossing around women.</p><p>Put aside that that’s gross
    for one second.</p><p>You’re a productivity nut. You’re going places. Don’t you
    think at some point you’re going to have to get comfortable bossing around men?</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*BDDHG4zkmdsl68f8A770_Q.png" alt="Should
    I run a study of the productivity benefits of each accent?"><em>Should I run a
    study of the productivity benefits of each accent?</em></p><ul><li>Go to Settings
    &gt; Siri &amp; Search &gt; Siri Voice. I chose Australian Man.</li></ul><p>This
    is going to get weird and darkly introspective.</p><p>Originally, I’d looked into
    changing Siri’s voice because somebody had told me that men are more likely to
    be cruel to a female-voiced AI. You know what I mean about getting frustrated
    when Siri or Alexa makes a mistake. Alexa, especially, likes to butt in and is
    just begging to be told to shut up. I’m constantly having to tell Alexa, “Alexa,
    stop.” but how close am I to cracking and yelling “Shut up, bitch?”</p><p>I don’t
    treat any woman in my life that way and I don’t want to start with a robot.</p><p>I
    couldn’t find any research at all to back up this idea of gendered cruelty to
    robots, although I did find <a href="https://slate.com/technology/2018/04/i-judge-men-based-on-how-they-talk-to-the-amazon-echos-alexa.html">published
    anecdotes</a>:</p><blockquote><p>When Jeremy barked orders at his personal assistant,
    she didn’t flinch, but I did. Something about the sound of his sharp, commanding
    tone — directed not at me, but still, at a woman — repulsed me. In the few weeks
    we had been dating, he had never spoken to me this way. But could he? Hearing
    Jeremy make ungrateful demands didn’t make him seem powerful or important. He
    sounded entitled and difficult, like someone who enjoyed commanding for the sake
    of commanding. He would ask her to do things he could easily do himself, almost
    as if to prove that he could. Surely, it would take less time to reach out and
    hit the light switch by the door than to bark “ALEXA. LIGHTS ON” every time he
    entered the apartment.</p></blockquote><p>Not finding more established research,
    I backtracked to to the person who’d originally told me this. Her sources were
    multiple backchannel discussions from people who work on these AI products. People,
    not just men, say the rudest, cruelest things to female AIs, much ruder and cruder
    than they do to male AIs. If I can get one of these AI product people on the record,
    I’ll add it to this post.</p><p>Our relationships to robots is so weird and interesting
    and scary — there’s deep cultural conditioning, new robot etiquettes, power dynamics,
    etc.</p><p>At heart, I’m worried about developing patterns with my female AIs
    that I don’t have with my female friends, peers and colleagues. And what if those
    AI patterns transfer over to my human interactions?</p><p>You might think the
    opposite, why can’t I practice treating my female AIs with respect and grace?
    I don’t have a good answer. I just know that this dynamic is worth examining in
    yourself.</p><p>Was this too weird of a tangent? This is honestly the type of
    shit I think about all day.</p><h2>#35. Change your phone’s name</h2><p>The default
    is something like, “Tony Stubblebine’s iPhone.” That exposes your privacy when
    you have your hotspot turned on, and advertises to the entire world that you don’t
    know how to customize your phone.</p><p>There are three strategies for choosing
    a new name:</p><ol><li><p>Entertain the people around you. For example, “<a href="https://wifinames.net/funny-wifi-names/">Pretty
    Fly for a Wifi</a>.”</p></li><li><p>Advertise your services, “$15 off coach.me
    w/ HOTPROMO”</p></li><li><p>Inspire yourself with positivity. I got this idea
    from an old Hippie Cafe in San Francisco that named everything after an affirmation.
    To order the enchiladas you’d end up saying something like “I Am a Glamorous Goddess.”
    You can browse <a href="http://places.singleplatform.com/cafe-gratitude/menu">their
    old menu for inspiration</a>, or just take my recommendation. I chose “I Am Focused”
    and now my phone shows up as “I Am Focused.”</p></li></ol><p>Here’s how to set
    this yourself:</p><ul><li>Go to the Settings app and then navigate to General
    &gt; About &gt; Name.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*6efQvoSR_vb-mcB1Gh0o-A.png"
    alt="NSA-car-on-the-corner is someone using strategy #1."><em>NSA-car-on-the-corner
    is someone using strategy #1.</em></p><p>Positive self-talk is actually surprisingly
    effective. I always thought it was too woo-woo, but then I tested it out with
    some people at work. They all said it was more effective than anything we’d ever
    done, including journaling, meditation, sleep, priority setting, and morning routines.
    People have a lot of negative self-talk that they don’t like, but which they haven’t
    taken the time to train theirselves out of.</p><p>If you’re interested in positive
    self-talk, I got my start with <a href="https://www.panoply.fm/podcasts/bythebook/episodes/57z4vTurheGOsMSKsAwWkY">this
    By the Book episode</a>, where they read and tested a book about changing your
    self-talk.</p><p>Of course, training yourself to be more positive isn’t as simple
    as changing the name of your phone, but it’s a start.</p><h2>#36. Turn off advertising
    tracking</h2><p>If you turn off advertising tracking, then the ads you see won’t
    be specifically targeted to you and what advertisers know about you. The point
    here is that getting less targeted ads is good. You want to spend money on your
    own terms.</p><p>This is a variant on “your phone is a tool, not your boss”. When
    you want to spend money, you want to use your phone for research and then make
    a purchase based on that research. You do not want the other way around, where
    your phone is telling you or brainwashing you what to buy. You are the boss.</p><ul><li>Go
    to Settings &gt; Privacy &gt; Advertising. Turn on Limit Ad Tracking.</li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*414Zm934x3JqEolEh4Mxpw.png" alt=""></p><p>You’re
    still going to get advertising in some places, but almost all of the advice I’ve
    given here includes paying for the ad-free version of the apps you use.</p><p>Paying
    for ad-free apps probably saves you money, as you’re less likely to buy something
    you don’t want.</p><h2>#37. Set auto-lock to the maximum time</h2><p>When you
    stop using your phone, it’ll auto-lock to prevent some stranger from grabbing
    your phone and digging through your private info. That’s basically a good feature,
    but most often the result is that you end up locking yourself out.</p><p>Most
    people keep their cell phones on their person — so keeping your phone locked is
    not a huge security risk. We’re only talking about five minutes — that’s the maximum
    auto-lock setting. If you check your phone on the way into your gym, walk to your
    locker, put your phone in your locker, change into your workout clothes, lock
    your locker and walk away, your phone has probably already locked itself. (Plus,
    most of you actually take your phone out to the gym with you!)</p><p>So the strategy
    here is to save yourself the few seconds it takes to unlock your phone by extending
    the auto-lock time.</p><ul><li><p>Go to General &gt; Settings &gt; Display &amp;
    Brightness &gt; Auto-Lock.</p></li><li><p>Max out auto-lock to 5 minutes.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*osGJBvA0ixdX0rCA0xHqLQ.png" alt="“Never”
    would be too aggressive."><em>“Never” would be too aggressive.</em></p><p>My take
    on the value of saving time here is that those few seconds of waiting for a phone
    to wake up is when you are at risk for getting distracted. So, worst case this
    setting saves you a few minutes of time (<a href="https://www.freshrelevance.com/blog/how-often-do-people-really-check-their-mobile-phones">research
    says you check your phone 25 times per day</a>). But best case, it saves you from
    30 minutes of goofing off.</p><h2>#38. Set your personal hotspot password to a
    random three-word phrase</h2><p>Sometimes you need to share your hotspot password
    with a close friend or loved one. A random three-word phrase is something you
    can say out loud that they won’t have trouble spelling.</p><p>This is also a more
    general trick for creating quality passwords that are easy for you to say or remember.
    Think about your router’s password for example and how you’re always having to
    share it with guests. Sharing a three-word phrase is so much easier than a string
    of random letters and numbers.</p><p>The debate about the security of this strategy
    for passwords ranges from <a href="http://preshing.com/20110811/xkcd-password-generator/">very
    positive</a> to <a href="https://nakedsecurity.sophos.com/2012/03/19/multi-word-passphrases/">just
    slightly positive</a>.</p><ul><li>Go to Settings &gt; Personal Hotspot. Set the
    password to something like appleduckmovie.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*YxDNyunu88AlhBVD_GuuOA.png"
    alt="I did an edit pass to try to remove my private info from this article — so
    this is not my actual password."><em>I did an edit pass to try to remove my private
    info from this article — so this is not my actual password.</em></p><p>I spent
    a summer driving all over the United States, totaling 9,000 miles while working
    from a campervan. I know a thing or two about internet access from weird spots.
    In almost all places, using my phone as a hotspot beat out trying to find local
    wifi. My phone was faster and more convenient. This setting is about making your
    hotspot even easier to use, especially when you are connecting new devices to
    it or sharing it with traveling companions. That can actually be a real productivity
    win.</p><h2>#39. Turn on Control Center everywhere</h2><p>Swipe down from the
    top-right of your screen and you’ll have access your Control Center which contains
    toggles for wifi, bluetooth, flashlight and more.</p><p>Apple wants to give you
    the option to turn this behavior off when you’re inside of a different app. That’s
    a mistake.</p><p>The main reason to have always-on access to the control center
    is so that you can toggle wifi on and off. Direct, manual toggling of the source
    of your internet is an important way to control the speed of your app experiences.</p><ul><li><p>Go
    to Settings &gt; Control Center. Enable Access Within Apps.</p></li><li><p>While
    you’re here, go to Customize Controls. You might want to add some more options.
    I put my alarm and timer here since I use both and want shortcuts.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*TO8FG4QaL8jZLsRcXAU-Ug.png" alt="Isn’t
    Orientation Lock the weirdest, feature-bloatiest, least-Apple option? Does anyone
    unlock their orientation for any reason other than videos? And then does anyone
    remember to turn it back on afterward? IMO — this feature should be removed and
    full screen videos should always play in portrait mode."><em>Isn’t Orientation
    Lock the weirdest, feature-bloatiest, least-Apple option? Does anyone unlock their
    orientation for any reason other than videos? And then does anyone remember to
    turn it back on afterward? IMO — this feature should be removed and full screen
    videos should always play in portrait mode.</em></p><p>There have been dozens
    of times where I’ve wondered why an app was slow and then realized the culprit
    was either the wifi or the cell signal. As someone who travels a lot, I often
    find that I get the best internet speeds when I’m willing to take direct control
    of switching between wifi and cell service. Sometimes one of those is much stronger
    than the other.</p><p>When you are using your phone as a tool, then fast internet
    is a direct link to productivity. That’s the main reason to have access to the
    Control Center.</p><h2>#40. Turn on Background App Refresh</h2><p>This setting
    used to clog up your bandwidth and kill your phone battery. But we’re in a new
    era of fast bandwidth and better batteries. So turn it on.</p><p>The upside is
    that you’ll have one less thing to manage, and all of your apps will stay updated
    automatically.</p><ul><li>Go to Settings &gt; General &gt; Background App Refresh
    and make sure everything is toggled on.</li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*6aKlh3oeSWW-k59AMOPjDg.png"
    alt=""></p><p>No special discussion here other than referencing saving your <strong>cognitive
    budget</strong>. When automation works well, you’re saving your brain cycles to
    do something better. That’s the case here.</p><h2>#41. Delete Garage Band</h2><p>GarageBand
    was 1.8GB when I went to check my installed apps. On a new phone, I’m not planning
    to do a lot of managing my storage, but 1.8GB is enough to get my attention.</p><ul><li><p>Go
    to Settings &gt; General &gt; iPhone Storage.</p></li><li><p>Tap through to any
    large apps you aren’t planning to ever use. There will be a delete option there.</p></li></ul><p>Don’t
    worry, you can always reinstall these apps.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*iHNn9RkNbNt48bds_jntiQ.png"
    alt="Never used Uber? That’s how you can tell this is a new phone."><em>Never
    used Uber? That’s how you can tell this is a new phone.</em></p><p>This is the
    sort of thing that’s better to do now, while your focused attention is on setting
    up your iPhone. You’re saving yourself time down the road when you run out of
    storage at an inopportune time.</p><h2>#42. Develop verbal memory for talking
    to Siri</h2><p>Some people take right away to talking to Siri, and other people
    don’t.</p><p>The problem is the mental version of muscle memory. If you’ve never
    talked to Siri, then it’s hard to muster the new behavior in those occasional
    times where it would be useful.</p><p>Here’s what I suggest: go through the script
    below a few times and see if anything sticks. You can turn on Siri by long pressing
    the button on the right of your iPhone. In parentheses, I’ve listed the phrase
    that will reverse the alarm or reminder that you just set.</p><ul><li><p>Set alarm
    for tomorrow at 8am. (Turn off alarm)</p></li><li><p>Remind me to check the oven
    in 35 minutes. (Remove reminder to check the oven)</p></li><li><p>How old is Malcom
    Gladwell?</p></li><li><p>Timer for 10 minutes (Turn off timer)</p></li><li><p>What
    is 20% of 46?</p></li></ul><p>Now do something to make calling people easier.
    Set a nickname for a loved one, like your mom.</p><ul><li><p><Person’s full name>
    is my mom</p></li><li><p>Text my mom love you</p></li></ul><p>What we just did
    here is a tactic called deliberate practice. When most people read about an iPhone
    trick, they will try to store the trick away in their memory, hoping that they
    will remember that trick down the road.</p><p>I want you to consider a much more
    effective approach. If you ever think you want to use a new trick or behavior
    later on, try practicing it first. The practice makes later recall so much more
    likely.</p><p>This is really a life philosophy to build in practice time for all
    of your life and work skills. For a very deep dive, see <a href="undefined">Jason
    Shen</a>’s <a href="https://betterhumans.coach.me/the-complete-guide-to-deliberate-practice-3a70319be3af">Complete
    Guide to Deliberate Practice</a>. This is the same article I recommended in the
    Meditation step.</p><h2>#43. Set up these Text Replacement shortcuts</h2><p>There
    are basically two keyboard shortcuts that everyone should have. One is for your
    email address and the other is for your home address.</p><p>Once you get used
    to the power of shortcuts, you’ll probably start adding more.</p><p>Go to Settings
    &gt; General &gt; Keyboard &gt; Text Replacement</p><ul><li><p>Add your full address.
    I used the shortcut: <em>ma</em></p></li><li><p>Add your full email address. I
    used the shortcut: <em>em</em></p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2048/1*slsot1o6CrQhKaz3Ltjk6Q.png"
    alt="It’s easy to make the mistake of getting the phrase and shortcuts reversed.
    You should test these right after adding them."><em>It’s easy to make the mistake
    of getting the phrase and shortcuts reversed. You should test these right after
    adding them.</em></p><p>Now when you type either of those shortcuts, you’ll get
    an option to autocomplete to your full text replacement.</p><p>This is a pure
    and simple productivity hack. No discussion necessary.</p><h2>#44. Set your address</h2><p>There
    are at least (at <em>least</em>) five places where your phone will pull your home
    address.</p><p>If you went through the Google Maps section, then you added a home
    address there.</p><p>If you went through the Text Replacement section, then you
    set a shortcut for your address.</p><p>There are still three more places to set:</p><ul><li><p>Go
    to Settings &gt; Apple Id Etc. &gt; Payment &amp; Shipping.</p></li><li><p>Go
    into Settings &gt; Wallet &amp; Apple Pay and check your Shipping Address option.</p></li><li><p>Also,
    Siri pulls your home address for your personal entry in your contacts. Go into
    Contacts and then edit your own entry in order to make sure it’s current.</p></li></ul><p>Boom.
    Now you’ve saved yourself some typing down the road. That’s productivity.</p><h2>#45.
    Backup this way</h2><p>Yes, you should have backups even though practically every
    app you install stores your data in the cloud. But backups do make it much easier
    to set up a new phone when you upgrade (or lose it).</p><p>I strongly suggest
    iCloud backups — they’re cheap. I’m on the $10.99/year package for 20GB and creeping
    toward the next level which is just another $0.99/month for another 30GB.</p><ul><li>Go
    to Settings &gt; Apple ID &gt; iCloud.</li></ul><p>There should be options there
    to manage your iCloud storage and which apps get backed up. You should back up
    most of them given how cheap storage is.</p><p>I used to resist paying for backups,
    but the math on the time savings alone is great. You’ll pay a few tens of dollars
    to save yourself hours of work when you upgrade your phone. And then you’ll save
    yourself a huge headache if you actually do lose your phone completely.</p><h2>Appendix
    A: Principles</h2><p>Below are the principles that come up over and over again
    in this article. Where possible, I’ve tried to cite science.</p><p>However, many
    of these principles come through my work at Coach.me. We started as a gamified
    habit tracker, and through that experience, we helped a few million people form
    a few tens of millions of new habits. The vast majority of those people were motivated
    by productivity or health.</p><p>And then, also through Coach.me, I ran a brain
    training group that worked individually with 2,000 people and, separately, started
    a behavior design coaching certification that’s produced coaches who’ve worked
    more than with 20,000 clients.</p><p>So, the principles that don’t have citations
    are, <a href="https://giphy.com/gifs/opinion-the-big-lebowski-well-thats-just-like-your-man-26BRrSvJUa0crqw4E">well,
    just, like, my opinion, man</a>.</p><h3>#1. Your phone is a tool, not a boss</h3><p>No
    need to lead with science here — this starts as dead simple philosophy. What’s
    the point of life? Abdicating your life to be a servant of your phone is a shitty
    approach.</p><p>Moreover, a lot of research points out that your phone is not
    a very good boss. See <a href="undefined">Tristan Harris</a>’ <a href="https://medium.com/thrive-global/how-technology-hijacks-peoples-minds-from-a-magician-and-google-s-design-ethicist-56d62ef5edf3">How
    Technology is Hijacking Your Mind</a> or <a href="undefined">Linda Stone</a>’s
    <a href="https://lindastone.net/2014/11/24/are-you-breathing-do-you-have-email-apnea/">Email
    Apnea</a>.</p><h3>#2. Shave seconds to break procrastination</h3><p>There are
    a handful of exercises in this article that have very small surface-level productivity
    gains. Does it really matter if you save one second every time you open your phone?</p><p>I
    say yes. In my experience training people to break procrastination or enter flow
    states, those pauses are prime times for you to get distracted. In those cases,
    a two second pause can turn into a 30 minute break.</p><p>If any programmers are
    reading this, what is the honest answer to how long it takes to run your automated
    tests? Is it the literal time that the tests run, or the time of the break you
    take while the tests are running?</p><h3>#3. Conserve cognitive budget</h3><p>From
    my piece on <a href="https://betterhumans.coach.me/superhuman-cognitive-stamina-9c8cab847d9e">Superhuman
    Cognitive Stamina</a>:</p><blockquote><p>Every decision, big or small, every moment
    of mental focus, and every act of comprehension is part of your day’s cognitive
    stamina. Let’s call that your <strong>cognitive budget</strong>.</p></blockquote><p>Many
    people look at this as the Steve Jobs turtleneck story. What did he wear to work
    every day? A black turtleneck. So while you were spending your cognitive budget
    getting dressed, he was saving his up for when he got to work.</p><p>So, on your
    phone, you want to look for places to eliminate decisions ,because you’ll use
    those decisions somewhere else.</p><p>This <a href="https://www.nytimes.com/2011/08/21/magazine/do-you-suffer-from-decision-fatigue.html?pagewanted=all">NYT
    piece is the right primer</a> on the research that says willpower is limited.
    This other NYT piece is the right primer on Carol Dweck’s work that points to
    the opposite conclusion, that<a href="https://www.nytimes.com/2011/11/27/opinion/sunday/willpower-its-in-your-head.html">
    self-belief determines if willpower is a limited resource</a>. Science is so frustrating
    — two seemingly opposing views. I believe willpower is limited, but trainable.</p><h3>#4.
    Messy systems beat rigid systems</h3><p>When you spend time in the productivity
    world, you start to realize how much time people spend playing around with productivity
    systems.</p><p>Part of this is that a lot of productivity nuts are pursuing productivity
    as a hobby — essentially, they are role-playing a world where they are more successful.
    So for them, it’s fun to constantly tweak systems and try new tools.</p><p>However,
    the other reason people spend so much time changing tools and systems is that
    rigid tools and systems break. When they break, it’s almost always easier to just
    start over from scratch with a new system.</p><p>So, where possible, try to use
    a messy system. Those will tend to be less fragile. In this article, the most
    common messy systems were backed by a strong search feature.</p><h3>#5. Habits
    beat tools</h3><p>A strong habit is a case where you can do something automatically
    and effortlessly. That’s so valuable. It’s very rare that a new tool has a feature
    that’s more valuable than your old habit.</p><p>Many productivity reviews say
    the opposite. They say you should definitely try the newest and latest thing.</p><p>They’re
    wrong. If you have a habit based around an old tool, then you should be unapologetic
    about sticking with that tool.</p><p>If any programmers are reading this, a good
    tool to examine would be your text editor. I alternate between Sublime and Vim.
    I want to be a Sublime user, but my muscle memory around Vim shortcuts is so good
    that I still find I’m much more productive in Vim which was publicly released
    in 1991 and which I’ve been using since 1996.</p><h3>#6. Optimize for deep work
    &amp; deep learning</h3><p>I’m strongly influenced by Cal Newport’s book, <a href="https://www.amazon.com/dp/B00X47ZVXM/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1&?tag=coachtony-20">Deep
    Work</a> and Mihaly Csikszentmihalyi’s book, <a href="https://www.amazon.com/Flow-Psychology-Experience-Perennial-Classics-ebook/dp/B000W94FE6/?tag=coachtony-20">Flow</a>.</p><p>Cal
    comes from the perspective of deep work often being your most productive and valuable
    work. Mihaly’s research was actually just focused on happiness. Deep work is when
    people report the deepest levels of satisfaction.</p><p>Both of them recognize
    how difficult it is to do deep work or deep learning. Those moments don’t come
    by accident, and when they do, they are easily disrupted.</p><p>A lot of the advice
    in this article is meant to make it just a little bit easier for you to focus,
    to get into flow, and to achieve deep thinking and deep accomplishments. The main
    strategies are to eliminate interruptions, replace shallow behaviors with deeper
    ones (reading vs. tweeting), and schedule leisure activities and shallow activities
    so that they don’t interfere with your deep work.</p><h3>#6. Yes, your phone does
    impact your longevity</h3><p>By default, your phone is set up to create anxiety.
    I referenced a study about <a href="https://www.webmd.com/mental-health/news/20120731/mild-anxiety-may-shorten-persons-life">how
    mild anxiety leads to increased mortality</a> twice in this article.</p><p>You
    paid too much for your iPhone to let it kill you — that’s an outrageous side effect.
    So instead, eliminate the anxiety.</p><p>I gave a few examples of how your phone
    can change your diet and activity patterns in order to help you live longer. Use
    Coach.me, Zero &amp; the Pedometer.</p><h2>Appendix B: Budget &amp; Costs</h2><p>The
    bare-bones budget for the advice in this article is as follows:</p><ul><li><p>$24/year.
    LastPass.</p></li><li><p>$11/year. iCloud backup.</p></li><li><p>$24/year. Google
    storage.</p></li></ul><p><strong>Bare-bones budget: $59/year</strong></p><p>The
    mid-level budget for the advice in this article adds:</p><ul><li><p>$120 for Kindle
    Paperwhite</p></li><li><p>$2.99 Pomodoro Pro</p></li><li><p>$70/year for Evernote</p></li><li><p>$60/year
    for Calm</p></li></ul><p><strong>Mid-level budget: $122.99 up front and then $189/year</strong></p><p>The
    max-level budget for the advice in this article is</p><ul><li><p>$50/year. Brain.fm</p></li><li><p>$1,000/year.
    A pet dog for your wallpaper (<a href="https://www.petfinder.com/pet-adoption/dog-adoption/how-much-does-a-dog-cost/">estimated
    from PetFinder</a>).</p></li><li><p>$130 for two months of productivity coaching.
    I recommend a coach for forming a new habit picked from <a href="https://www.coach.me/coaches/plan/882">Inbox
    Zero</a> or <a href="https://www.coach.me/coaches/plan/906">Set Priorities</a>.</p></li><li><p>$10
    for the Kindle version of Dune.</p></li></ul><p><strong>Max-level budget: $262.99
    up front and then $1,172.99/year.</strong></p><h2>Appendix C: Case study</h2><h1>1.
    <a href="#7a27">Turn OFF (Almost) All Notifications</a>.</h1><p>Zero badges anywhere.
    No notifications for messaging, email, Slack. My most notable deviation for notifications
    is for Coach.me.</p><h1>2. <a href="#81d4">Hide social media slot machines</a></h1><p>I
    don’t have the Facebook app installed although I do check the web sometimes. Facebook
    bullied me into having the Facebook Messenger app installed because they won’t
    show me messages on the mobile website.</p><h1>3. <a href="#1448">Hide messaging
    slot machines</a></h1><p>I do see text messages on my home screen from a small
    handful of people, namely my family and my dog walker. I look at everything else
    during scheduled inbox time.</p><h1>4. <a href="#d4a3">Disable App Review Requests</a></h1><p>Done.</p><h1>5.
    <a href="#b1ad">Turn on Do Not Disturb</a></h1><p>Done, but just for leisure and
    sleep time, i.e., 6pm to 9am.</p><h1>6. <a href="#25ea">Be strategic about your
    wallpaper</a></h1><p>I went with the built in black-with-rainbow.</p><h1>7. <a
    href="#791e">Turn off Raise to Wake</a></h1><p>Done.</p><h1>8. <a href="#692c">Add
    the Screen Time widget</a></h1><p>Done.</p><h1>9. <a href="#73f0">Add Content
    Restrictions</a></h1><p>Just sfgate.com for me, which was a website that made
    more sense to visit when I lived somewhere else.</p><h1>10. <a href="#35ba">(Optional)
    Use Restrictions to turn off Safari</a></h1><p>I did this once in the past. I
    would do this again temporarily to break any new web browsing habits.</p><h1>11.
    <a href="#c41e">Organize your Apps and Folders alphabetically</a></h1><p>This
    is how I did it. You probably won’t have a TV folder like I do — most of those
    apps are just ways to watch Warriors basketball games.</p><p><img src="https://cdn-images-1.medium.com/max/2250/1*gy0b_M2xQFatGx1f94h7cQ.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*o9OeUbbA5GsAf8h0J6NByA.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*3rZ0dUmQb-wzs4vLGiPOGQ.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*3KxweTDLjB_PqMLf2H7drw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*-feHCTaZW_QxSlgZJB4aIg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*sWIoq2pqa7k_moksBv17Zg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*6OUH6pXhYtxSHYmRXhxt_w.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*Z9WbHw4siyr0FQKq-jzTeA.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*1QOfMLiUNugiQedD_BngEw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*xTUKynr-zzJj99AyC2j0jg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*nh3QjfEpXAKk_vm7pZ91og.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*dAK9N0A9p7vYQZpnoUvV6g.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*vq5s-1boRMkzQj3jQKhvCg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*5ZcyXFUdBswMHAZylm1yTQ.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*QWervLibxNV1JFYbLXR0Vw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*PETTtfMBpn3KMNUbm66Hcg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*KFoGfGWJiNPa1PzfKhZ8yg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*QSNPw3EpqIHkzYLpLiQmxg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*kERBZbXgJ71A-VjmiqKtGA.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*R891iw_cJyUv4rzqlrItMA.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*BOQfItyx7Q2njJnsMHs3xQ.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2250/1*zUC-frgh7owi3I84p54FSA.jpeg"
    alt=""></p><h1>12. <a href="#6ab1">Choose Gmail</a></h1><p>Yes. I get to Inbox
    Zero every day, practice “Touch it Once” where I never read an email more than
    once, and unsubscribe/mute/filter so that I have as little email in my inbox as
    possible. I don’t use any built-in smart filters.</p><h1>13. <a href="#0041">Choose
    Google Calendar</a></h1><p>Yes.</p><h1>14. <a href="#2735">Replace Apple Maps
    with Google Maps</a></h1><p>Yes. I only have a Home set, since I work from home.</p><h1>15.
    <a href="#3666">Install the Gboard keyboard for faster typing</a></h1><p>Yes,
    with black background and Apple keyboard removed.</p><h1>16. <a href="#3fcf">Switch
    to Google Photos</a></h1><p>Done.</p><h1>17. <a href="#9c72">Use Evernote for
    all note taking, to-do lists, everything</a></h1><p>Yes. It’s in my toolbar.</p><h1>18.
    <a href="#e103">The Case for Calm as your go-to meditation app</a></h1><p>Done.
    It’s on my home screen.</p><h1>19. <a href="http://fe86">Install the right goal
    tracker for you</a></h1><p>Yes, Coach.me, and more than 11,000 check-ins to my
    habits. I personally track:</p><ul><li><p>Wake up early. This is the most popular
    version of several wake-up goals in Coach.me. My definition is more focused on
    waking up at the same time every day, 8am. If that actually sounds late to you,
    then I’m sorry.</p></li><li><p>Morning routine. It starts right after taking the
    dogs out. Pushups &amp; planks, pet both dogs, hygiene &amp; grooming, get fully
    dressed (which feels optional when you work from home).</p></li><li><p>One priority.
    This is my version of prioritization, which is to pick a top priority and make
    sure it gets done.</p></li><li><p>Interstitial journaling. I mark this off as
    soon as I open my laptop and create a journal entry for the day. Then it becomes
    a mix of journal and to-do/task tracking.</p></li><li><p>Intermittent fasting.
    I mark this off if I can make it until noon without eating.</p></li><li><p>Exercise.
    Usually some mix of long walks, running, biking or swimming.</p></li><li><p>Meditation.
    Most often this is in the sauna post-workout.</p></li><li><p>No caffeine. Not
    necessary when I’m getting quality sleep.</p></li></ul><h1>20. <a href="#4474">Store
    all your passwords in a password manager, probably LastPass</a></h1><p>I use 1Password,
    but if I were starting from scratch I’d use LastPass.</p><h1>21. <a href="#0d96">Use
    Numerical as your default calculator</a></h1><p>Yes.</p><h1>22. <a href="#b924">Put
    the Camera app in your toolbar</a></h1><p>Yes.</p><h1>23. <a href="#c248">Use
    this Doppler Radar app</a></h1><p>Yes.</p><h1>24. <a href="#cf71">Use this Pomodoro
    app</a></h1><p>Yes.</p><h1>25. <a href="#88ef">Use Brain.fm for background noise</a></h1><p>Yes.</p><h1>26.
    <a href="http://d94e">Subscribe to these podcasts</a></h1><p>Subscribed.</p><h1>27.
    <a href="#8193">Install the Kindle app but never read it in bed</a></h1><p>Yes.
    I charge my phone in the kitchen and use my Kindle Paperwhite in bed.</p><h1>28.
    <a href="#e1aa">Use Safari this way</a></h1><p>Yes. The option to automatically
    turn on readability-mode for certain sites is one of my favorite features.</p><h1>29.
    <a href="#d59c">Organize your home screen for deep learning over shallow learning</a></h1><p>Yes.</p><h1>30.
    <a href="#2af1">Track steps this way</a></h1><p>I also get steps from a Garmin
    watch, but I find I’m more likely to have my phone on me than I am to be wearing
    my watch. So my phone has the more accurate count.</p><h1>31. <a href="#947a">Prefer
    Time Restricted Eating Over Calorie Counting</a></h1><p>Yes. Love the Zero app
    and I generally try not to eat before 12. I also own a <a href="https://www.amazon.com/KETO-MOJO-Glucose-Testing-ketogenic-Carrying/dp/B0789G8KTG/?tag=coachtony-20">KetoMojo
    blood tester</a> ($60) to measure when I’m in a fat burning mode.</p><h1>32. <a
    href="#3629">Schedule Night Shift</a></h1><p>Yes, mine is set for 8pm.</p><h1>33.
    <a href="#b582">Set up Medical ID</a></h1><p>Yes, mainly so that I can share my
    emergency contact. I don’t actually know my blood type.</p><h1>34. <a href="#c11d">Change
    Siri to a man</a></h1><p>I’m using the Australian Man voice.</p><h1>35. <a href="#9d26">Change
    your phone’s name</a></h1><p>Yes, “I Am Focused”</p><h1>36. <a href="#534c">Turn
    off advertising tracking</a></h1><p>Yes.</p><h1>37. <a href="#52cf">Set auto-lock
    to the maximum time</a></h1><p>5 minutes.</p><h1>38. <a href="#e63a">Set your
    personal hotspot password to a three word phrase</a></h1><p>I’m not telling you
    what it is.</p><h1>39. <a href="#2dc6">Turn on control center everywhere</a></h1><p>Yes.
    I also have quick access to my timer and alarm from here, although I’m most likely
    to set those from Siri.</p><h1>40. <a href="#19a0">Turn on Background App Refresh</a></h1><p>Yes.</p><h1>41.
    <a href="#2377">Delete Garage Band</a></h1><p>For me, just Garage Band.</p><h1>42.
    <a href="#9489">Develop verbal memory for talking to Siri</a></h1><p>Yes, for
    all the ones in the list plus calling and face-timing people.</p><h1>43. <a href="#f6bb">Set
    up these text replacement shortcuts</a></h1><p>I use three: my address, my personal
    email address, and the URL coach.me.</p><h1>44. <a href="#4936">Set your address</a></h1><p>Yes,
    in all five places.</p><h1>45. <a href="#078c">Backup this way</a></h1><p>Yes,
    I use iCloud, with multiple redundancies since my photos get backed up to other
    places and all of my important individual services are backed by cloud storage.</p><h2>Appendix
    D: Updates</h2><p>Do you have anything to add or correct in this article? Let
    me know and I’ll make an update.</p><ul><li><p>October 13, 2018: Added a strategy
    to create affirmation-style wallpapers in Instagram Stories and then rotate them
    through your Lockscreen. Credit to <a href="undefined">Jonathan Howard</a>.</p></li><li><p>October
    16, 2018: One, otherwise very smart, reader suggested dropping Evernote in favor
    of Google’s Keep app given that I’m all-in on Google Cloud everywhere else. Unfortunately
    for Keep, it’s built with rigid note types that don’t let you insert todo-list
    items into a regular note. That makes it ill-suited for Interstitial Journaling.</p></li><li><p>October
    16, 2018: A number of people pushed me to try <a href="https://superhuman.com/">Superhuman</a>
    as a GMail client. It’s currently invite-only, so I’m not going to make it the
    default advice yet. In early testing, I think their unsubscribe feature fits neatly
    with my advice to get hands on about what email you receive rather than hoping
    that other people’s algorithms filter it correctly. Their unsubscribe feature
    works with a simple keyboard shortcut and then takes the best available unsubscribe
    route, which ranges from clicking the unsubscribe link to just blocking the sender.</p></li><li><p>October
    17, 2018: On Twitter, <a href="undefined">Lucas Diez</a> <a href="https://twitter.com/lucasgdiez/status/1052758942865117184">made
    the case</a> that anger toward an AI is a sign you should go to a therapist and
    also that it would be better to leave Siri with a female voice so you can address
    your anger/bias problems head on. I think gendered behavior toward an AI is common
    and socially implanted, and that you should start by just being aware of it. That’s
    not to say you shouldn’t go to a therapist — more I’m predicting that you should
    go to a therapist because you actually have much bigger problems that a therapist
    would help with. I am sympathetic to the idea of addressing your bias head on
    and just learning to treat the Siri’s and Alexa’s of the world with polite respect.
    I’d love to hear more from other people about the case for a female voice.</p></li><li><p>October
    18, 2018: A number of people have asked for an Android version. Here’s the best
    guide we’ve published in Better Humans: <a href="https://betterhumans.coach.me/how-to-create-a-zen-experience-on-your-android-phone-53c4067c1df2">How
    to Have a Zen Experience on Your Android Phone</a> by <a href="undefined">Chris
    Jennings</a></p></li><li><p>October 18, 2018: A number of people have asked for
    a Mac version. Yes, we’ve covered a lot of these angles (all written by <a href="undefined">Niklas
    Göke</a>): <a href="https://betterhumans.coach.me/how-to-save-10-minutes-per-day-while-browsing-the-web-fc2b3470fde6">How
    to Save 10 Minutes Per Day While Browsing the Web</a>, <a href="https://betterhumans.coach.me/how-to-move-around-your-mac-at-the-speed-of-light-e07d8d7fb89d">How
    to Move Around Your Mac at the Speed of Light</a>, <a href="https://betterhumans.coach.me/which-browser-will-make-you-the-most-productive-22b0ec7eaa18">Which
    Browser Will Make You More Productive</a>, <a href="https://betterhumans.coach.me/how-to-set-up-firefox-for-simple-productivity-7cd3e87aa3f0">How
    to Set Up Firefox for Productivity</a>, <a href="https://betterhumans.coach.me/how-to-set-up-your-mac-for-focused-work-ab3565750059">How
    to Set Up Your Mac for Focused Work</a>.</p></li><li><p>October 18, 2018: <a href="https://www.reddit.com/r/productivity/comments/9p4n26/how_to_configure_your_iphone_to_work_for_you_not/?sort=new">Reddit</a>
    and some of the responses below poked the whole idea of the Google cloud. Here
    are a couple additional notes. Moving to the Google cloud is generally not more
    valuable than your existing habits. If you have a system you like that uses other
    services, then stay put with those services. Moving to the Google cloud does trade
    privacy for productivity. Google will use your data to advertise to you. However,
    this is a productivity article. If you wish it were a privacy article, then <a
    href="https://protonmail.com/">use Protonmail</a>. Last, it’s not consistent that
    I have you turn off Apple’s ad tracking while then making yourself fully available
    to Google’s ad tracking. This is a tradeoff. You can turn off Apple’s tracking
    with zero downside, so do it. With Google, I think it’s worthwhile to use their
    services and then fight ads in other places. The Reader feature in Safari basically
    hides most Google ads that you’d see on your phone. On your computer, try an ad
    blocker.</p></li><li><p>October 18, 2018: Reddit suggested <a href="https://bear.app/">Bear</a>
    over Evernote. This is a very good suggestion and is, I think, a close call. Bear
    appears better in every respect but one. The don’t make any versions for non-Apple
    products. Evernote is so key to me, that I want it available on times when I happen
    to have gone Linux, Windows or Android. Over the last ten years, I’ve only been
    a 90% user of Apple products. However, if you are confident that you’ll be a 100%
    user of Apple products, Bear looks better than Evernote.</p></li><li><p>October
    22, 2018: Reader <a href="undefined">Steven Zhang</a> pointed me to <a href="undefined">John
    Zeratsky</a>’s <a href="https://medium.com/time-dorks/distractions-are-a-nuisance-but-infinity-pools-are-the-real-problem-e84122d62c0c">concept
    of Infinity Pools</a>: “always-on, effectively infinite sources of information
    and entertainment.” I think this is an excellent, maybe superior, description
    of what I was called “slot machines” in the sections above.</p></li><li><p>October
    22, 2018: Several readers asked about using Apple’s Keychain instead of a third-party
    password manager. I thought <a href="https://www.macworld.com/article/3060630/ios/why-not-pick-keychain-instead-of-1password-or-lastpass.html">this
    Macworld article covered the answer pretty well</a>. One of many convincing points
    against Keychain:</p><blockquote><p>But while [Keychain is] broadly useful in
    OS X, as more developers have adopted it and there’s Keychain Access for direct
    lookups and retrieval, in iOS you have to drill down to Settings &gt; Safari &gt;
    Passwords to view, edit, or (swipe all the way to the bottom) add passwords. <strong>Further,
    you can’t invoke Keychain in Apple’s non-Web login dialogs, making it useless
    for common purposes.</strong> And while you can make up a password when you need
    one, it’s awkward to get to and can only be retrieved easily on a corresponding
    Web page.</p></blockquote></li><li><p>December 7, 2018: A few readers asked me
    about the Shortcuts app which allows for you to do some custom scripting of steps
    on your iPhone. The best place to hear about shortcuts that other people are writing
    is on the <a href="https://www.reddit.com/r/shortcuts">shortcuts subreddit</a>.
    You may have noticed during this article that I was a stickler for trying to find
    advice that had been tested. Since shortcuts were knew when I published this,
    I hadn’t yet found anyone that was definitely using the feature productively.
    I’m actually still in that situation — the feature sounds promising, but I want
    to see that verified in the wild (possibly by you responding with your own use
    case).</p></li></ul>'
  :author: Better Humans
  :topic: work
- :url: https://medium.com/@gidmk/organic-food-isnt-better-for-your-health-93a35584639d?source=search_post---------4
  :title: Organic Food Isn’t Better For Your Health
  :content: '<p>Environmentally friendly? Maybe. Healthy? Probably not</p><p><img
    src="https://cdn-images-1.medium.com/max/9578/1*fP0voN8faA8-UpbA5Ci-ug.jpeg" alt="Pictured:
    Stock “Organic Food” photo. Apparently, if it comes in a basket, it’s organic"><em>Pictured:
    Stock “Organic Food” photo. Apparently, if it comes in a basket, it’s organic</em></p><p>An
    ongoing argument that I’ve had with almost every “clean eater” that I’ve ever
    met is about organic food. Virtually every person who tries to eat healthy, at
    one point or another, decides to go organic. It’s better for the environment,
    and getting rid of all those nasty chemicals *has *to be good for your health.</p><p>Right?</p><p><img
    src="https://cdn-images-1.medium.com/max/3840/1*dajQhWJTjhqvErOiMkUBkw.jpeg" alt="Pictured:
    Average farm worker, probably"><em>Pictured: Average farm worker, probably</em></p><p>You
    see this everywhere. The first thing that every paleo proponent will earnestly
    tell you is that conventional farming causes everything from <a href="http://paleo.com.au/clean-15-dirty-dozen-updated-list/">cancer
    to autoimmune disease</a>, and pretty much everything in between. A quick glance
    online shows you people demonizing GMOs and pesticides left right and centre,
    with organics apparently the only safe choice in a sea of disease-causing nasties.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*tcWZKJ0Fasli3K0UpPb5SA.png" alt="Pictured:
    Wrong"><em>Pictured: Wrong</em></p><p>But alarmist fearmongering about nasty chemicals
    is all the rage, and despite these claims we all seem to be getting <a href="http://www.who.int/gho/mortality_burden_disease/life_tables/en/">stubbornly
    healthier</a> every year.</p><p>So what does the evidence say about organic food?</p><h3>What
    Is Organic?</h3><p>The first thing to iron out is what organic food actually is.
    This is not such an easy question to answer, surprisingly. Not only does it differ
    from country to country, but the regulation and monitoring of organics can be
    <a href="http://www.abc.net.au/news/2017-04-19/greenwashing-fears-prompts-push-for-tough-organic-labelling-laws/8450452">so
    bad</a> that in some places it’s hard to see any difference between conventional
    farming and organics at all.</p><p>However, a pretty useful definition can be
    found on the website “<a href="http://www.healthy-holistic-living.com/definition-of-organic-food.html">Healthy
    Holistic Living</a>”, because it provides a window into the complete nonsense
    that makes up the health claims for organic foods:</p><blockquote><p>“ Organic
    foods are produced according to certain production standards. For crops, it means
    they were grown without the use of conventional pesticides, artificial fertilizers,
    human waste, or sewage sludge and that they were processed without ionizing radiation
    or food additives. For animals, it means they were reared without the routine
    use of antibiotics and without the use of growth hormones. In most countries,
    organic produce must not be genetically modified”</p></blockquote><p>Basically,
    the idea is that organic food should be farmed like we did in medieval times:
    no ‘artificial’ chemicals, no raw sewage, and animals that are at constant risk
    of nasty infection and death.</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*IuxhJ-oBoodlD4XWn7IHrw.jpeg"
    alt="Pictured: Organic. Yum!"><em>Pictured: Organic. Yum!</em></p><p>There are
    obvious issues with this. No farmer puts raw sewage on their crops, because that
    kills them. Banning artificial fertilizers and conventional pesticides means that
    actually you can use fertilizers and pesticides as long as they are natural and/or
    unconventional. Processing using ionizing radiation is both a) <a href="https://en.wikipedia.org/wiki/Food_irradiation">safe</a>
    and b) kills nasty things like viruses and bacteria <a href="https://en.wikipedia.org/wiki/Food_irradiation">in
    your food</a>.</p><p>I could go on. Actually, I will.</p><p>Genetic modification
    is neither a problem for human health nor actually forbidden in organic farming:
    the only thing that’s forbidden is genetic modification *in a lab. *Humans have
    been genetically modifying food for centuries through a practice known as hybridization,
    which is basically breeding plants to have the desired qualities. It’s how we
    eliminated seeds from the banana, for example.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*Ao94MKThAliwMHKVlR-n5A.jpeg"
    alt="Wheat was one of the first hybridized grain crops, increasing yields by [hundreds
    of times](http://www.nma.gov.au/online_features/defining_moments/featured/federation-wheat)"><em>Wheat
    was one of the first hybridized grain crops, increasing yields by <a href="http://www.nma.gov.au/online_features/defining_moments/featured/federation-wheat">hundreds
    of times</a></em></p><p>Overall, it sounds as if the major factors of organic
    farming — pesticide use, non-GMO etc — might not have the health impact that so
    many people say organics provide.</p><h3>The Evidence</h3><p>Whether organics
    are good for your health has been the subject of a lot of research. From tiny
    studies looking at animals and cells in a lab, to large, well-controlled human
    interventional studies, we’ve looked into the question quite a bit.</p><p>There
    have been a number of systematic reviews looking at the potential health benefits
    of organics. Systematic reviews are studies where scientists look at the entire
    body of literature, searching through hundreds of thousands of studies, to see
    what the evidence for and against a position is.</p><p>And if we look at the systematic
    reviews on organic food, we find the same answer time and again: organic food
    offers <a href="http://ajcn.nutrition.org/content/92/1/203.short">no</a> <a href="http://imsear.li.mahidol.ac.th/bitstream/123456789/135469/1/ijmr2010v131n4p478.pdf">health</a>
    <a href="http://ajcn.nutrition.org/content/90/3/680.short">benefits</a> <a href="http://annals.org/aim/article-abstract/1355685/organic-foods-safer-healthier-than-conventional-alternatives-systematic-review">whatsoever</a>
    when compared to conventionally-farmed food.</p><p>None.</p><p>Organic food is
    no healthier for you than anything else.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*GMQe863f32rdOOr1wiwGJg.jpeg"
    alt="Remember, if it doesn’t come in a basket it’s probably not really organic
    anyway"><em>Remember, if it doesn’t come in a basket it’s probably not really
    organic anyway</em></p><p>This is no surprise. As I mentioned, the things organic
    food protects against may sound terrifying, but actually turn out not to be bad
    for you at all. Yes, pesticides can be dangerous if you chug down bottles of them,
    but the amount you get in the average tomato is in the order of *nanograms. *For
    reference, you have more formaldehyde in your body right now than pesticides.</p><p>Not
    so scary after all when you look at it that way, is it?</p><h3>Bottom Line</h3><p>Organic
    food is popular for a number of reasons. There’s certainly evidence that it is
    <a href="https://theconversation.com/organic-farming-matters-just-not-in-the-way-you-think-74124">better
    for the environment</a> than conventional options, and if you want to spend a
    little extra to make an impact protecting biodiversity then I say good for you.</p><p>But
    the fear of conventional farming is simply irrational. There is good evidence
    that pesticides in the amounts that you’ll find in most supermarket food has <a
    href="http://www.mdpi.com/1660-4601/8/5/1402/htm">no impact on human health whatsoever</a>.
    Conventional farming has revolutionized the world by allowing easy access to fresh
    food all year round — if anything, conventional farming has been responsible for
    saving many millions of lives worldwide.</p><p>The promotion of organic food is
    yet another example of the naturalistic fallacy: that things are healthy because
    they are natural. This is boring nonsense, as anyone who has been bitten by a
    natural viper or had natural tapeworms could tell you. Organic food is just another
    way for con artists to sell health because people are afraid of what they don’t
    understand.</p><p>Ultimately, there is one good reason to eat organic: the environment.</p><p>That’s
    it.</p><p>The evidence shows that organics are no better for your health at all.</p><p><em>If
    you enjoyed, follow me on <a href="https://medium.com/@gidmk">Medium</a>, <a href="https://twitter.com/GidMK">Twitter</a>
    or <a href="https://www.facebook.com/gidmkhealthnerd/">Facebook</a>!</em></p>'
  :author: Gideon M-K; Health Nerd
  :topic: food
- :url: https://medium.com/@dronair_project/how-drones-can-help-manage-the-worlds-food-supply-8243c6fb1836?source=search_post---------5
  :title: How drones can help manage the world’s food supply
  :content: '<p>Drones are more than just cool-looking flying objects. Their real
    value lies in their ability to quickly and efficiently gather and analyze information
    on assets, geography, infrastructure, environmental trends and other important
    data that can be used to drive actional business insights.</p><p>So we have to
    ask: what could be more critical than information on the world’s food supply?</p><p>While
    agricultural and farming enterprises are relatively recent adopters of unmanned
    aerial vehicles (UAVs), the characteristics of drone data collection, such as
    easy transportability, real-time results and relatively low costs (compared to
    other data gathering options) lend themselves to frequent updates about very detailed
    plant conditions — as if walking in the field. Knowing the origin of a food product
    and obtaining proof that it adheres to quality and sustainability standards are
    two of the most vital pieces of information that consumers demand.</p><p>In response,
    agribusiness leaders are increasingly committed to running their businesses in
    a socially conscious and transparent manner, which includes protecting the environment,
    producing safe, healthy food and increasing operational efficiencies to conserve
    natural resources such as forest, water or soil. To gather and analyze the critical
    data required to achieve these goals, technology must be applied throughout the
    entire process — from field to fork.</p><p><img src="https://cdn-images-1.medium.com/max/2800/0*ZNdcVoleGF-EcWJA.PNG"
    alt="Image: BCG"><em>Image: BCG</em></p><p>A <a href="https://www.bcg.com/publications/2016/process-industries-building-materials-strategy-lessons-frontlines-agtech-revolution.aspx">Boston
    Consulting Group survey</a> of senior leaders at the world’s largest agribusiness
    companies found their top two priorities were big data and analytics, and food
    security and traceability. The costs and logistics involved with gathering and
    analyzing large volumes of agricultural data have been major obstacles to providing
    the same type of transparency consumers are accustomed to in other industries.</p><p>Drone
    provide proven ROI through digital twins of fields</p><p>The return on investment
    (ROI) of using drones in agriculture is helping remove traditional objections
    to costs. In fact, market forecasters are calling for 30%+ growth in drone sales
    in the agriculture sector, reaching $4.2Million by 2022. The growing use of drones
    throughout the food supply chain is making more detailed information available
    quickly and cost effectively.</p><p>Drones have already proven their value in
    the agriculture industry for gathering data about detailed land use (native forest,
    rivers, villages and more), but as well information on plants, such as plant health,
    the number of plants, chlorophyll content, plant height and many other factors.
    Now, with the added interest of consumers in sustainability and traceability of
    food, drones are serving in an expanded role. The raw data collected are analyzed
    and transformed into concrete recommendations in sectors as varied as plantation
    management, agricultural experimentation and seed production, crop monitoring,
    or product traceability.</p><p>As agribusinesses respond to consumer demands for
    transparency, they are gaining the trust of their customers. Companies are also
    acquiring knowledge that can be used to improve their business operations, so
    everyone wins.</p><p><img src="https://cdn-images-1.medium.com/max/2800/0*L_vMZDgmy6NtxSnX.jpg"
    alt="Image: Delair"><em>Image: Delair</em></p><p>One area where we have already
    seen a significant impact is in enterprises operating palm oil and rubber tree
    plantations in Africa in Asia<em>.</em> Here, UAVs can cover the vast distances
    needed to produce palm tree, and they can make sure that the producers meet the
    specific criteria intended to prevent deforestation and habitat destruction. Drone
    data provides proof of compliance with regulations, while collecting valuable
    crop information at the same time.</p><p>The economic value is real. For example,
    <a href="https://delair.aero/drones-adopted-in-agribusiness-cost-evaluation-for-a-drone-solution/">SIAT
    says the use of drones has cut its operational costs by half already, and allows
    them to focus on being environmentally responsible</a>.</p><p>End-to-end supply
    chain transparency, although not a requirement today, will become an industry
    standard in the future. By leveraging the capabilities to gather and analyze information
    with drones, consumers will be able to scan a barcode to find out where their
    product was made and where the ingredients were sourced. If a product needs to
    be investigated for any reason, manufacturers will be able to find out who supplied
    the ingredients, who harvested the crops and what was happening in the field to
    cause the problem.</p><p>This level of detail will support efforts to improve
    food security, traceability and sustainability, and benefit both businesses and
    consumers.</p><p>— — — — — — — — — — — — — — — — — — — — — — — Thanks for reading!From
    Dronair Project Team<em>Email: support@dronair.ioMedium: <a href="https://medium.com/@dronair_project">Dronair
    Project</a>Twitter: <a href="https://twitter.com/dronair_project">Dronair Project</a></em></p>'
  :author: Dronair Project
  :topic: food
- :url: https://medium.com/conquering-corporate-america/working-for-a-company-vs-working-for-yourself-bdcfa801daf9?source=search_post---------2
  :title: Working for a Company vs. Working for Yourself
  :content: <p>Thinking about working for yourself? Do it! But read this first</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*9yslLoPpB7X3LDZiVI6DaA.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*4mNvbGm-iB0Vwer_9VIOrQ.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*c8p_xx5bknMm1z1iIsaflA.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*UFANYzr_m6-GSc72EnfjEQ.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*YHDKR1KfdxfuHoUVaJGi9g.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*wY9p4PynY_efbnY1lmlz9g.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*Ap2TIjVbNcd6cEQIoZYapA.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*h2xsONz5Ux0Eog_A_J-cnw.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*Ln_-8W4JbryVhdrmq3Zctw.jpeg" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*Oow_U-MIJYiucWjr7hvn1Q.jpeg" alt=""></p><p><a
    href="http://sarahcpr.com">*Sarah Cooper</a> used to work for a company, now she
    works for herself. Her new book, <a href="https://www.amazon.com/gp/product/1449476074?&_encoding=UTF8&tag=andrewsmcmeelpublishing-20">How
    to Be Successful Without Hurting Men’s Feelings</a>, is out October 30th.*</p><p>Check
    out more from <a href="http://TheCooperReview.com">TheCooperReview.com</a>:</p><ul><li><p><a
    href="https://thecooperreview.com/10-more-tricks-appear-smart-in-meetings/">10
    More Tricks to Appear Smart in Meetings</a></p></li><li><p><a href="http://thecooperreview.com/meeting-achievement-stickers/">Meeting
    Achievement Stickers</a></p></li><li><p><a href="https://thecooperreview.com/gaslighting-at-work/">Gaslighting
    for Beginners</a></p></li><li><p><a href="http://thecooperreview.com/non-threatening-leadership-strategies-for-women/">9
    Non-Threatening Leadership Strategies for Women</a></p></li><li><p><a href="http://thecooperreview.com/diversity-in-tech-report/">Honest
    Diversity in Tech Report</a></p></li></ul>
  :author: The Cooper Review
  :topic: work
- :url: https://medium.com/free-code-camp/focus-and-deep-work-your-secret-weapons-to-becoming-a-10x-developer-8e203a6ad291?source=search_post---------3
  :title: Focus and Deep Work — Your Secret Weapons to Becoming a 10X Developer
  :content: "<p>“Woman getting s*** done” by rawpixel on Unsplash</p><p><strong>Or
    how to become one of those highly-paid “10x Rockstar Ninja” developers companies
    love to hire.</strong></p><p>It doesn’t matter if you’re working on a side hustle
    or if you’re a junior developer wanting to get noticed and promoted. It doesn’t
    matter if you’re a lead developer looking for a change of pace, from a corporate
    gig to a start-up or the other way around. It doesn’t matter if you’re jobless
    out of college.</p><p>As long as you’re a programmer, no skill is more important
    to your success than focused, deep work.</p><p>From Cal Newport’s book <a href=\"https://amzn.to/2NXMePw\">Deep
    Work</a>:</p><blockquote><h1>*<em>“The Deep Work Hypothesis: *</em>The ability
    to perform deep work is becoming increasingly rare and at the exact same time
    it is becoming increasingly valuable in our economy. … the few who cultivate this
    skill, and then make it the core of their working life, will thrive.”</h1><h1>—
    <a href=\"https://amzn.to/2NXMePw\">Deep Work</a> p.14</h1></blockquote><p>I’m
    going to use some points from Deep Work to tie together my thoughts on becoming
    a successful, in-demand developer. I highly recommend reading it if you’re in
    the technology field in any capacity.</p><h2>From Fear of Code to Lead Developer.</h2><p>I’m
    a self-taught programmer. But I didn’t start programming until my late 20s. I’ve
    always considered myself an artistic person and figured I’d end up in a creative
    field.</p><p>And I did. After college I started a company that did graphics and
    web design for small, local businesses. I was a pro at Photoshop and knew enough
    HTML and CSS to be dangerous.</p><p>But anything more complicated, requiring even
    a line of PHP, I had to outsource.</p><p>I was petrified of code for a very long
    time and left it to the folks with Computer Science degrees.</p><p>“One wrong
    keystroke and the client’s business could go up in flames…” I thought. I wasn’t
    too far off honestly (in the days before version control, there was no turning
    back with FTP).</p><p>Now I’m a lead developer for a Fortune 50 company working
    on a product that entertains millions of people every month.</p><p>How’d I get
    here in a few short years? \U0001F914</p><p>My “secret” is getting good at focus
    and deep work. There’s nothing special about me. I took the time to train myself
    how to focus on one specific thing, without distraction, for an extended period
    of time.</p><h2>Code is Art.</h2><p>Programming is very much a creative pursuit.</p><p>It
    may seem technical and dry to a regular person, but you <em>are</em> a creator.
    You’re creating something out of nothing. That “nothing” can be an idea in your
    head for an app or a feature request from a product manager.</p><p>That thing
    doesn’t exist yet, but you’re going to bring it to life. Not with paint or words,
    but with code (OK, <em>some</em> words, as long as they’re not reserved words).</p><p>If
    you have any desire to produce at a high level, then you have to practice.</p><p>The
    quantity and quality of your output increases when you get better at being able
    to stay focused for longer, intentional periods.</p><p>Art, music, and writing
    all require long periods of uninterrupted time where the <a href=\"https://en.wikipedia.org/wiki/Myelin\">myelin</a>
    thickens on those synapses between your brain cells. Programming is no different.</p><p>You
    get better with practice and time. And you can get a lot better, in less time,
    when you make your practice more effective.</p><h2>Yes, You Can Be a 10x Developer
    (But 5x, 2x and 1x Are Great Too)</h2><p>Let me preface this by saying that I
    hate buzzwords like “rockstar” “ninja” and “10x developer.” Every developer does,
    but companies and recruiters love to use them.</p><p>Despite the cheesiness, there
    is a lot of truth behind the “10x Developer” idea.</p><p>It doesn’t mean that
    one person can replace ten. It means that some developers get more done, with
    better quality, and in less time. They do it consistently over the long run without
    working any harder than anyone else.</p><p>This ability is <strong>not</strong>
    a natural gift. You aren’t born with it and it’s not something you can “turn on.”
    It’s a skill that <strong>you can, and must, practice and train</strong>.</p><p>I’ve
    been on the hiring side dozens of times and I will tell you any company would
    love to have an entire team of 10x developers. But that’s not reality.</p><p>There
    are more open developer jobs than there are qualified developers to fill them.
    Businesses are having trouble filling positions with *any *qualified developers,
    let alone (some multiplier)x developers.</p><blockquote><h1>“Senior executives
    believe that the lack of quality developer talent is one of the biggest potential
    threats to their growth.” - <a href=\"https://stripe.com/reports/developer-coefficient-2018\">The
    Developer Coefficient</a></h1></blockquote><p>It’s <strong>hard</strong> to find
    good talent.</p><p>Most companies will knock down the door for a 10x developer
    but they’re happy hiring 5x, 2x, and even 1x developers.</p><p>A 1x developer
    (yes, I made this up) is a developer who can do the job they’re hired to do. Nothing
    more, nothing less. Seriously. Any company will be delighted with that. Plenty
    has been written about the <a href=\"https://www.google.com/search?q=how+much+does+a+bad+hire+cost\">astronomical
    cost of a bad hire</a>.</p><h2>The 2 Steps You Need to Multiply Your Programming
    Skills with Focus and Deep Work</h2><p>It’s time to step up your career. There’s
    so much opportunity for you to get hired and thrive in a career you love.</p><p>If
    you’re the entrepreneurial type, the same lessons apply. More so because your
    livelihood depends on being effective with your time.</p><p>This is how you go
    from junior to senior developer. This is how you go from 0.5x developer to 5x
    developer. This is how you get your side project off the ground when you only
    have a 10 hours a week to work on it.</p><p>Hell, this is how you* survive.*</p><blockquote><h1>“To
    remain valuable in our economy, therefore, you must master the art of quickly
    learning complicated things. This task requires deep work. If you don’t cultivate
    this ability, you’re likely to fall behind as technology advances.”</h1><h1>—
    <a href=\"https://amzn.to/2NXMePw\">Deep Work</a> p.13</h1></blockquote><h3>Learning
    to Focus is HARD.</h3><p>The first thing to realize is that learning to focus
    isn’t easy. You’re not going to be able to start producing novels of quality code
    from the start. Especially if you’ve never dealt with the reality of how easily
    distracted you are.</p><p>Learning to focus requires practice. Anything that requires
    practice means its difficult. If it wasn’t, you’d be good at it by default.</p><p>You’re
    going to struggle and that’s OK. We’ll start small.</p><h3><strong>Don’t Confuse
    Busyness with Productivity.</strong></h3><p>Deep work is not locking yourself
    in a dark room and forcing yourself to aimlessly navigate code for 14 hours at
    a time. Just because you’re doing <em>something</em> doesn’t mean it’s worth doing.</p><p>You
    need to figure out what’s important and what’s not. That’s beyond the scope of
    this post. If you’re going to spend the time learning how to focus, then do it
    on something that has a high return for the effort involved.</p><p>It’s like the
    sun and a magnifying glass.</p><p>Distracted work is your energy going in every
    direction like the sun. You can stand outside in the sun and you’re not going
    to get hurt.</p><p>Learn to concentrate that scattered energy with a magnifying
    glass and your ability to destroy goes from 0 to 10. We want to preserve that
    limited power for important things (the sun goes down eventually).</p><h2>Step
    1 — Removing Distraction</h2><p>Multitasking is a lie. You’re fooling yourself
    if you think you can write quality code while checking Slack messages or reading
    news in another window.</p><p>We live in a world of distraction. The technology
    we work on is a double-edged sword. There’s nothing like that sweet, sweet dopamine
    hit from a new notification.</p><p>“Cool, someone liked that I saw Hamilton.”
    But that’s poison to your ability to focus.</p><p><strong>Removing distraction
    is the foundation of focused, deep work.</strong></p><ul><li><p><strong>Put your
    phone on silent</strong> or turn it off if you’re not in a position that has to
    be on-call. I use the <a href=\"https://www.forestapp.cc/en/\">Forest app</a>
    to prevent me from going on my phone. Face down, somewhere out of arm’s reach
    is good too.</p></li><li><p>*<em>Close Slack. *</em>This is a huge one for me
    because I have this OCD where I need to clear my queue of unread messages. Most
    of these messages are noise so its better for me to close Slack when working.</p></li><li><p><strong>Close
    any other apps</strong> that are going to distract you with notifications, like
    Outlook.</p></li><li><p>This is the hardest one of all — <strong>close any browser
    windows</strong> not relevant to your task. Now <strong>block all your favorite
    websites</strong>. I love the <a href=\"https://heyfocus.com\">HeyFocus app</a>
    ($20) but there are a bunch of free extensions out there.</p></li><li><p><strong>Headphones
    on</strong> — This keeps people from bothering you <em>(hopefully),</em> but also
    listening to the same album over and over is a great focusing tool. It might be
    a priming thing (signaling to your brain that its time to work) or a flow thing
    (the music puts you in a good mood). Either way, a lot of developers swear by
    this technique.</p></li></ul><h2>Step 2 — Pomodoro Technique (The Secret Weapon)</h2><p><img
    src=\"https://cdn-images-1.medium.com/max/10368/0*Bv9KMDpzDURETOwh\" alt=\"“A
    Hefty Bowl of Productivity” by [Roychan Kruawan](https://unsplash.com/@mmoddk?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)\"><em>“A
    Hefty Bowl of Productivity” by <a href=\"https://unsplash.com/@mmoddk?utm_source=medium&utm_medium=referral\">Roychan
    Kruawan</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></em></p><p>Before
    you have a panic attack thinking that you can’t go 8 hours without any distractions,
    don’t worry. We’ll be using the Pomodoro Technique to break up our day.</p><p>There
    are a lot of productivity techniques out there, but my favorite has been the Pomodoro.
    I’m going to paraphrase it below to get you started.</p><p>If you want the official
    rundown, check out <a href=\"https://amzn.to/2DhkHob\">The Pomodoro Technique</a>
    book, which gets more detailed and rule-oriented.</p><h3>Work for a 25 Minute
    Block (a Pomodoro)</h3><p>You’ll work for 25 minutes, undistracted, on one thing.
    That chunk of work is a one “Pomodoro.”</p><p>Use a Timer. I’ve used an <a href=\"https://amzn.to/2Dj7vPo\">old
    school hourglass</a> before. If you want to be a true Pomodoro aficionado, then
    use a <a href=\"https://amzn.to/2pr6X09\">tomato timer</a>.</p><h3>Then Take a
    5 Minute Break</h3><p>It is imperative that you walk away when its break time.
    Grab some water. Browse Hacker News. Go to the bathroom. Whatever it is, work
    is over. Disconnect from work completely.</p><h3>One Task Only in a Pomodoro</h3><p>This
    can be fixing a bug, planning out a new feature, or starting a video series to
    learn a new framework.</p><p>If the task is too big (like “make an app”) then
    you have to break it down into smaller chunks that take roughly 25 minutes.</p><p>Some
    tasks need several Pomodoros to complete. It might take three Pomodoros to code
    a feature and two more to write the tests.</p><p>Or you might need to batch similar,
    small tasks into a Pomodoro (ex — reply on 5 JIRA tickets).</p><p>The point is
    that the task, or tasks, have to be one “type” of work.</p><p>As an aside, the
    main reason we procrastinate is because we get overwhelmed by huge, insurmountable
    tasks. If your goal is to “Write a Book” you’ll never do it. When you break it
    out into smaller chunks like “Write an outline” or “Write 300 words” then the
    path becomes clearer. Starting is easier, and doable.</p><p>While this post has
    been about becoming a better developer, not procrastination, the truth is that
    many times they are the same thing.</p><h3>Work Without Distraction</h3><p>See
    Step 1. If you get distracted, the Pomodoro doesn’t count and you have to start
    over.</p><h3>Work Your Way Up to 25 Minutes</h3><p>25 minutes might be hard for
    you if you’ve never done this before. Start with 10 minutes and work your way
    up from there. Next one would be 15, then 20, then 25.</p><p>You can work your
    way up to 55-minute blocks when you really get good at this.</p><h3>Work Your
    Way Up to Multiple Pomodoros Per Day</h3><p>The first time you try distraction-free
    work, 25 minutes in a day might be all you can handle. That’s fine. Keep working
    your way up by adding a little each day.</p><h2>How Does This Make Me a Better
    Developer?</h2><p>Let’s be real. You’re not helping your career by jumping from
    your code editor to a chatroom to an email to a real-life conversation.</p><p>You
    *might look and feel *busy, and you might even ship some code once in a while.</p><p>But
    the fact is that a few hours of undistracted, deep work produces more quantity
    and quality than a full day of scattered, distracted work.</p><p>Start with one
    Pomodoro. Eventually you’ll be able to chain a few Pomodoros together.</p><p>Then
    you’ll chain a few days of Pomodoros together.</p><p>Then weeks and months.</p><p>You’ll
    find its easier to get into a flow state, and it will happen more often.</p><p>This
    is <strong>gold</strong>. This is when you have those “eureka” moments and breakthroughs.</p><p>This
    is when the hard thing that’s been kicking your ass becomes easy.</p><p><strong>This
    is when your coding skills level up exponentially.</strong></p><p>The demand for
    good, qualified programmers is higher than ever. The surest path to success is
    getting into the ritual of deep, focused work.</p><p>Try it out and let me know
    what you think. If you have other productivity techniques, post them below!</p><h3>Before
    You Go —</h3><p>I appreciate all of the love that this article is getting. There’s
    no better way to support me than to give me a follow on Medium (<a href=\"undefined\">Bar
    Franek</a>). It lets me know that I should write more!</p><p>Did you know that
    you can give up to 50 \U0001F44F’s by pressing down on the \U0001F44F button?
    Give it a try if you *reaaaally *liked this article!</p><p>I wrote a follow-up
    article here called <a href=\"https://medium.freecodecamp.org/going-deeper-on-deep-work-two-core-abilities-for-thriving-in-the-new-economy-6c7667b4eed6\">Going
    Deeper on Deep Work</a> about what you should apply these techniques to</p><iframe
    src=\"https://medium.com/media/9dba96b78e32d851091c344f8afe952b\" frameborder=0></iframe>"
  :author: freeCodeCamp.org
  :topic: work
- :url: https://medium.com/the-mission/what-are-people-working-on-in-coffee-shops-cdf351e28b6?source=search_post---------4
  :title: What are people working on in coffee shops?
  :content: '<p>Almost every day I sit down in a coffee shop in Venice, California,
    to work on AboutTheStart.com.</p><blockquote><h1>I always wonder what everyone
    else is doing.</h1></blockquote><p>So this Tuesday around 12:30 pm, my friend
    <a href="http://andrewparr.com">Andrew</a> and I decided to ask everyone at the
    <a href="http://deuscustoms.com/cafes/venice/">Deus Ex Machina</a> coffee shop
    what they were doing <strong>at that exact moment</strong>.</p><p><img src="https://cdn-images-1.medium.com/max/2560/1*r02q17GGCoyh3JyjNnqoDA.png"
    alt=""></p><p>As you would imagine, getting out of your chair and interrupting
    every person you see hard at work is a pretty scary idea and enough to make you
    doubt if it’s even worth doing.</p><p>As a matter of fact, Andrew, who really
    liked the idea initially, didn’t want to do it once we were at the coffee shop.</p><p>Once
    he saw that the first few people I talked to seemed to be delighted by our experiment,
    he grabbed his notepad and started asking questions as well <em>(we included a
    surprising note on our experiment at the end of this article).</em></p><p>Nearly
    everyone we talked to told us that they too had always wondered what everyone
    else was doing.</p><p>We thought it would be nice to share our findings with you.
    Here’s a selection of answers:</p><blockquote><h1>I’m a <strong>production designer</strong>
    currently doing location scouting for a film. I’ve been driving around taking
    pictures and stopped here to create PDFs with the various locations I’ve found.</h1><h1>I’m
    a lifestyle and portrait photographer. I come here to do edits. I work better
    around people.</h1><h1>I’m a student who also started a non-profit to get grants
    for acrobatic gymnasts who need money for training.</h1><h1>I’m currently helping
    my friend with his bio.</h1></blockquote><p><img src="https://cdn-images-1.medium.com/max/2560/1*3Ba5E39bH_MWE4TqXWsZAQ.png"
    alt=""></p><blockquote><h1>I’m a writer, but I’m working on a construction project
    for a building I own in Venice, dealing with my contractors.</h1><h1>I’m messaging
    friends.</h1><h1>I work in tech, and I basically never work in coffee shops.</h1><h1>I’m
    writing a creative brief (I’m in music marketing). I feel inspired around other
    people.</h1></blockquote><p><img src="https://cdn-images-1.medium.com/max/2560/1*GAUaLVu_6T2yPkAmVE24og.png"
    alt=""></p><blockquote><h1>I’m a musician and I’m currently invoicing for royalties.</h1><h1>I’m
    writing a treatment.</h1><h1><em>(Note: a treatment typically is the step between
    scene cards and the first draft of a screenplay for a motion picture, television
    program, or radio play.)</em></h1><h1>I’m a creative director writing a pitch
    for a new client (an advertising account).</h1></blockquote><p><img src="https://cdn-images-1.medium.com/max/2000/1*Zpm5tQa7O3_foTj08geUEQ.jpeg"
    alt=""></p><blockquote><h1>I created a company that manufactures and sells <a
    href="http://flipperremote.com">TV remotes for the elderlies</a>. I’m currently
    expanding into Australia and working with a fulfillment center to get everything
    properly set up.</h1><h1>We are doing social media work for a travel agency we
    own in Canada.</h1><h1>I manufacture green building materials. I’m responding
    to emails and chillin’ out.</h1></blockquote><p><img src="https://cdn-images-1.medium.com/max/2560/1*5Qc1H57VYd4LTaqeUVMYbA.png"
    alt=""></p><blockquote><h1>I’m a comic and a writer. I usually write 3 hours a
    day. I like coming here because it’s close to home and I’m inspired by being around
    people.</h1><h1>I’m studying for an exam on brain and behavior. I love the coffee
    and the environment here.</h1><h1>I work in Fashion Public Relations. I’m pitching
    stories for a client and working on a report.</h1><h1>I’m studying palm-reading
    history in my free time. I’m a writer and do teacher tutoring. I try not to work
    at home because of all the potential distractions.</h1></blockquote><p><img src="https://cdn-images-1.medium.com/max/2560/1*3Ba5E39bH_MWE4TqXWsZAQ.png"
    alt=""></p><h2>A few numbers.</h2><p><strong>Out of all the people we talked to:</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*2TnAKK3vV2TCrGSt0mti6g.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*IG7JWsaLpR7U68-7hAg1Dg.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*4ozw-EsHUFu14jxqGzVfvQ.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*G6hJFZaHCMLAcG6m2jG2ag.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*eruAfkcjOB3tSc69byUG6Q.png" alt=""></p><h2>An
    unexpected consequence</h2><p>Something interesting happened that we weren’t expecting.</p><p>As
    I mentioned earlier, our brains were pleading with us not to talk to anyone in
    the coffeeshop.</p><p>As soon as we’d finished though, the both of us were BEAMING.</p><p><img
    src="https://cdn-images-1.medium.com/max/5152/1*CE-MPT_ve2ZgzTm4qaB-yQ.jpeg" alt="We
    forgot to take a picture the day of so I shot a selfie and photoshopped Andrew
    in it (left) ;)"><em>We forgot to take a picture the day of so I shot a selfie
    and photoshopped Andrew in it (left) ;)</em></p><p>It felt absolutely amazing
    to connect with all these people who were previously part of the background. We
    had small conversations, shared many, smiles and laughs, and left the coffee shop
    overflowing with energy and raw joy.</p><p>We kept telling each other:</p><blockquote><h1>That
    was amazing! I love people! This changes everything! I can’t wait to say hi next
    time I go back!</h1></blockquote><p>We’re still processing how fun and unexpectedly
    pleasant the experience was, but we’re not sure what to do with this information
    yet.</p><p>*<em>Would you be interested in a follow up post? *</em>We could dig
    deeper into the social situations and uncrossed barriers we find ourselves in
    when we work in coffee shops.</p><p><strong>Please share your thoughts in the
    comments.</strong></p><blockquote><h1>Don’t forget to click the ❤ button below.
    The more ❤’s the post gets, the more people will see it. Thanks!</h1></blockquote><p><em>Photos:
    <a href="http://deuscustoms.com/cafes/venice/">Deus Ex Machina Venice</a> / graphs
    from <a href="http://infogr.am">infogr.am</a></em></p><p><strong>About the Authors</strong></p><p><a
    href="http://www.andrewparr.com">**Andrew Parr</a>** is an ex pro golfer &amp;
    stroke survivor. He’s now dedicated to high level coaching. Podcast host of The
    Movement <a href="http://www.andrewparr.com/">www.andrewparr.com</a>He would love
    to share with you how he teaches top athletes and olympians how to thrive in the
    uncomfortable. You can join his <a href="http://www.andrewparr.com">private email
    list here</a>.</p><p><a href="http://aboutthestart.com/">**Tristan de Montebello</a>**
    created an online course where he teaches adults how to learn guitar in 3 months.His
    approach to teaching beginners is <strong>unconventional</strong> in many ways.
    He believes beginner guitarists should have <em>as much fun as possible</em>,
    need to <em>learn actual songs</em>, and should get <em>personal feedback</em>.
    You can learn more about his 3 month guitar course and approach by <a href="http://aboutthestart.com">joining
    his private email list here</a>.</p><h2>********* UPDATE! *********</h2><h3><strong>Will
    you be a part of #CoffeehouseConnect Week May 30 to June 5?</strong></h3><p>We’re
    taking this experiment global, and <strong>we need your help.</strong></p><blockquote><h1>Go
    to <a href="http://join.coffeehouseconnect.com/">http://CoffeehouseConnect.com</a>
    to learn more.</h1></blockquote><p><img src="https://cdn-images-1.medium.com/max/2000/1*IKLGqSn2CQRDJeKuz0BAeg.png"
    alt=""></p><p>May 30 to June 5, people from over 35 countries around the world
    will go to their favorite coffee shop and ask anyone there what they’re working
    on, and why. Will you join <a href="http://join.CoffeehouseConnect.com">Coffeehouse
    Connect Week</a>?</p><p><center><iframe width="560" height="315" src="https://www.youtube.com/embed/yJ5pZSbQoLo"
    frameborder="0" allowfullscreen></iframe></center></p>'
  :author: Mission.org
  :topic: work
- :url: https://medium.com/accelerated-intelligence/an-ambitious-persons-take-on-work-life-balance-i-almost-lost-hope-in-my-marriage-b6f0c0355c2?source=search_post---------5
  :title: An Ambitious Person’s Brutally Honest Take On Work-Life Balance
  :content: '<p>Photo Credit: Evan Kirby</p><h3>We hit rock bottom. Now, we’re happily
    married 12 years. Here’s what I learned.</h3><p>Jim was both a serial entrepreneur
    and a serial husband.</p><p>*<em>In his early 60s, he was on his sixth wife and
    third company. *</em>He was about 70 pounds overweight.</p><p>I happened to sit
    next him for dinner at an entrepreneurship conference. At age 28, I had just become
    a father, and I asked him a deep question that I was struggling with. “You have
    a 70-million-dollar company. Looking back, could you have been a better husband
    and parent and still built such a successful company?”</p><p>His answer was both
    short and shocking: “Can a woman be half pregnant?”</p><p>I smiled politely and
    gave an uncomfortable laugh. In my head, I thought to myself, “Bullshit! I will
    prove you wrong!”</p><p>That was nine years ago. Today, my daughter is 9, and
    my son is 7. Looking back on that night, my conclusion can be summed up in three
    words:</p><h2>Jim was right.</h2><p>“So this is how a marriage ends.”</p><p>That’s
    what went through my mind, five years after that conversation with Jim, as I hung
    up the phone in my hotel room after a lifeless conversation with my wife and business
    partner Sheena.</p><p>The idea that two people who were “meant for each other”
    could just grow apart never seemed like a suitable cause of separation. But now
    I was living the possibility of it, and I understood.</p><p>At some level, I longed
    for the arguments of the past, which would at least confirm that we both still
    cared. But willpower no longer worked as a way to create emotion. For the first
    time in the 13 years that I’d been with Sheena, I was losing hope. I was scared.</p><p>This
    phone call happened immediately after a five-month sprint in which Sheena and
    I worked seven days a week to meet an impossible business deadline. Everything
    else in our life suffered: our health, our relationship, our parenting, our sleep.
    Each of us had aged three years in three months and we could see it in the other.
    In order to recover and get through the days with energy, I didn’t need one nap,
    I needed two. It was our low point as a couple and my low point as an individual.
    We were so busy we couldn’t even argue. Disappointment turned into anger, which
    turned into apathy.</p><p>When things fall apart, there are two ways to get back
    up:</p><ol><li><p>Try to rebuild the life you had before.</p></li><li><p>Let go
    of who you were and become something new that you had never imagined before.</p></li></ol><p>I
    chose the second path. So did my wife.</p><p>I remember us taking long walks in
    the woods, having multi-hour conversations, and journaling daily. I read books
    about how others confronted loss, so I could learn how to let go and live. These
    books included <a href="http://amzn.to/2tRCdub">How We Die: Reflections of Life’s
    Final Chapter</a>, in which a surgeon shared a behind-the-scenes perspective of
    patients’ final days. I also read <a href="http://amzn.to/2pgP9Vc">Chasing Daylight:
    How My Forthcoming Death Transformed My Life</a> by the former CEO of KPMG, Eugene
    O’Kelly. I was shocked to learn how, after decades of working long hours, O’Kelly
    quickly and with no regrets shuttered all ties with KPMG upon learning of his
    terminal diagnosis. I also read books about spouses losing spouses and parents
    losing children.</p><p>My loss, of course, could not compare to actual death,
    but on an unconscious level I knew that part of me was dying. I felt real grief
    for the loss of goals I had been committed to for more than a decade, networks
    I had been a part of that no longer represented how I thought of myself, values
    that no longer served me, and beliefs about myself I no longer wanted. The period
    ended with both Sheena and I making serious changes to who we spent time with,
    how we managed our health, who we chose as role models, how we parented, and how
    we conducted our relationship.</p><p>For example, I took a deep dive into health.
    As a result, I learned that I had mild sleep apnea, a gluten allergy, and a vitamin
    D deficiency. I started tracking my physical movement, exercising regularly, and
    sleeping more. Sheena took a year off of working to be full-time with our son
    after he had to transfer out of two preschools and had become mute in any school
    environment.</p><p>I’m now proud Sheena and I have been together for 18 years
    and married for 12. We’re more financially secure than ever. Our son is thriving
    in a perfect program for him. And we love what we do on a day-to-day basis because
    it is deeply, intrinsically rewarding. Finally, we can both honestly say that
    the relationship is better than it’s ever been.</p><p>Jim was right because being
    great at something, to truly be one of the best in the world in a professional
    context, typically requires an ungodly amount of commitment over decades. It requires
    rising to and overcoming every challenge. This commitment often comes at a cost:
    to building friendships, to a deep relationship with your spouse, to your health,
    to your children, and to whatever else requires time and energy.</p><p>Ambition
    can become a vacuum that sucks in everything in its path. It’s what you think
    about in the shower, on your commute, or during any idle moment. I’ve read more
    than a hundred biographies of elite performers and have yet to find one who was
    not consumed with being world-class to the point of obsession and who didn’t reorient
    their life around their craft. I did not take Jim seriously nine years ago. That
    was a mistake.</p><h2>But Jim was wrong, too.</h2><p>Earlier this year, the wife
    of my partner and investor, Eben Pagan, sent an email that changed my life. She
    wrote:</p><blockquote><p>Every leader Eben invests in works with me to support
    the whole system working and succeeding. So we offer it as a contribution to your
    family dynamic feeling smoother and softer. When you and Sheena know how to find
    each other in difficult times, it only adds to your success in business.How does
    next week Tuesday sound?Much love, Annie</p></blockquote><p>Since then, I’ve talked
    weekly with <a href="http://annielalla.com/">Annie Lalla</a>, who happens to be
    a brilliant relationship coach, and those conversations have shown me that Jim
    was also wrong. One day as I was telling Annie about the difficulties of parenting,
    I realized that what I was actually doing was <em>resisting</em> being a parent.
    When challenges came up I thought to myself, “Arghh. Why is this happening? I
    can’t believe I have to deal with this.” I also realized that I had unconsciously
    accepted that I wasn’t ever going to be a great parent.</p><p>As I shared these
    thoughts with Annie — thoughts I hadn’t even been aware of just minutes prior
    — she asked me, “Why can’t you do both?”</p><p>“Here we go,” I thought to myself.
    “Where do I start?” I told her about Jim. I told her about the biographies. I
    told her about the low point in our marriage when I was trying to have it all.
    I told her that I didn’t really think it was possible.</p><p>But she pushed back.
    “That was in the past! You aren’t the same as you were five years ago. You have
    new experiences and lessons learned. And society isn’t the same either. There
    are new tools there, too. Right?”</p><p>“Yes.”</p><p>“You are someone who likes
    to pioneer, right?”</p><p>“Yes.”</p><p>“Society needs pioneering men like you
    who find new ways to balance and blend career and family. You can be a role model
    for the next generation.”</p><p>In the movie <em>Inception</em>, a group of agents
    plant thoughts in people’s heads while they’re dreaming. Those thoughts can grow,
    change the whole constellation of that person’s beliefs, and alter their decisions
    when they awaken. In that moment, I felt like I had been incepted.</p><p>Annie’s
    suggestion took hold. Nine years after that conversation with Jim, knowing what
    I know now, I began to believe I could do it differently. But I wondered <em>how</em>.</p><p>The
    answer I’ve come to for myself is what I call the Snowball Principle.</p><h2>The
    Snowball Principle And How To Have It All</h2><p>The Snowball Principle is the
    idea that we can have it all if we’re willing to:</p><ol><li><p>Get the fundamentals
    right FIRST and make them non-negotiable.</p></li><li><p>Have Big, Hairy, Audacious
    Goals (BHAGS), but be patient with them.</p></li><li><p>Replace all-or-nothing
    sprints with a marathon mentality.</p></li></ol><p>It’s the idea that if we<a
    href="https://medium.com/accelerated-intelligence/the-no-1-lifelong-habit-of-warren-buffett-the-5-hour-rule-57884dce03f3">
    do the right things consistently over a long period of time</a>, the future we
    want becomes more and more inevitable because our actions <a href="https://medium.com/accelerated-intelligence/why-successful-people-spend-10-hours-a-week-on-compound-time-79d64d8132a8">compound
    upon one another</a>.</p><p>Just as a small snowball being rolled down the hill
    slowly picks up snow with each rotation and becomes a huge one:</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*6VXzhjupcyOLZCCg."
    alt="Source: [Calvin &amp; Hobbes](http://calvinandhobbes.wikia.com/wiki/Calvin%27s_snowballs)"><em>Source:
    <a href="http://calvinandhobbes.wikia.com/wiki/Calvin%27s_snowballs">Calvin &amp;
    Hobbes</a></em></p><p>Or how a tiny domino can eventually knock over a huge one
    if you give the momentum time to compound upon itself:</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*7QNI3b_4IfBTEsZ3."
    alt="*Credit: [Gerrydomino](http://34.gs/t9jh). 2009 world record for largest
    domino collapse ever.*"><strong>Credit: <a href="http://34.gs/t9jh">Gerrydomino</a>.
    2009 world record for largest domino collapse ever.</strong></p><p>With both the
    snowball and the dominoes, the ending is inevitable.</p><p>One of my role models
    for the Snowball Principle happens to be one of my closest friends since high
    school. Cal Newport and I founded a company together when we were 16 years old.
    Over the years, one thing I’ve noticed about Cal is that he is incredibly consistent
    at what he commits to.</p><p>Cal wrote his first book while he was in college,
    and he has devoted a small amount of time to writing almost each weekday since
    then. As a result, over the last 16 years, he has:</p><ul><li><p>Written <a href="https://amzn.to/2s1bsQO">six
    bestselling books</a></p></li><li><p>Earned a computer science PhD from MIT</p></li><li><p>Obtained
    a tenured professorship at Georgetown</p></li><li><p>Become a father of three</p></li></ul><p>But
    wait, here’s the real cincher: He does all this while consistently shutting off
    work at 5 p.m. daily and taking weekends off.</p><p>I remember being skeptical
    of Cal’s approach when we were in our 20s. Why not just jump 100 percent into
    one thing? Why shut down work at 5 p.m. when you don’t have kids and you can fill
    up that time? I remember Cal once saying that his brain would only allow him to
    do about five hours of truly deep work per day. The first word that came to my
    mind was “lazy.”</p><p>After seeing Cal’s results compound, I’ve turned from a
    skeptic into a believer. After observing my own body’s energy when I do <a href="https://amzn.to/2Lp9H7X">deep
    and focused work,</a> I discovered that 5 hours per day is about right.</p><p>The
    chart below explains what I missed about the power of Cal’s approach. In the beginning
    of earning compound interest, you don’t see the <a href="https://medium.com/accelerated-intelligence/why-successful-people-spend-10-hours-a-week-on-compound-time-79d64d8132a8">benefits
    of compounding</a>. Your results in the beginning are tightly correlated with
    your effort, but, by the end, the interest is doing almost all of the work for
    you.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*HwRS3Y1wwUPJSpXv."
    alt="*Source: [Visual Capitalist](http://wealth.visualcapitalist.com/visualizing-power-compound-interest/)*"><strong>Source:
    <a href="http://wealth.visualcapitalist.com/visualizing-power-compound-interest/">Visual
    Capitalist</a></strong></p><p>With patience and consistency, we can have it all.</p><p>Here
    is a breakdown on each of the components of the Snowball Principle…</p><h2>Key
    #1: Get the fundamentals right FIRST and make them non-negotiable.</h2><p><img
    src="https://cdn-images-1.medium.com/max/2000/0*g963qsYCJ4mLfDBP." alt=""></p><p>We
    are all human. And as humans, we have very similar psychological and physiological
    needs. There are six core areas that, barring some really bad luck, can essentially
    guarantee us a pretty good life if we get them to a sufficient level:</p><ol><li><p><strong>Health:</strong>
    Living a long life filled with vibrant energy.</p></li><li><p><strong>Wealth:</strong>
    Accumulating enough money to live your ideal, sufficient lifestyle without worrying
    about the future.</p></li><li><p><strong>Relationships:</strong> Building a large,
    diverse, loving network of relationships with people you feel connected to.</p></li><li><p>*<em>Work:
    *</em>Having a job where you can work on your strengths and passion in a way that
    gives you autonomy, connection, and purpose.</p></li><li><p>*<em>Learning and
    Growth: *</em>Investing in the knowledge and skills that help you solve challenges
    in your life and career now and <a href="https://medium.com/accelerated-intelligence/be-prepared-to-lose-your-job-in-the-future-if-you-dont-learn-this-one-skill-now-8a87ade2a268">into
    the future</a>.</p></li><li><p>**Purpose: <a href="https://medium.com/accelerated-intelligence/if-you-dont-want-to-regret-your-life-30-years-later-make-this-one-choice-right-now-1cc137516df0">**Living
    a life full of meaning that matters</a>.</p></li></ol><p>These six needs are so
    intertwined that your degree of success in one either holds you back or multiplies
    your results in each of the other areas.</p><p>For example, if you have great
    health, but your relationships are full of conflict, you’ll feel unhappy. If you
    have great and loving relationships, but you’re deep in debt with creditors calling
    you all day, you’ll feel totally stressed out. Even if you’re rich and you have
    the wealth that everyone wants, it doesn’t mean much if you’re ill and bedridden.</p><p>Now
    flip this around, and look at it from the opposite perspective. Think about the
    opportunity of improving in each area rather than the costs of falling short.
    If you have great health, and your relationships are full of conflict, but you
    repair your relationships, think about how much better your life becomes. It’s
    not just a little better, right?** It’s a multiplier.** If you have good relationships
    but you’re stressed out about being in debt, and then you pay your debt off, think
    about how good that feels. Again, it’s not just a little better. <strong>It’s
    a multiplier.</strong></p><p>If we get all these six pillars right, we have a
    good life by almost anyone’s standard. But if even one of them are off, the whole
    thing is thrown.</p><p><strong>In retrospect, I would have focused on getting
    these fundamentals right FIRST, before setting huge professional goals with lower
    probabilities of success. I would’ve made things like getting an annual physical
    with blood work, a good night’s sleep, and adequate exercise non-negotiables.
    By non-negotiable, I mean not even entertaining excuses about urgent deadlines
    or it not being the right timing. Instead, I focused on my big, hairy, audacious
    goals first and justified sacrificing the fundamentals.</strong></p><p>The beautiful
    thing about meeting our physical and psychological needs is that they are more
    basic and doable than Big, Hairy, Audacious Goals. It doesn’t require lottery-level
    luck, 10,000 hours of deliberate practice, a certain IQ, or a particular net worth
    to strengthen your foundation. It just requires learning the basics of all of
    these needs and implementing a few habits that you do every single day to meet
    them. Difficult, but not impossible.</p><p>There are several epidemics happening
    in society at once: loneliness, obesity, depression, anxiety, and suicide. These
    epidemics not only impact the individuals who experience them, but their families,
    the government, and society at large. I can’t help but think that focusing on
    the fundamentals first would have a large impact on us not only as individuals
    but on a society as a whole.</p><p>Research is showing that many of these problems
    can be significantly reduced by getting a <a href="https://amzn.to/2L22ppV">good
    night’s sleep</a>, <a href="https://amzn.to/2Jbzpif">exercising regularly</a>,
    <a href="https://www.foundmyfitness.com">eating a healthy diet</a>, and <a href="https://amzn.to/2L6kKlw">putting
    aside time for friends and family</a>.</p><h2>Key #2: Have Big, Hairy, Audacious
    Goals (BHAGS), but be patient with them.</h2><p>I still have big goals that I’m
    pursuing, but I’m pursuing them on<a href="https://medium.com/accelerated-intelligence/im-36-and-i-just-realized-a-timeless-truth-i-missed-all-this-time-dafcfd2344b6">
    a different timescale</a>.</p><p>In my 20s, I focused on accomplishing certain
    goals by the time I was 30. Because of these arbitrary time limits, I had to focus
    more on my business and rush. As a result, Sheena and I hit milestones like BusinessWeek’s
    25 Under 25 and Inc.’s 30 Under 30 awards, and made over $1 million in revenue
    by the time we turned 30.</p><p>However, at 36 years old, I <a href="https://medium.com/accelerated-intelligence/im-36-and-i-just-realized-a-timeless-truth-i-missed-all-this-time-dafcfd2344b6">don’t
    really care about these goals</a>, and I wonder why I sacrificed so much for them.</p><p>In
    retrospect, I should have tried less to keep up with other entrepreneurs’ revenue
    numbers and awards, and focused more on achieving goals that created value over
    time rather than goals that just sounded good.</p><p>Patience is hard, because
    it means putting off goals until further in the future. It means seeing peers
    pass you by in certain domains where they are 100-percent laser-focused. It means
    focusing on internal metrics rather than external metrics. It means <a href="https://medium.com/accelerated-intelligence/if-you-want-to-be-massively-successful-do-not-set-ambitious-goals-according-to-studies-affa9cd39f5d">learning
    to appreciate the journey</a>.</p><p>Granted, there are certain businesses where
    speed is everything. But, when I look back on my own businesses, I see that the
    urgency I felt was more in my mind than anywhere else.</p><h2>Key #3: Replace
    all-or-nothing sprints with a marathon mentality.</h2><blockquote><h1><em>When
    asked what surprised him about humanity the most, the Dalai Lama replied:</em></h1><h1><em>“Man.
    Because he sacrifices his health in order to make money. Then he sacrifices money
    to recuperate his health. And then he is so anxious about the future that he does
    not enjoy the present; the result being that he does not live in the present or
    the future; he lives as if he is never going to die, and then dies having never
    really lived.”</em></h1></blockquote><p>Einstein famously said that compound interest
    is the eighth wonder of the world. Oddly, few people actually take advantage of
    this insight. Tens of millions of more people could be millionaires at retirement
    if they consistently saved small amounts of money starting when they were young.
    People could effectively be geniuses if they followed the <a href="https://medium.com/@michaeldsimmons/bill-gates-warren-buffett-and-oprah-all-use-the-5-hour-rule-308f528b6363">five-hour
    rule</a> and let knowledge compound upon itself by learning <a href="https://medium.com/accelerated-intelligence/the-5-hour-rule-if-youre-not-spending-5-hours-per-week-learning-you-re-being-irresponsible-791c3f18f5e6">at
    least five hours per week</a>.</p><p>Yet few people actually do these things.</p><p>Why
    do we not do something that makes so much sense?</p><p>If I’m honest with myself
    and look back on my life, it comes down to the fact that I:</p><ol><li><p>Overvalued
    short-term sprints where I became focused on just one part of my life</p></li><li><p>Undervalued
    <a href="https://medium.com/accelerated-intelligence/why-successful-people-spend-10-hours-a-week-on-compound-time-79d64d8132a8">the
    amazing compounding power of long-term habits</a></p></li></ol><p>It’s super compelling
    for the brain to think about what might happen if we just gave it our all financially
    and physically toward a goal for three months. But the reality is that <a href="https://medium.com/accelerated-intelligence/if-you-want-to-be-massively-successful-do-not-set-ambitious-goals-according-to-studies-affa9cd39f5d">most
    goals always take longer</a> than we’d hope or expect and often were less important
    than we thought they were.</p><p>In the world of long-distance running, the idea
    of someone starting off a race by sprinting as fast as they can until they collapse
    from exhaustion is obviously stupid. Yet, when it comes to our careers, many of
    us follow this mentality.</p><p>Expert marathoners, on the other hand, purposely
    run slower than their full potential so that they can run longer and actually
    win the race.</p><p>We need to redefine hard work from how many hours we work
    in a week (the equivalent of our sprinting speed) to how how consistently hard
    we work over a long period of time.</p><h2>On Holistic Success</h2><p>In nine
    years, my firstborn will be an adult. The time has passed by so damn fast. Now
    I wonder to myself, “What kind of adults do I hope my children become?” In my
    career as an education entrepreneur, I wonder, “What do we want to train the next
    generation to be like?”</p><p>After going through my own personal transformation,
    my answer has changed.</p><p>We can all name numerous examples of billionaires,
    celebrities, and rock stars who achieved their big, hairy, audacious goals, but
    were personally miserable, sacrificed their health, sacrificed their family, or
    even sacrificed their morals.</p><p>And this misery isn’t limited to the individual
    realm. Just as we each suffer when we let ambition overtake our basic needs, we
    also suffer when we as a culture do the same. We see the environment being destroyed
    and morals being sacrificed by some of the most ambitious companies and people
    in our society. In the rush to release new technology before competitors, we see
    new technologies emerging, such as artificial intelligence, which may eventually
    have the power to wipe out humanity. Safety has become an afterthought.</p><p><strong>My
    hope for the next generation is that we get the fundamentals right first, both
    as individuals and as a society.</strong> My hope is that when we talk about success
    stories, we can move beyond overnight success stories or aha moments and talk
    more about the power of consistency over a long period of time.</p><p>When I was
    in my early twenties, I was constantly seeking out new, amazing experiences and
    concepts. Now, in my mid-thirties, I find that I’m <a href="https://medium.com/accelerated-intelligence/while-everyone-is-distracted-by-social-media-successful-people-double-down-on-a-totally-underrated-5a86701e9a27">rediscovering
    old ideas</a> and seeing their value for the first time. Ideas like patience,
    focusing on the long term, and getting the fundamentals right aren’t complex or
    sexy. They aren’t the newest hack, but they are tried and true. They are the ideas
    that have been passed down through generations in stories like <em>The Tortoise
    and the Hare.</em></p><p>If we flip our priorities and focus first on the foundation,
    our BHAGs will be icing on the cake. Whether we achieve them or not, when we look
    back on our life, we’ll be able to say we lived <a href="https://medium.com/accelerated-intelligence/if-you-dont-want-to-regret-your-life-30-years-later-make-this-one-choice-right-now-1cc137516df0">a
    full life without regret</a>.</p><h2>Read More From Me</h2><p>Over the years,
    I’ve been a serial entrepreneur, read thousands of books and created programs
    that have coached over 1,000 people on the fundamentals of learning across disciplines
    and building a knowledge foundation that leads to a more holistic and successful
    life. If you want to read more of my writing, visit one of the links below:</p><ul><li><p><a
    href="https://joinnow.live/s/NOFK0x?utm_source=Medium&utm_medium=article&utm_campaign=20">**Watch
    my Learning How To Learn webinar</a>:** Find the time to learn and double the
    value you get from each hour of learning.</p></li><li><p><a href="https://medium.com/@michaeldsimmons">**Read
    my best articles</a>:** My writing on learning how to learn and mental models
    has been read tens of millions of times.</p></li><li><p><a href="https://seminal.lpages.co/mental-model-list-give-away-article-20-medium/?utm_source=Medium&utm_medium=article&utm_campaign=20&utm_content=CTA2">**Take
    my free mental model mini-course</a>:** Many of the most successful entrepreneurs
    in the world use mental models to make better decisions and think more creatively.</p></li></ul><p><strong><em>This
    article was written with love and care using the <a href="https://medium.com/accelerated-intelligence/the-1-mental-model-for-writers-who-want-to-write-high-quality-viral-content-43ecf0d4ec05">blockbuster
    mental model</a>.</em></strong></p>'
  :author: Accelerated Intelligence
  :topic: work
- :url: https://medium.com/@preethikasireddy/how-does-ethereum-work-anyway-22d1df506369?source=search_post---------6
  :title: How does Ethereum work, anyway?
  :content: '<p>Source: r/ethereum</p><h2>Introduction</h2><p>Odds are you’ve heard
    about the Ethereum blockchain, whether or not you know what it is. It’s been in
    the news a lot lately, including the cover of some major magazines, but reading
    those articles can be like gibberish if you don’t have a foundation for what exactly
    Ethereum is. So what is it? In essence, a public database that keeps a permanent
    record of digital transactions. Importantly, this database doesn’t require any
    central authority to maintain and secure it. Instead it operates as a “trustless”
    transactional system — a framework in which individuals can make peer-to-peer
    transactions without needing to trust a third party OR one another.</p><p>Still
    confused? That’s where this post comes in. My aim is to explain how Ethereum functions
    at a technical level, without complex math or scary-looking formulas. Even if
    you’re not a programmer, I hope you’ll walk away with at least better grasp of
    the tech. If some parts are too technical and difficult to grok, that’s totally
    fine! There’s really no need to understand every little detail. I recommend just
    focusing on understanding things at a broad level.</p><p>Many of the topics covered
    in this post are a breakdown of the concepts discussed in the yellow paper. I’ve
    added my own explanations and diagrams to make understanding Ethereum easier.
    Those brave enough to take on the technical challenge can also read the Ethereum
    yellow paper.</p><p>Let’s get started!</p><h2>Blockchain definition</h2><p>A blockchain
    is a “<strong>cryptographically secure transactional singleton machine with shared-state.”
    **[1]</strong> **That’s a mouthful, isn’t it? Let’s break it down.</p><ul><li><p>*<em>“Cryptographically
    secure” *</em>means that the creation of digital currency is secured by complex
    mathematical algorithms that are obscenely hard to break. Think of a firewall
    of sorts. They make it nearly impossible to cheat the system (e.g. create fake
    transactions, erase transactions, etc.)</p></li><li><p><strong>“Transactional
    singleton machine”</strong> means that there’s a single canonical instance of
    the machine responsible for all the transactions being created in the system.
    In other words, there’s a single global truth that everyone believes in.</p></li><li><p><strong>“With
    shared-state”</strong> means that the state stored on this machine is shared and
    open to everyone.</p></li></ul><p>Ethereum implements this blockchain paradigm.</p><iframe
    src="https://medium.com/media/d064eece083fdc3fe9ef86974ce68e60" frameborder=0></iframe><h2>The
    Ethereum blockchain paradigm explained</h2><p>The Ethereum blockchain is essentially
    a <strong>transaction-based</strong> <strong>state machine</strong>. In computer
    science, a <em>state machine</em> refers to something that will read a series
    of inputs and, based on those inputs, will transition to a new state.</p><p><img
    src="https://cdn-images-1.medium.com/max/2536/1*HYjnPbo-_fqpgWhPHrmrow.png" alt=""></p><p>With
    Ethereum’s state machine, we begin with a “genesis state.” This is analogous to
    a blank slate, before any transactions have happened on the network. When transactions
    are executed, this genesis state transitions into some final state. At any point
    in time, this final state represents the current state of Ethereum.</p><p><img
    src="https://cdn-images-1.medium.com/max/2564/1*jZ-VRXBJtOnePofB0z2Q8A.png" alt=""></p><p>The
    state of Ethereum has millions of transactions. These transactions are grouped
    into “blocks.” A block contains a series of transactions, and each block is chained
    together with its previous block.</p><p><img src="https://cdn-images-1.medium.com/max/2344/1*l_H58_pGm3XGwGoQlO9FVQ.png"
    alt=""></p><p>To cause a transition from one state to the next, a transaction
    must be valid. *<em>For a transaction to be considered valid, it must go through
    a validation process known as mining. *</em>Mining is when a group of nodes (i.e.
    computers) expend their compute resources to create a block of valid transactions.</p><p>Any
    node on the network that declares itself as a miner can attempt to create and
    validate a block. Lots of miners from around the world try to create and validate
    blocks at the same time. Each miner provides a mathematical “proof” when submitting
    a block to the blockchain, and this proof acts as a guarantee: if the proof exists,
    the block must be valid.</p><p>For a block to be added to the main blockchain,
    the miner must prove it faster than any other competitor miner. The process of
    validating each block by having a miner provide a mathematical proof is known
    as a <strong>“proof of work.”</strong></p><p>A miner who validates a new block
    is rewarded with a certain amount of value for doing this work. What is that value?
    The Ethereum blockchain uses an intrinsic digital token called “Ether.” Every
    time a miner proves a block, new Ether tokens are generated and awarded.</p><p>You
    might wonder: what guarantees that everyone sticks to one chain of blocks? How
    can we be sure that there doesn’t exist a subset of miners who will decide to
    create their own chain of blocks?</p><p>Earlier, we defined a blockchain as a**
    transactional singleton machine with shared-state**. Using this definition, we
    can understand the correct current state is a single global truth, which everyone
    must accept. Having multiple states (or chains) would ruin the whole system, because
    it would be impossible to agree on which state was the correct one. If the chains
    were to diverge, you might own 10 coins on one chain, 20 on another, and 40 on
    another. In this scenario, there would be no way to determine which chain was
    the most “valid.”</p><p>Whenever multiple paths are generated, a “fork” occurs.
    We typically want to avoid forks, because they disrupt the system and force people
    to choose which chain they “believe” in.</p><p><img src="https://cdn-images-1.medium.com/max/2560/1*O1fLdUJhfL5YOrUw0C0ivA.png"
    alt=""></p><p>To determine which path is most valid and prevent multiple chains,
    Ethereum uses a mechanism called the <strong>“GHOST protocol.”</strong></p><p><strong>“GHOST”
    = “Greedy Heaviest Observed Subtree”</strong></p><p>In simple terms, <strong>the
    GHOST protocol says we must pick the path that has had the most computation done
    upon it</strong>. One way to determine that path is to use the block number of
    the most recent block (the “leaf block”), which represents the total number of
    blocks in the current path (not counting the genesis block). The higher the block
    number, the longer the path and the greater the mining effort that must have gone
    into arriving at the leaf. Using this reasoning allows us to agree on the canonical
    version of the current state.</p><p><img src="https://cdn-images-1.medium.com/max/3428/1*MZCUJTeZvgQsTDYPQOw_Vg.png"
    alt=""></p><p>Now that you’ve gotten the 10,000-foot overview of what a blockchain
    is, let’s dive deeper into the main components that the Ethereum system is comprised
    of:</p><ul><li><p>accounts</p></li><li><p>state</p></li><li><p>gas and fees</p></li><li><p>transactions</p></li><li><p>blocks</p></li><li><p>transaction
    execution</p></li><li><p>mining</p></li><li><p>proof of work</p></li></ul><p><em>One
    note before getting started: whenever I say “hash” of X, I am referring to the
    <a href="https://ethereum.stackexchange.com/questions/550/which-cryptographic-hash-function-does-ethereum-use">KECCAK-256</a>
    hash, which Ethereum uses.</em></p><h2>Accounts</h2><p>The global “shared-state”
    of Ethereum is comprised of many small objects (“accounts”) that are able to interact
    with one another through a message-passing framework. Each account has a <strong>state</strong>
    associated with it and a 20-byte <strong>address</strong>. An address in Ethereum
    is a 160-bit identifier that is used to identify any account.</p><p>There are
    two types of accounts:</p><ul><li><p>Externally owned accounts, which are <strong>controlled
    by private keys *<em>and have *</em>no code associated with them.</strong></p></li><li><p>Contract
    accounts, which are <strong>controlled by their contract code *<em>and *</em>have
    code associated with them.</strong></p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*HIpgnjvHE9Jpb58icF5MgQ.png"
    alt=""></p><h3>Externally owned accounts vs. contract accounts</h3><p>It’s important
    to understand a fundamental difference between externally owned accounts and contract
    accounts. <strong>An externally owned account can send messages to other externally
    owned accounts OR to other contract accounts by creating and signing a transaction
    using its private key.</strong> A message between two externally owned accounts
    is simply a value transfer. But a message from an externally owned account to
    a contract account activates the contract account’s code, allowing it to perform
    various actions (e.g. transfer tokens, write to internal storage, mint new tokens,
    perform some calculation, create new contracts, etc.).</p><p><strong>Unlike externally
    owned accounts, contract accounts can’t initiate new transactions on their own.</strong>
    Instead, contract accounts can only fire transactions in response to other transactions
    they have received (from an externally owned account or from another contract
    account). We’ll learn more about contract-to-contract calls in the “<em>Transactions
    and Messages</em>” section.</p><p><img src="https://cdn-images-1.medium.com/max/3200/1*I635Y9btMh667inOhDBQ_g.png"
    alt=""></p><p><strong>Therefore, any action that occurs on the Ethereum blockchain
    is always set in motion by transactions fired from externally controlled accounts.</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2448/1*LbHK28pCiB5dHRwpTMr30w.png" alt=""></p><h3>Account
    state</h3><p>The account <strong>state</strong> consists of four components, which
    are present regardless of the type of account:</p><ul><li><p><strong>nonce</strong>:
    If the account is an externally owned account, this number represents the number
    of transactions sent from the account’s address. If the account is a contract
    account, the nonce is the number of contracts created by the account.</p></li><li><p><strong>balance</strong>:
    The number of Wei owned by this address. There are 1e+18 Wei per Ether.</p></li><li><p><strong>storageRoot</strong>:
    A hash of the root node of a Merkle Patricia tree (we’ll explain Merkle trees
    later on). This tree encodes the hash of the storage contents of this account,
    and is empty by default.</p></li><li><p><strong>codeHash</strong>: The hash of
    the EVM (Ethereum Virtual Machine — more on this later) code of this account.
    For contract accounts, this is the code that gets hashed and stored as the <strong>codeHash</strong>.
    For externally owned accounts, the <strong>codeHash</strong> field is the hash
    of the empty string.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2548/1*fYY7nqa6NZkDS4WSkXmQoQ.png"
    alt=""></p><h3>World state</h3><p>Okay, so we know that Ethereum’s global state
    consists of a mapping between account addresses and the account states. This mapping
    is stored in a data structure known as a <strong>Merkle Patricia tree</strong>.</p><p>A
    Merkle tree (or also referred as “Merkle trie”) is a type of <a href="https://en.wikipedia.org/wiki/Binary_tree">binary
    tree</a> composed of a set of nodes with:</p><ul><li><p>a large number of leaf
    nodes at the bottom of the tree that contain the underlying data</p></li><li><p>a
    set of intermediate nodes, where each node is the hash of its two child nodes</p></li><li><p>a
    single root node, also formed from the hash of its two child node, representing
    the top of the tree</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/3816/1*5xWwPX2R8d37MeWSFOJPnA.png"
    alt=""></p><p>The data at the bottom of the tree is generated by splitting the
    data that we want to store into <em>chunks</em>, then splitting the chunks into
    <em>buckets</em>, and then taking the hash of each bucket and repeating the same
    process until the total number of hashes remaining becomes only one: <strong>the
    root hash.</strong></p><p><img src="https://cdn-images-1.medium.com/max/3896/1*TXlzvc6bh565UYLZC3Q6Vw.png"
    alt=""></p><p>This tree is required to have a key for every value stored inside
    it. Beginning from the root node of the tree, the key should tell you which child
    node to follow to get to the corresponding value, which is stored in the leaf
    nodes. In Ethereum’s case, the key/value mapping for the state tree is between
    addresses and their associated accounts, including the balance, nonce, codeHash,
    and storageRoot for each account (where the storageRoot is itself a tree).</p><p><img
    src="https://cdn-images-1.medium.com/max/2976/1*N8YtAcAqdtHtzUaZAJgUJQ.png" alt="Source:
    Ethereum whitepaper"><em>Source: Ethereum whitepaper</em></p><p>This same trie
    structure is used also to store transactions and receipts. More specifically,
    every block has a “header” which stores the hash of the root node of three different
    Merkle trie structures, including:</p><ol><li><p>State trie</p></li><li><p>Transactions
    trie</p></li><li><p>Receipts trie</p></li></ol><p><img src="https://cdn-images-1.medium.com/max/2112/1*4EQFjXD2-dbiVgVv-8Si8g.png"
    alt=""></p><p>The ability to store all this information efficiently in Merkle
    tries is incredibly useful in Ethereum for what we call “light clients” or “light
    nodes.” Remember that a blockchain is maintained by a bunch of nodes. Broadly
    speaking, there are two types of nodes: full nodes and light nodes.</p><p><strong>A
    full archive node synchronizes the blockchain by downloading the full chain, from
    the genesis block to the current head block, executing all of the transactions
    contained within.</strong> Typically, miners store the full archive node, because
    they are required to do so for the mining process. It is also possible to download
    a full node without executing every transaction. Regardless, any full node contains
    the entire chain.</p><p>But unless a node needs to execute every transaction or
    easily query historical data, there’s really no need to store the entire chain.
    This is where the concept of a light node comes in. *<em>Instead of downloading
    and storing the full chain and executing all of the transactions, light nodes
    download only the chain of headers, from the genesis block to the current head,
    without executing any transactions or retrieving any associated state. *</em>Because
    light nodes have access to block headers, which contain hashes of three tries,
    they can still easily generate and receive verifiable answers about transactions,
    events, balances, etc.</p><p>The reason this works is because hashes in the Merkle
    tree propagate upward — if a malicious user attempts to swap a fake transaction
    into the bottom of a Merkle tree, this change will cause a change in the hash
    of the node above, which will change the hash of the node above that, and so on,
    until it eventually changes the root of the tree.</p><p><img src="https://cdn-images-1.medium.com/max/2312/1*MwnTtA5Q-EOAX8JCQEJp5g.png"
    alt=""></p><p>Any node that wants to verify a piece of data can use something
    called a “Merkle proof” to do so. A Merkle proof consists of:</p><ol><li><p>A
    chunk of data to be verified and its hash</p></li><li><p>The root hash of the
    tree</p></li><li><p>The “branch” (all of the partner hashes going up along the
    path from the chunk to the root)</p></li></ol><p><img src="https://cdn-images-1.medium.com/max/2000/1*z9x-TsEK0aoZE4fp5wh49Q.png"
    alt=""></p><p>Anyone reading the proof can verify that the hashing for that branch
    is consistent all the way up the tree, and therefore that the given chunk is actually
    at that position in the tree.</p><p><strong>In summary, the benefit of using a
    Merkle Patricia tree is that the root node of this structure is cryptographically
    dependent on the data stored in the tree, and so the hash of the root node can
    be used as a secure identity for this data. Since the block header includes the
    root hash of the state, transactions, and receipts trees, any node can validate
    a small part of state of Ethereum without needing to store the entire state, which
    can be potentially unbounded in size.</strong></p><h2>Gas and payment</h2><p>One
    very important concept in Ethereum is the concept of fees. <strong>Every computation
    that occurs as a result of a transaction on the Ethereum network incurs a fee
    — there’s no free lunch!</strong> This fee is paid in a denomination called “gas.”</p><p><strong>Gas</strong>
    is the unit used to measure the fees required for a particular computation. <strong>Gas
    price</strong> is the amount of Ether you are willing to spend on every unit of
    gas, and is measured in “gwei.” “Wei” is the smallest unit of Ether, where 1⁰¹⁸
    Wei represents 1 Ether. One gwei is 1,000,000,000 Wei.</p><p>With every transaction,
    a sender sets a <strong>gas limit</strong> and** gas price<strong>. The product
    of **gas price</strong> and <strong>gas limit</strong> represents the maximum
    amount of Wei that the sender is willing to pay for executing a transaction.</p><p>For
    example, let’s say the sender sets the gas limit to 50,000 and a gas price to
    20 gwei. This implies that the sender is willing to spend at most 50,000 x 20
    gwei = 1,000,000,000,000,000 Wei = 0.001 Ether to execute that transaction.</p><p><img
    src="https://cdn-images-1.medium.com/max/2116/1*xSotR_QvCSKCF5C3APmIpA.png" alt=""></p><p>Remember
    that the gas limit represents the maximum gas the sender is willing to spend money
    on. If they have enough Ether in their account balance to cover this maximum,
    they’re good to go. The sender is refunded for any unused gas at the end of the
    transaction, exchanged at the original rate.</p><p><img src="https://cdn-images-1.medium.com/max/3464/1*UNCaS12SsPln7DEnRvcONQ.png"
    alt=""></p><p>In the case that the sender does not provide the necessary gas to
    execute the transaction, the transaction runs “out of gas” and is considered invalid.
    In this case, the transaction processing aborts and any state changes that occurred
    are reversed, such that we end up back at the state of Ethereum prior to the transaction.
    Additionally, a record of the transaction failing gets recorded, showing what
    transaction was attempted and where it failed. And since the machine already expended
    effort to run the calculations before running out of gas, logically, <strong>none
    of the gas is refunded to the sender.</strong></p><p><img src="https://cdn-images-1.medium.com/max/3848/1*M_hHF3ML8gx46pIU3kJV6A.png"
    alt=""></p><p>Where exactly does this gas money go?** All the money spent on gas
    by the sender is sent to the “beneficiary” address, which is typically the miner’s
    address.** Since miners are expending the effort to run computations and validate
    transactions, miners receive the gas fee as a reward.</p><p><img src="https://cdn-images-1.medium.com/max/3348/1*BGZrZkYyRmLfehz3-Djv6w.png"
    alt=""></p><p>Typically, the higher the gas price the sender is willing to pay,
    the greater the value the miner derives from the transaction. Thus, the more likely
    miners will be to select it. In this way, miners are free to choose which transactions
    they want to validate or ignore. In order to guide senders on what gas price to
    set, miners have the option of advertising the minimum gas price for which they
    will execute transactions.</p><h3>There are fees for storage, too</h3><p>*<em>Not
    only is gas used to pay for computation steps, it is also used to pay for storage
    usage. *</em>The total fee for storage is proportional to the smallest multiple
    of 32 bytes used.</p><p>Fees for storage have some nuanced aspects. For example,
    since increased storage increases the size of the Ethereum state database on <em>all</em>
    nodes, there’s an incentive to keep the amount of data stored small. For this
    reason, if a transaction has a step that clears an entry in the storage, the fee
    for executing that operation of is waived, AND a refund is given for freeing up
    storage space.</p><h3><strong>What’s the purpose of fees?</strong></h3><p>One
    important aspect of the way the Ethereum works is that <strong>every single operation
    executed by the network is simultaneously effected by every full node.</strong>
    However, computational steps on the Ethereum Virtual Machine are very expensive.
    Therefore, Ethereum smart contracts are best used for simple tasks, like running
    simple business logic or verifying signatures and other cryptographic objects,
    rather than more complex uses, like file storage, email, or machine learning,
    which can put a strain on the network. <strong>Imposing fees prevents users from
    overtaxing the network.</strong></p><p>Ethereum is a Turing complete language.
    (In short, a Turing machine is a machine that can simulate any computer algorithm
    (for those not familiar with Turing machines, check out <a href="https://en.wikipedia.org/wiki/Turing_machine">this</a>
    and <a href="http://mathworld.wolfram.com/TuringMachine.html">this</a>). This
    allows for loops and makes Ethereum susceptible to the <a href="https://en.wikipedia.org/wiki/Halting_problem">halting
    problem</a>, a problem in which you cannot determine whether or not a program
    will run infinitely. If there were no fees, a malicious actor could easily try
    to disrupt the network by executing an infinite loop within a transaction, without
    any repercussions. Thus, fees protect the network from deliberate attacks.</p><p>You
    might be thinking, “why do we also have to pay for storage?” Well, just like computation,
    storage on the Ethereum network is a cost that the entire network has to take
    the burden of.</p><h2>Transaction and messages</h2><p>We noted earlier that Ethereum
    is a <strong>transaction-based state machine.</strong> In other words, transactions
    occurring between different accounts are what move the global state of Ethereum
    from one state to the next.</p><p><strong>In the most basic sense, a transaction
    is a cryptographically signed piece of instruction that is generated by an externally
    owned account, serialized, and then submitted to the blockchain.</strong></p><p>There
    are two types of transactions: <strong>message calls</strong> and *<em>contract
    creations *</em>(i.e. transactions that create new Ethereum contracts). </p><p>All
    transactions contain the following components, regardless of their type:</p><ul><li><p><strong>nonce</strong>:
    a count of the number of transactions sent by the sender.</p></li><li><p><strong>gasPrice</strong>:
    the number of Wei that the sender is willing to pay per unit of gas required to
    execute the transaction.</p></li><li><p><strong>gasLimit</strong>: the maximum
    amount of gas that the sender is willing to pay for executing this transaction.
    This amount is set and paid upfront, before any computation is done.</p></li><li><p><strong>to</strong>:
    the address of the recipient. In a contract-creating transaction, the contract
    account address does not yet exist, and so an empty value is used.</p></li><li><p><strong>value</strong>:
    the amount of Wei to be transferred from the sender to the recipient. In a contract-creating
    transaction, this value serves as the starting balance within the newly created
    contract account.</p></li><li><p><strong>v, r, s</strong>: used to generate the
    signature that identifies the sender of the transaction.</p></li><li><p><strong>init</strong>
    (only exists for contract-creating transactions): An EVM code fragment that is
    used to initialize the new contract account. <strong>init</strong> is run only
    once, and then is discarded. When <strong>init</strong> is first run, it returns
    the body of the account code, which is the piece of code that is permanently associated
    with the contract account.</p></li><li><p><strong>data</strong> (optional field
    that only exists for message calls): the input data (i.e. parameters) of the message
    call. For example, if a smart contract serves as a domain registration service,
    a call to that contract might expect input fields such as the domain and IP address.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*04kmylfdL1_kstojK65asQ.png" alt=""></p><p>We
    learned in the “<em>Accounts</em>” section that transactions — both message calls
    and contract-creating transactions — are always initiated by externally owned
    accounts and submitted to the blockchain. Another way to think about it is that
    transactions are what bridge the external world to the internal state of Ethereum.</p><p><img
    src="https://cdn-images-1.medium.com/max/3116/1*fGnVgckky5q91iFuYKLthA.png" alt=""></p><p>But
    this doesn’t mean that contracts can’t talk to other contracts. *<em>Contracts
    that exist within the global scope of Ethereum’s state can talk to other contracts
    within that same scope. The way they do this is via “messages” or “internal transactions”
    to other contracts. *</em>We can think of messages or internal transactions as
    being similar to transactions, with the major difference that they are NOT generated
    by externally owned accounts. Instead, they are generated by contracts. They are
    virtual objects that, unlike transactions, are not serialized and only exist in
    the Ethereum execution environment.</p><p><strong>When one contract sends an internal
    transaction to another contract, the associated code that exists on the recipient
    contract account is executed.</strong></p><p><img src="https://cdn-images-1.medium.com/max/3488/1*8wbH03HO4jL9bhT7Sa9ZCA.png"
    alt=""></p><p>One important thing to note is that internal transactions or messages
    don’t contain a *<em>gasLimit. *</em>This is because the gas limit is determined
    by the external creator of the original transaction (i.e. some externally owned
    account). The gas limit that the externally owned account sets must be high enough
    to carry out the transaction, including any sub-executions that occur as a result
    of that transaction, such as contract-to-contract messages. If, in the chain of
    transactions and messages, a particular message execution runs out of gas, then
    that message’s execution will revert, along with any subsequent messages triggered
    by the execution. However, the parent execution does not need to revert.</p><h2>Blocks</h2><p>All
    transactions are grouped together into “blocks.” A blockchain contains a series
    of such blocks that are chained together.</p><p>In Ethereum, a block consists
    of:</p><ul><li><p>the <strong>block header</strong></p></li><li><p>information
    about the <strong>set of transactions</strong> included in that block</p></li><li><p>a
    <strong>set of other block headers for the current block’s ommers</strong>.</p></li></ul><h3>Ommers
    explained</h3><p>What the heck is an “ommer?” An ommer is a block whose parent
    is equal to the current block’s parent’s parent. Let’s take a quick dive into
    what ommers are used for and why a block contains the block headers for ommers.</p><p>Because
    of the way Ethereum is built, block times are much lower (~15 seconds) than those
    of other blockchains, like Bitcoin (~10 minutes). This enables faster transaction
    processing. However, one of the downsides of shorter block times is that more
    competing block solutions are found by miners. These competing blocks are also
    referred to as “orphaned blocks” (i.e. mined blocks do not make it into the main
    chain).</p><p>The purpose of ommers is to help reward miners for including these
    orphaned blocks. The ommers that miners include must be “valid,” meaning within
    the sixth generation or smaller of the present block. After six children, stale
    orphaned blocks can no longer be referenced (because including older transactions
    would complicate things a bit).</p><p>Ommer blocks receive a smaller reward than
    a full block. Nonetheless, there’s still some incentive for miners to include
    these orphaned blocks and reap a reward.</p><h3>Block header</h3><p>Let’s get
    back to blocks for a moment. We mentioned previously that every block has a block
    “header,” but what exactly is this? </p><p>A block header is a portion of the
    block consisting of:</p><ul><li><p><strong>parentHash</strong>: a hash of the
    parent block’s header (this is what makes the block set a “chain”)</p></li><li><p><strong>ommersHash</strong>:
    a hash of the current block’s list of ommers</p></li><li><p><strong>beneficiary</strong>:
    the account address that receives the fees for mining this block</p></li><li><p><strong>stateRoot</strong>:
    the hash of the root node of the state trie (recall how we learned that the state
    trie is stored in the header and makes it easy for light clients to verify anything
    about the state)</p></li><li><p><strong>transactionsRoot</strong>: the hash of
    the root node of the trie that contains all transactions listed in this block</p></li><li><p><strong>receiptsRoot</strong>:
    the hash of the root node of the trie that contains the receipts of all transactions
    listed in this block</p></li><li><p><strong>logsBloom</strong>: a <a href="https://en.wikipedia.org/wiki/Bloom_filter">Bloom
    filter</a> (data structure) that consists of log information</p></li><li><p><strong>difficulty</strong>:
    the difficulty level of this block</p></li><li><p><strong>number</strong>: the
    count of current block (the genesis block has a block number of zero; the block
    number increases by 1 for each each subsequent block)</p></li><li><p><strong>gasLimit</strong>:
    the current gas limit per block</p></li><li><p><strong>gasUsed</strong>: the sum
    of the total gas used by transactions in this block</p></li><li><p><strong>timestamp</strong>:
    the unix timestamp of this block’s inception</p></li><li><p><strong>extraData</strong>:
    extra data related to this block</p></li><li><p><strong>mixHash</strong>: a hash
    that, when combined with the nonce, proves that this block has carried out enough
    computation</p></li><li><p><strong>nonce</strong>: a hash that, when combined
    with the mixHash, proves that this block has carried out enough computation</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2112/1*4EQFjXD2-dbiVgVv-8Si8g.png" alt=""></p><p>Notice
    how every block header contains three trie structures for:</p><ul><li><p>state
    (<strong>stateRoot</strong>)</p></li><li><p>transactions (<strong>transactionsRoot</strong>)</p></li><li><p>receipts
    (<strong>receiptsRoot</strong>)</p></li></ul><p>These trie structures are nothing
    but the Merkle Patricia tries we discussed earlier.</p><p>Additionally, there
    are a few terms from the above description that are worth clarifying. Let’s take
    a look.</p><h3>Logs</h3><p>Ethereum allows for logs to make it possible to track
    various transactions and messages. A contract can explicitly generate a log by
    defining “events” that it wants to log.</p><p>A log entry contains:</p><ul><li><p>the
    logger’s account address,</p></li><li><p>a series of topics that represent various
    events carried out by this transaction, and</p></li><li><p>any data associated
    with these events.</p></li></ul><p>Logs are stored in a <a href="https://en.wikipedia.org/wiki/Bloom_filter">bloom
    filter</a>, which stores the endless log data in an efficient manner.</p><h3>Transaction
    receipt</h3><p>Logs stored in the header come from the log information contained
    in the transaction receipt. Just as you receive a receipt when you buy something
    at a store, Ethereum generates a receipt for every transaction. Like you’d expect,
    each receipt contains certain information about the transaction. This receipt
    includes items like:</p><ul><li><p>the block number</p></li><li><p>block hash</p></li><li><p>transaction
    hash</p></li><li><p>gas used by the current transaction</p></li><li><p>cumulative
    gas used in the current block after the current transaction has executed</p></li><li><p>logs
    created when executing the current transaction</p></li><li><p>..and so on</p></li></ul><h3>Block
    difficulty</h3><p>The “difficulty” of a block is used to enforce consistency in
    the time it takes to validate blocks. The genesis block has a difficulty of 131,072,
    and a special formula is used to calculate the difficulty of every block thereafter.
    If a certain block is validated more quickly than the previous block, the Ethereum
    protocol increases that block’s difficulty.</p><p>The difficulty of the block
    affects the *<em>nonce, *</em>which is a hash that must be calculated when mining
    a block, using the proof-of-work algorithm.</p><p>The relationship between the
    block’s <strong>difficulty</strong> and <strong>nonce</strong> is mathematically
    formalized as:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*5sQvq61s8QBk1xXPKmWu2w.png"
    alt=""></p><p><em>where *</em>Hd** is the difficulty.*</p><p>The only way to find
    a nonce that meets a difficulty threshold is to use the proof-of-work algorithm
    to enumerate all of the possibilities. The expected time to find a solution is
    proportional to the difficulty — the higher the difficulty, the harder it becomes
    to find the nonce, and so the harder it is to validate the block, which in turn
    increases the time it takes to validate a new block. <strong>So, by adjusting
    the difficulty of a block, the protocol can adjust how long it takes to validate
    a block.</strong></p><p>If, on the other hand, validation time is getting slower,
    the protocol decreases the difficulty. In this way, the validation time self-adjusts
    to maintain a constant rate — on average, one block every 15 seconds.</p><h2>Transaction
    Execution</h2><p>We’ve come to one of the most complex parts of the Ethereum protocol:
    the execution of a transaction. Say you send a transaction off into the Ethereum
    network to be processed. What happens to transition the state of Ethereum to include
    your transaction?</p><p><img src="https://cdn-images-1.medium.com/max/2480/1*IxHl8-O1EYt48FpKQB_Sww.png"
    alt=""></p><p>First, all transactions must meet an initial set of requirements
    in order to be executed. These include:</p><ul><li><p>The transaction must be
    a properly formatted <strong>RLP</strong>. “RLP” stands for “Recursive Length
    Prefix” and is a data format used to encode nested arrays of binary data. RLP
    is the format Ethereum uses to serialize objects.</p></li><li><p>Valid transaction
    signature.</p></li><li><p>Valid transaction nonce. Recall that the nonce of an
    account is the count of transactions sent from that account. To be valid, a transaction
    nonce must be equal to the sender account’s nonce.</p></li><li><p>The transaction’s
    gas limit must be equal to or greater than the <strong>intrinsic gas</strong>
    used by the transaction. The intrinsic gas includes:</p></li></ul><ol><li><p>a
    predefined cost of 21,000 gas for executing the transaction</p></li><li><p>a gas
    fee for data sent with the transaction (4 gas for every byte of data or code that
    equals zero, and 68 gas for every non-zero byte of data or code)</p></li><li><p>if
    the transaction is a contract-creating transaction, an additional 32,000 gas</p></li></ol><p><img
    src="https://cdn-images-1.medium.com/max/2168/1*vO9aZkm5gTeEJduOXVQuRg.png" alt=""></p><ul><li>The
    sender’s account balance must have enough Ether to cover the <strong>“upfront”
    gas costs</strong> that the sender must pay. The calculation for the upfront gas
    cost is simple: First, the transaction’s** gas limit** is multiplied by the transaction’s**
    gas price **to determine the maximum gas cost. Then, this maximum cost is added
    to the total value being transferred from the sender to the recipient.</li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*lX4pdY7owk7LHbC6rz3cow.png" alt=""></p><p>If
    the transaction meets all of the above requirements for validity, then we move
    onto the next step.</p><p>First, we deduct the upfront cost of execution from
    the sender’s balance, and increase the nonce of the sender’s account by 1 to account
    for the current transaction. At this point, we can calculate the gas remaining
    as the <strong>total gas limit for the transaction minus the intrinsic gas used.</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2756/1*XKKFOIXYtxqrUHpGRj-gNA.png" alt=""></p><p>Next,
    the transaction starts executing. Throughout the execution of a transaction, Ethereum
    keeps track of the “substate.” This substate is a way to record information accrued
    during the transaction that will be needed immediately after the transaction completes.
    Specifically, it contains:</p><ul><li><p><strong>Self-destruct set</strong>: a
    set of accounts (if any) that will be discarded after the transaction completes.</p></li><li><p><strong>Log
    series</strong>: archived and indexable checkpoints of the virtual machine’s code
    execution.</p></li><li><p><strong>Refund balance</strong>: the amount to be refunded
    to the sender account after the transaction. Remember how we mentioned that storage
    in Ethereum costs money, and that a sender is refunded for clearing up storage?
    Ethereum keeps track of this using a refund counter. The refund counter starts
    at zero and increments every time the contract deletes something in storage.</p></li></ul><p>Next,
    the various computations required by the transaction are processed.</p><p>Once
    all the steps required by the transaction have been processed, and assuming there
    is no invalid state, the state is finalized by determining the amount of unused
    gas to be refunded to the sender. In addition to the unused gas, the sender is
    also refunded some allowance from the “refund balance” that we described above.</p><p>Once
    the sender is refunded:</p><ul><li><p>the Ether for the gas is given to the miner</p></li><li><p>the
    gas used by the transaction is added to the block gas counter (which keeps track
    of the total gas used by all transactions in the block, and is useful when validating
    a block)</p></li><li><p>all accounts in the self-destruct set (if any) are deleted</p></li></ul><p>Finally,
    we’re left with the new state and a set of the logs created by the transaction.</p><p>Now
    that we’ve covered the basics of transaction execution, let’s look at some of
    the differences between contract-creating transactions and message calls.</p><h3>Contract
    creation</h3><p>Recall that in Ethereum, there are two types of accounts: contract
    accounts and externally owned accounts. When we say a transaction is “contract-creating,”
    we mean that the purpose of the transaction is to create a new contract account.</p><p>In
    order to create a new contract account, we first declare the address of the new
    account using a special formula. Then we initialize the new account by:</p><ul><li><p>Setting
    the nonce to zero</p></li><li><p>If the sender sent some amount of Ether as <em>value</em>
    with the transaction, setting the account balance to that value</p></li><li><p>Deducting
    the value added to this new account’s balance from the sender’s balance</p></li><li><p>Setting
    the storage as empty</p></li><li><p>Setting the contract’s codeHash as the hash
    of an empty string</p></li></ul><p>Once we initialize the account, we can actually
    create the account, using the <strong>init code</strong> sent with the transaction
    (see the “Transaction and messages” section for a refresher on the init code).
    What happens during the execution of this init code is varied. Depending on the
    constructor of the contract, it might update the account’s storage, create other
    contract accounts, make other message calls, etc.</p><p>As the code to initialize
    a contract is executed, it uses gas. <strong>The transaction is not allowed to
    use up more gas than the remaining gas. If it does, the execution will hit an
    out-of-gas (OOG) exception and exit. If the transaction exits due to an out-of-gas
    exception, then the state is reverted to the point immediately prior to transaction.
    The sender is *not *refunded the gas that was spent before running out.</strong></p><p>Boo
    hoo.</p><p>However, if the sender sent any Ether value with the transaction, the
    Ether value will be refunded even if the contract creation fails. Phew!</p><p>If
    the initialization code executes successfully, a final contract-creation cost
    is paid. This is a storage cost, and is proportional to the size of the created
    contract’s code (again, no free lunch!) If there’s not enough gas remaining to
    pay this final cost, then the transaction again declares an out-of-gas exception
    and aborts.</p><p>If all goes well and we make it this far without exceptions,
    then any remaining unused gas is refunded to the original sender of the transaction,
    and the altered state is now allowed to persist!</p><p>Hooray!</p><h3>Message
    calls</h3><p>The execution of a message call is similar to that of a contract
    creation, with a few differences.</p><p>A message call execution does not include
    any init code, since no new accounts are being created. However, it can contain
    input data, if this data was provided by the transaction sender. Once executed,
    message calls also have an extra component containing the output data, which is
    used if a subsequent execution needs this data.</p><p>As is true with contract
    creation, if a message call execution exits because it runs out of gas or because
    the transaction is invalid (e.g. stack overflow, invalid jump destination, or
    invalid instruction), none of the gas used is refunded to the original caller.
    Instead, all of the remaining unused gas is consumed, and the state is reset to
    the point immediately prior to balance transfer.</p><p>Until the most recent update
    of Ethereum, there was no way to stop or revert the execution of a transaction
    without having the system consume all the gas you provided. For example, say you
    authored a contract that threw an error when a caller was not authorized to perform
    some transaction. In previous versions of Ethereum, the remaining gas would still
    be consumed, and no gas would be refunded to the sender. <strong>But the Byzantium
    update includes a new “revert” code that allows a contract to stop execution and
    revert state changes, without consuming the remaining gas, and with the ability
    to return a reason for the failed transaction.</strong> If a transaction exits
    due to a revert, then the unused gas is returned to the sender.</p><h2>Execution
    model</h2><p>So far, we’ve learned about the series of steps that have to happen
    for a transaction to execute from start to finish. Now, we’ll look at how the
    transaction actually executes within the VM.</p><p><strong>The part of the protocol
    that actually handles processing the transactions is Ethereum’s own virtual machine,
    known as the Ethereum Virtual Machine (EVM).</strong></p><p>The EVM is a Turing
    complete virtual machine, as defined earlier. The only limitation the EVM has
    that a typical Turing complete machine does not is that the EVM is intrinsically
    bound by gas. Thus, the total amount of computation that can be done is intrinsically
    limited by the amount of gas provided.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*q9jrIqmLZ-wXlXg9tlpu9g.png"
    alt="Source: CMU"><em>Source: CMU</em></p><p>Moreover, the EVM has a stack-based
    architecture. A <a href="https://en.wikipedia.org/wiki/Stack_machine">stack machine</a>
    is a computer that uses a last-in, first-out stack to hold temporary values.</p><p>The
    size of each stack item in the EVM is 256-bit, and the stack has a maximum size
    of 1024.</p><p>The EVM has memory, where items are stored as word-addressed byte
    arrays. Memory is volatile, meaning it is not permanent.</p><p>The EVM also has
    storage. Unlike memory, storage is non-volatile and is maintained as part of the
    system state. The EVM stores program code separately, in a virtual <a href="https://en.wikipedia.org/wiki/Read-only_memory">ROM</a>
    that can only be accessed via special instructions. In this way, the EVM differs
    from the typical <a href="https://en.wikipedia.org/wiki/Von_Neumann_architecture">von
    Neumann architecture</a>, in which program code is stored in memory or storage.</p><p><img
    src="https://cdn-images-1.medium.com/max/3208/1*-OH3Yr_UHRRimsKKNpPzPw.png" alt=""></p><p>The
    EVM also has its own language: “EVM bytecode.” When a programmer like you or me
    writes smart contracts that operate on Ethereum, we typically write code in a
    higher-level language such as Solidity. We can then compile that down to EVM bytecode
    that the EVM can understand.</p><p>Okay, now on to execution.</p><p>Before executing
    a particular computation, the processor makes sure that the following information
    is available and valid:</p><ul><li><p>System state</p></li><li><p>Remaining gas
    for computation</p></li><li><p>Address of the account that owns the code that
    is executing</p></li><li><p>Address of the sender of the transaction that originated
    this execution</p></li><li><p>Address of the account that caused the code to execute
    (could be different from the original sender)</p></li><li><p>Gas price of the
    transaction that originated this execution</p></li><li><p>Input data for this
    execution</p></li><li><p>Value (in Wei) passed to this account as part of the
    current execution</p></li><li><p>Machine code to be executed</p></li><li><p>Block
    header of the current block</p></li><li><p>Depth of the present message call or
    contract creation stack</p></li></ul><p>At the start of execution, memory and
    stack are empty and the program counter is zero.</p><pre><code>PC: 0 STACK: []
    MEM: [], STORAGE: {}</code></pre><p>The EVM then executes the transaction recursively,
    computing the <strong>system state</strong> and the *<em>machine state *</em>for
    each loop. The system state is simply Ethereum’s global state. The machine state
    is comprised of:</p><ul><li><p>gas available</p></li><li><p>program counter</p></li><li><p>memory
    contents</p></li><li><p>active number of words in memory</p></li><li><p>stack
    contents.</p></li></ul><p>Stack items are added or removed from the leftmost portion
    of the series.</p><p>On each cycle, the appropriate gas amount is reduced from
    the remaining gas, and the program counter increments.</p><p>At the end of each
    loop, there are three possibilities:</p><ol><li><p>The machine reaches an exceptional
    state (e.g. insufficient gas, invalid instructions, insufficient stack items,
    stack items would overflow above 1024, invalid JUMP/JUMPI destination, etc.) and
    so must be halted, with any changes discarded</p></li><li><p>The sequence continues
    to process into the next loop</p></li><li><p>The machine reaches a controlled
    halt (the end of the execution process)</p></li></ol><p>Assuming the execution
    doesn’t hit an exceptional state and reaches a “controlled” or normal halt, the
    machine generates the resultant state, the remaining gas after this execution,
    the accrued substate, and the resultant output.</p><p>Phew. We got through one
    of the most complex parts of Ethereum. Even if you didn’t fully comprehend this
    part, that’s okay. You don’t <em>really</em> need to understand the nitty gritty
    execution details unless you’re working at a very deep level.</p><h3>How a block
    gets finalized</h3><p>Finally, let’s look at how a block of many transactions
    gets finalized.</p><p>When we say “finalized,” it can mean two different things,
    depending on whether the block is new or existing. If it’s a new block, we’re
    referring to the process required for mining this block. If it’s an existing block,
    then we’re talking about the process of validating the block. In either case,
    there are four requirements for a block to be “finalized”:</p><p><strong>1) Validate
    (or, if mining, determine) ommers</strong> Each ommer block within the block header
    must be a valid header and be within the sixth generation of the present block.</p><p><strong>2)
    Validate (or, if mining, determine) transactions</strong>The <strong>gasUsed</strong>
    number on the block must be equal to the cumulative gas used by the transactions
    listed in the block. (Recall that when executing a transaction, we keep track
    of the block gas counter, which keeps track of the total gas used by all transactions
    in the block).</p><p><strong>3) Apply rewards (only if mining)</strong>The beneficiary
    address is awarded 5 Ether for mining the block. (Under Ethereum proposal <a href="https://github.com/ethereum/EIPs/pull/669">EIP-649</a>,
    this reward of 5 ETH will soon be reduced to 3 ETH). Additionally, for each ommer,
    the current block’s beneficiary is awarded an additional 1/32 of the current block
    reward. Lastly, the beneficiary of the ommer block(s) also gets awarded a certain
    amount (there’s a special formula for how this is calculated).</p><p><strong>4)
    Verify (or, if mining, compute a valid) state and nonce</strong>Ensure that all
    transactions and resultant state changes are applied, and then define the new
    block as the state after the block reward has been applied to the final transaction’s
    resultant state. Verification occurs by checking this final state against the
    state trie stored in the header.</p><h2>Mining proof of work</h2><p>The “<em>Blocks</em>”
    section briefly addressed the concept of block difficulty. The algorithm that
    gives meaning to block difficulty is called Proof of Work (PoW).</p><p>Ethereum’s
    proof-of-work algorithm is called “<a href="https://github.com/ethereum/wiki/wiki/Ethash">Ethash</a>”
    (previously known as Dagger-Hashimoto).</p><p>The algorithm is formally defined
    as:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*BJrvs-jGJTtpsOXdseZBLQ.png"
    alt=""></p><p><em>where *</em>m** is the <strong>mixHash</strong>, <strong>n</strong>
    is the <strong>nonce</strong>, <strong>Hn</strong> is the new block’s header (excluding
    the <strong>nonce</strong> and <strong>mixHash</strong> components, which have
    to be computed), <strong>Hn</strong> is the nonce of the block header, and** d**
    is the <a href="https://en.wikipedia.org/wiki/Directed_acyclic_graph">DAG</a>,
    which is a large data set.*</p><p>In the “<em>Blocks</em>” section, we talked
    about the various items that exist in a block header. Two of those components
    were called the <strong>mixHash</strong> and the <strong>nonce</strong>. As you
    may recall:</p><ul><li><p><strong>mixHash **is</strong> **a hash that, when combined
    with the nonce, proves that this block has carried out enough computation</p></li><li><p>*<em>nonce
    *</em>is a hash that, when combined with the mixHash, proves that this block has
    carried out enough computation</p></li></ul><p>The PoW function is used to evaluate
    these two items.</p><p>How exactly the <strong>mixHash</strong> and <strong>nonce</strong>
    are calculated using the PoW function is somewhat complex, and something we can
    delve deeper into in a separate post. But at a high level, it works like this:</p><p>A
    “seed” is calculated for each block. This seed is different for every “epoch,”
    where each epoch is 30,000 blocks long. For the first epoch, the seed is the hash
    of a series of 32 bytes of zeros. For every subsequent epoch, it is the hash of
    the previous seed hash. Using this seed, a node can calculate a pseudo-random
    “cache.”</p><p>This cache is incredibly useful because it enables the concept
    of “light nodes,” which we discussed previously in this post. The purpose of light
    nodes is to afford certain nodes the ability to efficiently verify a transaction
    without the burden of storing the entire blockchain dataset. A light node can
    verify the validity of a transaction based solely on this cache, because the cache
    can regenerate the specific block it needs to verify.</p><p>Using the cache, a
    node can generate the DAG “dataset,” where each item in the dataset depends on
    a small number of pseudo-randomly-selected items from the cache. In order to be
    a miner, you must generate this full dataset; all full clients and miners store
    this dataset, and the dataset grows linearly with time.</p><p>Miners can then
    take random slices of the dataset and put them through a mathematical function
    to hash them together into a “<strong>mixHash.</strong>” A miner will repeatedly
    generate a <strong>mixHash</strong> until the output is below the desired target
    <strong>nonce</strong>. When the output meets this requirement, this nonce is
    considered valid and the block can be added to the chain.</p><p><strong>Mining
    as a security mechanism</strong> Overall, the purpose of the PoW is to prove,
    in a cryptographically secure way, that a particular amount of computation has
    been expended to generate some output (i.e. the <strong>nonce</strong>). <strong>This
    is because there is no better way to find a nonce that is below the required threshold
    other than to enumerate all the possibilities.</strong> The outputs of repeatedly
    applying the hash function have a uniform distribution, and so we can be assured
    that, on average, <strong>the time needed to find such a nonce depends on the
    difficulty threshold. **The higher the difficulty, the longer it takes to solve
    for the nonce. In this way,</strong> the PoW algorithm gives meaning to the concept
    of difficulty, which is used to enforce blockchain security.**</p><p>What do we
    mean by blockchain security? It’s simple: we want to create a blockchain that
    EVERYONE trusts. As we discussed previously in this post, if more than one chain
    existed, users would lose trust, because they would be unable to reasonably determine
    which chain was the “valid” chain. In order for a group of users to accept the
    underlying state that is stored on a blockchain, we need a single canonical blockchain
    that a group of people believes in.</p><p><strong>This is exactly what the PoW
    algorithm does: it ensures that a particular blockchain will remain canonical
    into the future, making it incredibly difficult for an attacker to create new
    blocks that overwrite a certain part of history (e.g. by erasing transactions
    or creating fake transactions) or maintain a fork.</strong> To have their block
    validated first, an attacker would need to consistently solve for the nonce faster
    than anyone else in the network, such that the network believes their chain is
    the heaviest chain (based on the principles of the GHOST protocol we mentioned
    earlier). This would be impossible unless the attacker had more than half of the
    network mining power, a scenario known as the <a href="https://en.bitcoin.it/wiki/Majority_attack">majority
    51% attack</a>.</p><p><img src="https://cdn-images-1.medium.com/max/3308/1*ULPB9XpVL2Ny8B_Yt75p9w.png"
    alt=""></p><h3>Mining as a wealth distribution mechanism</h3><p>Beyond providing
    a secure blockchain, PoW is also a way to distribute wealth to those who expend
    their computation for providing this security. Recall that a miner receives a
    reward for mining a block, including:</p><ul><li><p>a *static block reward *of
    5 ether for the “winning’” block (soon to be <a href="https://github.com/ethereum/EIPs/pull/669">changed
    to 3 ether</a>)</p></li><li><p>the cost of gas expended within the block by the
    transactions included in the block</p></li><li><p>an extra reward for including
    ommers as part of the block</p></li></ul><p>In order to ensure that the use of
    the PoW consensus mechanism for security and wealth distribution is sustainable
    in the long run, Ethereum strives to instill these two properties:</p><ul><li><p>Make
    it accessible to as many people as possible. In other words, people shouldn’t
    need specialized or uncommon hardware to run the algorithm. The purpose of this
    is to make the wealth distribution model as open as possible so that anyone can
    provide any amount of compute power in return for Ether.</p></li><li><p>Reduce
    the possibility for any single node (or small set) to make a disproportionate
    amount of profit. Any node that can make a disproportionate amount of profit means
    that the node has a large influence on determining the canonical blockchain. This
    is troublesome because it reduces network security.</p></li></ul><p>In the Bitcoin
    blockchain network, one problem that arises in relation to the above two properties
    is that the PoW algorithm is a SHA256 hash function. The weakness with this type
    of function is that it can be solved much more efficiently using specialized hardware,
    also known as ASICs.</p><p>In order to mitigate this issue, Ethereum has chosen
    to make its PoW algorithm (<a href="https://github.com/ethereum/wiki/wiki/Ethash">Ethhash</a>)
    sequentially memory-hard. This means that the algorithm is engineered so that
    calculating the nonce requires a lot of memory AND bandwidth. The large memory
    requirements make it hard for a computer to use its memory in parallel to discover
    multiple nonces simultaneously, and the high bandwidth requirements make it difficult
    for even a super-fast computer to discover multiple nonce simultaneously. This
    reduces the risk of centralization and creates a more level playing field for
    the nodes that are doing the verification.</p><p>One thing to note is that Ethereum
    is transitioning from a PoW consensus mechanism to something called “proof-of-stake”.
    This is a beastly topic of its own that we can hopefully explore in a future post.
    ☺️</p><h2>Conclusion</h2><p>…Phew! You made it to the end. I hope?</p><p>There’s
    a lot to digest in this post, I know. If it takes you multiple reads to fully
    understand what’s going on, that’s totally fine. I personally read the Ethereum
    yellow paper, white paper, and various parts of the code base many times before
    grokking what was going on.</p><p>Nonetheless, I hope you found this overview
    helpful. If you find any errors or mistakes, I’d love for you to write a private
    note or post it directly in the comments. I look at all of ’em, I promise ;)</p><p>And
    remember, I’m human (yep, it’s true) and I make mistakes. I took the time to write
    this post for the benefit of the community, for free. So please be constructive
    in your feedback, without unnecessary bashing. ☺️</p><p>[1] <a href="https://github.com/ethereum/yellowpaper">https://github.com/ethereum/yellowpaper</a></p>'
  :author: Preethi Kasireddy
  :topic: work
- :url: https://humanparts.medium.com/your-work-is-the-only-thing-that-matters-26a47ccf778c?source=search_post---------7
  :title: Your Work Is the Only Thing That Matters
  :content: '<p>Forget about everything else</p><p><img src="https://cdn-images-1.medium.com/max/4898/0*Sen2-5YrQfAuBQJQ"
    alt="Photo by [Johnson Wang](https://unsplash.com/@jdubs?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@jdubs?utm_source=medium&utm_medium=referral">Johnson
    Wang</a></em></p><p>There is a story about an exchange between Jerry Seinfeld
    and a young comedian. The comedian approaches Seinfeld in a club one night and
    asks him for advice about marketing and getting exposure.</p><p>Exposure? Marketing?
    Seinfeld asks. <em>Just work on your act.</em></p><p>Seinfeld, a pure stand-up,
    a comedian’s comedian, is appalled by the question. It’s offensive to his legendary
    <a href="https://www.reddit.com/r/IAmA/comments/2blrd9/jerry_seinfeld_loves_answering_questions_the/">heads-down
    work ethic</a>. But to the kid, this was a surprise. Isn’t that the kind of question
    you’re supposed to ask? Isn’t that how you get ahead?</p><p>He’s not alone. Certainly,
    I myself wasted many chances to learn about how to improve my craft by instead
    asking people I admire for superficial hacks and career opportunities. I see the
    same mistake repeated in subreddits and forums and blogs and Facebook groups that
    (aspiring) creative professionals — writers, designers, startup founders — use
    as networking vehicles and support systems. If Seinfeld ever saw them, he’d cringe
    at every word.</p><p>Because these often closed groups are self-selected communities
    of ambitious, motivated go-getters, there is a tendency to skip the slow and immeasurable
    creative process and go right to the tactics for getting attention or catching
    a break. They want tricks and tips for getting ahead, hacks for advancing their
    careers. Even amongst the more advanced or already successful, the questions posed
    to the group are mostly technical: How do you guys like to negotiate contracts?
    How can I sell more copies or increase my fees? Who is the best agent?</p><blockquote><h1>No
    one pursuing an artistic career wants to hear what sits at the core of Seinfeld’s
    advice: Your work isn’t good enough.</h1></blockquote><p>Not that these things
    aren’t important. Certainly I’d like to know the answers myself but judging by
    the amount of time people spend asking them, or talking about their complicated
    Evernote systems or their preferred deal terms, or the readiness with which they
    are willing to share their elaborate rituals and routines, the less cynical person
    would assume that everyone must have already mastered their craft and the only
    thing left for them to worry about is mopping up a few minor details at the margins.</p><p>If
    only…</p><p>Because if that were even remotely true, we wouldn’t be drowning in
    so much mediocrity — if not outright garbage. The *reason *it’s not true is that
    nobody in these forums, really no one pursuing an artistic career, wants to hear
    what sits at the core of Seinfeld’s advice: Your work isn’t good enough. Keep
    your head down. You still have a long way to go.</p><p>To me, one of the root
    causes of this situation is the economic transformation that creative industries
    have gone through over the last twenty years. There used to be publishers, art
    dealers, investors, managers, and record labels that handled the majority of the
    business side of the equation. But increasingly, the relevance of those partners
    has fallen away, and the number of hats a creator wears has increased. The artist
    can’t just be <em>an artist</em> — they also have to know how to upload YouTube
    videos, use GIFs, promote gigs, and figure out how to get followers on various
    platforms. The artist has far more visibility into their earnings and their distribution,
    than ever before. With that comes more leverage, all of which is a good thing.</p><p>But
    the unintended consequence of, what one might call, total brand and business control,
    is that it diverts attention away from the most essential part of any creative
    profession. You know, <em>making great stuff.</em></p><p>It’s hard to do that
    under ideal circumstances; harder still when you’re tweeting or visualizing your
    next Instagram story or flying to some industry conference. And podcasts… every
    one of them takes an hour. <em>If you’re lucky.</em> And more are created every
    single day and again, <em>if you’re lucky</em>,* *people will want to have you
    on theirs.</p><p>Earlier this month, NovelRank.com, a site which let authors track
    their sales rank on Amazon across all regions, was shut down by Amazon. The “official”
    reason had something to do with the terms of service of their affiliate program.
    I’d never cheer someone losing their business, but secretly, I’m quite grateful
    to whoever made that call at Amazon. I have spent <em>way</em> too much of my
    time refreshing that site, checking how my books were selling in Germany or trying
    to figure out why the rank of one of <a href="http://geni.us/kQm14i">my older
    books</a> suddenly shot up.</p><blockquote><h1>An artist’s job is to create masterpieces.
    Period.</h1></blockquote><p>A line from Phil Libin, the founder of Evernote, is
    “people who are thinking about things other than making the best product, never
    make the best product.” I’m willing to overlook the fact that Evernote is too
    often a shiny distraction for creatives — a black hole into which time is thrown
    under the auspices of “research” and “organization” — because he’s totally right.</p><p>It
    echoes an even more poignant sentiment from Cyril Connolly <a href="http://geni.us/93C47dR">which
    I quoted in *Perennial Seller</a>*: “The more books we read, the clearer it becomes
    that the true function of a writer is to produce a masterpiece and that no other
    task is of any consequence.”</p><p>An artist’s job is to create masterpieces.
    Period.</p><p>Everything else is secondary.</p><p>About a year ago, my mind began
    to construct this recurring moving image that would play on a loop whenever I
    was working on a book or a particularly difficult article. I’d close my eyes,
    think about the project, and there it would be. The image is of an unidentifiable
    baseball player at the plate. It’s zoomed in like one of those SportsCenter closeups,
    and the batter is already mid-swing and connecting with the ball. It’s one of
    those beautiful, old-timey swings like Mickey Mantle or Ted Williams used to do.
    The front leg extended, the back leg all the way back, the bat coming up and hitting
    the ball perfectly.</p><p>That’s it. That’s the whole image.</p><p>I don’t see
    where the ball goes, whether it was a base hit or a grand slam. I suspect earlier
    in my career, I would have cared about the outcome. I would have cared about who
    the player was and what team he played for. I would have needed to know whether
    the ball went foul or found a fielder’s mitt or cleared the upper deck. But as
    I have gotten better as a writer, paradoxically, it doesn’t even occur to me that
    such a thing would matter.</p><p>The image is just the connecting. The bat and
    the ball. The thing that is supposed to be all but physically impossible — hitting
    a rock coming at 90 miles per hour, that traveled from an elevated mound down
    to the batter in less than 400 milliseconds. Over and over again. The connecting.</p><p>Very
    few of us can do that impossible thing. Can connect like that. Can cut it in the
    big leagues, where the ball looks like a marble as it comes over the plate and
    pitchers put it in a spot the size of a croquet ball… at 90+ mph. Very few can
    time their swing just right to meet the ball and hear that satisfying crack as
    the ball heads back the other direction. And to do it more than once? To do it
    game in and game out, day in and day out? It’s a miracle. It requires complete
    and total dedication.</p><p>If you cease practicing for a second, if you let your
    mind get wound too tight or simply allowed to drift elsewhere, you will lose that
    ability. Your bat will stop connecting with the ball, your batting average will
    drop and soon enough you yourself will be dropped, first from the majors and then
    the sport altogether.</p><p>That’s what I think the image is supposed to be a
    reminder to me of. Writing of course is all about a kind of consistent connection:
    with the audience, with yourself, with something that goes to the essence of the
    human experience. Really, that’s all art and commerce are, too. Not to put too
    fine a point on it, but they are about swinging at the right pitches too.</p><p>When
    a business is perfectly lined up with the needs of the market. When a song taps
    into some wave of emotion you didn’t know was there. When a painting or a poem
    shoves you in your solar plexus. When an article touches on some truth about the
    world that needed to be said.</p><p>That’s the job.</p><p><em>Selecting and Connecting.</em></p><p>We
    need to forget about tertiary concerns and stop fiddling with shit that doesn’t
    matter.</p><p>We need to keep our eye on the ball.</p><p><a href="https://dailystoic.com/it-works-if-you-work-it/">We
    need to work on our act.</a></p><p>Nothing else is of any consequence.</p>'
  :author: What Does It Mean to Be a Man?
  :topic: work
- :url: https://medium.com/free-code-camp/how-i-landed-a-full-stack-developer-job-without-a-tech-degree-or-work-experience-6add97be2051?source=search_post---------8
  :title: How I landed a full stack developer job without a tech degree or work experience
  :content: "<p>Six months ago, I got my first developer job as full stack web developer
    for a startup. I had no relevant work experience, no tech degree, and not even
    a year of active coding experience. And yet I managed to land my dream offer,
    and can today for the first time in my life say that I love my job. Here’s how
    I did it — the long version.</p><p><img src=\"https://cdn-images-1.medium.com/max/3200/0*TDuYHwIBvClPXrgk.\"
    alt=\"\"></p><h2><strong>Part 1: Embracing the quarter-life crisis</strong></h2><p>About
    three years ago, I was in the middle of a raging quarter-life crisis. I’d graduated
    from business school, gotten an attractive investment banking job, and then quit
    that same job just a few months in after realizing I hated everything about it.</p><p>Completely
    lost and quite cliché, I went solo traveling for a few months to “find myself”.
    And although I thought I did, I didn’t. Not enough anyway. But it actually helped
    me figure out a few things.</p><p>The first thing was that I simply couldn’t keep
    pursuing a finance career. I just couldn’t see any future scenario where that
    would make me happy.</p><p>The second thing was that backpacking and surfing,
    although being great and all, wouldn’t help me find that “calling” I was looking
    for. The only reasonable thing to do seemed like the classic trial-and-error method.</p><p>So
    when I got back home, I decided to try out a few things that I thought might both
    make me happy and at the same time provide for some sort of decent living. And
    trial-and-error it was.</p><p>First, I thought I’d give writing a serious shot.
    So I started writing and editing part-time for an online business magazine. It
    was pretty cool for a while. Working three days a week in a fast-paced editorial
    office, writing about anything business, finance, tech or sustainability-related.</p><p>At
    the same time, I’d heard so much about life as a freelancer while travelling that
    I thought I’d try it out. So I set up my own firm, and soon enough stumbled upon
    a few business analyst projects. Being my own boss was of course very exciting
    at first, and being able to work from literally anywhere was completely new for
    me.</p><p>I went on like this for about eight months, doubling as a writer/editor
    and a freelancing business analyst. But eventually I started losing interest in
    the job at the magazine.</p><p>As any sane person dealing with digital content
    will know, clickbait cultures come at the expense of creativity and quality. In
    other words, when the main incentive of your content is clicks, all the superlatives
    required to hunt down those clicks will soon wear down on any creative ambitions
    that were there in the first place. Besides, I couldn’t shake the feeling that
    as a writer/editor, I was always too far away from the action I was reporting
    on.</p><p>So I quit. Which was ok according to my trial-and-error deal with myself.
    But it still felt crappy, since I’d actually invested eight months into the whole
    writing thing. But as someone smart may or may not have said: when one door closes,
    another one opens.</p><p>And I still had one more thing on my trial-and-error
    list to check off.</p><h2><strong>Part 2: The lunch that changed my life</strong></h2><p>Life
    is weird, and sometimes it will hide the biggest, most life-changing inspirations
    in the places you’d least expect. It was certainly like that for me when I experienced
    my first “pull” towards coding.</p><p>Although quitting the job at the magazine
    felt like a failure, the experience would prove to not have been completely in
    vain after all. After writing so much about tech startups and the exciting lives
    of entrepreneurs, I was dead set on giving that lifestyle a shot as well.</p><p>And
    after about a month of research and job hunting, I managed to land a job at one
    of the then — supposedly — most promising FinTech companies in the Nordics. In
    just a few years, it had grown to become one of Europe’s biggest equity crowdfunding
    platforms.</p><p>I hadn’t really applied to any specific job opening. But since
    I really believed in the company’s mission, and was impressed by their success,
    I’d rather just gotten in touch with their CFO telling him just that. We met a
    couple of times, and all of a sudden I was working there in some quite fuzzy business
    development role.</p><p>Although I’d hoped to get to work on strategic and analytical
    projects, I ended up doing what fuzzy business developers usually end up doing:
    selling. Which was also why this job too didn’t work out in the end.</p><p>But,
    there’s more.</p><p>Just like the last job experience from the magazine, this
    job would also prove to not have been all in vain. In fact, without it, I’d probably
    not be a developer today. Because that’s where I met Sandra.</p><p>She was a front-end
    developer in the product team, sitting just on the other end of the tiny coworking
    office we were cramped in at the time.</p><p>Technically we were colleagues, but
    as anyone whose worked in a dysfunctional tech company will know, the distance
    from the sales team to the product team can often feel like galaxies apart.</p><p>It
    didn’t help that management had just decided to outsource the whole dev team to
    a remote team in Ukraine either. Meaning Sandra and all the other developers would
    be let go and were more or less just serving their two months notice.</p><p>Despite
    this distance, one day Sandra and I ended up having lunch together. It would basically
    be my first real conversation with a professional developer, and I think it was
    a mix of genuine curiosity and my accelerating existential crisis that quickly
    more or less turned the lunch into an interview.</p><p>And our lunch ended up
    being a totally life-changing experience for me. More specifically, <strong>three
    revelations</strong> made it so.</p><ol><li><p>I was shocked to learn that she
    had no “real” education in web development, which for me at the time would equal
    nothing short of an academic degree. Everything she knew, she’d learned from MOOC
    platforms (Massive Open Online Courses), like freeCodeCamp and Codecademy.</p></li><li><p>She
    told me she had a background in finance, just like me. In fact, she had been working
    as a business controller for several years until just recently, when she’d joined
    the same startup as I had, just a few months earlier as a front-end intern.</p></li><li><p>When
    she showed me the portfolio page she’d built with just some six months of coding
    experience, I couldn’t believe it. It was incredible.</p></li></ol><p>That lunch
    opened up a world of possibilities for me. Sandra’s story made me hungry for more.</p><p>So
    for weeks I researched the different types of paths that people had taken to become
    developers. I ended up in all sorts of forums and articles, many of which I found
    right here on Medium.</p><p>For example, <a href=\"https://medium.freecodecamp.org/stack-overflow-2018-developer-survey-faac8d3eb357\">Stackoverflow’s
    annual developer survey</a> (100,000 interviewees) stated that only half of all
    professional developers had a bachelor’s degree, and of this half, a whole third
    majored in something completely unrelated to computer science and software engineering.</p><p>The
    more I read, the more I realized how narrow my definition of education had been.
    If you didn’t need a computer science degree to break into something as complex
    as software engineering, what <em>did</em> you need an academic degree for? Although
    I might not have been able to see it then, I now clearly see how broken the academic
    system is.</p><p>It was designed for the industrial age of <em>workers</em>, where
    you’d specialize in one craft, and then use those same skills for the rest of
    your life. It was certainly not designed for today’s knowledge society, where
    all information of the history of the world is never more than a few clicks away,
    and where things change so fast that education must in fact be a life-long process,
    and not the learn-once-use-forever one-off experience.</p><p>But that’s a topic
    big enough for an article by itself. The important thing about that lunch with
    Sandra was that it ignited something in me, and motivated me to break free from
    the destructive loop that I found my current half-assed business career to be.</p><p>Although
    I’d always envied programmers around me — even to the extent that I’d taken a
    Python 101 summer course a few years earlier — I’d never considered it a viable
    career path for me. At least not without going back to university for 3 — 5 years.</p><p>So
    if you’re reading this Sandra, thank you! If I with this article can inspire just
    one person the way you inspired me, I’d consider the effort of writing it repaid
    a thousand times.</p><h2><strong>Part 3: The text that cost me $6,000</strong></h2><p>Over
    the next few months I spent hundreds of hours on online platforms like <a href=\"https://www.codecademy.com/\">Codecademy</a>
    and <a href=\"https://www.freecodecamp.org\">freeCodeCamp</a>. I even purchased
    a subscription to the paid platform <a href=\"https://www.codeschool.com/\">Code
    School</a>.</p><p>I’m not sure I really knew what my goal was. What got me started
    was the desperation of my recurring career disappointments. But what kept me going
    was how ridiculously fun and rewarding I found the coding exercises to be.</p><p>I
    couldn’t even tell you at what point the coding turned from a casual side project,
    to the dead-serious “I’m going to be a professional developer.” But it was probably
    somewhere around here. I was just about to receive my front-end certificate from
    freeCodeCamp, when my next life-changing event occurred.</p><p>After quitting
    my job as a business developer, I’d decided to escape the freezing limbo that
    is Swedish winter to go travel in Central America. I reckoned that if I was gonna
    spend hundreds of hours alone, teaching myself coding, I might as well do it somewhere
    warm, cheap, and not depressing.</p><p>I was coding on my laptop in a hostel in
    El Salvador, when I got a text from my friend Marie.</p><p>“I got the job!” it
    said.</p><p>Marie was also learning how to code. I recalled how she, a few months
    earlier, had been telling me about this <a href=\"https://nycda.com/\">code school</a>
    she went to. A “coding bootcamp.”</p><p>At the time I’d basically mocked her for
    it — So. You’re gonna pay $5,000 for a 12 week course? And you’re not receiving
    a single university credit for it? And you dropped out of your top-tier MBA to
    do this? Sounds legit.</p><p>And yet there she was. Four months later, and Marie
    was officially employed by one of Accenture’s digital agencies as a junior back-end
    developer. I was really happy for her, but of course also extremely jealous.</p><p>I
    stopped what I was doing and made some calculations. If I could keep up my current
    pace, coding some 6 hours per day on average, about 5 days a week, I would do
    30 hours per week. So to finish freeCodeCamp’s full 1,200 hour program, it would
    take me at least 8 more months. And that’s <strong>if</strong> I could keep up
    the pace. Which I definitely couldn’t, since my money was running out and I would
    have to go back to Sweden and get a new job soon.</p><p>I kicked myself for not
    having taken the same road as Marie from the start, and spent my money on a bootcamp
    instead of backpacking for 4 months. Well, what’s done is done, I thought to myself.
    I’d still have to accept the fact that a bootcamp was the best option to reach
    an employable level fast enough.</p><p>Back to good old Google research.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/3168/0*AcV_N_-ErG9Ck9nc.\" alt=\"\"></p><p>In
    a way, I felt like I was right back where I started after that lunch with Sandra.
    Only this time, I looked at the whole bootcamp phenomenon with a fresh pair of
    eyes. Knowing Marie’s story, I knew that not all of them were too-good-to-be-true
    scams, but actually plausible ways to break into the industry.</p><p>Later on,
    <a href=\"https://medium.freecodecamp.org/stack-overflow-2018-developer-survey-faac8d3eb357\">Stackoverflow’s
    annual developer survey</a> again reassured me with the stats that 88.1% of coding
    bootcamp alumni had been hired within a year after finishing the bootcamp.</p><p>Thanks
    to <a href=\"https://www.switchup.org/research/best-coding-bootcamps\">Switchup</a>
    and <a href=\"https://www.coursereport.com/best-coding-bootcamps\">Coursereport</a>,
    it didn’t take long until I discovered <a href=\"https://www.lewagon.com/\">Le
    Wagon</a>, the French coding bootcamp startup success story with more than 15
    locations all around the world and top 5 ratings on both rankings (at the time
    of writing, actually #1 on both, with 27 locations!).</p><p>After comparing it
    with alternatives like Hack Reactor, Ironhack, General Assembly, and NYCDA, a
    few main reasons made me prefer it over the others:</p><ul><li><p>The relatively
    low price (back then $6,000).</p></li><li><p>The focus on entrepreneurship and
    product development.</p></li><li><p>The global presence and community.</p></li></ul><p>Nevertheless,
    I still had a few doubts about the program.</p><ol><li><p>The choice of the backend
    language Ruby and the MVC framework Rails. Although it appeared like this was
    pretty common among other recognized bootcamps, almost every article I read on
    the subject suggested that Javascript was <strong>really</strong> hot and what
    employers were looking for. My friend Marie’s bootcamp, for instance, taught a
    backend stack based on Node.js and Express.js. Both Javascript-based technologies.
    Some common arguments seemed to be that Ruby was a great language for learning,
    but that Node and Express were skills employers valued a lot higher. Was Ruby
    really the horse to bet on?</p></li><li><p>The 9-week duration of the course seemed
    a bit short. Most competing programs appeared to be at least 12 weeks, which already
    seemed way too short to become an employable web developer.</p></li><li><p>Le
    Wagon offered no actual job hunting assistance after completing the bootcamp.
    Many competitors offered either employment guarantees or seemingly solid career
    services functions.</p></li></ol><p>I’ll address each of these three doubts one
    by one with my post-bootcamp conclusions at the end of the next section.</p><p>However,
    despite my concerns I figured it was my best option, which is why I decided to
    apply to their school in Barcelona. A few days later the local school manager
    Gus reached out to me for a Skype interview.</p><p>Hooked up to a crappy Wi-Fi
    at a café in the lazy surftown of El Tunco we had a brief chat. But it was a lot
    more informal than I’d expected. I felt we connected, which made me want to get
    admitted even more. And then, not even 24 hours later, I got the email I’d been
    waiting for. Gus told me he would be pleased to have me in the next batch, and
    that the only thing I had to do next was pay the $1,200 deposit to reserve my
    place.</p><p>That was basically all the money I had left at the time, and it was
    supposed to pay for my last weeks in El Salvador — including the eventual trip
    home. But if I could just manage to stick to a tighter budget, and book an earlier
    flight home than expected, I knew I could make it.</p><p>So, after a brief moment
    of hesitation, and recalling the concerns I still held for Le Wagon, I acted on
    intuition, and transferred Gus the deposit. Afterwards, I remember feeling a bit
    awkward. Had I really just committed to paying almost $6,000 for a 9-week coding
    course? As a Swede, who’s never ever paid a single cent for education, the situation
    felt quite bizarre.</p><p>However, it didn’t take long until that bizarre feeling
    turned into excitement. At least now I knew I wouldn’t have to go back to working
    in finance, sales, or online media in any near future. The same day, I started
    making arrangements for the time up until the bootcamp.</p><p>In the three months
    left, I would somehow have to earn the remaining $4,800 of the fee. Plus rent
    and living expenses. Well sh*t.</p><p>I reached out to one of the companies that
    I’d previously consulted for, and luckily enough they had the perfect business
    analyst project coming up. Since they initially wouldn’t accept anything less
    than a 4-month contract, I had to convince them I could do the job in two. Somehow,
    it worked.</p><p>Phew! Just one week earlier, I’d been a runaway traveler without
    a thought of ever going home. Now, I was to start my new two-month gig in Stockholm
    in less than two weeks, and then move to Barcelona. Exciting things ahead indeed.</p><h2><strong>Part
    4: Bootcamp in Barcelona</strong></h2><p>Fast-forward three months.. It’s the
    1st of May 2017, and I’m in a classroom attending my first Le Wagon lecture.</p><p>Around
    me are some 25 people from all corners of the world. Kilian from Germany, Daniel
    from Venezuela, Francesca from France, Arbi from Italy, Courtney from the US,
    and so on. Some with no coding experience at all, some with a little, and a few
    actually halfway to getting their computer science degrees.</p><p>We’re listening
    to Gus, the local school manager, and Ruben, a Ruby teacher, explaining the structure
    of the program ahead.</p><p>As we all would come to learn, the schedule was very
    systematic. Over the coming 9 weeks, we would spend more or less an equal amount
    of time on 6 different modules, each dealing with a topic of its own, finishing
    up with two weeks spent on planning and developing our very own web app.</p><p>For
    the whole first week, I remember feeling quite confident about the course content.
    After all those hundreds of hours on freeCodeCamp, the difficulty level of the
    daily coding challenges seemed a bit low.</p><p>Although Ruby was still pretty
    new to me, the basics seemed to be pretty much the same as with Javascript and
    Python. Listening to lectures and doing exercises to learn about variables, arrays,
    hashes, basic functions, and iterations felt quite repetitive. So I got cocky,
    and wondered if I’d actually get anything out of this bootcamp thing. However,
    not even a week later, all that would change. I went from feeling like the top
    of the class to actually struggling to keep up.</p><p>Before I knew it, we were
    moving on from the basics to object-oriented programming, MVC architectures, and
    databases, and there were plenty of days when I felt I hadn’t even understood
    the concepts of the day before, and was already expected to move on to the next
    topic.</p><p>So I had to put in the next gear. 10 hours a day in the classroom
    wouldn’t cut it for me. I made it a routine to put in a few extra hours each night,
    and spend most of the weekends repeating the trickiest stuff from the past week.
    It sucked a bit to not be able to enjoy Barcelona as much as I had the first few
    weeks, but the fact that I’d invested all my savings into the bootcamp was a big
    motivation.</p><p>Another source of frustration was the scattered nature of the
    things we were learning. It felt like we’d been given a hundred puzzle pieces,
    but no instructions of how to put them all together. Knowing how to write basic
    Ruby, HTML, CSS, Javascript and SQL was really empowering, but how would that
    knowledge help me put together an actual app?</p><p>And then came my big AHA moment.</p><p>It
    was week 6 and we’d finally reached the Ruby on Rails module. Before I knew it
    I was looking at my Chrome browser window and reading the words “Yay! You’re on
    Rails!”. That was my first web app, the teacher said.</p><p><img src=\"https://cdn-images-1.medium.com/max/2308/0*UvEfy8GWHurCtako.\"
    alt=\"Default landing page for any new Rails project.\"><em>Default landing page
    for any new Rails project.</em></p><p>What? All I’d done was run a few simple
    commands in my terminal and surfed onto <a href=\"http://localhost:3000/\">http://localhost:3000/</a>
    in my browser. What was I even looking at?</p><p>I wasn’t until I opened up the
    app directory in the text editor that that big sweet understanding fell into place.
    Rails displayed it all so beautifully simply.</p><p>One folder for the HTML, one
    for the CSS and Javascript, one for the controllers, and one for the models. One
    file for the routes. And one file for that sweet, sweet schema, mapping out the
    entire database like it wasn’t more complex than a grocery shopping list.</p><p>After
    finally getting the big picture of how all those pieces would practically fit
    together in an MVC framework like Rails, spending all my nights and weekends coding
    was not much of a struggle anymore. Quite oppositely, I would often struggle to
    get off my laptop to go to bed at night.</p><p>I was on a roll, getting massive
    new insights every single day. And it gave this intoxicating effect that’s still
    kind of hard to put down in words.</p><ul><li><p>So I can actually mix HTML and
    Ruby in my erb files?</p></li><li><p>I can access instance variables from the
    controller in the associated html.erb file?</p></li><li><p>I can import code that
    other people wrote using this thing called Gems?</p></li><li><p>I can write as
    much vanilla JavaScript as I want in the assets/javascript directory?</p></li><li><p>I
    can use the Rails console in the terminal to basically do whatever I want with
    the entire database?</p></li></ul><p>It was just a never-ending stream of incredibly
    satisfying Aha moments. Like you’d just realized the force was actually strong
    with you, and that you got one step closer to go full Jedi with each piece of
    new knowledge. Even now, nine months later, it feels like I’m still on that same
    high, and I’m starting to think it actually might be something permanent. How
    lovely that would be.</p><p>Anyhow, the bootcamp train wasn’t slowing down, and
    soon enough we’d reached the last two weeks, when we were supposed to build our
    own app. The two weeks would end with a big Demo Day, where each group would pitch
    and demo their apps in front of cameras and a big audience.</p><p>Pressure.</p><p>To
    our surprise, the planning turned out to be the most time-consuming part by far.
    Although we prepared a lot in the past few weeks — pitching app ideas, forming
    groups, designing features in Sketch — it wasn’t until after a few days of coding
    that we realized we’d been way too ambitious.</p><p>The initial idea for the app
    was sort of the “Happn for professional connections.” More specifically, letting
    users create pages for networking events that other users could attend and check
    in to. “But that’s Meetup,” you might be thinking. But our idea had a twist: you
    could only check in to an event if you were physically at the event location.
    Thus the “Happn for professional connections.”</p><p>Once checked in at an event,
    a user would be able to see the professional profiles of other checked in users,
    using data gathered through LinkedIn’s API, and connect and chat with the ones
    who matched their interests, thus not missing out on potentially great connections.</p><p>This
    was our initial MVP (minimum viable product) and we decided to call it Unify.
    Super corny and Silicon Valley wannabe, I know. But in our defence, we had better
    things to to with our time than think of better names.</p><p>Like brainstorming
    about the actual features. But then we actually brainstormed a bit too much, and
    features were added and removed until we ended up with a completely different
    app that,</p><ol><li><p>would never be demo-ready within the remaining ten days,
    and</p></li><li><p>wasn’t nearly as disruptive as we thought our first idea was.</p></li></ol><p>So
    we had to narrow down the features to the MVP, and actually ended up with almost
    exactly the same product that the <a href=\"https://www.linkedin.com/in/gdevita\">Le
    Wagon manager Gus</a> had recommended that we go with from the start.</p><p>Big
    waste of time, was what we thought then. But the process at least taught me a
    few really important things about product development:</p><ul><li><p>When done
    right, it should be a whole lot more about planning than actual coding.</p></li><li><p>Having
    to clean up old code mistakes is a lot more time-consuming than planning thoroughly
    and doing things right from the start.</p></li><li><p>The MVP is always smaller
    than you’d think from the start.</p></li></ul><p>Some ten days later, after more
    than 100 hours of coding, designing, arguing, testing, database migrations and
    database rollbacks, we’d somehow miraculously reached the Demo Day and actually
    felt pretty good about our app. Sure, it was far from perfect, but all the main
    features were actually working like we wanted them to.</p><p><img src=\"https://cdn-images-1.medium.com/max/3184/1*jNvyHKwkZmp6TBqzTMYJCA.png\"
    alt=\"\"></p><p>However, just a few hours before the demo, we’d all nearly have
    a heart attack.</p><p>Google’s geolocation API wasn’t responding as it should
    to our requests, so we couldn’t check in to the event that we would use for the
    demo. We tried everything. Switching computers and users. Deleting and creating
    new events. Changing the event street address. Nothing worked.</p><p>The three
    of us tried to stay calm and not panic. It was probably just a bug the guy responsible
    for the geolocation feature would know how to solve easily.</p><p>But he was running
    late, so we tried calling him.</p><p>No answer.</p><p>We tried calling again.</p><p>No
    answer, again.</p><p>And then we panicked.</p><p>Not until the last minute, thanks
    to one of our amazing teaching assistants, <a href=\"https://www.linkedin.com/in/antoineguilguet\">Antoine</a>,
    we managed to find the bug. Turns out we’d accidentally set the distance range
    too low, which was why the app couldn’t confirm that we were actually at the event
    location. We simply increased the radius by a few kilometers, committed, and pushed
    the change to our production server.</p><p>And voilà — the app worked perfectly.
    And so did the demo.</p><p>Overall<strong>,</strong> my Le Wagon experience was
    nothing short of amazing. I’ve probably never learnt so much in such a short time.
    In hindsight, it’s actually hard to believe that most of us were able to develop
    full-featured web apps with basically just 9 weeks of development experience.</p><p>But
    don’t fool yourself, the bootcamp will not do the work for you. To get anything
    out of it, you’ll have to give it your full commitment. I myself saw plenty of
    people fall behind or even drop out because they</p><ul><li><p>didn’t have the
    right expectations of the difficulty level,</p></li><li><p>weren’t prepared enough,
    or</p></li><li><p>were too busy with other things to keep up.</p></li></ul><p>On
    a final note, a mistake I think many rookies make is to consider a computer science
    degree a substitute to self-learning or a bootcamp, as a means of becoming a web
    and/or mobile developer. Based on my experiences, this is not accurate.</p><p>Even
    if you’re pursuing a computer science degree, you’ll still need to fill in a ton
    of practical knowledge gaps to become productive. I practically saw this first
    hand in my bootcamp classmates with 2 — 3 years of CS studies behind them. Again,
    that’s because the academic model is broken and outdated, and hence can’t keep
    up with the extreme pace with which real-world software development is changing.</p><p>From
    my point of view, if the goal is to become a developer, self-learning or a bootcamp
    will at some point be necessary either way. So a computer science degree should
    be perceived as a <strong>complement</strong> rather than a <strong>substitute</strong>.</p><p>And
    the reason why a (good) bootcamp can turn you into a developer faster than self-learning,
    is the combination of the following:</p><ul><li><p>a thorough but concise curriculum,</p></li><li><p>a
    seamless online platform with tutorials and exercises, and most importantly;</p></li><li><p><strong>the
    on-call support of a human when you hit a wall.</strong></p></li></ul><p>To conclude
    this section, I’d like to address the <strong>three</strong> concerns I had before
    committing to the bootcamp with the insights I’ve gained since then.</p><h3><strong>1.
    Learning Ruby on Rails instead of a JavaScript-based stack</strong></h3><p>If
    you’re currently in the position I was in before joining my Rails bootcamp, overwhelmed
    by all the JavaScript hype flooding the Internet, you might ask yourself if Ruby
    is a dated language, and if Rails is a dated framework. If this is the case my
    short answer would be no.</p><p>The long answer, however, would be this.</p><p>The
    company I’m working at now has a high-traffic web app built with Rails on the
    backend, and the Ember.js frontend framework on the front. Having worked full-time
    with this app for about six months now has required just as much coding in Javascript
    from me as in Ruby, which has brought me some insight into the differences and
    similarities between the technologies.</p><p>And sure, when it comes to client
    side HTML/CSS rendering (or the “views”), the Rails user experience isn’t even
    comparable to the big JavaScript frameworks. That I must give the Rails haters.</p><p>For
    instance, take a basic comment section of an article or blog post. As a user you’d
    expect any comments you submit to appear instantly on your screen.</p><p>In a
    modern JavaScript framework, this is simply a matter of pushing the new data (the
    comment) into the client side data store and making sure that the comment list
    updates its state to show the new comment. This way, you don’t have to wait for
    the new record to be sent all the way to the backend, stored in the database,
    and then requested by the client again. Instead the new comment appears instantly
    on your screen.</p><p>Without any JavaScript on top of your Rails HTML code, the
    user would have to refresh the page to see any new comments on the article. Which
    is just awful UX. To avoid this, you can take a few different paths.</p><p>Before
    the age of the JS frameworks, the main solution would be to sprinkle some quite
    unstructured AJAX logic on top of the HTML, which would often become very hard
    to maintain in the long run as your app gets bigger. Another option made available
    for Rails quite recently is the pubsub (publish-subscribe) websocket solution
    using something like Action Cable. For instance, this is what we used for the
    chat in the app we built in the bootcamp. The problem is just that without a wrapping
    JavaScript framework, the websocket logic can easily get unnecessarily complex,
    and also hard to maintain.</p><p>Luckily, however, today we have the much better
    option to use JavaScript frameworks for these types of problems. And since the
    client side in my opinion is the weakest point of Rails, this is also my main
    argument why Rails should not be discarded as an option to for instance Laravel
    or the MERN stack. Just smack a crisp JavaScript framework on top, like React
    or Ember, and you’re good to go.</p><p>I personally love our integration between
    Rails and Ember and how they complement each other. Their opinionated natures,
    solid track records, visionary leadership, and huge contributor communities make
    them stable, trustworthy, and suitable for junior developers like ourselves.</p><p>If
    you’re still, despite my best efforts, feeling hesitant about betting on Ruby
    as your first backend language, I’d like to remind you that I knew practically
    nothing about JavaScript six months ago (except for some basic vanilla JS, React,
    and jQuery syntax), and today I work with, and transition between, both of these
    languages and frameworks seamlessly on a daily basis. And love every minute of
    it (figuratively speaking).</p><p>So no matter what you bet on as your first language,
    don’t worry — you can always learn the second one on the job \U0001F60E</p><h3><strong>2.
    Aren’t 9 weeks too short to learn anything?</strong></h3><p>Regarding my concern
    that the duration of the bootcamp — a mere 9 weeks — might be too short to actually
    learn something valuable, Le wagon helped me bust that myth as well. In hindsight,
    it’s actually clear that I’d prefer 9 weeks over the 12 that most other bootcamps
    offer.</p><p>The reason is that the bootcamp itself doesn’t actually take you
    to an employment-ready level. At least not for me. Rather it provided me with
    a solid introduction to all the necessary tools I would require to reach a productive
    level, and how to put them all together. So even if they would have given me three
    more weeks, it would just have meant a dozen more tool introductions. Tools that
    I would later have to actually learn how to use in depth. And that list was already
    more than long enough.</p><p>It wasn’t until after the bootcamp, after weeks of
    building my own portfolio apps, that I understood how the tools really worked.
    So if you’ve decided that you want to do the bootcamp thing, but are comparing
    options based on a difference of a few weeks, my advice would be to remove that
    variable from the equation. Because if you’re anything like me, you will still
    have to relearn every single tool on your own.</p><p>Looking back, it’s actually
    quite remarkable how accurate Le Wagon’s toolset was. In my current job I use
    most of these tools daily. Some examples would be Postgres, Git, GitHub, Sidekiq,
    Pundit, Heroku and Cloudinary. The only two things that I wished my teachers would
    have spent more time on would be how to use a JavaScript framework like React,
    and how to write tests with technologies like Rspec. Because learning those two
    on my own later proved to be crucial for landing my first developer job.</p><h3><strong>3.
    Would a job guarantee and/or career services have helped me?</strong></h3><p>As
    I mentioned earlier, many bootcamps have a “get hired or get your money back”
    policy. And many more have a career services body, to help you get in touch with
    potential employers and coach you for applications and interviews.</p><p>And although
    this probably sounds like a sweet deal to many, I actually don’t think it would
    have made a difference for me. But then again, I also had the time to spend some
    500 hours coding over the two months following the bootcamp, the privilege of
    having an elite school degree on my resume, and a lot of experience in applying
    and interviewing for jobs. If these things don’t apply to you, maybe this is a
    factor to consider when choosing among bootcamps. I don’t know.</p><h2><strong>Part
    5: Building a portfolio</strong></h2><p>On the last of July this past summer,
    the bootcamp was over. But I was just getting started.</p><p>Developing the Unify
    app in the bootcamp and taking it across the finish line had given me a lot of
    momentum, and I was determined to make the most out of that momentum while it
    was there.</p><p>I still had some money left in the bank, and a few weeks left
    on the Barcelona apartment sublease. Basically everyone I knew in the city was
    leaving. So I had no reason at all to not just keep eating, sleeping, and dreaming
    code. Only half consciously I set up a few new routines and habits for myself:</p><ul><li><p><strong>I
    would code every single day</strong> until I reached my goal, which of course
    was getting that first developer job. Meaning Monday to Sunday, day and night.</p></li><li><p><strong>I
    would push every piece of code that I wrote to Github</strong>, the #1 place for
    potential employers to inspect your code skills and level of ambition. Even if
    I didn’t feel like I’d produced something worth committing, I’d still do it just
    to build onto that sweet green commit history for all the world to see.</p></li></ul><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*bFKI9fzl8RICEJqOCiemIQ.png\"
    alt=\"My Github commit history from [https://github.com/charliejeppsson](https://github.com/charliejeppsson).\"><em>My
    Github commit history from <a href=\"https://github.com/charliejeppsson\">https://github.com/charliejeppsson</a>.</em></p><ul><li><strong>And
    I would immerse myself completely in as much software content as I possibly could</strong>.
    That meant listening to podcasts like <a href=\"https://softwareengineeringdaily.com/\">Software
    Engineering Daily</a> and <a href=\"http://www.se-radio.net/\">SE Radio</a> whenever
    I was doing some errand, out running, or cooking. It meant watching code talks,
    tutorials, and lectures from Youtube channels like <a href=\"https://www.youtube.com/channel/UCtxCXg-UvSnTKPOzLH4wJaQ\">Coding
    Tech</a>, <a href=\"https://www.youtube.com/user/TechGuyWeb\">Traversy Media</a>,
    and <a href=\"https://www.youtube.com/user/cs50tv\">CS50</a>. It meant reading
    Medium publications like <a href=\"https://hackernoon.com/\">Hacker Noon</a>,
    <a href=\"https://medium.freecodecamp.org/\">freeCodeCamp</a>, and <a href=\"https://codeburst.io/\">Codeburst</a>
    and magazines like <a href=\"https://techcrunch.com/\">Techcrunch</a> and <a href=\"https://thenextweb.com/\">The
    Next Web</a>. And it meant installing <a href=\"https://kapeli.com/dash\">Dash</a>
    on my laptop, to always easily be able to look up the proper documentation on
    whatever syntax issue I was struggling with at any given moment (for me then mostly
    <a href=\"https://developer.mozilla.org/en-US/\">MDN web docs</a>, <a href=\"http://api.rubyonrails.org/\">api.rubyonrails.org</a>,
    and <a href=\"http://ruby-doc.org/\">RubyDocs</a>).</li></ul><p>In other words,
    my motivation to become a developer was stronger than ever, and I knew that having
    neither any academic or professional merits to show off, I would probably never
    even get called to a job interview unless I had a kickass portfolio. So that’s
    what I set my mind to do next.</p><p>The day after the Demo Day, barely sober
    from the night out that had followed, I started building my very first own Rails
    app (that’s how strong the momentum was!). Cocky as I was, I figured the first
    app would take a few weeks to finish, now that I’d already gone through it all
    one time with the Unify app. Again, I was wrong.</p><p>It would take me almost
    two months to finish it. There were so many processes in the last two weeks of
    the bootcamp that had gone by so fast, without me fully understanding them. I
    got stuck for several days on all kinds of stuff, from embarrassingly simple to
    somewhat advanced. Just configuring a datetime-picker required several days spent
    on Stackoverflow. Not to mention the chat feature, using websockets with Action
    Cable, which took me about two weeks to get right.</p><p>But the time invested
    was so worth it. The app actually turned out pretty great: it was actually something
    I could demo for people and feel proud. And although there’d been many moments
    of desperation I’d learned a ton. And in fact, experiencing all that hustle gave
    me a lot of comfort in that the bootcamp had probably been a good choice.</p><p>If
    it was this hard to code this stuff now when I was familiar with everything, how
    hard wouldn’t it have been if I hadn’t had the teaching assistants, the platform,
    and the curriculum when doing it all the first time?</p><p>So sometime in late
    August I finished the app. I was back home in Stockholm, living in my dad’s apartment,
    broke and feeling quite pathetic. I tried my best to use that self-pity to keep
    ramping up my coding efforts. And it was working pretty ok.</p><p>Soon enough
    the time came to code the actual portfolio website. And for once, I decided to
    keep it simple. So I put together a very minimalistic static web page where I
    could gather the stuff I’d done.* *After finishing it, my plan had been to start
    applying for jobs. But there was something that bothered me. Remember how I said
    that I’d been a bit hesitant towards Ruby on Rails before joining Le Wagon? Well,
    although I’d actually come to love Ruby’s minimalism and the simplicity of using
    Rails, I still felt like I’d taken a shortcut somewhere.</p><p>Under the “Skills”
    section on my portfolio page, one could find Ruby, Rails, SQL, Postgres, HTML/CSS,
    jQuery, Bootstrap, Sketch, Git, and Heroku. And JavaScript.</p><p><img src=\"https://cdn-images-1.medium.com/max/3194/1*_etYr1rOtqpK29ZbqqCtOw.png\"
    alt=\"\"></p><p>It was the last one that bothered me. It felt like a lie.</p><p>If
    I started applying for jobs now, I could probably land something decent as a Rails
    developer. But what if all the haters were right, and Rails was actually outdated
    and dying? And what if I found my dream job, only to realize they used advanced
    JS technologies? I wouldn’t stand a chance with my 200 hours on freeCodeCamp and
    2 — 3 jQuery days + 1 React.js day at the bootcamp.</p><p>The hubris part of my
    brain spoke to me again - “Here’s an idea: what if I would learn the MEAN stack
    as well?” MEAN as in MongoDB, Express.js, Angular.js and Node.js, which is sort
    of like the JavaScript equivalent of what Rails is to Ruby. According to the search
    results on LinkedIn and Glassdoor, that would mean that I would more or less double
    the amount of developer jobs that I was qualified for.</p><p>I recalled that Gus,
    the bootcamp manager, had told me that it would take me about another month to
    learn it. How hard could it be? I could probably do it in two weeks, was my thought.</p><p>And
    that’s how I ended up in what I’d like to call <strong>the tutorial swamp</strong>.</p><p>So
    once again, I turned to my old friend Google to research learning strategies.
    But after a few hours I still couldn’t seem to find a good online course for my
    MEAN stack 101 needs. They all seemed to be focusing on one part at a time, which
    is definitely the right way to go if you want to understand a framework in depth.
    But since I wanted to learn as much as I could within two weeks, just enough to
    be able to add a new project to my portfolio, I didn’t have time for that.</p><p>That’s
    when I discovered a completely new dimension of development education: YouTube
    tutorials. There were so many out there. For every technology or stack I could
    think of, I found at least five decent tutorials.</p><p>Eventually I found my
    way to the <a href=\"https://www.youtube.com/channel/UC29ju8bIPH5as8OGnQzwJyA\">Traversy
    Media channel</a>, and the tutorial series <a href=\"https://www.youtube.com/watch?v=uONz0lEWft0&list=PLillGF-RfqbZMNtaOXJQiDebNXjVapWPZ\">MEAN
    Stack Front To Back</a>. Ten videos at 20 minutes each, showing you how to build
    a basic RESTful web app with both user registration and sign-in authentication.
    Perfect.</p><p><center><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/videoseries\"
    frameborder=\"0\" allowfullscreen></iframe></center></p><p>I started right away
    and coded along to each video on my laptop. And crazy enough, after just a few
    days I was done. I’d actually coded a fully functioning web app using completely
    foreign technologies. Node for the backend, Mongo for managing the database, Angular
    for the frontend, and Express for tying it all together.</p><p>Could it really
    be this easy? Did I know this stuff now? While I was happy that it had been so
    much easier than I’d thought, a cold shiver of too-good-to-be-true ran down my
    spine.</p><p>Well, since I was ahead of schedule, I figured, why not build onto
    the app a bit further? My idea was to turn it into a Medium clone, by just enabling
    basic blog post CRUD actions (create, read, update, delete), like we’d done in
    a project in the bootcamp with Rails.</p><p>I didn’t get very far, though. I figured
    I would just need to add a couple of new routes, models, controllers and views,
    and that would be it. The problem was that I was still thinking in the “Rails
    way,” where “convention over configuration” makes features like this really easy
    and fast to build.</p><p>As I’d read and heard plenty of times, the MEAN stack
    follows the opposite mantra: “configuration over convention,” meaning that you
    get a significantly more flexible framework by giving up some of the “magic” automations.
    Like getting a controller action of a certain name connected to a view with that
    same name, right out of the box. Which is a really sweet piece of magic to get
    when you’re a beginner.</p><p>So realizing for the first time how much harder
    it was to code following “configuration over convention” came as a big slap in
    the face. Because it proved that my hunch about the whole tutorial process having
    been too good to be true was right. But it wasn’t until I started coding off-script,
    without the comforting instructions from Brad Traversy, that I realized it.</p><p>So
    there I was, knee deep in the big pool of mud that was the MEAN stack to me then.
    The app was nowhere near ready to be added to my portfolio page. It literally
    had no features. Just the possibility for users to register, log in, and do nothing
    but look at some static Bootstrap designs.</p><p>Another option was to just keep
    hustling the trial and error way. Unlike the bootcamp, I’d removed my training
    wheels WAY too soon, and would likely have to spend weeks on Stackoverflow to
    be able to finish the app the way I’d planned it. I didn’t have weeks. I was supposed
    to start applying for jobs yesterday.</p><p>Ironically, it turned out the only
    way out of the tutorial swamp I’d put myself in, was to keep wading through it,
    by following more tutorials. Luckily, I found <a href=\"https://www.youtube.com/playlist?list=PLillGF-RfqbYmJsLiPDVoDea3lfy7-E8O\">a
    pretty good one</a> on the same Youtube channel, and decided to use it as my lifeline.</p><p><center><iframe
    width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/videoseries\"
    frameborder=\"0\" allowfullscreen></iframe></center></p><p>And that’s how the
    web app that was supposed to be a Medium clone in the end became a music discovery
    app, using the Spotify Search API.</p><p>Despite all the hustle, two weeks after
    the decision to try and learn the MEAN stack, I actually deployed a decent web
    app. Which had been my goal. Sure, it was a bit like cheating, but I figured that
    as long as I could demo it and explain all parts of it on a job interview, nobody
    would care if I’d followed a tutorial or not.</p><p>Boom. All of a sudden I had
    three apps in my portfolio, and could add a bunch of new technologies to my skills
    repertoire. Finally, it was time to enter the next phase of my developer journey:
    the job hunt. And it was not a day too soon.</p><h2><strong>Part 6. Applying for
    jobs</strong></h2><p>All in all, it would take me about 4 weeks, 30 applications,
    10 interviews, and 3 offers to find that perfect fit. And ironically enough, it
    would actually be the first company I applied to that I would join. I could of
    course call it a coincidence, but I think it’s more an effect of a thorough screening
    process before even starting to send applications.</p><p>I’ll have to admit that
    I think a fair amount of luck played into my fast job hunt success. But for what
    it’s worth, I’ll describe the process I followed, as I think it taught me a few
    things about what jobs and companies to focus on for that first dev job.</p><p>The
    first thing I did was set up a spreadsheet for a shortlist of interesting jobs
    (I’m originally a dull economist, remember?). Then I spent several days scouring
    the job boards of LinkedIn, Glassdoor, and Stackoverflow for jobs based on keywords
    like web, development, software, frontend, backend, Ruby, Rails, Javascript, Angular,
    Node, and Postgres.</p><p>Not very surprisingly, the searches returned hundreds
    of jobs just in the Stockholm area alone. The companies behind them ranged from
    startups to digital agencies, media companies, cloud service providers, game developers,
    and everything in between.</p><p>Over the past few months I’d managed to put together
    a pretty narrow set of criteria of what I wanted from my next employer.</p><p>If
    I could choose any job I wanted, my priorities looked more or less like the following:</p><ol><li><p>I
    would code across the whole stack, meaning that I’d get to do just as much database
    and architecture stuff as UX/UI stuff, and mainly in JavaScript. All the hype
    around React probably had a lot to do with the latter. Like I told you before,
    for all I knew at this point, Rails was basically dying, and JavaScript was the
    future.</p></li><li><p>My learning curve would be extremely steep, to the point
    that I’d have to code day and night to keep up. All to become as good as I possibly
    could in the shortest amount of time.</p></li><li><p>My coworkers would be smart,
    ambitious, funny, and informal, and preferably all at the same time.</p></li><li><p>The
    company would be a high-growth startup with a meaningful mission and a product
    related to blockchain, AI, and/or sustainability, or a top-tier digital agency
    with such projects.</p></li><li><p>I would get paid fairly.</p></li></ol><p>That
    was about it. Pretty high demands for a rookie one might think. But note that
    a high salary was not part of the criteria (nor is it today, with 6 months of
    professional experience). Maybe I’m stating the obvious, but if you’re migrating
    into a pure development role from something completely different, I think it’s
    important to know that it doesn’t matter what you were paid before.</p><p>For
    instance, I knew that my market value in the finance industry was about $5,000
    per month. But realizing that software development is a fundamentally different
    craft, I’d set my goal around $3,700, but would settle for as low as $3,000 (which
    is significantly lower than the Swedish average salary around $4,000).</p><p>With
    all the above criteria in mind, I’d start going through the job ads one by one,
    adding the ones I liked to my shortlist and abandoning the ones I didn’t. After
    a while I was noticing a few patterns:</p><p>Firstly, most companies on paper
    required way more tech skills and experience than I could offer. This came as
    no surprise. From both my own research and the bootcamp I’d learned that the “junior
    developer” position was dying.</p><p>That many companies considered it too expensive
    to spend the valuable time of senior developers on mentoring rookies. Which was
    why they prefered hiring senior developers, which are in very high demand but
    extremely low in supply.</p><p>The big paradox here is of course that if no one
    takes it upon themselves to foster and teach junior developers, how can we ever
    patch the shortage of senior developers on the market? Nevertheless, having realized
    that this is the way the industry works today, I also realized that I’d have to
    apply for positions I wasn’t qualified for.</p><p>Secondly, I saw that the hotter
    and bigger the company was, the more likely it was to include requirements of
    some computer science related degree and professional development experience.
    I reckoned that sure, a decent portfolio and cover letter could probably get you
    an interview with a company who requires a “Rails ninja” or “React superstar”
    rather than a novice like I was.</p><p>But if the job ad explicitly requires 3+
    years of professional JavaScript experience, and an MSc in a computer science
    related field, my chances of getting an interview are probably very slim.</p><p>Thirdly,
    that almost every single job ad mentioned React. Despite all the hype around it
    online, I was still amazed by its crazy high demand.</p><p>So amazed that I actually
    decided to spend a few hours a day building a small React web app, using React.js
    on the front and Rails on the back, so that I could add that to my portfolio and
    resume as well.</p><p>For this I actually mostly used the notes from the one React
    lecture in Le Wagon’s bootcamp, but if you’d be interested in learning it you
    won’t have a hard time finding free guides out there, not least the ones from
    freeCodeCamp.</p><p>Except for the fact that I could put React on my resume, the
    biggest benefit from this experience was getting comfortable with building a web
    app using components (as opposed to controllers and views, as is the Rails way),
    and working with props and state.</p><p>Odds are that you’ll need to become friends
    with some sort of JavaScript framework sooner or later, and then these concepts
    will come handy either way, be it React, Angular, Vue, Ember or any other of the
    gazillion JavaScript frameworks out there.</p><p>With new insights like the ones
    above, I could develop and refine the criteria I already had to determine whether
    a certain job should be added to my shortlist or not. Soon enough I had a list
    of some 50 job openings, and it was time to actually start sending out applications.
    Coming from a background where I’d applied and interviewed at hundreds of companies,
    this felt like the easiest part so far.</p><p>This might have something to do
    with me being the kind of person that writes one generic cover letter that I send
    to everyone. I know what you’re thinking: every mentor/teacher/recruiter you’ve
    ever talked to has advised against this. But come on. It’s a job application.
    Not the speech for your best friend’s wedding.</p><p>Odds are the recruiter won’t
    spend more than a minute on it anyway. So it won’t really matter if you mention
    that prize that the company won, or that you were impressed by the YoY growth
    last year, or your totally speculative opinion on why their culture is so much
    better than competitor X’s.</p><p>What matters is that you’re able to express
    in text the case why you’re worth them spending an hour on meeting you — in a
    compelling, data-driven, and grammatically flawless way. If you want to have a
    look at mine, just write me and I’ll send it to you! Got some pretty flattering
    feedback on it, just saying…</p><p>The next thing I did was update my CV and <a
    href=\"https://www.linkedin.com/in/charlie-jeppsson-71315661\">LinkedIn profile</a>.
    And here I can’t stress enough the importance of keywords. Make sure that the
    names of all the technologies you know (or want to pretend that you know) are
    included in both. This way, you’re more likely to appear in search results (same
    here, just ask me and I’ll send you my CV).</p><p>After sending all the applications,
    a week or so went by without me hearing anything from any of the companies. That
    actually turned out to be a well-needed period of rest for me. I took some time
    to reconnect with the friends and family I’d sort of neglected for the past few
    months, caught up by my new obsession.</p><p>Then I started getting replies.</p><h2><strong>Part
    7: Doing interviews</strong></h2><p><strong>The first reply</strong> came from
    a really young startup. It basically consisted of two guys, an ex-banker CEO and
    a senior developer CTO. The email was from the CTO, and he was inviting me to
    my very first developer interview.</p><p>Aware that the positive responses will
    always come before the rejections, I tried to keep a cool head and not get too
    excited.</p><p>But still, just the fact that this guy, a senior developer with
    10+ years of experience, had looked over my LinkedIn profile, cover letter, CV,
    and most importantly my portfolio and the code behind it on my Github profile,
    and still thought I might be able to write good code for them, made me feel pretty
    damn proud of myself.</p><p>Although I didn’t think the company actually met all
    my criteria (mainly due to the tiny team and poor salary outlook), I responded
    immediately and accepted the invite.</p><p>Despite all my efforts up to this point,
    I hadn’t spent much time actually preparing for <strong>the technical interview</strong>.
    But from what I’d heard and read it was supposed to be an art in itself, and in
    many cases something people would spend months preparing for.</p><p>Oftentimes,
    bootcamp alumni and self-taught coders with more practical experience will fail
    the technical interview due to their lack of knowledge in fundamental computer
    science theory. Just like CS grads will often fail due to their lack of experience
    with building apps with modern technologies.</p><p>But since I was running out
    of both time and money, I figured this too was something I’d have to learn by
    doing. I just couldn’t postpone the interviewing phase anymore. Just like I’d
    gotten burned many times when learning how to do the financial type of interview,
    I knew those burns were crucial for me finally figuring out how to <strong>win</strong>
    the interview. Why would the technical interview be any different?</p><p>So I
    accepted the invite, and a few days later I walked into the lobby of their office.
    They were waiting for me by the reception desk.</p><p>The place was a dump. If
    you’d ever seen The Office, it felt like I’d just stepped inside the office of
    the Dunder Mifflin Paper Company. They told me it used to be an office for a big
    auditing company, remade into a cheap interim coworking space for the time left
    until its planned renovation. We stepped into a conference room and sat down by
    a big wooden table.</p><iframe src=\"https://medium.com/media/87b7d046d1182ebf99d652a679ecf94f\"
    frameborder=0></iframe><p>They started off by telling me a lot about themselves
    and the company. They’d just released a beta version of a new Medium-ish app for
    prominent lifestyle writers, and had raised a bit of money from friends and family
    in their seed round. But they were still pre-launch, and most definitely pre-revenue.</p><p>After
    about an hour of what felt much more like a sales pitch than an interview, the
    CEO left and I was told that the CTO and I would continue for the technical part
    of the interview. My heart skipped a beat. From all that I’d read about technical
    interviews I expected to get all sorts of brain teasers, coding challenges, and
    questions on complex data structures thrown at me.</p><p>But none came. Instead,
    the CTO starting asking me all these very open-ended questions.</p><p>Like what
    technologies and frameworks I liked. If I could choose any new technology to learn
    next, what it would be. What I thought about the new syntax introduced by <a href=\"http://es6-features.org/\">ES6</a>
    (the 2015 Javascript update, introducing a lot of new cool stuff like arrow functions,
    promises, and constants).</p><p>We had a nice conversation that lasted for probably
    another half hour. But then came the big backlash, when the CTO decided to put
    all the cards on the table.</p><p>Due to their tight financial situation, he told
    me, they could only offer me a 6-month internship role with symbolic pay for now
    (meaning practically no pay). If the internship went well, however, they were
    very open to offering both equity and decent pay.</p><p>“If the company is still
    around by then,” I almost added.</p><p>Although I was flattered that they’d made
    me an offer on the spot, I knew instantly that this was neither the company nor
    product I was looking for. Nevertheless, I didn’t turn them down right away. An
    offer is still an offer, I thought, and can always come handy when negotiating
    with other companies later on.</p><p>Despite the disappointment about both the
    job, and the fact that the technical interview hadn’t really taught me anything
    new, I’d still received an offer, which gave me a big confidence boost for the
    interviews to come.</p><p><strong>The second response</strong> I got was from
    a slightly larger startup called Teamtailor. They were a Stockholm-based company
    with a mission to digitize the recruiting and employer branding industry, currently
    ruled by quite non-technical recruitment consultants and HR managers.</p><p>Not
    a bad idea. Although job ads starting with words like “recruitment” and “HR” 9
    days out of 10 would’ve scared me away, there was something about this company
    that intrigued me.</p><p>From my pretty thorough research I’d found that they’d
    been around for about 4 years, had some 30 employees, presence in 4 or 5 countries,
    600 customers (businesses), a 100%+ revenue growth rate, and breaking even with
    some margin on top. Not bad at all.</p><p>To top it all off, their instagram account
    revealed their office: a brooklyn-ish old red brick beer factory in the middle
    of Södermalm, the best area Stockholm has to offer.</p><p>M. M. Mmm.</p><p>Everything
    pointed towards the fact that they were in that sweet spot of the company life
    cycle. Young enough to be able to make you feel like you’re on a journey together,
    with an informal culture and lots of room for initiative and growth. But still
    old enough to have established some structures, which can be nice to lean on when
    you’re learning something new.</p><p>Anyway. Again, it was the CTO that wrote
    to me. After a few messages back and forth we settled on a first interview in
    their office a few days later. I was told that both he and another co-founder
    would be meeting with me.</p><p>Before even meeting with any of them, I had a
    really good feeling about the whole thing. Which was bad. At least in my head.
    Because now I would enter the interview probably wanting them more than they wanted
    me, I thought. After walking up the stairs of the old beer factory, I finally
    reached the door to their office and stepped right into a rather special scene.</p><p>First,
    a big pink poster right in my face, with bold white letters screaming at me: “Teamtailor
    is one of Europe’s 100 hottest startups - Wired Magazine.” To my left what looked
    like a living room, where a bunch of 20-somethings were playing FIFA on a huge
    screen. In front of me a bigger room, where the table closest to me was filled
    with developers, casually hacking away on big crisp screens. And all around me,
    soft hiphop beats pulsating from Sonos speakers.</p><p>Right in that moment, any
    bad prejudice I’d held against them for being an HR company disappeared. This
    place was awesome. Dammit.</p><p>You can say a lot of bad things about the typical
    Silicon Valley wannabe office. But in my opinion, even the worst office of this
    kind will still be a thousand times better than the typical corporate counterpart.
    So for me it was heaven. Which was really bad for my attempted coolness for the
    interview.</p><p>A tall skinny guy with a baseball cap smiled at me and got up
    from his chair to greet me. It was the CTO. We stepped into a conference room
    with glass walls and green fake grass covering the floor. The other co-founder
    joined us and we kicked off the interview.</p><p>Unlike my last interview, they
    started off by telling me about the process I was in. The purpose of this first
    meeting was mainly to get to know me better. If I proceeded, the second step would
    be a technical interview. I was so relieved to hear that. The imposter syndrome
    was real.</p><p>The first question was more or less the classic “Why do you want
    to be a developer?” They told me that more than anything else, it was my cover
    letter and CV that had caught their eye. Finding business-minded developers was
    rare, and finding developers with business degrees and experience from both business
    development and finance even rarer. So why had I decided to hop off my path to
    pursue this totally different one?</p><p>From interview experience, I’ve learned
    that honesty is almost always the best way to go in these cases. So I basically
    told them what I told you in the beginning of this article, that I hate selling,
    love technology, and wanted to transition into the creative side of things.</p><p>From
    this point forward, the conversation sort of got its own life. At one point, I
    told them that if I’d known the things that I know now, I’d probably had chosen
    to study computer science instead of business. To my surprise, the CTO was surprised
    by this remark. He laughed and asked me why.</p><p>I hesitated. I realized it
    was one of those things I’d said because I thought it’s what they wanted to hear.
    He let me off the hook, and told me that he was also a self-taught developer.
    The only subject he’d taken in uni was film studies. I was a bit shocked by that.
    But there was more to it.</p><p>As a matter of fact, none of the 10 developers
    at the company had a real CS degree. A few of them had taken a year or two of
    some private web development program, but most were actually self-taught.</p><p>Hearing
    that from this guy made me so happy. He’d just confirmed what my former colleague
    Sandra had told me a year earlier - <strong>that you don’t need a degree to become
    a great developer.</strong> Good stuff.</p><p>The conversation kept going so smoothly
    that it wasn’t until the last few minutes when they asked me about my portfolio.
    Only one of them had actually looked at it, and he literally said he’d just “had
    a glance.” All caught up by how well the interview was going, I told them I would
    be happy to demo one of my apps.</p><p>Immediately, their faces lit up and they
    straightened in their chairs, nodding me on. I was about to realize that I’d just
    made a BIG mistake.</p><p>The only app that was nearly good enough to show to
    these guys was the one that I’d made over the month straight after the bootcamp.
    And I hadn’t touched that one for at least a month. I hooked up my MacBook to
    the big screen in front of us, and entered the URL in the browser.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/3192/1*kOQ0yaosL0yxWCGQl6IH5g.png\"
    alt=\"\"></p><p>The first embarrassment was that it literally took 20 seconds
    to load the home page. With a dry throat I tried to explain that I was using the
    free version of Heroku, which meant that whenever the server associated with the
    domain didn’t receive any requests for more than an hour, it would go into this
    “sleep mode,” from which it took a long time to wake up. The last thing I wanted
    was them to think my app was slow.</p><p>When it had actually loaded I took some
    time to explain the idea behind the product. It was basically a service for creating
    virtual lines, allowing organizations like airlines, banks, and hospitals to set
    up queues online instead of in their physical locations.</p><p>Then came the second
    embarrassment. When I tried logging in on my account using Facebook authentication
    it failed. As I would realize much too late, the reason was that I hadn’t updated
    the URL in my Facebook API settings after getting a new SSL certificate. So Facebook
    was expecting requests from an http://domain, while mine came from an https://
    domain. Rookie mistake.</p><p>I finally managed to log in manually instead, and
    demoed some of the main features without any issues. But then came the biggest
    embarrassment of them all. I couldn’t seem to get the crown jewel of my app to
    work: the chat. When I clicked the chat link, I got to the chat page, but couldn’t
    see any of my fake users to chat with.</p><p>Then I basically gave up. Which I
    really shouldn’t have. Because just a few hours later, I would realize that the
    chat worked perfectly fine. My user account simply hadn’t signed up for any lines
    to participate in, which is why I couldn’t see any users to chat with either.</p><p>We
    said our goodbyes and they told me they would be in touch. I left the interview
    feeling angry and disappointed. Why hadn’t I prepared better for the demo? It
    had all gone so smoothly until that last part.</p><p>Nevertheless, not even an
    hour would pass until David wrote me again. He told me I had proceeded to the
    next step of the process. I couldn’t believe it and I couldn’t have been happier.
    But of course, also a bit scared about taking on my first real technical interview.</p><p>In
    the end, however, this second interview would also turn out to be nothing like
    all the horror stories I’d read about online. Already in the invite email, the
    CTO told me that I would be meeting with two of their senior developers, and that
    they simply wanted me to show off one my apps more thoroughly, along with the
    code behind it.</p><p>The main purpose would be to get a grip of how well I knew
    their backend framework (Rails), and how fast I could be able to learn their frontend
    framework Ember.js (which I hadn’t even heard about at this point).</p><p>I knew
    instantly that the demo app would have to be the one that I’d built using Rails
    and React.js. It was perfect for two reasons:</p><ol><li><p>it was built on Rails
    integrated with a JavaScript framework (just like their stack), and</p></li><li><p>I’d
    learned all the React stuff I used in less than two weeks, which would give them
    a good sense of how fast I could learn Ember.</p></li></ol><p>This case is a perfect
    example why it can actually pay off to not put all your eggs in one basket when
    you’re building your portfolio, but actually try out a few different stacks.</p><p>Soon
    enough the big day came, and I was back in their office in another of their fake-grass-floor
    conference rooms. I started off showing the UI flow of the app.</p><p>I surfed
    onto <a href=\"https://app-hunt.herokuapp.com/\">t</a>he web app, and soon enough
    the working title “AppHunt” lit up on the screen in big bold purple letters. It
    was sort of like Product Hunt, but more like a market place strictly for apps.
    So any user would be able to browse the home page for apps for sale and for purchase.
    And if they created an account and logged in, they would also be able to search
    and filter the app items, rate them, and write stuff in the comment fields. That
    was basically it.</p><p><img src=\"https://cdn-images-1.medium.com/max/3194/1*ZFKoxbeTYZ2FdXh8dIxmcA.png\"
    alt=\"\"></p><p>But fortunately for me, it was enough. The two senior developers
    apparently liked what I showed them so much that they gave the CTO the thumbs
    up. They later told me a few things that they liked specifically:</p><ul><li><p>That
    the real-time features — like changes in the comments, search results, and ratings
    appearing instantly — showed that I knew how to use state and props, which is
    crucial in any JavaScript framework.</p></li><li><p>That I used JBuilder to serialize
    the JSON requests between frontend and backend.</p></li><li><p>That I used Elasticsearch
    for the search feature.</p></li><li><p>That they liked the design and that I’d
    made my sketches myself in Sketch before starting to code.</p></li><li><p>That
    the CSS code wasn’t very contextually styled or nested. Instead they found much
    of it reusable throughout the entire app, which was good. One thing that would
    have made them even more impressed though, they told me, would have been if I’d
    followed the so-called <a href=\"http://getbem.com/naming/\">BEM CSS naming</a>
    convention as well.</p></li></ul><p>It wasn’t until a few weeks after the second
    interview that the CTO reached out to me again with an offer. After some discussions
    back and forth we settled on a probationary period of 6 months, with a $3,300
    monthly salary that would be boosted to my $3,700 target when I reached a productive
    level.</p><p>I accepted on the spot and started my new job the next week. ✌️</p><iframe
    src=\"https://medium.com/media/1b52e75713c9bfd458cd0c0f091f3f4a\" frameborder=0></iframe><p><strong>In
    parallel with the whole Teamtailor process,</strong> I interviewed for 4 other
    companies as well. The most noteworthy was the Swedish fintech phenomenon iZettle,
    which is sort of an umbrella of several different financial products, but where
    their wireless card terminal is probably the one they’re most known for.</p><p>As
    this successful startup was approaching a unicorn valuation, I’d learn that their
    demands on experience and skill level were significantly higher than the smaller
    startups that I’d interviewed for up to this point. I saw it both in the much
    more thorough recruitment process they had (5 interviews!) and the difficulty
    level of the interview questions.</p><p>The main reason a rookie like me even
    got an interview there in the first place I’d say would be largely due to the
    recommendation from a friend and the name of the business school I graduated from.
    So I sort of cheated my way in, I’d say. But I was so obviously not prepared for
    them.</p><p>Just like with the other companies, the first interview was all fluff
    and soft skills. But even more “HR” this time. Why do you want to work as a developer?
    What technologies do you like using? What are your strengths/weaknesses? And so
    on. Easy stuff.</p><p>The second interview, however, would turn out to be a quite
    traumatic experience. It all started with me sitting down in a conference room
    with two of their web developers. We repeated the whole “get to know each other”
    conversation and I was getting pretty comfortable and confident. And then I got
    the biggest sucker punch of my life.</p><p>Out of nowhere the guy across the table
    handed me a huge white A3 paper and a pen. He told me they wanted me to draw a
    sketch of the data flows and processes involved in the following scenario:</p><blockquote><p>“A
    small business owner has an account with iZettle and uses their card terminal.
    After one of his/her own customers has made a purchase using the terminal, he/she
    wants to log onto the web app and/or mobile app to see the transaction.”</p></blockquote><p>This
    really caught me off guard, but I hesitantly nodded and accepted the challenge.
    Then the guy said something like: “We’ll just go and have a coffee, and then in
    5 minutes or so we’ll come back and let you explain your thoughts.”</p><p>5 minutes!
    Was that a joke? I really couldn’t tell. When they’d left, I seriously considered
    if this was some sort of trick question, where I was supposed to realize that
    this task was just too big to perform decently in such short time. But time was
    already running out and it was too big of a risk. So I decided to give it a shot.</p><p>In
    hindsight, I realize that it was a system design question, meaning that they wanted
    me to basically just map up an overall view of how the web app and mobile app
    made requests to some API that connected them to the server(s) and database (if
    you want to improve your system design skills, I’d really recommend <a href=\"https://www.youtube.com/channel/UC-vYrOAmtrx9sBzJAf3x_xw\">this
    Youtube channel</a>).</p><p>But I did none of that. In my state of panic, I skipped
    ahead several steps, and started trying to sketch the database model of the user
    account, with a table, columns and foreign keys (I assumed that they used a relational
    database). When I was done with that, I had about 30 seconds left to map up the
    other components of the architecture. I was so stressed that I got all philosophical,
    and started questioning what the actual roles of the API and server were. Not
    a good sign.</p><p>5 minutes passed, and the two developers returned to a sketch
    barely worthy of a 5-year-old. I’d basically just drawn three circles. One to
    the left, representing the database, and two to the right, representing the web
    and mobile app clients.</p><p>Of course, I failed the interview miserably. Which
    was also the reason I didn’t move on to a third one. However, they let me down
    easy, telling me that they liked me and that I should apply again when I had one
    or two more years of experience.</p><p>The whole experience bummed me out, as
    I didn’t think I’d gotten a chance to show them my practical skills. Although
    I can kind of see that there’s some sort of value in being able to illustrate
    system architecture on a piece of paper, I really think that there’s a thousand
    times more value in being able to show your skills with a practical exercise,
    like a coding challenge or app demo. But hey, there’s a lesson to be learned in
    every failure, right?</p><p><strong>All in all</strong>, during my 4 weeks of
    job hunting I ended up attending 11 interviews for 6 companies, of which 3 made
    me offers. So despite getting burned a few times, it was really an amazing experience.
    If I was asked to name the one single biggest reward (except for getting my dream
    offer), it would be that <strong>I got comfortable with talking to developers
    about software</strong>. If you’re suffering from the imposter syndrome like I
    did (look it up, it’s a thing), there’s simply no better way to treat it.</p><p>Another
    key takeaway is that out of my 11 interviews, only <strong>one</strong> turned
    out to require actual theoretical computer science knowledge. No questions on
    complex data structures, no devious brainteasers. Just one question on system
    architecture. The rest were 100% centered around either practical or soft skills.
    So unless you’re applying for a flashy software engineering job at Google or Facebook,
    I’d definitely recommend to focus on the practical stuff, and learn the theoretical
    stuff later.</p><p>Lastly, I’d like to stress the fact that I didn’t know anyone
    involved with the company that I ended up getting hired by. I know there’s a lot
    of content out there claiming that a strong personal network is the single most
    important factor to land the first dev job. And although that might be true statistically,
    cold-applying without a referrer is definitely not a waste of time.</p><h2><strong>Part
    8: What I do today</strong></h2><p>At the time of writing, I’ve been working at
    <a href=\"https://www.teamtailor.com/en\">Teamtailor</a> for six months. And time
    really has flown by quicker than I could’ve ever imagined. I’ve barely even noticed
    the long, dark, and freezing winter that’s usually a struggle to endure here in
    Stockholm.</p><p>I’m part of a team of 12 people, where everyone except for one
    designer are full stack Rails and JavaScript developers. A few have 10+ years
    of experience, some just a few years, but only two hold actual academic tech degrees.
    The rest of us are more or less self-taught.</p><p>I spend my days hacking away
    on our Rails/Ember platform, every day trying to leave the app a little bit better
    than I found it the same morning. The product itself is a recruitment web app
    that lets companies build and manage their own career sites, effortlessly and
    completely without requiring any coding skills.</p><p><img src=\"https://cdn-images-1.medium.com/max/5760/1*pWN7XQdBQiGT2NmcXPHKpg.png\"
    alt=\"[https://career.teamtailor.com](https://career.teamtailor.com/)\"><em><a
    href=\"https://career.teamtailor.com/\">https://career.teamtailor.com</a></em></p><p>In
    turn, the app behind this career site has two main dimensions:</p><ol><li><p>It
    lets users handle the employer branding meant to attract talent, with means such
    as job posts, social media content, a blog, images, videos and gifs.</p></li><li><p>It
    offers a massive set of tools to handle the traffic and applicants — like tracking
    candidates, chatting, emailing and texting them, evaluating them with tests, setting
    up automatic triggers to execute some action when a candidate is moved from one
    stage to another, and promoting job ads on all the major job boards to name a
    few.</p></li></ol><h3><strong>How we work</strong></h3><p>In our product team,
    we try our best to follow the agile principles of <a href=\"https://en.wikipedia.org/wiki/Scrum_%28software_development%29\">Scrum</a>,
    <a href=\"http://www.everydaykanban.com/what-is-kanban/\">Kanban</a>, and pair
    programming. Practically, for us this means we carry out our work in cycles, where
    we split up the implementation of new features into projects running for 6 weeks
    at a time. In turn, each project has developers paired up two-and-two, and made
    responsible for shipping the new features within those 6 weeks. The pairs deploy
    their work continuously, based on a predefined Trello board of smaller tasks within
    each planned feature.</p><p>Of course, we don’t just build new stuff. We also
    maintain the app. And at the core of this maintenance we have what I believe is
    a pretty unusual routine: *<em>the “tech-on-call” duty. *</em>This means a weekly
    rotating position where each developer in turn spends one whole week assisting
    our users and support staff on <a href=\"https://www.intercom.com/\">Intercom</a>.</p><p>If
    you think this sounds like an annoying and frustrating task, it was. Until we
    decided that each tech-on-call would pause all their other projects while on support
    duty. Then all of sudden, when I no longer felt like every minute spent on Intercom
    was a minute stolen from my projects and deadlines, I actually started enjoying
    it.</p><p>Think about it - when you just take the time to listen, you realize
    that you basically have an army of volunteering quality assurance testers at your
    disposal, always ready to give instant feedback on the product’s actual UX and
    user pain points. Considering this, suffice it to say that I’ve learned just as
    much from my tech-on-call weeks as any other project or bug that I’ve been working
    on.</p><p>Lastly, in between each 6-week cycle, we take two weeks to make a common
    effort to squash all the bugs lined up in our Trello bug board. We also use these
    two weeks to develop pitches for new features that we ourselves would like to
    see in the app. Every developer then gets the chance to pitch these ideas in a
    shared pitch meeting that we have every 8 weeks, which is really empowering for
    someone who’s not just looking to solve tough code problems, but also business
    problems through new cool additions to the existing product.</p><h3><strong>What
    I’ve done so far</strong></h3><p>Although the app includes so many features and
    technologies that in the beginning were completely foreign to me, I was thrown
    right into the middle of the action already in my second week. The onboarding
    process — meaning me having a senior developer show me the ropes — lasted only
    five days. After that first week, in theory, I was supposed to be more or less
    autonomous.</p><p>This meant I was expected to understand the architecture of
    the platform, the dev toolkit, the team’s workflow, our style guide, how to provide
    tech support to users and colleagues, and other internal routines for developing,
    testing, debugging, reviewing and deploying code. In other words, a LOT of new
    stuff for someone who just came out of a bootcamp.</p><p>If you’re panicking right
    now because you think I actually learned all that in a week, relax. I definitely
    didn’t. It wasn’t until after a few months that I started getting comfortable
    with most of that stuff. And with time, the others would notice, and I would be
    trusted with more and more responsibility. Since then I’ve gotten to be a part
    of some of the most exciting and challenging projects I’ve ever worked on.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2480/1*97zwYEjgD6lf-88WmlaKnA.png\"
    alt=\"My candidate profile with some fetched social media URLs in the gray box.\"><em>My
    candidate profile with some fetched social media URLs in the gray box.</em></p><p><strong>The
    first serious one</strong> was updating the method we used to fetch information
    about users who signed up on our app with just an email. We’d already integrated
    with a third party API for this, that we made requests to to get data like full
    names and URLs to social media profiles and avatar pictures.</p><p>However, since
    we’d found the fetched data to often be incorrect, the product team had decided
    to switch to another provider. Since it would expose me to several crucial areas
    and data flows of the app, it was the perfect next step for me.</p><p>To implement
    it, I would have to navigate all the way from getting the email from the user
    input at the very front of the client layer, to understanding how the data would
    travel from the Ember frontend, through adapters and serializers to the Rails
    backend and ultimately get stored in the database.</p><p><img src=\"https://cdn-images-1.medium.com/max/5756/1*EmLUf9ojRAdW7CPmy0Asxw.png\"
    alt=\"An example of how the call to action button can be used on a career site.\"><em>An
    example of how the call to action button can be used on a career site.</em></p><p><strong>My
    second own feature</strong> was developing what we call the “call to action button,”
    meaning that we’d allow our users to add custom buttons to their career sites
    in our editor tool.</p><p>For instance, we wanted to let them redirect to the
    page of a certain job opening, a certain department, or some completely external
    URL. This actually turned out to be a lot easier than I’d expected. Most of the
    backend architecture was already in place, so all I had to do was basically create
    a few new Ember components and add them to the other options in the career site
    editor.</p><p><img src=\"https://cdn-images-1.medium.com/max/3380/1*yqAMm_2bx322DeVFoK7rxQ.png\"
    alt=\"The modal form for our new automated candidate testing feature.\"><em>The
    modal form for our new automated candidate testing feature.</em></p><p><strong>The
    third feature I worked on</strong> was enabling our users to integrate with external
    assessment providers, meaning they would be able to send candidates to a test
    platform like Hackerrank. When they’d finished a test, the results would automatically
    be sent through an integration between our and the provider’s APIs. This was a
    big one, so I mostly acted as an assistant to the senior developer (aka the Ember
    grandmaster of our team) responsible for the project. Still, it taught me tons
    about how to properly set up an API integration and automating workflows with
    triggers.</p><p><img src=\"https://cdn-images-1.medium.com/max/5760/1*e_cXoRdBAVxd4oOf7FRESw.png\"
    alt=\"One of the pages in the Employees section, rewritten in Ember.js.\"><em>One
    of the pages in the Employees section, rewritten in Ember.js.</em></p><p><strong>My
    fourth project was the biggest to date,</strong> and for good <em>and</em> bad
    I ended up doing it more or less on my own. The entire app had originally been
    built in Rails, and most views had been rewritten with JavaScript and Ember one
    by one. Only one of our main sections of the app still had just Rails views. It
    was the so-called “Employees” section, which was basically the main destination
    for creating, editing, and deleting user accounts. So it was kind of important
    that my translation to Ember was flawless.</p><p>Which stressed me out like crazy.
    Since I’d been on the team for about three months at this point, I figured it
    was time to stop acting like some annoying intern and start working more independently.
    Meaning I tried to bother the others with as few questions as I possibly could.
    The good thing about this was that I got a lot of confidence in my ability to
    solve real-world software problems completely on my own. The bad thing, however,
    was that it made me super slow, and that it took me a good 6 weeks to ship the
    full rewrite of more than 2,000 new lines of code.</p><p>In the end, this actually
    even proved to be the main reason why I didn’t get the raise that the CTO and
    I had agreed on, since I hadn’t fulfilled my end of the bargain: <strong>I hadn’t
    reached a productive level in line with the rest of the team</strong>.</p><p>Although
    this sucked at the time, I now realize that his standpoint was completely fair,
    and it taught me an important lesson. In the world of Agile software development,
    lone wolfing isn’t an option. Teamwork is a major part of finding a productive
    workflow.</p><p><strong>The fifth project</strong> is the last to date, and we
    actually just shipped it. It was our new feature to handle the emerging new European
    data privacy legislation (GDPR). For us that translated into building tools that
    made it easier for our customers’ candidates to have their personal data deleted
    from our database, and also for our customers to ask the candidates for permission
    to store and keep storing their data.</p><p>Sounds pretty straightforward right?
    Well, it wasn’t. At all.</p><p>I think the main reason was that we couldn’t focus
    on a single destination of the app. Instead, the feature required us to add stuff
    all over the place. Notifications in one place, warning flags in another, search
    filters and bulk actions in a third, and dozens of new email sendout actions everywhere.</p><p>For
    the first time since I started, I was paired up with the senior developer and
    co-founder that onboarded me. So I felt it was really important for me to show
    him how much I’d learned since that first week six months earlier. My probation
    period was about to end, and they would soon have to make a decision if I was
    good enough to keep on the team. And with this “simple” project, I first figured
    proving that would be a piece of cake.</p><p>Oddly enough though, I think the
    complexities made our pair-programming sessions even better. There were so many
    user scenarios to take into account when designing each part of the architecture,
    that we were forced to discuss and twist and turn every new block of code. For
    the first time, I’d have to take into account not only the UI/UX dimension, but
    also extensive legal considerations, that could cause a lot of trouble for our
    users if we didn’t implement it correctly.</p><p>So we pair-programmed a lot,
    and it was really great. When I coded, he came with a lot of good feedback that
    mostly made my code a lot cleaner. But unlike that first onboarding week, I was
    actually also able to give feedback on his code, making suggestions and asking
    questions that really made his code better as well.</p><p>When you’re in a state
    of intense development, like I’ve been for the past year, I think it’s hard to
    quantify how much your skills have improved at any given moment. So being able
    to give constructive feedback to this guy, with 15+ years of coding under his
    belt, really put the writing on the wall for me.</p><p>And by the way, so did
    the extension of my 6-month probationary employment contract, which I was just
    recently made aware of. From now on, I’m a regular full-time employee, with the
    salary I initially requested six months ago \U0001F603 \U0001F389</p><p><img src=\"https://cdn-images-1.medium.com/max/6834/1*5psEOdmkuHRuyZ53GR64pw.jpeg\"
    alt=\"Me at work \U0001F60E\"><em>Me at work \U0001F60E</em></p><h2><strong>Part
    9: Why becoming a developer is the best thing I’ve ever done</strong></h2><p>As
    you’ve probably figured out by now, I’m in love with coding.</p><p>I love that
    it keeps forcing me to push my intellectual limits through quantitative problem
    solving.</p><p>I love that it provides me with an outlet for creative expressions
    when designing anything from UI to system architecture.</p><p>I love that it provides
    me with a thousand different solutions for every real-world problem.</p><p>I love
    that it not only tolerates my inner perfectionist, but actually requires that
    perfectionist to be present — and punishes its absence.</p><p>I love that it surrounds
    me with people that value genuineness and transparency above small-talk and politeness.</p><p>I
    love that, on my introverted days, it lets me put on my headphones, roll up my
    sleeves, and deep dive into another dimension for a while.</p><p>I love that it
    always holds something new for me to learn, and that it will require me to be
    a lifelong learner, unlike many other stagnant professions.</p><blockquote><p><strong><em>But
    most of all, I love that coding has given me a sense that the future is truly
    limitless.</em></strong></p></blockquote><p>In a few weeks I’ll turn 27, and I
    have no idea what the future holds for me. In three years, for all I know, I might
    still be in the same position as I am now, writing code for the same company.
    I might be a lead developer. I might be a product owner or manager. Or I might
    be somewhere completely different.</p><p>Freelancing remotely from a sunny paradise.
    Developing decentralized apps on some disruptive blockchain. Designing machine
    learning models to combat global warming. Writing spaceship algorithms for expeditions
    to Mars. Or building my own product.</p><p>All of the above scenarios would have
    seemed utterly crazy to me before I started coding.</p><p>At best, my former finance
    jobs gave me the slim satisfaction of having put together a thick powerpoint presentation
    filled with upward-sloping KPI curves. And the best possible future scenario I
    could think of then was me landing a CFO or CEO position at some listed company
    after dedicating a decade of my life into 100-hour work weeks at some investment
    bank, private equity firm, or management consultancy, having spent my days around
    people who cared more about money and prestige than trying to do something meaningful
    with their lives. And that scared me.</p><p>Today, there’s no likely future scenario
    that scares me at all. And that alone gives me certainty that my crooked journey
    over the past three years has had a purpose.</p><p>Although it’s a bit sad that
    I invested so much time and energy into a career path that turned out to be a
    dead end, I know I was really fortunate to realize that already at age 23 — and
    to have the luxury to be able to make a halt, look around, and pursue something
    I felt more passionately about.</p><p>So good or bad, I guess it was the sum of
    all my experiences that took me to where I am today. A place where I somehow managed
    to find something few people ever do — <strong>a job that I love</strong>. And
    for that I’m more thankful than words can say.</p><p><em>Congrats! Since you made
    it all the way through this VERY long article, you must be just as crazy as I
    am. I originally had two intentions with this text: to process my failures and
    successes of the past three years, and to inspire others on paths similar to mine.
    I consider the first one completed. So if you have any questions or feedback —
    please do get in touch! Either in the comments below or at charlie.jeppsson1@gmail.com.</em></p>"
  :author: freeCodeCamp.org
  :topic: work
- :url: https://medium.com/hackernoon/11-things-developers-love-hearing-from-non-developer-co-workers-ea94805cf05d?source=search_post---------9
  :title: 11 Things Developers Love Hearing From Non-Developer Co-Workers
  :content: <p>11 Things Developers Love Hearing From Non-Developer Co-Workers</p><h3>“The
    client needs this to work on IE 6.”</h3><p>In the workplace, non-developers see
    developers as folks who make magic out of code. As a developer, you could be building
    complex API integrations all day or just clicking around playing <a href="http://westofloathing.com/">West
    of Loathing</a> on Steam, and 99% of your coworkers wouldn’t be able to tell the
    difference. Even though tech companies literally couldn’t exist without their
    dev teams, devs are also somehow paid less than people with job titles like Chief
    Inspiration Ninja who sit in pointless meetings all day stealing credit for everyone
    else’s work.</p><p>If you’ve ever wanted to learn how to better communicate with
    your dev team, you should know that there are some things that devs LOVE hearing
    from non-developers. For example, developers *love *hearing how you “saved them
    some time” by making difficult and course-altering technical decisions without
    consulting them. Thanks so much for thinking of your dev team! I swear we’re NOT
    envisioning the days we’ll lose trying to save the company from a choice you made
    based on the fact that you knew a little bit of HTML from that one time you coded
    your MySpace page.</p><p>Here are some more things developers love hearing from
    their non-developer co-workers.</p><blockquote><h1><strong>“This change shouldn’t
    take more than a few minutes.”</strong></h1></blockquote><p>Thanks, marketing
    coordinator! I appreciate you telling me that this fix on the site won’t take
    long in spite of the fact that you have no idea that the website was built in
    COBOL that someone hacked together when you were five years old.</p><blockquote><h1><strong>“Let’s
    have a meeting!”</strong></h1></blockquote><p>Oh man, developers love nothing
    more than when non-developers ask them to have meetings… about everything! Have
    to make a decision on colors? Let’s have a meeting! Want to try to convince your
    team to build it in WordPress? Sounds like a great way to spend three hours I
    could also use to build that product that’s a month behind. We should schedule
    a meeting to figure out when we should have this meeting!</p><blockquote><h1><strong>“Don’t
    worry too much about security… it’s not like we’re going to get hacked or anything.”</strong></h1></blockquote><p>Thanks
    for your input, operations specialist! I’m sure it won’t affect you when someone
    hacks into our system and steals the records from every single person in our company.
    But since you know so much about security, I’ll defer to you to protect my salary
    information, social security number, payroll bank account information and my passwords.</p><blockquote><h1><strong>“There’s
    no requirements doc, but I’m sure you can figure it out.”</strong></h1></blockquote><p>I
    appreciate your faith in me! I’m sure I’ll be able to build this exactly the way
    the client wants on the first try and won’t have to endure a screaming match of
    who fucked it up when we try to push this through and it’s nothing like what the
    client needs.</p><blockquote><h1><strong>“I know I’m not a developer, but I think
    you should use this framework my cousin mentioned…”</strong></h1></blockquote><p>Thank
    you for your thoughts, guy who still sends personal email from his hotmail account!
    We SHOULD build in Ruby just because your cousin said it seemed cool after taking
    a two-hour General Assembly coding workshop three years ago.</p><blockquote><h1><strong>“I
    took the liberty of updating the codebase myself.”</strong></h1></blockquote><p>You
    saved me so much time! And, don’t stress yourself out over how much of that “saved”
    time time we eventually lost when the site crashed entirely and I had to spend
    the next two days putting it back together.</p><blockquote><h1><strong>“We don’t
    need your input because you’re not a creative.”</strong></h1></blockquote><p>That’s
    right, developers are NEVER creative! We don’t spend literally ALL DAY creating
    things and there’s NOTHING creative about seeing how we can make complicated systems
    work together. Let’s just keep the developers out of the creative process AND
    downplay their ideas when they finally do have a chance to voice them. And then
    let’s blame them when they tell us why all the tech we dreamed up without them
    was never feasible in the first place.</p><blockquote><h1><strong>“The client
    needs this to work on IE 6.”</strong></h1></blockquote><p>Super retro! I’ll go
    dig through a shed to try to find a computer I can actually test this on, for
    the four people who will ever actually try to access your site from a Windows
    2000 operating system.</p><blockquote><h1><strong>“We don’t want to pay for the
    software you need to license, so why don’t you just build it yourself?”</strong></h1></blockquote><p>Oh
    man, this’ll be so easy! I’m sure I can knock this out in two weeks. I mean, two
    months. Two years? Oh, fuck it, let’s just pay for the software that would have
    saved us $500,000 if we had licensed it two years ago.</p><blockquote><h1><strong>“I
    know you’ve been working on it for a year, but we’re canceling this project.”</strong></h1></blockquote><p>Yay!
    Thanks for freeing me up from all this time on the only project I was actually
    excited about at this company.</p><blockquote><h1><strong>“We’ve contracted you
    on this client project… you know ColdFusion, right?”</strong></h1></blockquote><p>Of
    course I do! Doesn’t everyone know this legacy system that was out with the George
    Bush era? I will gladly build your project in ColdFusion and try not to complain
    too hard when it shits itself and does literally nothing that more flexible codebases
    can do.</p><p>If you’ve ever said any of these things to your developers and they
    literally shoved their computers on the ground, shouted “WE’RE OUTTA HERE, YOU
    MANIAC!” and walked out the door while mooning you and the rest of the company,
    you can surmise that they were just SO EXCITED to get started! Or, maybe they’re
    just the kind of developers that would rather focus on making good work than getting
    stuck in bureaucratic nonsense. Whatever the case, just know that every time you
    say one of these things, you’re being a true friend to your development team.
    You know, just like Amber in accounting is to you when she incessantly explains
    to you exactly how you should do your job as the company’s sole Chief Inspiration
    Ninja.</p><h2>If you liked this piece, feel free to clap those hands at the bottom
    of the page. I promise to keep writing funny things about startups and development
    teams if you do! ❤</h2><p><em>Image by Arkady Arkagorodsky — <a href="http://msprojectreporter.com/wp-content/uploads/2016/08/">http://msprojectreporter.com/wp-content/uploads/2016/08/</a>,
    Public Domain, <a href="https://commons.wikimedia.org/w/index.php?curid=58353093">https://commons.wikimedia.org/w/index.php?curid=58353093</a></em></p>
  :author: HackerNoon.com
  :topic: work
- :url: https://entrepreneurshandbook.co/i-sat-down-with-a-millionaire-who-operates-10-businesses-while-sailing-around-the-world-with-his-338929c4e8c9?source=search_post---------0
  :title: I sat down with a millionaire who operates 10 businesses while sailing around
    the world with his…
  :content: '<p>This is what he told me</p><iframe src="https://medium.com/media/424e10582a57f32433723758e1b60c53"
    frameborder=0></iframe><p>This man, who shall remain nameless, keeps a very low
    profile. I happen to run into him and strike up a conversation, which led to another
    conversation over lunch.</p><p>We sat down at an organic food market for lunch
    and he began to tell me his story.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*3VwE1x-lnGZB14v1EaKeVQ.png"
    alt="ISO 9000 is an international standard for quality management systems"><em>ISO
    9000 is an international standard for quality management systems</em></p><p><strong>He
    was a writer and senior lead auditor of the <a href="http://en.wikipedia.org/wiki/ISO_9000">ISO
    9000</a>.</strong></p><p>The ISO 9000 is a globally-adopted, quality business
    management standard used by huge brands with support businesses located internationally.
    The reason why it exists is so stakeholders can believe with confidence that a
    manufacturing plant located in another country will produce exactly what the contract
    says, without having to travel to that plant to conduct a huge inspection. If
    the plant is ISO 9000- or ISO 9001-certified, then they know it will perform to
    standard.</p><p>The ISO 9000 is based on <a href="https://www.iso.org/files/live/sites/isoorg/files/archive/pdf/en/pub100080.pdf">7
    quality management principles</a>. Adherers include companies in the automotive,
    chemical, and aerospace manufacturing industries such as GM, Chrysler, Boeing,
    General Electric, Northrop Grumman, Alibaba, and Eastman Chemical Company.</p><p>This
    man told me that he applied the quality management principles he helped establish
    in the ISO 9000 to the ten separate businesses he operates today. His businesses
    include a skateboard and BMX shop, a network of pawnshops, a consulting practice,
    a musical instruments shop, an Internet sales business, a real estate development
    and management firm, a firearms shop, a marine products online store, a standup
    paddleboards shop, and a visual displays store.</p><p>You would think these ten
    companies would dominate his time. Not so. He spends his time sailing around the
    world with his wife and family in one of his sailboats, the “Zephyr” or the “Whispering
    Eye.”</p><p>Here’s what he told me about life and business. Visualize everything
    below in quotes.</p><h2>Multiple Revenue Streams</h2><p>If you were to look at
    just one of the ten businesses I have, it would not be that impressive. It would
    provide for a simple, decent living for a small family, not much more than that.
    It’s an unglamorous yet stable, small and focused, profitable operation.</p><p>By
    itself, it’s basic and ordinary. You young, startup-crazy whippersnappers want
    something so high-profile and instantly viral. My businesses aren’t viral, but
    they help a specific type of person by providing a quality solution, over and
    over again.</p><p>Multiply a small, quaint, and profitable business by ten and
    you’ve got a diversified, multi-million dollar portfolio.</p><h2>Do Not Partner</h2><p>If
    you can help it, do not partner with anyone. The more partners you have, the more
    you have to split the pie. The more partners you have, the more you have to fight
    for your point of view. The more partners you have, the more time it will take
    to execute anything. Co-founding is overrated.</p><p>Learn the skills yourself,
    bootstrap, and then hire the right people (see below).</p><h2>Study the Market</h2><p>We
    are in a small market. We are not in San Francisco, Paris, or New York. I’ve seen
    that smaller markets are two to three years behind the larger markets; whatever
    is selling in the big cities, will not be selling in ours at the same time. But
    give it two to three years and it will be selling like hotcakes.</p><p>Find out
    what this is, and be the first to open a shop in your small market.</p><h2>Be
    Very, Very Careful With Who You Hire</h2><p>My employees are transferable between
    business lines. Each employee is multi-skilled. The girl behind the counter is
    doing social media marketing online in between customers checking out.</p><p>Each
    business has a manager with a bank card. Each manager is trained in the same principles
    of the ISO 9000 and is given full control of their business. Through a tight incentive
    plan, I make sure that if the business does well, they do well. If they want to
    order the hottest, new products to sell in their shop, they have to sell enough
    to fill up the bank account, to purchase the inventory.</p><p>I look for people
    who are independent and responsible, who take complete ownership of their business.
    This allows me to travel the way I do, because I know my employees are working
    hard for themselves.</p><p>Oh, and we have parties OFTEN. We casually share ideas
    about what marketing tactics are working in one business that may work in another,
    we have performance awards, and we do fun things together.</p><h2>How to Do Well
    in Business</h2><p>Here is the mission statement for all of my companies, it’s
    very simple:</p><blockquote><h1><strong>To provide our customers with value-added
    services and quality products.</strong></h1></blockquote><p>To be successful in
    business does not mean changing the world. It means meeting a need (regardless
    of size) well and dependably over time.</p><p>Sell something. If it’s a product,
    make sure its quality, then sell it at a fair price, and make sure the breakeven
    point is doable for you as the business owner. If it’s a service, make sure there
    is added value, as in you are very good and knowledgeable in your field, and the
    service provided is unique, at least in your market.</p><p>As he was speaking
    to me, I tried my best to maintain eye contact while thumbing words furiously
    into an Evernote note. We finished lunch and said our goodbyes. Thankfully, I’ve
    kept that note and I wanted to share it with you.</p><p>Perhaps, one day I’ll
    be sailing across the world in one of my sailboats with my family while running
    ten businesses… but until then, I’ll keep writing about the people who do.</p><p><strong>Classic
    plug: if you thought this was helpful, please recommend it below, or write a response.</strong></p>'
  :author: Entrepreneur's Handbook
  :topic: business
- :url: https://medium.com/@StephStClaire/11-things-i-wish-i-knew-when-i-started-my-business-3dc264023df5?source=search_post---------1
  :title: 11 Things I Wish I Knew When I Started My Business
  :content: '<p>Glitter was literally shooting out of my eye sockets as I quit my
    PR job to “be my own boss.” Then reality struck.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*rRbwfBIO4Q-a1tQNk2eHGQ.jpeg"
    alt="Working. Or maybe ordering wine off the internet."><em>Working. Or maybe
    ordering wine off the internet.</em></p><blockquote><h1><em>“A lot of people like
    to fool you and say that you’re not smart if you never went to college, but common
    sense rules over everything. That’s what I learned from selling crack.” — Snoop
    Dogg</em></h1></blockquote><p>My name is Stephanie St.Claire, and I’m an unfunded
    entrepreneur. I’ve been in business for eight years, after engaging in my own
    personal and tenuous renaissance (uh…divorce) and rediscovering my Divine Core
    Purpose. In other words, I grew a pair of ladyballs, launched a business, and
    tried to make enough money to keep a roof over my head.</p><p>But there was a
    <em>lot</em> to learn, some of which wasn’t covered in <em>Who Moved My Cheese?</em></p><p>Throw
    these four rockstars into a blender, and you’ll have a composite sketch of me
    in the first three months of my business:</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*O7mFfdM0OPCUsb9o.png"
    alt="photo: author’s collection"><em>photo: author’s collection</em></p><p>Glitter
    was literally shooting out of my eye sockets as I quit my PR firm job and dove
    headfirst into entrepreneurship. Full of optimism, living in New York City and
    surrounded by a tribe of friends who were also launching businesses, art, and
    gigs, I felt it was the perfect time to make a bold move and be my own boss. I
    was now Officially Living My Dream and Working For Myself, which meant I was in
    charge of My Financial Destiny and Captain of My Promising Future.</p><p>Luckily,
    my initial hyper-optimism buoyed me whilst, oscillating between euphoria and despair,
    I was systematically forced off The Magic School Bus and onto the S.S. Battleship
    Long Haul.</p><p>I was a quick and eager learner, but despite the hours of webinar
    watching, countless Friday nights pumping out site copy, and teaching myself everything
    I could about HTML, there were just some things I didn’t get. I had to fall on
    my ass to procure the “master’s degree in life survival” every entrepreneur earns
    on their “journey.” (Yes, those are bitterly gesticulated air quotes.)</p><p>Here
    are 11 things I wish I knew when I started my business. I hope they will save
    you some time and some anguish because (experience is a good teacher here) the
    sodium from your tears acts as a corrosive melting agent on all brands of premium
    ice cream (although it does make a superb saline for your dirty martini). Cry
    over a cup, oh fathomless bird of preneurial gumption!</p><h3><strong>1. Running
    the business is your first priority.</strong></h3><p>Your success (and financial
    stability) will come from expertly running your business — not writing copy, rebranding
    your client’s website, running your candle boutique, teaching yoga, selling real
    estate, or making jewelry. In other words, you will spend 15 percent of your time
    doing what you love (in my case coaching and writing) and 85 percent marketing,
    administrating, selling, strategizing, and answering a shitload of email. Survival
    will hinge on how quickly you adopt this role of business owner first, creator
    of pretty things second.</p><p>This sucked for me because I wanted nothing to
    do with running a business. I just wanted to be a writer and a coach who wrote
    and coached all day. I didn’t get it.</p><h3><strong>2. Ready to meet your soulmate?
    It’s you.</strong></h3><p>Entrepreneurship is the most life-changing relationship
    (like marriage or parenthood) that a person can have. You will be confronted overandoverandover
    with your fears, insecurities, crappy excuses, limitations, justifications, shitty
    integrity, and inefficient time management. The standard you held yourself to
    in the workaday world was good enough then, but it won’t be good enough to run
    your own business.</p><p>You will learn to accept yourself through all this because,
    in order to get up every day and be the CEO, you will have to. Somehow, while
    you’re busy putting yourself out there in spite of your flaws, you will come to
    deeply admire yourself. Not in the over-hyped “Self Love 2018” way, but in a quiet
    way that sneaks up on you after witnessing a thousand splinter-sized moments of
    transcending the baser aspects of yourself.</p><h3><strong>3. Your trajectory
    for success will take as long as everyone else’s, even though you are SpeCiaL
    and BRilliANt.</strong></h3><p>I heard the “two-year rule” when I started my biz,
    but I was confident I could do it in six months. I believed with every fiber of
    my glittery, go-gettin’ heart that my work ethic (15-hour days, seven days a week)
    — along with my talent, skills, and personal magic — I could rip a path to accelerated
    success. My Myers-Briggs and Enneagram profiles were finally aligned and I expected
    nothing less than to be #blessed.</p><p>Jesus had other plans.</p><p>See number
    4.</p><h3><strong>4. Running out of money is a common part of the journey.</strong></h3><p>You
    won’t expect it, because you prepared for the long haul<em>. *You secured a business
    loan, or got some investors, or sold your house, or have one year’s worth of savings
    and have *planned accordingly.</em></p><p>But then all of a sudden, midst the
    puffy clouds and blue skies, your little Entreprenairplane will sputter, gas gauge
    unexpectedly plummeting to zero, and you will only have one choice: land on the
    wild abandoned air strip called Bank Balance: 14 Dollars. This will be the last
    place you ever thought you’d crash land, because didn’t you pass this test on
    No More Amazon Prime Island?</p><p>Well.</p><p>The good news is this is a rite
    of passage that will launch you into the League of Business Badassery in which,
    once you are out of the money hellhole, you will be unstoppable. You’ve been to
    the baddest prison there is, looked down the barrel of your worst fear, and stood
    your ground. You didn’t quit. You got up the next day, and you wrote your next
    post, you storyboarded your next product offering, and answered customer emails
    with zero dollars in your bank account.</p><p>There is nothing more beautiful
    than running out of money and realizing that you are doing your work because you’ve
    got the balls to push through your worst fears when there is no evidence of security.
    You really, truly love what you do, and you’d do it for free if you had to.</p><p>Irony
    is a sassy bitch, isn’t she?</p><h3><strong>5. Build a hybrid stream of income.</strong></h3><p>Learn
    from my mistake: Take a second job if it will give you peace of mind. I was so
    resistant to “dividing my focus” or taking any action which I interpreted as undermining
    my commitment to being totally successful in my business. I really thought by
    making a Plan B I was telling the “Universe” I wasn’t 100 percent serious but
    hello! I created a worse problem by allowing financial stress to gut me of my
    sanity.</p><p>If having a steady stream of income would buy you peace of mind,
    DO IT.</p><p>I finally came to terms with the fact that I was being naïve about
    how money, peace, survival, and timing all work together, and I got a second job.
    Since I wasn’t freaking out about money anymore, I liberated more creative real
    estate in my brain to apply toward my business.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*EcnqeZ6eqW5zYQYWjdDfag.jpeg"
    alt="Graphic: Stephanie St.Claire"><em>Graphic: Stephanie St.Claire</em></p><h3><strong>6.
    Create a healthy distance between yourself and your work.</strong></h3><p>Does
    Lizzo walk around the house checking how many likes she got on Instagram? No honey,
    she’s too busy planning D-Day.</p><blockquote><h1>Lizzo does not identify with
    “Lizzo.”</h1><h1>Lizzo employs “Lizzo.”</h1></blockquote><h3><strong>7. Spend
    less time researching, more time doing.</strong></h3><p>Researching, studying,
    and consuming Tai Lopez’s “5 Tips to Email Marketing” is a form of resistance.
    In order to get clarity, you must act.</p><p>Clarity does not come by learning
    more — <strong>it comes by jumping in with your instincts and putting yourself
    out there, even if you don’t know exactly what you’re doing.</strong></p><p>Block
    out the distractions (turn off the phone, social media, and email notifications)
    and take inspired action that feels tangible and measurable. Set a timer for 25
    minutes and go to town on a task. <strong>Do not look up. Do not go to the bathroom.
    Do not cruise the fridge for cheese sticks.</strong> Get something done, despite
    the fact that at times you will feel like you are pissing into the wind. Piss
    into the wind four times a day, and you’ll make a difference in your bottom line.</p><h3><strong>8.
    Only say yes to business partners and projects that are <em>hell</em> <em>yes</em>es.</strong></h3><p>Scrutinize
    any joint project carefully and qualify the person you’re collaborating with (even
    if they are your friend and have been in business longer than you). Get everything
    in writing before you embark on the project, with a clear division of labor and
    deadline dates. If you have a business partner, draft and sign an operating agreement.
    <em>Do not skip this.</em></p><p>You will most likely be splitting the profits,
    so have two numbers in your head: The number you <em>need</em> to make in order
    to pay for your time, and the number you would <em>like</em> to make. Set the
    first financial deadline early so that you both have the freedom to walk away
    if the project isn’t going to be profitable. Have a transition strategy in mind
    so in case that happens and one of you wants to continue on with the project,
    there is a way to pass the baton gracefully.</p><p>Summed up: communicate about
    everything — even though you’re friends, even though you love each other, even
    though you trust each other, even though you’ve worked together at XYZ Company
    because projects have a way of going sideways and making everyone a little custodial
    and overreactive.</p><h3><strong>9. You must devote time to becoming a brilliant
    marketer.</strong></h3><p>I know you just want to spend all your days making CBD
    candles, or sarsaparilla-scented beard oil, or writing your YA fantasy novel,
    or life coaching entrepreneurs to stratospheric success, but <strong>if you don’t
    spend time marketing you will not make money.</strong></p><p>This was my biggest
    weakness when I started. I thought marketing meant slimy sales letters with big
    arrows and opt-in boxes, and I couldn’t! I wouldn’t! So I put my head in magical
    fairyland sand, stubbornly insisting that my customers would be tractor-beamed
    into my budding practice by the pulsating, heavenly light that radiated from my
    vision boards and four blog posts.</p><p>And then I ate canned food and spaghetti
    for a long, long time.</p><p>What rescued me? Knowing what marketing personality
    I embody. There are three main types:</p><ol><li><p>The Wisdom Advisor (Brene
    Brown, Danielle LaPorte, Marianne Williamson, Seth Godin), whose marketing feels
    like, “This is what I’ve found to work best. Let’s brainstorm together, and I’ll
    help you find out what’ll work for you.”</p></li><li><p>The Guru (Mel Robbins,
    Dave Ramsey, Gary Vaynerchuk, Marie Forleo, Tony Robbins), whose marketing boldly
    states, “Listen to me. I have the answers.” And finally,</p></li><li><p>The Connector
    (Joe Rogan, Oprah, Tim Ferris, James Altucher), who connect people with experts
    and resources.</p></li></ol><p>Once you have figured out your marketing personality,
    selling to your customers will be a thousand times easier because you will be
    working within your natural ability. Learn how you like to market and stick to
    that. Do it consistently and often. Even if you hire a pro, you will be doing
    some marketing yourself. Keeping your website fresh and current is essential,
    so also learn the backend of Squarespace or WordPress. You will be in the guts
    of your website <em>a lot</em>.</p><h3><strong>10. Do not screw your own time
    economy.</strong></h3><p>Email will become your new best frenemy. Your inbox will
    explode. You care about everyone, but you can’t help everyone. Read: Not everyone
    is your customer. Your job is to quickly discern who’s who and respond in the
    most appropriate way.</p><p>*<em>For Your Customers: *</em>Acknowledge the situation,
    request, or problem and extend an invite to a 20-minute call. Include your available
    dates, times, and phone number.</p><p>*<em>For Non-Customers: *</em>Acknowledge
    the situation, request, or problem and provide other resources, experts, or articles
    that would be a splendid fit.</p><p><strong>11. This last tip is a hodgepodge.</strong></p><p>Do
    not work your business seven days a week. Cover your legal ass from day one. From
    time to time, forget everything you know about the “right way” to run a business
    and run it like a neighborhood lemonade stand. Do not price your offerings around
    your personal ability to pay for it — you are not your ideal customer. Working
    out perplexing issues in your business will resolve problems in other areas of
    your life. Take a walk around the block every day at lunch. And lastly, if you
    want to be smarter in business, don’t ever forget that you are serving real, live
    human beings (not demographics, stats, or your pipeline).</p><p>Good luck everyone!</p><p><em>//</em></p><p><em>Note
    from Steph: I want to say a HUGE thank you to everyone who has clapped for or
    commented on this post. I have seen every comment, highlight, and share and it
    means the world to me. If you’d like to drop me a line, send it to <a href="mailto:steph@stephaniestclaire.com">steph@stephaniestclaire.com
    </a>— or even easier, DM me on Instagram <a href="https://www.instagram.com/stephaniestclaire/">@stephaniestclaire</a></em></p><p><img
    src="https://cdn-images-1.medium.com/max/2400/1*_Ypy91aazcr3KdxCbTvhwg.jpeg" alt=""></p><p>You
    might also like:<a href="https://medium.com/@StephStClaire/7-rookie-mistakes-that-almost-killed-my-business-888fab9c143b"><strong>7
    Rookie Mistakes That Almost Killed My Business</strong><em>Let me save you some
    time and heartache by sharing 7 totally avoidable pitfalls you can sidestep by
    not. doing. these…</em>medium.com</a><a href="https://medium.com/@StephStClaire/20-difficult-truths-about-love-relationships-from-a-life-coach-417643ab8570"><strong>20
    Difficult Truths About Love + Relationships from a Life Coach</strong><em>Things
    I wish someone had told me.</em>medium.com</a></p><p>*<em>Stephanie St.Claire
    *</em>is a <a href="https://www.stephaniestclaire.com/">writer and personal advisor</a>
    based in Orange County, California. Her work has been featured in The Huffington
    Post, Fast Company, Inc., Thought Catalogue, Greatist, Citizens of Culture, Mind
    Body Green and has been named one of Medium’s Top 100 Writers. She’s on <a href="https://www.instagram.com/stephaniestclaire/">Instagram</a>
    and* *is the author of <a href="https://medium.com/@StephStClaire/11-things-i-wish-i-knew-when-i-started-my-business-3dc264023df5">11
    Things I Wish I Knew When I Started My Business</a>.</p><p><em>Visit her website:
    <a href="https://www.stephaniestclaire.com/">stephaniestclaire.com</a>Want Steph’s
    writing delivered straight to your inbox? <a href="https://www.stephaniestclaire.com/newsletter-archive">Sign
    up.</a></em></p>'
  :author: Stephanie St.Claire
  :topic: business
- :url: https://medium.com/@joshuatopolsky/your-media-business-will-not-be-saved-1b0716b5010c?source=search_post---------2
  :title: Your Media Business Will Not Be Saved
  :content: '<p>A still from John Carpenter’s “Prince of Darkness” (it’s actually
    about Satan but whatever)</p><p>Video will not save your media business. Nor will
    bots, newsletters, a “morning briefing” app, a “lean back” iPad experience, Slack
    integration, a Snapchat channel, or a great partnership with Twitter. All of these
    things together might help, but even then, you will not be saved by the magical
    New Thing that everyone else in the media community is convinced will be the answer
    to The Problem.</p><p>I can tell you from personal experience over the last several
    months, having met with countless investors and leaders of media companies and
    editors and writers and technologists in the media world that there is a desperate
    belief that The Problem can be solved with the New Thing. <em>And goddammit someone
    must have it in their pitch deck.</em> A new kind of video app. The best news
    stories of the day, except all on video. Video, but with subtitles. Only 30 second
    videos, designed for vertical screens. A personalized Facebook bot that delivers
    only the video you want. Video on-demand, over-the-top, linear, succulent, meaningful,
    plentiful, attention-grabbing video!</p><p>Or maybe a newsletter of some type.
    A video newsletter.</p><p>But let me back up.</p><p>What’s The Problem, you ask?
    The Problem is that we used to have a really neat and tidy version of a media
    business where very large interests controlled vast swaths of the things we read,
    watched, and listened to. Because that system was built on the concept of scarcity
    and locality — the limits of what was physically possible — it was very easy to
    keep the gates and fill the coffers. Put simply, there were far fewer players
    in the game with far fewer outlets for their content, so audiences were easy to
    sell to and easy to come by.</p><p>Then digital. Then you and me. And all of a
    sudden all those old, fixed channels started falling apart. Papers didn’t sell.
    Magazines died. Networks scrambled. Local news meant a lot less. Local papers
    even less than that. Suddenly a lot more free stuff was available online, and
    anyone could start a blog! But the media industry is a hulking, stupid, slow moving
    beast that has little awareness about its threats and surrounding environs. I’m
    skipping over a few parts, but by and large the industry responded to the <em>promise</em>
    (or <em>threat</em>, as they treated it) of digital by ignoring it or denying
    it. So instead of the content creators and advertisers who paid them shifting
    their attention and understanding of user value towards the future (digital everything),
    they kept plugging away at the old system. Basically: it was really hard for them
    to figure out the internet, and all of the money (like subscriber dollars) were
    still going to traditional outlets. So magazine ads remained orders of magnitude
    more valuable than their digital counterparts (if said counterpart even existed).
    TV was not even in the same class. Pennies on the dollar doesn’t begin to describe
    it. It is still mostly this way today. A broken model that is aging badly.</p><p>A
    second thing happened alongside those foundational publishing challenges: this
    industry which had controlled its ability to reach a populace through ownership
    of things like printing presses began to cede its power in the delivery and distribution
    process to other people. People who didn’t care about or understand the media
    business. People who told them the answer wasn’t the <em>best of something</em>,
    it was the <em>most of something</em>.</p><p>Partially this was done out of fear,
    but mostly it was done out of ignorance.</p><p>So over time, we built up scale
    in digital to replace user value. We thought we could solve with numbers (the
    new, seemingly infinite numbers the internet and social media provides) what we
    couldn’t solve with attention. And with every new set of eyeballs (or clicks,
    or views) we added, we diminished the merit of what we made. And advertisers asked
    for more, because those eyes were worth less. And we made more. And it was less
    valuable.</p><p>The media industry now largely thinks its only working business
    model is to reach as many people as possible, and sell — usually programmatically,
    but sometimes not — as many advertisements against that audience as it can. If
    they tell you otherwise, they are lying.</p><p>They are also wrong, I believe,
    in the long run.</p><p>And every few months — or let’s say annually — a technology,
    or idea, or person comes along and the very stupid and slow media industry thinks
    that New Thing will fix everything. Get them back to the good times. Make those
    pennies into actual dollars. One year it might be the iPad, the next it might
    be an “amateur journalist” network, maybe last year it’s <em>You Won’t Believe
    What Happens Next</em>, maybe next year it’s video (or live video?), maybe it’s
    bots. Maybe it’s Instant Articles. Maybe it’s your new app.</p><p>Certainly it
    could be a little bit of all of those things. But actually it’s not any of them.
    You can always get some runway out of the New Thing. You can always get a quick
    hit that looks like success from the New Thing. But rarely — almost never — is
    the New Thing what fixes your problem.</p><p>Your problem is that you make shit.
    A lot of shit. Cheap shit. And no one cares about you or your cheap shit. And
    an increasingly aware, connected, and mutable audience is onto your cheap shit.
    They don’t want your cheap shit. They want the good shit. And they will go to
    find it somewhere. Hell, they’ll even pay for it.</p><p>The truth is that the
    best and most important things the media (let’s say specifically the news media)
    has ever made were not made to reach the <em>most</em> people — they were made
    to reach the <em>right people</em>. Because human beings exist, and we are not
    content consumption machines. What will save the media industry — or at least
    the part worth saving — is when we start making Real Things for people again,
    instead of programming for algorithms or New Things.</p><p>So what will matter
    in the next age of media?</p><p>Compelling voices and stories, real and raw talent,
    new ideas that actually serve or delight an audience, brands that have meaning
    and ballast; these are things that matter in the next age of media. Thinking of
    your platform as an actual platform, not a delivery method. Knowing you’re more
    than just your words. Thinking of your business as a product and storytelling
    business, not a headline and body-copy business. Thinking of your audience as
    finite and building a sustainable business model around that audience — that’s
    going to matter. Thinking about your 10 year plan and not a billion dollar valuation
    — that’s going to matter.</p><p>But before we realign around all those Real Things,
    it will be very bloody. Bloody, and violent, and depressing. Content makers will
    die. They’ll be bought up. They’ll be split apart. Their TV networks will fail.
    Their partnerships will end. In fact, this is already happening.</p><p>We’ll have
    to learn a thousand hard lessons, most of them centered around the idea that if
    you want to make something really great, you can’t think about making it great
    for <em>everyone</em>. You have to make it great for <em>someone</em>. A lot of
    people, but not <em>every person</em>.</p><p>I tend to be a glass half full person.
    I actually think this is an <a href="https://medium.com/@goodberger/peak-content-c89b436dd861#.gribehas7">incredible
    opportunity</a> for the smart people in media. We can <a href="https://twitter.com/joshuatopolsky/status/720056917947719680">unfuck
    ourselves</a>. We can build <a href="https://www.theinformation.com/escaping-the-digital-media-crap-trap">new
    things</a>. We can start over, however we want.</p><p>At the risk of sounding
    self-promotional, that’s what I’ve been working on for the better part of a year.
    I’m only interested in making interesting things for interested people. Want to
    support it or be part of it? Ping me. I love talking.</p>'
  :author: Joshua Topolsky
  :topic: business
- :url: https://marker.medium.com/what-seven-years-at-airbnb-taught-me-about-building-a-company-e1d035d49c56?source=search_post---------3
  :title: What Seven Years at Airbnb Taught Me About Building a Business
  :content: '<p>Create strong culture, stay laser-focused on problems, and set wildly
    ambitious goals</p><p><img src="https://cdn-images-1.medium.com/max/6206/1*cufFG8OsK1K0z2zTmdaDnw.png"
    alt="Tips for new employees, painted on the walls during a hackathon. Mural: [Andrea
    Nguyen](http://andrealikes.to/), [Jeany Ngo](http://www.jeanyngo.com/), [Katie
    Chen](http://www.katiechen.design/); Photos: Lenny Rachitsky"><em>Tips for new
    employees, painted on the walls during a hackathon. Mural: <a href="http://andrealikes.to/">Andrea
    Nguyen</a>, <a href="http://www.jeanyngo.com/">Jeany Ngo</a>, <a href="http://www.katiechen.design/">Katie
    Chen</a>; Photos: Lenny Rachitsky</em></p><p>In 2012, shortly after Airbnb <a
    href="https://techcrunch.com/2012/12/13/airbnb-acquires-localmind/">acquired</a>
    our startup, I overheard co-founder Joe Gebbia giving guidance to a designer tasked
    with redesigning the homepage. He said, “Build something the internet has never
    seen before.” I vividly remember thinking, <em>What does that even mean? And is
    this the bar for everything around here?</em> Looking back, I’ve come to recognize
    that this mindset has been one of the key ingredients in Airbnb’s historic growth.</p><p>I
    first joined Airbnb as an engineer, then became one of the first members of the
    budding PM team. Back then, there were a couple dozen engineers, a few designers,
    and two very cute dogs. Over the next seven years, as the company scaled to thousands
    of global employees, countless cute dogs, and over $30 billion in value, I took
    on a lot of interesting problems and worked with many incredible people. Since
    leaving a few weeks ago, I’ve been jotting down my biggest lessons from these
    experiences. I’ve <a href="https://twitter.com/kylemeyer/status/566366186389004288?s=21">realized</a>
    I should share these lessons with anyone else working to build a company. I can’t
    promise they will all apply to your situation, but they have been core to Airbnb’s
    success.</p><h2>Create strong culture, values, and rituals</h2><p>It’s increasingly
    common for people to choose companies that connect with their personal values,
    both as consumers and employees. From day one, Airbnb has been a company obsessed
    with strong culture, clear values, and quirky rituals. Over the years, I’ve witnessed
    how effective this has been in creating a competitive advantage, allowing the
    company to hire <a href="https://www.cnbc.com/2018/03/06/greg-greeley-former-amazon-prime-vp-moves-to-airbnb-homes.html">the</a>
    <a href="https://hbr.org/2017/04/i-joined-airbnb-at-52-and-heres-what-i-learned-about-age-wisdom-and-the-tech-industry">best</a>
    <a href="https://press.airbnb.com/fred-reid-joins-airbnb-as-global-head-of-transportation/">talent</a>,
    move quickly when <a href="https://www.nytimes.com/2017/02/05/technology/airbnb-super-bowl-ad-trump-travel-ban.html">opportunities</a>
    arise, and push through <a href="https://techcrunch.com/2011/08/01/airbnb-offers-unconditional-apology-and-50000-insurance-guarantee/">adversity</a>.
    Most importantly, it has made it easy for leaders to stay true to the long-term
    mission and for the team to hold them accountable.</p><p>How did Airbnb create
    a strong culture? Three key ingredients:</p><ul><li><p><strong>Founders obsessed
    with culture.</strong> <a href="https://medium.com/@bchesky/dont-fuck-up-the-culture-597cde9ee9d4">See
    Exhibit A</a> and <a href="https://www.youtube.com/watch?v=RfWgVWGEuGE">Exhibit
    B</a>. This is fundamental, especially as you scale. It influences who your first
    few hires are (who cocreate the culture) and the values you model (knowingly or
    unknowingly).</p></li><li><p><strong>A strong sense of self.</strong> Airbnb did
    this through a codified set of core values created by a small task force about
    three years in. Airbnb uses these core values when measuring success (are we achieving
    our mission?), hiring (a core values interview group vets all candidates), evaluating
    performance (it’s baked into the peer-review process), and looking at large deals.
    Everyone at the company can recount the values verbatim.</p></li><li><p><strong>Rituals.</strong>
    Cookie time Tuesdays. New hire tea time. Hosted bar. Human tunnels. Fun facts.
    Silly but regular rituals create space for employees to strengthen bonds and bring
    joy to the workplace. Don’t overthink your rituals; experiment and see what sticks.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/4896/1*m89NJ7V0I2WeM79Wt7iGyw.jpeg" alt="Two
    early Airbnb rituals combined — Formal Friday and the human tunnel"><em>Two early
    Airbnb rituals combined — Formal Friday and the human tunnel</em></p><p>Here’s
    an <a href="https://www.youtube.com/watch?v=RfWgVWGEuGE">excellent video</a> to
    help you get started in building your own culture and values.</p><p><strong>Main
    takeaway:</strong> Be obsessed with your company (and team) culture.</p><h2>Nail
    the problem statement</h2><p>Crafting and aligning on a problem statement is the
    single most important step in solving any problem. I’ve consistently seen simple
    projects with vague problem statements go in circles for weeks and months, while
    complex projects with strong problem statements sail smoothly.</p><p>A few key
    tools that I’ve found helpful:</p><ul><li><p>This <a href="https://docs.google.com/document/d/1541V32QgSwyCFWxtiMIThn-6n-2s7fVWztEWVa970uo/edit">one-pager
    template</a> is something I’ve refined over the years to crystallize the problem
    and opportunity for my team and stakeholders.</p></li><li><p>The situation-complication-resolution
    <a href="https://speakingsherpa.com/how-to-tell-a-business-story-using-the-mckinsey-situation-complication-resolution-scr-framework/">framework</a>
    is extremely helpful in communicating the story to a wider audience.</p></li><li><p>The
    jobs-to-be-done <a href="https://jtbd.info/2-what-is-jobs-to-be-done-jtbd-796b82081cca">framework</a>
    helps ensure you’re addressing real customer needs.</p></li></ul><p><strong>Main
    takeaway:</strong> Obsess over crystallizing the problem you are trying to solve
    and align your entire team behind it.</p><h2>Set wildly ambitious goals</h2><p>At
    the end of each year, we were often shocked at how close we came to hitting our
    wildly ambitious, seemingly impossible goals. And when I say wildly ambitious,
    I’m making an understatement — Brian, Airbnb’s CEO, is (in)famous for doubling
    our proposed goals, and often pushing us to 10 times the goal. This ambitious
    approach has pushed teams to think bigger and rise to the occasion.</p><p>Five
    key ingredients to doing this well:</p><ul><li><p><strong>Set uncomfortable goals.</strong>
    Our approach was to pick a goal that made us uncomfortable, while also clearly
    understanding why hitting it would be incredible for the business. Two questions
    we asked were 1) What would need to be true for us to hit this goal? and 2) What
    could we accomplish without barriers (budget, people, dependencies, etc.)?</p></li><li><p><strong>Make
    sure someone is directly accountable.</strong> Hitting this goal needs to be an
    individual person’s job. If a number doesn’t have a person’s name next to it,
    it’s not going to happen.</p></li><li><p><strong>Think long-term.</strong> We
    generally looked ahead five to 10 years in order determine that year’s goal, both
    in terms of growth and our mission. Though we didn’t always nail it, we’ve increasingly
    put a lot of thought into the impact our work has on the many stakeholders we
    serve, which was recently crystallized by Brian in an <a href="https://press.airbnb.com/brian-cheskys-open-letter-to-the-airbnb-community-about-building-a-21st-century-company/">open
    letter</a>.</p></li><li><p><strong>Give a cross-functional team ownership of how
    to achieve the goal.</strong> Your number-one job as a leader is to assemble the
    right team, point team members in the right direction, and stay vigilant in unblocking
    them.</p></li><li><p><strong>Celebrate success, don’t punish failure.</strong>
    Follow through on the original intent of the goal — it was meant to push you,
    not kill you. If you don’t hit the goal but get close, congratulate the team and
    move on to the next goal.</p></li></ul><p><strong>Main takeaway:</strong> When
    setting goals, think bigger.</p><h2>Start with the ideal and work backward</h2><p>A
    variation of Amazon’s <a href="https://www.quora.com/What-is-Amazons-approach-to-product-development-and-product-management?ref=http://www.product-frameworks.com/">working
    backward methodology</a> that I’ve seen work exceptionally well at Airbnb starts
    with envisioning the perfect user experience. A classic example was a project
    code-named Snow White. Inspired by the approach Disney took in developing the
    original <em>Snow White</em> film, the founders began looking at Airbnb not as
    just a website or a service, but as a story with a beginning, middle, and end.</p><p><em>Snow
    White</em> was one of the first films to use the technique of storyboards, and
    thus the team developed a set of storyboards of the ideal guest and host experience,
    identifying key emotional moments along that journey. These storyboards quickly
    became a key tool in identifying our biggest gaps and opportunities, and informed
    the early company strategy. You can read more <a href="https://techcrunch.com/2012/07/18/airbnb-brian-chesky-snow-white/">here</a>
    and <a href="https://www.fastcompany.com/3002813/how-snow-white-helped-airbnbs-mobile-mission">here</a>,
    and watch this <a href="https://www.youtube.com/watch?v=nT7Irq8YuSo">great video</a>
    of the team discussing the process.</p><p><img src="https://cdn-images-1.medium.com/max/8064/1*NPOyVupUp4yNzJeN7-BYNA.jpeg"
    alt="Host and Guest Snow White storyboards"><em>Host and Guest Snow White storyboards</em></p><p>A
    more recent example was when we wanted to make it easier for guests to book a
    home on Airbnb. The process at that point had many steps, including a waiting
    period while the host reviewed the request. Instead of spending months or years
    micro-optimizing individual parts of the funnel, we stepped back and explored
    what the ideal booking experience would look like.</p><p>In this case, it was
    unquestionably a guest being able to instantly book any home without having to
    wait. Initially, it seemed impossible to convince every host to allow guests to
    book without approval. (Only about 5% of bookings were instant at that time.)
    Nonetheless, it became clear that this was where our business needed to go long-term,
    so we put all of our team’s resources behind this bet. Over the course of a couple
    of years, we transformed the marketplace to where the vast majority of bookings
    are now instant.</p><p>A few key ingredients to this process:</p><ul><li><p><strong>Write
    or draw out what the ideal experience looks like, feels like.</strong> In our
    case, before diving into any short-term optimizing, we sketched out the ideal
    booking flow on paper and wrote a sample blog post to describe what we’d announce
    if this were to become real.</p></li><li><p>*<em>Create a framework. *</em>To
    make the problem more tractable, break it down into manageable chunks. In the
    case of instant book, the biggest gap was giving our hosts more control over who
    could book their home instantly. We broke that gap into two types of problems:
    “can” problems (am I able to use it?) and “want” problems (do I want to use it?),
    then worked through them in priority order.</p></li><li><p>*<em>When it feels
    uncomfortable, get more data. *</em>A change this significant is often scary for
    your colleagues or users. Before you give up, look at actual data. Validate your
    assumptions through a quick experiment, user research, or historical data. As
    one data point, many people internally and externally assumed a trip booked instantly
    would lead to a lower-quality experience (less communication, more transactional),
    hurting long-term growth. A quick data dive showed otherwise, and that, along
    with a few other key data points, cleared the path for internal buy-in.</p></li></ul><p><strong>Main
    takeaway:</strong> Look for opportunities to make a step-function change by imagining
    the ideal state and working backward from that.</p><h2>Think of your org design
    as a product</h2><p>As you move up the ranks of leadership at a product org, you
    quickly learn the most important product to get right is how you organize your
    people. How you structure your org can be a force multiplier or a hindrance to
    achieving your mission.</p><p>There are a number of key ingredients to successful
    org design:</p><ul><li><p><strong>Optimize for dedicated cross-functional teams
    with a clear mandate.</strong> In my experience, this is the single most impactful
    thing leaders can do when setting up a team. You want self-contained teams that
    can move autonomously toward an agreed-upon goal. Any missing resource (designer,
    DS, budget), additional cross-team dependency, or conflicting surface area cuts
    the team’s impact immensely. (This is often invisible until later.) Minimize the
    number of times a team will need to meet with or wait for another team. Well-functioning
    teams feel like a black box that outputs regular updates and amazing work.</p></li><li><p><strong>Get
    the goals right.</strong> A lot has been said about goals (for example, <a href="https://www.mindtools.com/pages/article/smart-goals.htm">SMART
    goals</a> and <a href="https://www.ted.com/talks/john_doerr_why_the_secret_to_success_is_setting_the_right_goals?language=en">OKRs</a>),
    but I think teams still underestimate the power of getting goals right. Setting
    the right goal can be the difference between incredible progress and unending
    churn. Goals should 1) be limited in number — ideally just one or two, 2) have
    quick feedback loops that allow you to see impact immediately, 3) be directly
    connected to top-line business growth, 4) be easily understood, and 5) be uncomfortable.</p></li><li><p><strong>Be
    aware that there is no perfect org design.</strong> At Airbnb, I went through
    almost a dozen reorgs. I’ve never seen a single org plan that addressed every
    issue and made everyone happy. Make sure you’re addressing the biggest pain points,
    future-proofing it as much as you can, and then move forward. The plan will have
    flaws, like overlapping product ownership, two teams with the same key metric,
    or a team owning far too much. Note the flaws and put systems in place to work
    around them. Set expectations that the org will change again in the future.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/8064/1*WOmPifxdhd7W-uw0eSbkoQ.jpeg" alt="“Use
    Your Voice”, by [Shantell Martin](https://shantellmartin.art/), drawn free-hand
    over the course of a day at Airbnb HQ"><em>“Use Your Voice”, by <a href="https://shantellmartin.art/">Shantell
    Martin</a>, drawn free-hand over the course of a day at Airbnb HQ</em></p><p><strong>Main
    takeaway:</strong> Build autonomous units with well-defined goals and get out
    of the way.</p><h2>Maintain a high bar for everything</h2><p>Coming from the startup
    world, I was accustomed to moving quickly, settling for good enough, and thinking
    short-term. There was always too much to do and too little time. Who knew if the
    company would even be around in a year? An early manager at Airbnb instilled in
    me the power of keeping a high bar for my work. Looking back, this one change
    has profoundly impacted my career.</p><p>How to keep the bar high for yourself
    and the team around you:</p><ul><li><p><strong>Emails.</strong> Force yourself
    to look at your email at least once before sending it. There’s always something
    you can cut or clarify. <a href="https://hbr.org/2016/11/how-to-write-email-with-military-precision">Here’s</a>
    a style I love, courtesy of the military.</p></li><li><p><strong>Shared docs.</strong>
    Always ask for feedback from at least one person before sharing a doc widely.
    Focus on clean and consistent formatting. Close out comments before sharing with
    execs. Make it easy to scan. Keep pushing yourself to learn to write better.</p></li><li><p><strong>Meetings.</strong>
    Include the primary goal of the meeting in your invite, ideally along with an
    agenda. If you attend a meeting that doesn’t feel productive, call it out. Invite
    as few people as possible. Leave with clear action items. Follow up over email
    with the action items and owners.</p></li><li><p><strong>Presentations.</strong>
    Are you sure you need to do a presentation versus an email? Make sure your audience
    knows the goal of the presentation — are you looking for a decision or general
    feedback, or purely sharing information? It’s not as obvious as you think. Get
    feedback on your presentation; fresh eyes always catch the glaring issues. And
    keep it short — no one has ever wished that presentation went longer.</p></li><li><p><strong>Hiring.</strong>
    The people you bring in determine the company you become. My advice is to only
    hire people you feel “hell yes” about. If it’s a maybe, it’s a no. More on this
    advice <a href="https://sivers.org/hellyeah">here</a>.</p></li></ul><p><strong>Main
    takeaway:</strong> Ask yourself and your team these questions often: How could
    we go just a bit bolder? What would it take to make this slightly better? How
    do we make this meeting a little more productive? How do I make this doc or email
    a bit crisper? Could I set the bar a little higher?</p><h2>Keep your teams focused</h2><p>When
    I took over the supply growth team at Airbnb, I found a small team spread across
    a long funnel. They were seeing wins, but were unable to build real momentum.
    I’d seen the same thing when I took over a team responsible for improving trip
    quality. In both cases, reducing the problem space and providing a more focused
    mandate resulted in gains in impact and morale. Aim for teams to have a focused
    problem to rally around and obsess about.</p><p>In the case of supply growth,
    our solution was to first divide the team into focused units (a team driving referrals,
    a team owning top-of-funnel organic growth, a team owning performance marketing,
    etc.), and then grow each team with resources appropriate to that problem space.
    In the case of trip quality, we dedicated a quarter at a time to a specific aspect
    of quality (host response rate, guest review rate, etc.). Once we found large
    opportunity, we doubled down in the subsequent quarter.</p><p>If you apply this
    lesson to your product, allowing users to focus on the task at hand is one of
    the most powerful tools in increasing the number of successful user experiences.
    Some of the biggest guest conversion gains I saw at Airbnb came from simple tweaks
    that gave users fewer things to think about — things like opening listings in
    new tabs (avoids getting lost while exploring), extending session length (you
    don’t need to log in as often), and removing links within the payments flow (avoids
    distractions). We saw the same thing on the host side, from always having a “recommended”
    tag when presenting a set of options, to defaulting settings based on host persona,
    to adding inline tips so users don’t bounce. Don’t underestimate the power of
    focus.</p><p><strong>Main takeaway:</strong> Focus. Focus. Focus.</p><p>Thinking
    back to what Joe suggested to that one designer many years ago, Airbnb truly has
    built something the internet has never seen before. It’s been an incredible experience
    watching the company grow and evolve through the years. I feel grateful for the
    opportunity to have been a part of that ride for so long and to have worked with
    the brilliant, kind, and driven people who walk the halls of Airbnb every day.</p><h2>Takeaways</h2><ul><li><p>Be
    obsessed with your company (and team) culture.</p></li><li><p>Crystallize the
    problem you want to solve and align your team behind it.</p></li><li><p>When setting
    goals, think bigger.</p></li><li><p>Make step-function change by imagining the
    ideal and working backward.</p></li><li><p>Build autonomous units with well-defined
    goals and get out of the way.</p></li><li><p>Ask: Can I be bolder, better, more
    productive? Can I set the bar higher?</p></li><li><p>Focus. Focus. Focus.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/8064/1*zTsaM3KYEEBlNBfK76q5dA.jpeg" alt=""></p><p>For
    more writing like this, <a href="https://lenny.substack.com">subscribe to my newsletter</a>.
    You can also follow me on Twitter <a href="https://twitter.com/lennysan">@lennysan</a>.</p><p><em>A
    big thank you to Vanessa, Ann, Brett, and Yelena for reviewing early drafts of
    this post.</em></p>'
  :author: Remote Work Is Killing the Hidden Trillion-Dollar Office Economy
  :topic: business
- :url: https://medium.com/@garyvee/why-nothing-scares-me-in-business-53a7cf3f8912?source=search_post---------4
  :title: Why Nothing Scares Me In Business
  :content: <h2>I’m going to tell you why I lack fear in business.</h2><p><em>It’s
    because I fear something so much.</em></p><p>I fear the health and well-being
    of my family so much, and I mean I’m crippled by it. Hence, why, when you’re a
    grown-ass man and you get up during a vacation and go to some weird corner and
    pray for your mom to wake up. You know? This really happens to me.</p><p>I am
    so fearful of the health and well-being of the 10 to 15 people closest to me in
    my life. It is disproportionately the most important thing in the world to me
    that it just makes everything else so easy.</p><p>The thought of losing all of
    my money is often so weirdly exciting because I know I have the talent to rise
    back up. Money doesn’t mean anything to me. I want legacy, influence, and impact.</p><p>I
    thought that would go away when I had kids, and it has to some degree, but not
    really. I think that’s how it plays out in other people’s lives right? You’re
    scared to die? Scared to lose, scared to try? Not me.</p><p>That’s why I’m so
    in tune with my feelings. I’m all in. I dream of buying the Jets or having somebody
    say, “This is it. This was the guy. He was the best entrepreneur of this generation.”
    Then I think about that title being anointed upon me and then immediately getting
    a phone call and hearing that my mom died in a car accident. None of it would
    matter.</p><p>I would be devastated. Then I see how I feel and since I feel awful,
    well then why in the world would I get caught up in the money or the business?
    You only have one life. I live mine in the moment. I care deeply about every human
    interaction I have. In those meetings, I’m not thinking about business, or money,
    or success. I’m thinking about life. About what really matters. About the individual
    standing right in front of me.</p><p>There’s definitely personal vulnerabilities
    that I have that I’m aware of, but boy, I am super not scared when it comes to
    business. I’ve been doing it my whole life. I’ve always been good at it. There
    is no reason to fear money or a meeting or a deal. Why does it matter? You can’t
    sell the unsellable. You can’t change the way the other person treats you in the
    moment. You can’t change their perception, or circumstance or what they had for
    breakfast that morning that has put them in a bad mood. So why let it bother you?
    You have to deploy understanding, empathy and compassion. You have to be you,
    and not be afraid to fail.</p><p>Maybe it’s my DNA, but I also think it’s a learned
    behavior. I’ve seen it happen with those around me and I’ve watched them grow.
    My assistant <a href="https://www.instagram.com/tyler/">@tyler</a> has become
    an absolute monster when it comes to his confidence. After having him work at
    Vayner for year and a half, he’s now shaking hands and doing deals with the biggest
    names in business. It just takes time. Confidence builds and reality set in. You
    lose your fear of not doing, not trying, not caring what other people think.</p><p>You
    become free, and then the fun really begins to start.</p><blockquote><h1><a href="http://ctt.ec/0i0n8">*Once
    you find perspective, anything is possible.</a> — Tweet This!*</h1></blockquote><p>Hope
    this helps!</p><p>Go follow <a href="https://www.instagram.com/tyler/">@tyler
    on Instagram</a> — I am trying to freak him out!! ;)</p><h3>Say Hello On:</h3><h2><a
    href="https://www.instagram.com/garyvee">Instagram</a> | <a href="https://twitter.com/garyvee">Twitter</a>
    | <a href="https://www.facebook.com/gary">Facebook</a> | <a href="https://www.snapchat.com/add/garyvee">Snapchat</a>
    | <a href="https://itunes.apple.com/us/podcast/the-garyvee-audio-experience/id928159684?mt=2">iTunes</a></h2><h3>Subscribe
    to my Newsletter <a href="https://www.garyvaynerchuk.com/popup/hustlers-digest">HERE</a></h3><h2>This
    article was powered by <a href="http://medium.com/life-of-thought">Colin Campbell</a></h2>
  :author: Gary Vaynerchuk
  :topic: business
- :url: https://blog.usejournal.com/why-trello-failed-to-build-a-1-billion-business-e1579511d5dc?source=search_post---------5
  :title: Why Trello Failed to Build a $1 Billion+ Business
  :content: "<p>In 2011, Joel Spolsky launched his company Fog Creek’s new product
    at TechCrunch Disrupt called Trello. It looked a lot like a whiteboard with sticky
    notes translated into a web browser and an iPhone App. Instead of physically moving
    a sticky note on a whiteboard, you could drag and drop cards on a board from your
    web browser.</p><p>Within days, Trello succeeded in getting 131,000 eyeballs.
    <a href=\"https://www.joelonsoftware.com/2011/09/15/should-you-launch-at-a-conference/\">22%
    of them signed up</a>. The vision for Trello was to create a wide product that
    was so simple and useful, just about anyone could use it. It caught on like wildfire.</p><p>It’s
    also** **why Trello ultimately had to sell to Atlassian for $425 million when
    it could have become the next $1 billion SaaS application.</p><p>In a <a href=\"https://www.joelonsoftware.com/2012/01/06/how-trello-is-different/\">blog
    post</a> Spolsky wrote a couple months after launch, Joel presciently touched
    on the biggest challenge ahead:</p><p><em>“Making a major horizontal product that’s
    useful in any walk of life is almost impossible to pull off. You can’t charge
    very much, because you’re competing with other horizontal products that can amortize
    their development costs across a huge number of users. It’s high risk, high reward.”</em></p><p>Trello
    was successful building this horizontal product, achieving rapid growth to tens
    of millions of users and an acquisition of hundreds of millions of dollars. However,
    the one thing Trello didn’t do a good job of was keeping track of its paying customers.</p><p>Trello
    was so focused on building its free customer base first and monetizing later;
    by the time it looked to its paid subscribers, it was too late — they’d already
    moved on. While that makes Trello a perfect complement to Atlassian’s suite of
    enterprise productivity tools, it hampered the company from growing further on
    its own.</p><p>Let’s talk about the opportunity that Trello missed, and what it
    could have done <em>instead.</em></p><h2>Why Trello Had to Sell</h2><p>Trello
    is organized around a “kanban board” concept. Kanban was a system for lean manufacturing
    that Toyota popularized in the 1940s. The basic idea was that each “card” represented
    a product, part, or inventory. When a card moved around a board, it meant that
    something had been physically moved from a supplier to a factory.</p><p>In practice,
    it looks like this:</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*k6-Lxz-oyiAPvMSr.jpg\"
    alt=\"\"></p><p>When Trello first started out, it was really technically challenging
    to create a board in a web browser where you could collaboratively drag and drop
    cards into lists. A lot of other SaaS tools at the time were big databases with
    a visual interface built on top (think: Salesforce). This basically created an
    architecture where you structured data in terms of leads, customers, or tasks.</p><p>Trello
    came at this from the opposite direction. The product vision was to strip everything
    down and build around the visual idea of cards on boards. To get this to work,
    Trello implemented a <a href=\"https://blog.fogcreek.com/the-trello-tech-stack/\">bleeding-edge
    stack</a>. The single page web app basically worked as a shell that pulled all
    of the data from the servers in less than half a second, at under 250 kilobytes.
    After a user visited for the first time, they then cached the page so Trello would
    load even faster.</p><p>They built their servers on top of Node and used MongoDB
    to store data so that the web app would load really fast. Everytime a user dragged
    a card to a new list, or changed the entry on a board, Trello pushed this data
    to every other browser with the board open almost instantly.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*_tAbSWB5GytzdBb0.jpg\"
    alt=\"Trello Architecture\"><em>Trello Architecture</em></p><p>The result was
    breathtakingly simple. You made a change to a board by dragging and dropping a
    card, and that change was reflected everywhere else in the world.</p><p><img src=\"https://cdn-images-1.medium.com/max/3798/0*uYk_h6nhYUp0-Lev.jpg\"
    alt=\"\"></p><p>All of this stuff was new at the time, and gave Trello a lot of
    runway. But by 2016, it wasn’t as hard to a build beautiful and responsive web
    app like Trello, and you started seeing Kanban boards everywhere:</p><ul><li><strong>GitHub
    builds Kanban boards in September 2016:</strong></li></ul><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*-RY8d2clqWUre8eo.gif\"
    alt=\"\"></p><ul><li><strong>Asana announces Kanban Boards in November 2016:</strong></li></ul><p><img
    src=\"https://cdn-images-1.medium.com/max/4000/0*5mswG7sgaEtgyUai.png\" alt=\"\"></p><ul><li><strong>Airtable
    Launches Kanban Boards in November 2016:</strong></li></ul><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*gsoLIttuUOjSCDrf.gif\"
    alt=\"\"></p><p>Justin Rosenstein, co-founder of Asana — one of Trello’s biggest
    competitors — said, “We definitely give Trello full credit. That is clearly the
    product that has done a good job pioneering this view.” But Justin was equally
    unapologetic about copy-catting Trello’s board feature: “We see Trello as a feature,
    not a product.”</p><p>Trello might have become a $1B+ business if it looked like
    a “system of record” application — the single-source of truth for a company. Imagine
    if you could use Trello not just to track your marketing funnel, but to move information
    from your marketing board to your sales pipeline and product roadmap. Instead
    of having a separate Trello board for each team, you’d have a big board for the
    entire company.</p><p>Trello never became this “system of record.” It was a strong
    visual metaphor that the competition ultimately copied. The Kanban board turned
    out to be a really cool UX feature, but not a difficult one to replicate.</p><p>In
    SaaS, you don’t win by getting there first or having the best idea. You win by
    continually solving the problem better. When you build a feature that’s extremely
    popular or successful, the competition will steal it.</p><p>Trello could have
    doubled down on upselling individual consumers to paid plans. They could have
    focused on building features for SMB customers. Or they could have expanded into
    the enterprise faster. Any one of these things would have led to a $1B+ valuation.
    Let’s talk about what Trello could have done with each path, starting with its
    consumer plan.</p><h2>#1) Trello Didn’t Monetize Free Fast Enough</h2><p><img
    src=\"https://cdn-images-1.medium.com/max/2114/0*B9sV9Hl9oVX54XTO.png\" alt=\"Chart
    of Trello’s user growth based on publicly available data.\"><em>Chart of Trello’s
    user growth based on publicly available data.</em></p><p>It’s possible to build
    a $1B+ company with a freemium business model targeted toward consumers. In 2013,
    Dropbox was <a href=\"https://techcrunch.com/2013/11/19/if-dropboxs-2013-revenue-is-200m-an-8b-valuation-is-pretty-steep/\">valued
    at $8B on $200M in revenue</a> with <a href=\"https://techcrunch.com/2013/11/13/dropbox-hits-200-million-users-and-announces-new-products-for-businesses/\">200M
    users</a> six years after launch. This was before Dropbox had even launched a
    business plan — the company’s revenue primarily came from upselling free users
    to a $10/month plan.</p><p>Three years after launch, Trello’s growth in users
    looked on track to explode past Dropbox’s levels, at <a href=\"http://venturebeat.com/2015/09/15/trello-hits-10m-users-adds-evernote-github-salesforce-slack-integrations-in-business-class/\">10
    million in 2015</a> (Dropbox had <a href=\"https://techcrunch.com/2010/01/20/dropbox-4-million-user/\">four
    million three years after launch</a>). But Trello had a much harder time upselling
    free customers to its paid “Trello Gold” plan.</p><p>The <a href=\"http://blog.trello.com/introducing-trello-gold-board-backgrounds-stickers-and-more\">2013
    blog post </a>that announced the launch of Trello Gold highlighted three main
    reasons users should pay $5/month for Trello:</p><ul><li><p>Customizable board
    backgrounds</p></li><li><p>250-megabyte attachments for each card in Trello (vs.
    10 megabytes on the free plan)</p></li><li><p>Stickers and custom emoji</p></li></ul><p>While
    everyone likes emojis, it’s not a good enough reason to spend money on software.
    Dropbox’s free plan gives away 2 GB of space. Its paid plan delivers 1TB of space
    — 50x what users get for free.</p><p>Trello’s value proposition is harder to locate
    than Dropbox, which is exactly why Trello should have figured out early what features
    individual consumers were willing to pay for.</p><h2>Solution: Dig Into the Freemium
    Use-Cases</h2><p>Instead, Trello focused on building a freemium, horizontal product
    that everyone could use, and chose to figure out monetization later.</p><p>Instead
    of focusing on building a wide product for everyone, Trello should have dug deeper
    into its use cases in the beginning to figure out why people were signing up,
    what they were using the product for, and what people found so valuable that they’d
    be willing to pay to use Trello.</p><p>If you have a broad product with a lot
    of applications, dive into all of the different use cases first:</p><ul><li><p>Is
    there a competitor that’s able to do this — or is already doing it today?</p></li><li><p>What’s
    the revenue potential for people using this use case?</p></li></ul><p>By doing
    research around <a href=\"https://producthabits.com/dont-build-your-product-without-knowing-your-customers-first/\">your
    customer base and your competitor’s customers</a>, you can segment out the use
    cases with the highest lifetime value.</p><p>Let’s say Trello found out that of
    its freemium user base, lawyers, real estate agents, and <a href=\"https://medium.com/did-you-know-the-journal-blog/almost-every-product-design-resource-you-need-to-understand-the-tech-ecosystem-3d734f9c1a22\">designers
    </a>had the highest revenue potential. They might have learned that while designers
    want access to a calendar in their Trello boards, lawyers want read-only boards
    that they can share with clients.</p><p>These were features that Trello already
    included in its business plan, but didn’t emphasize in its marketing because they
    wanted to keep a wide focus. Instead, Trello could have created a separate landing
    page to re-target free customers and upsell them to a paid plan according to their
    specific use cases.</p><p>When you have a wide product, it’s especially important
    to dig into the individual use cases for your product, because it allows you to
    build specialized features according to those verticals. If you don’t want to
    build your business off of a freemium consumer product, you have options — you
    can move up the ladder and build around SMBs.</p><h2>#2) Trello’s Product Wasn’t
    Sticky Enough for SMBs</h2><p>Even without a really valuable consumer business,
    Trello still could have become the default workflow tool in SaaS by doubling-down
    on the SMB market. The problem was that Trello didn’t always make itself central
    enough to a company’s workflow to justify paying for it by the seat.</p><p>The
    first paid plan that Trello launched was its <a href=\"https://blog.trello.com/introducing-business-class\">Business
    Class</a> for small-to-medium sized businesses in 2013. They charged a flat rate
    price of $200/year per organization before moving to a more traditional per-seat
    SaaS pricing model.</p><p>Trello Business Class costs $10 per user/month (billed
    annually) and you get:</p><ul><li><p>Unlimited integrations across boards</p></li><li><p>Additional
    collaboration features</p></li><li><p>Read-only views and privacy settings</p></li></ul><p>When
    David Cancel, co-founder of Drift, put the company’s <a href=\"http://blog.drift.com/how-to-price-your-product\">annual
    Trello bill on a slide</a> — $1,700 — the entire team at Drift was shocked. As
    David says, “There are only a couple of people using [Trello] day-in, day-out.
    Meanwhile, however, we were being charged based on the number of people that we
    had in the paid plan. So clearly there was a disconnect between the price we were
    paying and the value we were getting.”</p><p>David downgraded his team from the
    paid plan to the free plan.</p><p>In a <a href=\"http://www.forbes.com/sites/alexkonrad/2016/05/23/trello-get-serious-about-big-businesses-as-it-passes-1-1-million-daily-users-and-triples-sales/\">Forbes
    article</a> Trello CEO Michael Pryor said: “I don’t want people to spend 10 hours
    in Trello every day, we don’t sell ads so we don’t do better engaging more of
    your time like a social media platform.”</p><p>That’s okay. When you’re charging
    SMBs by the seat, you don’t *have *to optimize your product around getting users
    to log in more. But you have to find some other way to demonstrate the value of
    paying for your product across the company.</p><p>So, what should Trello have
    done instead?</p><h2>Solution: Build Out Better Integrations for SMBs</h2><p>Trello
    could have created a stickier business product by making sure that it was so deeply
    integrated with other tools, teams couldn’t rip it out.</p><p>Imagine the ability
    to open and close GitHub issues inside of Trello. Imagine if all of your Salesforce
    leads automatically opened and closed on a Trello board based on what you did
    inside of Salesforce. Trello would have become the dashboard for all of the other
    tools a company used — something that would have been insanely valuable.</p><p>Instead,
    Trello’s main features were copy-catted. When asked about <a href=\"http://venturebeat.com/2016/09/14/github-launches-a-trello-competitor-pull-request-reviews-redesigned-profile-pages/\">building
    out boards for visually managing issues</a>, GitHub’s VP of Product Engineering
    explained that: “Everyone was expecting it to be there and asking questions about
    why we didn’t have it.” So GitHub built boards.</p><p>If you’re building a horizontal
    SaaS app like Trello, segment your users by integration:</p><ul><li><p>What API
    integrations are people using?</p></li><li><p>How much data is coming into the
    product and how much is going out?</p></li></ul><p>That gives a valuable lens
    into another type of use case for your product. If a lot of data is pouring from
    your product to a different one, it’s a sign that the competition is heating up.
    By building out better integrations and new product features, you can pre-empt
    the competition from stepping on your turf.</p><p>The SaaS SMB market is hyper-competitive,
    and it’s easier than ever before for businesses to switch from one solution to
    another. You either have to outmaneuver the competition, or build staying power
    by moving upmarket to the enterprise.</p><h2>#3) Trello Didn’t Build for the Enterprise</h2><p>Moving
    upstream and <a href=\"https://www.enterpriseready.io/\">targeting the enterprise
    market</a> is a proven model for SaaS. Slack is doing it with the launch of its
    Enterprise Grid. Trello could have built a $1B+ business by doing the same: moving
    into the enterprise market faster.</p><p>Less than a year after Trello launched
    its enterprise sales strategy in 2015, the company hit a milestone of $10 million
    in ARR. <a href=\"https://blog.heresy.io/an-interview-with-trellos-vp-sales-kristen-habacht-1d477d74945f\">In
    an interview</a>, Trello’s VP of Sales, Kristen Habacht writes that Trello follows
    a pretty basic land-and-expand enterprise sales strategy:</p><p><em>“For our enterprise
    team we’ll look at [customers] who have really high Trello user counts. A lot
    of our outbound sales strategy is just reaching out to those accounts and saying,
    “Hey you have 2,000+ people on Trello, who can we talk to about that?”</em></p><p>$10
    million in ARR isn’t anything to sneeze at. The problem with Trello’s enterprise
    sales strategy is that it was *only *built on top of the reality that people in
    a company were already using Trello. A company’s sales, marketing, and product
    teams might each use a bunch of different Trello boards. But what’s harder is
    organizing the entire company around Trello.</p><h2>Solution: Become the System
    of Record for the Enterprise</h2><p>The question that Trello should have been
    asking itself is, “How do we integrate with higher-end systems that larger companies
    are using and make ourselves indispensable to companies by becoming a core part
    of their workflow?”</p><p>One way to do it is to take the Slack strategy. As Slack
    grew, the company was razor-focused on how it spread from individuals, to teams,
    to entire companies — catching like wildfire.</p><p>The big challenge that Slack
    found is that unlike a sales CRM or a marketing analytics tool, almost everyone
    on a small team has veto power over a productivity tool. So, Slack spent six months
    in private beta observing their customer base and educating them around the need
    for an internal communication tool in the first place. They optimized their onboarding
    flow around a <a href=\"http://firstround.com/review/From-0-to-1B-Slacks-Founder-Shares-Their-Epic-Launch-Strategy/\">north
    star metric of 2,000 messages sent</a> within an organization. Today, 93% of those
    companies are still using Slack.</p><p>The <a href=\"https://stratechery.com/2017/slack-launches-slack-grid-an-interview-with-stewart-butterfield/\">vision
    behind Slack’s enterprise product</a> is that it allows organizations to “create
    more or less any kind of structure” with Slack. Functionally, Slack is a different
    product for the Enterprise. Teams within a company can organize themselves into
    “workspaces” and form divisions according to their organizational structure. Because
    Slack was so focused on figuring out how and why its product spread from small
    teams, to departments, to larger organizations, it was able to pinpoint key problems
    for the enterprise and solve them with the <a href=\"https://slackhq.com/introducing-slack-enterprise-grid-ccb343380fbb\">Enterprise
    Grid</a>.</p><p>Large enterprise companies love flexibility and configurability.
    Like Slack, Trello could have carved out a seat at the enterprise table by allowing
    large companies to configure Trello to their organizational charts. Trello’s advantage
    is that it’s already an extremely versatile and easy-to-use product. By providing
    companies structure between departments, Trello might have worked as the connective
    tissue holding a company together.</p><h2>Congratulations, Trello</h2><p>Hindsight,
    of course, is 20/20. While I’ve spent most of this post talking about Trello’s
    missed opportunity, we shouldn’t forget that building a SaaS business that’s worth
    over $10M, let alone one that’s worth $425M, is a huge accomplishment.</p><p>Trello
    and the team at Fog Creek paid for Trello out of pocket. Trello has been a huge
    success since the moment Joel launched it at TechCrunch Disrupt. The team grew
    it to 500,000 users within two years, and 4.75M users within four years — before
    raising any money. They built an amazing product that was way ahead of its time.
    It was simple, elegant, and easy-to-use.</p><p>Last year, I tweeted:</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2524/0*N5JzRScOBDbkJ9k9.png\" alt=\"\"></p><p>That’s
    the impact that Trello has had on SaaS, and you see it everywhere, from GitHub
    to Jira.</p><p>But if you wan’t to build the next $1B+ SaaS app, you have to remember
    to constantly evolve on top of your product. Don’t build around any one single
    feature that the competition can rip out. Alternatively, make that one single
    feature so deeply integrated into everyone else’s product that it’s pointless
    for anyone else to copycat it.</p><p>Above all, you need to go deep into understanding
    who your customers are early on, because that’s how you’ll know what to implement
    into your product and where to take it next. Doing the research and the hard work
    is the only way to keep your product relevant in the market.</p><iframe src=\"https://medium.com/media/98ca70367288057a041f4d641ba4ed35\"
    frameborder=0></iframe><p><img src=\"https://cdn-images-1.medium.com/max/4000/1*f2IVAl0TbsfES9cFGYr40g.png\"
    alt=\"\"></p><p>\U0001F4DD Read this story later in <a href=\"https://usejournal.com/?utm_source=medium.com&utm_medium=noteworthy_blog&utm_campaign=guest_post_read_later_text\">Journal</a>.</p><p>\U0001F5DE
    Wake up every Sunday morning to the week’s most noteworthy Tech stories, opinions,
    and news waiting in your inbox: <a href=\"https://usejournal.com/newsletter/?utm_source=medium.com&utm_medium=noteworthy_blog&utm_campaign=guest_post_text\">Get
    the noteworthy newsletter &gt;</a></p>"
  :author: Noteworthy
  :topic: business
- :url: https://medium.com/mind-cafe/the-10-most-in-demand-career-and-business-skills-for-2020-2ce4a9ca5d2e?source=search_post---------6
  :title: The 10 Most In-Demand Career and Business Skills for 2020
  :content: '<p>What it takes to succeed in a new decade.</p><p><img src="https://cdn-images-1.medium.com/max/9216/1*_XUakgeIJVs_dSrFXXGgOw.jpeg"
    alt=""></p><p>If you want to live a successful life in 2020 and beyond, you need
    to adopt a new set of skills.</p><p>Hell, you’ll need to learn these skills just
    to keep up.</p><p>Society is fragmenting into two parallel realities. In one reality,
    you have infinite upside and opportunity. In the other reality, you’ll continue
    to see the gap between your standard of living and those at the top grow more
    and more.</p><p>At this point, you don’t have much of a choice if you want to
    have a profitable and meaningful career or business.</p><p>You have to become
    a part of this new game we’re playing. You have to join the new economy and let
    go of old ways of thinking.</p><p>Most importantly, you can’t make excuses for
    yourself.</p><p>Are people getting lost in the shuffle of current times? Absolutely.
    Is it their fault? Not necessarily. It’s a deep and complicated issue.</p><p>Needless
    to say, once you know the truth, you have to put those insights into action. Well,
    you don’t have to do anything. Your choice.</p><p>Do you want to join the people
    on their way to the top or do you want to sit and watch all traditional forms
    of employment and upward mobility fade away right in front of your eyes?</p><p>If
    you’re still with me, here are the skills you need to thrive in today’s times
    and beyond.</p><h2>The Ability to Acquire the Currency of Today’s Times</h2><p>We
    live in an attention economy. Those with the most eyeballs on their work, projects,
    ideas, etc, tend to win. You need to learn how to attract attention because, without
    it, even a great idea can fall flat.</p><p>Notice I said to <em>attract</em> attention.</p><p>If
    you want to build an audience, start a movement, gain loyal customers, or even
    <a href="http://ayotheauthor.com/attract-amazing-people/">attract the right people
    into your life</a>, you’re better off gaining a following as a natural byproduct
    of the quality of your work plus the authentic personality needed to properly
    display the work.</p><p>We’re all flooded with people, products, and companies
    who are trying to get in our face and interrupt us — ads, propaganda in the media,
    and a slew of “influencers” who furiously create fluffy content to convince us
    to join their tribes.</p><p>To get attention the right way, just be so awesome
    that continuing to engage with you seems like the obvious thing to do. Of course,
    traditional marketing skills are necessary, but marketing works much better when
    it’s connected to quality and authenticity.</p><p>What does this mean for you?</p><p>Regardless
    of what you’re trying to accomplish, understand that ‘creating content’ is a concept
    that applies to almost anyone.</p><p>Display your knowledge, insights, personal
    experience to the world. You don’t even need to have a business in mind before
    you do this. You can do this as an employee who never plans to quit their job.</p><p>Start
    putting yourself out there, get the attention first, and you can figure out what
    do to with it later.</p><h3>Some examples are:</h3><ul><li><p><strong>Blogging</strong>
    — Even if you don’t want to become a writer, using a blog to share thoughts about
    your industry can attract customers, employers, investors, and people who want
    to be in your network</p></li><li><p><strong>Video</strong> — You can start putting
    video content online by simply turning your iPhone camera to your face and talking.
    Take an example like Tai Lopez. Love him or hate him, he started a 9 figure company
    <a href="https://www.youtube.com/watch?v=Cv1RJTHf5fk">using a video he shot with
    a phone</a>.</p></li><li><p><strong>Social Media</strong> — Here’s a great example
    of this. <a href="https://twitter.com/roncaruthers">Ron Caruthers</a> is a personal
    finance expert. He does these amazing <a href="https://twitter.com/roncaruthers/status/1161835328803524608">Twitter
    threads</a> breaking down complex topics in simple ways for “laypeople” to understand.
    He’s not trying to become a social media influencer, but his savvy use of social
    platforms helps him build his business.</p></li></ul><h2>The Skill That Helps
    You Become the Best in the World</h2><p>In one of the best self-help books I’ve
    ever read, <em>How to Fail at Almost Anything and Still Win Big</em> by Scott
    Adams, he talks about the concept of <em>skill stacking</em> to put yourself in
    a position to be one of the best in the world at what you do.</p><p>It’s hard
    to be the best in the world at <strong>one skill.</strong></p><p>But, if you learn
    how to combine skills in a unique way, you create a rare skill set. The rarer
    your skillset, the more ‘<a href="https://www.amazon.com/Good-They-Cant-Ignore-You/dp/1455509124">career
    capital</a>’ you have. Career capital gives you more freedom, helps you command
    higher rates, and gives you the upper hand because you’re harder to replace.</p><p>Scott
    Adams is the cartoonist behind <em>Dilbert.</em> Scott will tell you he’s a decent
    drawer, not the best. He’s funny, but not the funniest. His time spent in corporate
    culture gave him fodder for the strip as well as the business skills needed to
    promote himself. Combine these skills together, and you get a unique skill set
    that creates a unique comic strip.</p><p>Create your ‘talent stack’ to stand out.
    First, play games you can win. Focus on strengthening your natural talents and
    capabilities as a foundation first, then branch out to <a href="https://medium.com/@Chef_BoyarDEJI/t-shaped-knowledge-how-to-jump-to-the-top-10-percent-of-your-field-783a2027a080">building
    ancillary skills.</a> Doing this will help you <a href="https://medium.com/mind-cafe/7-productivity-superpowers-few-people-have-that-you-can-use-to-set-yourself-apart-25e81f03a771">multiply
    the effect of your effort.</a></p><h2>The Skill that Maximizes Your Time</h2><p>In
    a world where attention spans are shrinking, the ability to focus is at a premium.
    If you can learn to block out specific periods of time and enter a flow state
    while you work, you’ll become <em>the right kind of productive.</em></p><p>Working
    four hours per day on activities that move the needle, creates more output than
    a distracted 8 hour day.</p><p>If you focus, and focus hard, on doing the 20 percent
    of the work that creates 80 percent of the results, everything else will fall
    into place. Some say the 80/20 rule isn’t narrow enough — more like 95/5.</p><p>People
    ask me about my writing ‘tricks’ all the time. I have one trick. I’ve entered
    a flow state and used it to produce words almost every day for five years. That’s
    it. This one routine has led to all the positive outcomes I’ve had when it comes
    to <a href="https://medium.com/@Chef_BoyarDEJI/the-simple-secret-to-making-money-online-no-special-talented-required-845d11264b9f">making
    money online</a>.</p><p>The steps to success are straightforward but require focus
    and discipline. That’s it.</p><p>In your chase to ‘be productive’ coupled with
    your need to ‘know all the tricks’ you move further away from your goals.</p><p>The
    bar for discipline, focus, and the ability to follow directions is low. Exceed
    it and you’ll win.</p><p><img src="https://cdn-images-1.medium.com/max/6706/0*WR4DO2YduEmEJjKK"
    alt="Photo by [Kevin Ku](https://unsplash.com/@ikukevk?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@ikukevk?utm_source=medium&utm_medium=referral">Kevin
    Ku</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><h2>The
    Ability to Steer the Vehicle that Drives Your Life</h2><p>Emotional intelligence
    has grown in prominence over the years, but, again, people get too cute with the
    concept.</p><p>You don’t need to know your E.Q. score.</p><p>You don’t need to
    have this detailed profile of your personality.</p><p>True emotional intelligence
    simply means you know how to regulate your emotions in a way that<a href="https://medium.com/mind-cafe/how-to-permanently-stay-motivated-d24023454870">
    produces positive outcomes.</a> That’s it.</p><h3>Some examples are:</h3><ul><li><p><strong>Self-awareness</strong>
    — Most people can’t be honest with themselves. Their rationalizations and ego
    get in the way of their own success. If you know who you are — both your strengths
    and your limitations, you can stack the odds in your favor.</p></li><li><p><strong>Humility</strong>
    — Your ego tells you that you should be further along than you are, even though
    you haven’t done the work. Fear is actually a form of self-centeredness. You think
    you’re so important that the world cares if you fail. It doesn’t. Counterintuitively,
    true humility is the ability to live the life you deserve by putting your ego
    to the side and displaying your talents.</p></li><li><p><strong>Patience and stability</strong>
    — If you have the ability to execute on your ideas, without too many unnecessary
    ups and downs, you’ll get the results you want. The combination of certainty in
    your long-term goals and proactivity towards short-term actions combined with
    the ability to remain detached from short-term results gives you <a href="http://ayotheauthor.com/productivity-superpowers/">productivity
    superpowers</a>.</p></li></ul><h2>The Skill That Helps Keeps You From Getting
    Sidetracked.</h2><p>Staying positive and focusing on the upside the world has
    to offer sets you apart from the vast majority of society. Society is polluted
    with noise. From the ‘sky is falling’ narrative to the keeping up with the Joneses
    mentality to putting a major emphasis on minor things, most people get thrown
    off too often to succeed.</p><p>The prescription for how to reduce your signal
    to noise ratio is simple:</p><ul><li><p><strong>Limit news consumption</strong>
    — The incentive structure is such that the media has to create emotionally arousing,
    often negative, content to get clicks. By the nature of the industry, they simply
    can’t give you objective narratives.</p></li><li><p><strong>Follow (a few) smart
    people</strong> — My blogging knowledge comes from two or three people, tops.
    I consume a lot of information, but once I find a truly valid source, I quadruple
    down on it. You’re better off following advice verbatim from a few extremely successful
    people than you are listening to everyone.</p></li><li><p><strong>Focus on your
    output</strong> — You can only control yourself. Be the change you want to see
    in the world. Exhaust your resources first before looking for someone to save
    you. Measure your results by your effort. The noise of the world will tell you
    to focus on everyone else but yourself, which is what almost everyone does. Basic
    personal responsibility for your life will dramatically reduce your noise addiction.</p></li></ul><p>Stay
    on this journey long enough, and you’ll realize 99 percent of all information
    is noise. Counterintuitively, you only need one percent worth of truly valuable
    information to <a href="https://medium.com/p/the-secret-to-changing-your-life-968e5ae154b">change
    your entire life.</a></p><h2>The Ability to Find Your Tribe</h2><p>Don’t ‘network’
    with people. Connect with people.</p><p>You’d be surprised at how many people
    you can connect with if you focus on interacting with people you actually find
    interesting. That, plus putting yourself out there and displaying your knowledge
    for the world to see, will make connecting with people, especially influential
    people, much easier.</p><p>When someone “reaches out to me” so they can “pick
    my brain” without having put much work in upfront, I have no interest in connecting
    with them. When I come across people who do work hard and also, you know, seem
    genuinely interested in my work, I bend over backward to help them.</p><p>I know
    dozens of top writers. How did I meet them? I attracted them by writing great
    content or I showed them love without asking for anything in return. I share their
    stuff on social media because it’s actually good. I’ll write reviews for products
    I truly love. When you operate this way, a network naturally unfolds as a result
    of it.</p><p>There are so many simple actions you can take, from the right headspace,
    that can help you connect with others:</p><ul><li><p>Buy and review their products</p></li><li><p>Leave
    thoughtful comments on their work</p></li><li><p>Share their work online</p></li><li><p>Send
    people notes, without asking for anything, saying thank you for the quality of
    their work</p></li><li><p>Participate in places where you can find like-minded
    peers, e.g., posting content about a certain niche on social media</p></li></ul><p>Once
    people know you’re legitimate and are one of the rare people in society who aren’t
    looking to take, take, take, they’re glad to connect with you.</p><h2>Standing
    Out in a Sea of Resumes</h2><p>Jeff Goins, a writer I looked up to in my early
    days, used to talk about this concept of the portfolio life. Instead of having
    a resume filled with boring bullet points, you should be able to display what
    you’ve done.</p><p>When I Google you, a digital trail of your accomplishments
    should pop up:</p><ul><li><p>Content and social media profiles</p></li><li><p>Projects
    you’ve done</p></li><li><p>News articles and media about you</p></li></ul><p>James
    Altucher once said, “Books are the new business cards.” In general, your portfolio
    of work online is your business card.</p><p>I forgot where I heard this, but there’s
    also the phrase “Every company is a media company and every person has a personal
    brand.”</p><p>Guess what? If you haven’t actively focused on creating a brand,
    you have a brand, but it’s not a good one.</p><p>Again, no need to “become an
    influencer.”</p><p>But do intentionally leave breadcrumbs about what you’ve been
    up to. As Austin Kleon discusses in his book, Show Your Work, you want to not
    only put projects out there but give people** behind the scenes access** to what
    you’re doing.</p><p>Document the steps you’re taking to improve your life, career,
    or business in real-time to naturally build this online presence and portfolio.
    Imagine you’re choosing between two potential employees on LinkedIn. One has a
    resume. The other has status updates about their field, videos, blog posts, and
    little demos of their skills scattered across their profile.</p><p>Who would <em>you</em>
    want to hire?</p><p>Exactly.</p><h2>One of the Most Underrated Skills of All Time</h2><p>Writing
    well is a superpower.</p><p>Even if you don’t want to become a writer, learning
    to write will improve your life, business, and career.</p><p>Why?</p><p>Writing
    forces you to articulate your thoughts. Often, you’ll think you know about a subject,
    but writing about it makes it clear whether or not you do. Writing helps you <a
    href="https://medium.com/publishous/7-psychological-superpowers-few-people-have-that-you-can-use-to-set-yourself-apart-925fcee821d4">become
    a better thinker and decision-maker</a>.</p><p>Many people don’t ascend in their
    life or career because they don’t know how to communicate their own values. They
    have communications issues in general — how many poorly thought out emails have
    you received in your life?</p><p>Every CEO and company should have a blog. Top
    employees can use blogging to display their knowledge in the field. Every individual
    should have a blog to practice their critical thinking and storytelling skills.</p><p>You
    don’t have to be Hemingway.</p><p>Anyone can learn the following:</p><ul><li><p>Basic
    business blogging</p></li><li><p>Copywriting</p></li><li><p>Succinct and persuasive
    emails</p></li><li><p>Basic storytelling frameworks</p></li><li><p>Essay writing</p></li></ul><p>Look
    at how pervasive writing is in your life. Every advertisement has words. It drives
    the narratives of your favorite shows and movies. Email is still the primary channel
    for business communication.</p><p>The skill of writing is so universal I’d be
    hard-pressed to find a person who wouldn’t benefit from getting better at it.</p><h2>The
    Ability to be (Truly) Authentic</h2><p>When it comes to this attention economy
    we’re in, <em>trying to become an influencer</em> is futile.</p><p>Never start
    with a goal to be famous or get attention. Focus on becoming the best version
    of yourself, <strong>in public,</strong> and nothing more.</p><p>The world is
    too competitive to just rely on objectivity to get ahead. Being your authentic
    self is the only way to get ahead because nobody can compete with you when it
    comes to being you.</p><p>You learn the rules of your game so you can break them.
    You study the basic techniques and strategies of your field then combine them
    with your unique insights and skills. And you <em>never</em> play a character
    to get ahead.</p><p>Ramit Sethi wrote an amazing <a href="https://www.iwillteachyoutoberich.com/blog/please-stop-writing-about-how-vulnerable-you-are/">article
    about fake vulnerability.</a> He talks about online creators who intentionally
    overshare parts of their life and self-deprecate too much to come ass as authentic.
    This approach only works if you’re the type of person prone to sharing that way.</p><p>You
    become authentic by forgetting about arbitrary authenticity standards.</p><p>You
    build the skill of becoming authentic by pushing yourself to be more of yourself
    over time. Look at some of the most popular people in many different fields —
    many are polarizing. Because their views don’t cater to everyone and even piss
    some people off, they create a** loyal following.**</p><p>You don’t force people
    to join your tribe. You attract like-minded people into your tribe. The same rings
    true for networks, customers, fans, employers, and everything between. You want
    to draw the right situations into your life and you can’t do that unless you’re
    upfront about who you are, what you want, and your view of the way the world works.</p><h2>Entrepreneurial
    Thinking</h2><p>The days of rising up the ladder as a corporate robot are dead.
    Without the ability to think on your feet and sell your ideas (employees still
    sell their services to employers) you’re dead in the water.</p><p>Whether or not
    you want to start a business, you should <a href="https://www.youtube.com/watch?v=zigHh7t33yc&t=1s">treat
    your life like a business.</a></p><ul><li><p><strong>You are a product</strong>
    — People fail in life when they sit around and hope the right situations fall
    into their lap. Why would people ‘buy into you’ if you’re not packaging yourself
    like an offer?</p></li><li><p><strong>You’re the head of marketing and sales</strong>
    — Half the items I mentioned on this list involve displaying your knowledge online.
    Why? Gone are the days of being an anonymous 8 x 11 sheet of paper, resume, and
    winning.</p></li><li><p><strong>You’re the PR department</strong> — For better
    or worse, almost everything you do in life lives on a permanent record thanks
    to the internet. Again, don’t pander, but understand your behavior creates a ‘brand’
    for you, whether you like it or not.</p></li></ul><p>The top employees of this
    century won’t be salaried employees. They’ll be entrepreneurial gig type works
    who have a portfolio, contract with many companies, and use media to boost their
    profiles.</p><p>You don’t need to own a factory and hold tons of inventory to
    own an actual business anymore. Mostly, you need a computer. Many 7 figures companies
    are run with 3–4 employees, total.</p><p>Many just use a series of virtual assistants,
    freelancers, and contractors. We’re all living in this more contract-based economy.
    It no longer makes sense to be the “company” man or woman.</p><p>Without the initiative
    and drive of an entrepreneur, you’ll get lost in the shuffle of a fast-paced world.</p><p>Ayodeji
    is the Author of <a href="https://www.amazon.com/Real-Help-Honest-Guide-Self-Improvement-ebook/dp/B082RH235W/ref=sr_1_2?crid=3FLEV98D9G9M9&dchild=1&keywords=real+help+an+honest+guide+to+self+improvement&qid=1587056429&sprefix=real+help+%2Caps%2C204&sr=8-2">Real-Help:
    An Honest Guide to Self-Improvement</a>. *<em>Grab your free checklist here *</em>—
    <a href="https://thedestinyformula.lpages.co/ultimate-guide/">The Ultimate Guide
    to Discovering Your Natural Talents and Strengths</a>.</p>'
  :author: Mind Cafe
  :topic: business
- :url: https://medium.com/free-code-camp/growing-a-side-project-into-a-17-000-month-business-46024d2aa87f?source=search_post---------7
  :title: How my friends and I grew our side project into a $17,000/month business
  :content: "<p>Photo courtesy of @ticurazvannarcis</p><p>In 2014, my friends and
    I set out to build the best possible web design tools. We built <a href=\"http://www.creative-tim.com/bootstrap-themes/ui-kit\">UI
    kits</a>, <a href=\"http://www.creative-tim.com/bootstrap-themes/admin-dashboard\">Admin
    Dashboards</a>, <a href=\"http://www.creative-tim.com/bootstrap-themes/free\">Templates</a>,
    and <a href=\"http://www.creative-tim.com/bootstrap-themes/components\">Plugins</a>.
    We’ve always tried to create products that are helpful in the development process,
    and that we ourselves would use for building websites for clients.</p><p>From
    a revenue’s perspective, if we don’t take into consideration the Black Friday
    sales (which doubled the amount that we made in November 2016), we are grossing
    around $22,000 per month. Part of that goes toward paying our affiliates’ commissions,
    collected VAT, payment vendors’ taxes, and other expenses. We end up netting around
    $17,000 each month.</p><p>In this case study, I’ll share exactly how we built
    our products and grew our business. You’ll hear all about:</p><ol><li><p>What
    motivated us to start our startup, <a href=\"https://www.creative-tim.com/\">Creative
    Tim</a>, and how we built our initial product</p></li><li><p>How we got our first
    users</p></li><li><p>Marketing strategies we used to grow</p></li><li><p>How our
    business model works</p></li><li><p>The story behind our revenue sources</p></li><li><p>Biggest
    lessons we’ve learned so far</p></li></ol><p><img src=\"https://cdn-images-1.medium.com/max/2660/1*_RjJDWRpZ9i5lqcHKSZNOg.jpeg\"
    alt=\"\"></p><h2>1. What motivated us to get started with Creative Tim and how
    we built the initial product</h2><p>We started out as a two-person agency in Romania
    with no funding from third parties. We didn’t have enough cash to rent an office
    — even desks at a co-working space —so we just worked out of a Starbucks. We were
    barely able to pay our daily living expenses by doing work for clients.</p><p><a
    href=\"http://www.creative-tim.com\">Creative Tim</a> was a side project that
    we thought would come in handy to web developers like ourselves. We noticed that
    we were always “reinventing the wheel” when working with clients, and creating
    the same items over and over again for their websites. So we wanted to create
    a few standard components, like login and register modals, calendars, wizards,
    headers, and footers.</p><p>Over the span of a few months, we dedicated our time
    to implementing the platform and a few freebies (alongside the agency work). In
    the beginning, we didn’t have any Twitter followers, Facebook fans, or email list
    subscribers. We posted a lot of stuff about our freebies on various design forums
    and we used the “stalk web developers on Twitter” technique to spread the word
    about our products.</p><p><img src=\"https://cdn-images-1.medium.com/max/9326/1*VvFmMjuIahrRon1cv_nJjw.jpeg\"
    alt=\"\"></p><h2>2. How we got our first users</h2><p>At first, nobody really
    understood what we wanted to do. They didn’t understand the value we could provide
    by helping them improve their businesses. We decided that it would be better to
    create a more complex product that would help people understand what we were doing
    \U0001F914</p><p>We launched the <a href=\"http://demos.creative-tim.com/get-shit-done/index.html\">Get
    Shit Done Kit</a>, a UI Kit based on <a href=\"http://getbootstrap.com/\">Bootstrap</a>.
    It was featured <a href=\"https://www.designernews.co/stories/24249-get-shit-done-bootstrap3-ui-kit\">on
    Designer News</a>, and it was quite popular. We got over 11,000 users from that
    source, which was a huge spike for our business.</p><p>Then two weeks later our
    startup <a href=\"https://www.producthunt.com/posts/creative-tim\">was featured
    on Product Hunt</a>. That gave us another spike with over 5,000 users. After that,
    the situation was stable, and we graduated from 0 users/week to a consistent 2,000
    to 3,000 users/week.</p><p><img src=\"https://cdn-images-1.medium.com/max/2378/0*XC3h5GMCtC89vOce.jpg\"
    alt=\"\"></p><p>A couple of months later, motivated by the success of free Get
    Shit Done Kit, we released <a href=\"http://gsdk.creative-tim.com\">Get Shit Done
    Kit PRO</a> the premium version of GSDK, with more components and ready-to-use
    example pages.</p><p>Initially, we only made a few sales. The product was generating
    about $200/week, which was not nearly enough to sustain our business. At the same
    time we were working on a web project for one of our clients.</p><p>Then in December,
    we got published on <a href=\"http://expo.getbootstrap.com/\">Bootstrap Expo</a>,
    the most popular gallery for showcasing websites created with Bootstrap. This
    was another important spike for our business. Since all of the people who go to
    Bootstrap Expo for inspiration already know Bootstrap or have previously worked
    with it, they were the perfect audience for our business.</p><p>Later, we discovered
    that getting traffic on your website is not enough to create a long term relationship
    with your users, and most of them forgot all about us after their first interaction.
    We did some research and discovered what most marketers probably already know:
    people forget things that they aren’t reminded of. Then we implemented the “Remember
    us email system” following the rules from the <a href=\"https://en.wikipedia.org/wiki/Forgetting_curve\">forgetting
    curve</a>.</p><p><img src=\"https://cdn-images-1.medium.com/max/2048/1*-DWMkH6fqj1H3jTf28URLg.jpeg\"
    alt=\"\"></p><p>We wanted to give our users a reminder that we still existed and
    that we’re a valuable resource for their projects or their clients’ projects.</p><p>Currently,
    we send emails at the following schedule:</p><ol><li><p>After 3 days from their
    first download, we send an email with other recommended products.</p></li><li><p>On
    day 10 we send an email requesting feedback and asking if they need help.</p></li><li><p>On
    day 15 we remind them that they can upgrade to PRO.</p></li><li><p>On day 30 we
    ask them again for feedback and offer to promote something they’ve built in our
    gallery and social media.</p></li><li><p>We send a final reminder on day 60.</p></li></ol><h2>3.
    Marketing strategies we used to grow</h2><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*1egR1OKd5dpJOGHHh_0VtA.jpeg\"
    alt=\"\"></p><p>Most of our marketing strategies consisted of submitting our content
    to different communities like Reddit, Product Hunt, Designer News, Hacker News,
    and GitHub. Some important subreddits that work well in our area include <a href=\"https://www.reddit.com/r/web_design\">/r/web_design</a>,
    <a href=\"https://www.reddit.com/r/html5\">/r/html5</a>, <a href=\"https://www.reddit.com/r/frontend\">/r/frontend</a>,
    and <a href=\"https://www.reddit.com/r/webdev\">/r/webdev</a>.</p><p>We also paid
    between $100–200 for newsletter campaigns a couple of times. Even though the ROI
    ratio matched the amount we invested, the campaigns did not meet the expectations.
    (Maybe this was just in our case, that wasn’t profitable and it works better for
    others.)</p><p>Then we paid $400 for Get Shit Done Kit PRO to appear in the <a
    href=\"http://sidebar.io/\">Sidebar.io</a> newsletter, a curated list of the 5
    best design links made by <a href=\"undefined\">Sacha Greif</a>. This was a very
    rewarding newsletter for us, generating about $1,500 in sales.</p><p>Then we purchased
    the “Review + Newsletter” package ($550) from <a href=\"https://ewebdesign.com/giveaway-quality-bootstrap-components\">eWebDesign</a>.
    There were about 5,000 users who participated in the giveaway, and the total sales
    amounted $2,800.</p><p>We also thought about different places where we could find
    web developers who could use our products, and we realized that hackathons were
    exactly what we needed.</p><p><img src=\"https://cdn-images-1.medium.com/max/2048/1*A6EZiuYfY6n6ggnOdWQpnQ.jpeg\"
    alt=\"Presenting how our tools can help during the Hackathon\"><em>Presenting
    how our tools can help during the Hackathon</em></p><p>Subsequently we started
    talking to people that were organizing hackathons to offer them free licenses
    for our “premium products.” We sponsored over 20 hackathons in different cities
    around the world (you can check them <a href=\"http://www.creative-tim.com/sponsorships\">here</a>).</p><p>All
    the developers were happy to get free licenses, which made us happy that we could
    help them create better projects faster and they also found out who we are, so
    a win-win situation.</p><p>Critically, being physically present at some of the
    hackathons also gave us a lot of information about how the developers were using
    our products and how we could improve them in order to make them more user-friendly.</p><p>In
    March 2015, we finished the agency’s contracts and we switched from “<strong>Agency
    mode</strong>” to “<strong>Startup mode</strong>.”** **With some revenue in the
    bank and a few monthly sales, our team moved to working full time for our startup.
    As we put everything together and constantly launched new products, our sources
    of traffic and revenue grew.</p><p><img src=\"https://cdn-images-1.medium.com/max/3000/1*IfrU-yLcanueTYArD7VInQ.jpeg\"
    alt=\"\"></p><h2>4. How the business model works</h2><p>We realized that the best
    business model for Creative Tim was <a href=\"https://en.wikipedia.org/wiki/Freemium\">freemium</a>:
    we create high quality freebies that help web developers build great websites,
    then release the PRO versions for those freebies, which contain more elements,
    sections, plugins, and example pages.</p><p>At this moment, we have 8 premium
    products, each of which have their own freebies. Their prices range from $19 to
    $599, depending on the license and archive type (HTML, HTML + PSD, HTML + Sketch).
    The freebies appear everywhere on different communities, blog posts, newsletters,
    and social websites — and they are driving all of our traffic.</p><blockquote><h1><strong>Our
    business model</strong>: create high quality freebies that help web developers
    build great websites, then release the PRO versions for those freebies which contain
    more elements. \U0001F44C\U0001F3FC</h1></blockquote><p>The basic idea is that
    those freebies <em>are always</em> appearing on top 10 lists in these big communities.
    Each post that’s in the top 10 (depending on how big is the community) gives us
    between 1,000 and 15,000 targeted users in one day. You can imagine how much that
    would cost if you wanted to do a regular targeted marketing campaign. \U0001F62E</p><p>Some
    examples:</p><ul><li><p>Paper Kit — <a href=\"https://www.reddit.com/r/webdev/comments/3kwb16/paper_kit_bootstrap_ui_kit_ps_the_examples_are\">380
    upvotes on Reddit</a></p></li><li><p>Material Kit — <a href=\"https://www.reddit.com/r/web_design/comments/4t6qcv/material_kit_a_badass_bootstrap_ui_kit_based_on\">560
    upvotes on Reddit</a></p></li><li><p>Light Bootstrap Dashboard Angular — <a href=\"https://www.reddit.com/r/web_design/comments/5ihjco/bootstrap_dashboard_for_angular_2_free_admin\">210
    upvotes on Reddit</a></p></li><li><p>Material Kit — <a href=\"https://news.ycombinator.com/item?id=12099876\">180
    uvpotes on Hacker News</a> (peak position 9 with over 14,000 users coming to our
    website in 1 day)</p></li><li><p>Material Kit — <a href=\"https://www.producthunt.com/tech/material-kit\">860
    upvotes on Product Hunt</a></p></li><li><p>etc… you got the idea</p></li></ul><h2>5.
    The story behind our revenue sources</h2><p><img src=\"https://cdn-images-1.medium.com/max/2188/1*hwAG3lazz-yLrz9dyY7hHQ.png\"
    alt=\"\"></p><h3><strong>Direct Product Sales</strong></h3><p>Here we have the
    regular sales that are done on our website, which are worth about 24% of our overall
    sales. This doesn’t include the <a href=\"http://www.creative-tim.com/product/buy/bundle\">Big
    Bundle</a>.</p><p><strong>What is this Big Bundle, and how did we create it?</strong>
    We noticed that some of our users were downloading all our free products. (When
    I say all, I literally mean all of them in about 2–3 minutes after they have created
    an account.) We also noticed that some of our clients were purchasing all the
    products that were premium.</p><p>So we decided to test a new product called the
    “<strong>Big Bundle</strong>” which gives you access to all our products with
    huge discounts (over 60%). This big package was getting around 6–8 purchases per
    month. Since the prices for this Big Bundle is $299 (instead of $500) for the
    personal license and $669 (instead of $2,127) for the developer license, it’s
    a good source of revenue and a great deal for the web designers and agencies who
    are using our products for multiple clients. It’s a win-win situation.</p><h3><strong>Affiliates
    Sales</strong></h3><p>We’ve created an affiliate network, and our affiliates are
    very happy because they get 50% to themselves from each transaction. For example,
    one of our most important affiliations is done through a very popular GitHub Repo:
    <a href=\"http://fezvrasta.github.io/bootstrap-material-design\">Bootstrap Material
    Design</a> (17,000+ stars on GitHub). Currently, affiliates account for around
    25% of our overall revenue.</p><h3><strong>Organic Search (SEO)</strong></h3><p>We
    saw that we were also getting around 22% of our revenue from SEO. So we decided
    to invest more in SEO, we brought on an SEO consultant, whom we pay around $500/month
    to improve our products’ ranks in Google.</p><p><img src=\"https://cdn-images-1.medium.com/max/4716/1*4j0bLBsuA60pChxu_EqAxA.jpeg\"
    alt=\"\"></p><h3><strong>Other revenue</strong></h3><p>The remainder of our monthly
    revenue comes from Facebook, Twitter, and our newsletter. Here’s how our revenue
    has evolved over time, along with some historically important moments, so you
    can understand why it has grown in some months:</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*so53JPl5GTtpiMfcsu3dAw.jpeg\"
    alt=\"\"></p><p>And here’s a breakdown of how we burn cash:</p><p><img src=\"https://cdn-images-1.medium.com/max/2200/0*v0tmHaw4zDGRHMcR.png\"
    alt=\"\"></p><h2>6. The biggest lessons we’ve learned so far</h2><h3><strong><em>It
    sounds cliché, but having a great product is crucial.</em></strong></h3><p>A lot
    of founders <em>really</em> struggle trying to market and sell something that
    people don’t want or don’t need. If your product is crap, there is no marketing
    strategy — and no source of investment — that can keep it alive for long.</p><p>At
    the moment, our products are used by over 134,000 web developers around the world.
    We have people from Microsoft, Ubisoft, Vodafone, Orange, Harvard University,
    Stanford University, and governmental institutions downloading and using them
    as different internal tools, and we’ve sponsored more than <a href=\"http://www.creative-tim.com/sponsorships\">20
    global hackathons</a> from 14 countries.</p><h3><strong><em>Don’t look to be the
    next Facebook. Try to solve a real problem instead.</em></strong></h3><p>Every
    step in our development seemed like the natural thing to do at the time. Looking
    back at our evolution, we wouldn’t change anything. But with all we’ve learned,
    we could definitely do everything faster the second time around.</p><p>We’ve always
    created and improved our products based on our customers’ feedback, and that is
    the best way to develop a business. It doesn’t matter what you personally like
    — you need to make sure you solve a real problem for a real customer.</p><h3><strong><em>Read,
    read, read.</em></strong></h3><p>In the past three years, I’ve read more than
    I’d read in my entire life, and this makes me feel great. Here are some of my
    favorite books, which I recommend to everybody:</p><ul><li><p><a href=\"https://www.amazon.com/How-Friends-Influence-People-Revised/dp/067142517X/\">How
    to Win Friends and Influence People — Dale Carnegie</a></p></li><li><p><a href=\"https://www.amazon.com/Zero-One-Notes-Startups-Future-ebook/dp/B00J6YBOFQ/\">Zero
    to One — Peter Thiel</a></p></li><li><p><a href=\"https://www.amazon.com/Hard-Thing-About-Things-Building-ebook/dp/B00DQ845EA/\">The
    Hard Thing About Hard Things — Ben Horowitz</a></p></li><li><p><a href=\"https://www.amazon.com/Law-Success-Napoleon-Hill-ebook/dp/B004J8HV74/\">Law
    of Success — Napoleon Hill</a></p></li><li><p><a href=\"https://www.amazon.com/Think-Grow-Rich-Napoleon-Hill/dp/1514698137/\">Think
    and Grow Rich — Napoleon Hill</a></p></li><li><p><a href=\"https://www.amazon.com/Good-Great-Some-Companies-Others/dp/0066620996/\">Good
    to Great — Jim Collins</a></p></li><li><p><a href=\"https://www.amazon.com/Lean-Startup-Entrepreneurs-Continuous-Innovation/dp/0307887898\">The
    Lean Startup — Eric Ries</a></p></li><li><p><a href=\"https://www.amazon.com/Charisma-Myth-Science-Personal-Magnetism/dp/1591845947/\">The
    Charisma Myth — Olivia Fox Cabane</a></p></li><li><p><a href=\"https://www.amazon.com/Lean-Analytics-Better-Startup-Faster/dp/1449335675/\">Lean
    Analytics: Use Data to Build a Better Startup Faster — Alistair Croll</a></p><blockquote><h1>I
    really do think that the secret weapon is to deliver great products combined with
    a great user experience and a great customer support.</h1></blockquote></li></ul><p>The
    best decision that we made was to put our customer in the first row, and make
    sure that they were receiving a great UI kit/Dashboard that really solved their
    problems. That guided us through the whole journey. Our secret weapon is that
    we deliver great products combined with a great user experience and great customer
    support.</p><h3><strong><em>Everything is possible</em></strong>.</h3><p>We are
    living in a world where anybody can become anything they want as long as they
    want to invest the amount of time that is needed. I’m saying time, and not money,
    because we all have time. I want to recommend two books that talk about this:
    <a href=\"https://www.amazon.com/Karaoke-Capitalism-Management-22Financial-Financial/dp/0273687476\">Karaoke
    Capitalism by Jonas Ridderstråle and Kjell Nordstrom</a>, and <a href=\"https://www.amazon.com/Zero-One-Notes-Startups-Future-ebook/dp/B00J6YBOFQ\">Zero
    to One by Peter Thiel</a> (a PayPal co-founder).</p><p>At this point, there are
    no limits. You can go anywhere on the planet and you can talk with whomever you
    want just by contacting them through social media. Today an ordinary person can
    achieve more influence than the president of a small country. Think of those Instagram
    accounts with millions of followers. If I — a regular guy from Romania — can build
    a profitable business in 2.5 years that is making 60x my country’s monthly minimum
    monthly wage, then boy, just about anything is possible.</p><h2>Thanks for reading!
    If you have feedback or suggestions, you can find me here:</h2><ul><li><p>Official
    Website: <a href=\"http://www.creative-tim.com/?utm_source=indie-hackers\">http://www.creative-tim.com</a></p></li><li><p>Our
    Blog: <a href=\"http://blog.creative-tim.com/?utm_source=indie-hackers\">http://blog.creative-tim.com</a></p></li><li><p>Email:
    <a href=\"mailto:alex@creative-tim.com\">alex@creative-tim.com</a></p></li><li><p>Facebook:
    <a href=\"https://www.facebook.com/axelut\">https://www.facebook.com/axelut</a></p></li><li><p>Twitter:
    <a href=\"https://twitter.com/axelut\">https://twitter.com/axelut</a></p></li></ul><p>Also,
    <a href=\"https://www.indiehackers.com/businesses/creative-tim\">here is my IndieHackers
    interview</a> that I based this article off of.</p><p>I Hope this motivates you
    to start your own business. Just drop me a message if you have any questions —
    I would be glad to help you!</p><h3>Update 7 May 2019</h3><p>Hey guys, we just
    released the <a href=\"https://medium.freecodecamp.org/we-made-1-052-000-in-2018-selling-ui-tools-here-is-what-we-learned-38920d86a296\">Part
    2 of this article and we present the journey from $17.000/month to $106.000/month
    and how we made over $1M in 2018.</a></p>"
  :author: freeCodeCamp.org
  :topic: business
- :url: https://medium.com/@joshuantaylor/designers-shouldn-t-code-they-should-study-business-dc3e7e203d39?source=search_post---------8
  :title: Designers shouldn’t code. They should study business.
  :content: "<p>Increasingly, more and more companies are looking for great design
    leadership these days. They are being told that their company needs a bigger focus
    on design thinking and are keen to adopt more design centric principles. But over
    and over, when these companies talk to designers, they hear about craftsmanship—about
    brand consistency, and polished design, designers who can code, and style guides,
    and prototyping, and testing — the designer’s craft.</p><p>All of those things
    are good — mandatory even. But for us to truly understand the best way to help
    a business we have to start focusing on what makes the business successful. We
    must first understand business in general. Then we will better understand where
    craft is important (and where it is excessive).</p><p>Instead, designers are often
    seen as someone that needs to have the important business goals explained to them
    in the most basic of ways. I think our suggestions about design would carry a
    lot more weight if we were able to have insightful conversations, and offer valuable
    suggestions about core business principles.</p><h3>Where we are now</h3><p>There
    are a lot of designers out there that are starting to think seriously about how
    their decisions impact their companies. In general, our focus on user research
    and analytics has helped a ton in giving more credence to the voices of designers.
    We’re also seeing great examples of design led companies and designers impacting
    the core of big businesses—like Airbnb, Pocket, Facebook, Google, Slack, and a
    loads of others.</p><p>I would argue that those companies are as successful as
    they are because they have designers that are focusing more on what those businesses
    need than on how perfect every pixel is going to look.</p><h3>Shifting our focus</h3><p>So
    how do we start thinking about design’s impact on business?</p><p>Maybe its going
    all out and getting an MBA. (All of the designers I know that have done this are
    actively contributing to the core of their business). But maybe it’s even more
    simple. Maybe its talking to the sales team to understand what the market looks
    like. Maybe it’s talking to shipping and fulfillment to understand why orders
    are always a day late. Maybe it’s reading over the Q1 projections and finding
    out that the key initiatives for the quarter have nothing to do with refactoring
    your CSS. Maybe it’s taking a night class in economics. Or maybe it’s just spending
    the night googling how fund raising and cap tables work instead of how to use
    the newest sketch plugin.</p><p>Maybe we should be spending our time learning
    about business principles — how to choose business models, how to manage teams,
    how to conduct competitive analysis, how to make projections, etc.</p><p>Maybe
    we should try to learn about the issues a CEO or VP faces and try to use design
    to help them solve their problems? Maybe we should try to figure out what keeps
    them up at night and help them solve their problems — instead of ours.</p><h3>The
    future</h3><p>I’m not saying we should start shipping poorly designed experiences.
    We have to keep growing and focusing on craft. If we don’t, nobody else will.
    But let’s also start understanding the businesses we work for and what they need
    in order to grow. If we’re able to do that, we will continue to gain more influence,
    and continue to create products that are more impactful—both for our companies
    and for the people that use them.</p>"
  :author: Joshua Taylor
  :topic: business
- :url: https://medium.com/the-mission/seth-godin-new-business-5-step-fdb354988c23?source=search_post---------9
  :title: How Seth Godin Would Launch a New Business With $1,000 And 90 Days to Spare
  :content: "<p>When you treat people the way you’d like to be treated, cool things
    happen…</p><p>Most of the so-called marketing “influencers” out there are celebrities.</p><p>They’ve
    made it.</p><p>They’re not in the trenches anymore.</p><p>They forgot how to “do”
    marketing; their employees promote their new books for them, build their new websites,
    launch their new products… all they have to do is sign their name under whatever
    new projects and <em>Ka Ching!</em> the money starts rolling in their bank accounts.</p><p>That’s
    what I thought when I was preparing my interview with Seth Godin for my podcast
    called <a href=\"https://everyonehatesmarketers.com\">Everyone Hates Marketers</a>
    (how I managed to get him on the show is another story).</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*NCj6ETuB4huKlCmB.\"
    alt=\"Louis Grenier (left) and Seth Godin (right).\"><em>Louis Grenier (left)
    and Seth Godin (right).</em></p><p>Seth has published 18 books, is regarded as
    one the best marketing minds alongside Ogilvy or Tim Ferriss, so he doesn’t need
    to be in the trenches anymore.</p><p>I chose to challenge him to take him out
    of his comfort zone and see if he still “got it”.</p><p>I asked him to:</p><ul><li><p>come
    up with a business idea on the fly</p></li><li><p>explain EXACTLY how he would
    launch this new business,</p></li><li><p>describe how he would find his first
    customers,</p></li><li><p>Etc…</p></li></ul><p>There was one catch though: he
    couldn’t use his name to promote it, he had only a budget of $1,000, and 90 days
    to be successful.</p><p><strong>What follows is the exact 5-step process Seth
    Godin uses to launch a new business (from scratch) with only $1,000 in the bank
    and 90 days to spare.</strong></p><h2><strong>1) Market WITH people, not AT them</strong></h2><p><img
    src=\"https://cdn-images-1.medium.com/max/5000/1*th51U3yainanID59iZDx8Q.png\"
    alt=\"Step 1: Market with people, not at them.\"><em>Step 1: Market with people,
    not at them.</em></p><blockquote><h1>“<em>We, marketers, are selfish, lying, short-term
    thinking scum. We believe that our job is to manipulate people as we market to
    them.</em>” — Seth Godin</h1></blockquote><p>The time of scammy, in-your-face
    marketing is over.</p><p>20 years ago, you could come up with an average product,
    invest a few thousand euros in TV Ads saying that your product was the best ever,
    and sell 10,000 units of it.</p><p>Not anymore.</p><p><strong>People are immune
    to bad marketing.</strong></p><p>Don’t believe me?</p><p>When was the last time
    you bought SEO services from a cold email? When was the last time you subscribed
    to a new marketing software from an automated direct message on Twitter?</p><p>That’s
    right: never.</p><p>We expect to sell using those shady techniques, yet we HATE
    it when it happens to us.</p><p><strong>The first step towards a launching a new
    business according to Seth Godin is to change your mindset. You can’t come up
    with a product or service and THEN decide to market it.</strong></p><p>You have
    to involve people in the process.</p><p>Your customers are humans just like you.</p><p>They’re
    not just a number on Google Analytics.</p><p>Treat them as such.</p><h2><strong>2)
    Focus on the tiniest audience possible</strong></h2><p><img src=\"https://cdn-images-1.medium.com/max/5000/1*sRsqg0EJnqdisVQY43Db-w.png\"
    alt=\"Step 2: Focus on the smallest audience possible.\"><em>Step 2: Focus on
    the smallest audience possible.</em></p><p>In 2004, Mark Zuckerberg launched a
    social network for Harvard students only.</p><p>Look where Facebook is now.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*gNvV-Pff-qKamdGclL_6qA.png\"
    alt=\"Yvon Chouinard, co-founder of Patagonia.\"><em>Yvon Chouinard, co-founder
    of Patagonia.</em></p><p>In 1970, Yvon Chouinard (left), co-Founder of Patagonia,
    was selling “<em>homemade gear out of the back of his car, supplementing his income
    by diving into trash cans and redeeming bottles for cash</em>”.</p><p>Patagonia
    is now worth $209M.</p><p>I had the same dilemma when I started my podcast Everyone
    Hates Marketers. I wanted to reach ALL the marketers on the planet.</p><p>I realized
    that I would stretch myself too thin if I was going down this road.</p><p><strong>So
    I trimmed my audience to the bone: I would focus only on digital marketers working
    in tech who are sick of shady, aggressive marketing.</strong></p><p>This was the
    audience I knew the best: <strong>I am</strong> a tech marketer sick of shady,
    aggressive marketing.</p><p>By focusing on this small audience I have an edge
    over the generalist digital marketing podcasts out there.</p><p>I can address
    their biggest, most specific pains. This is what remarkable marketing is all about.</p><p>This
    probably goes against everything you learned about business. That’s because this
    is the ugly, <em>un</em>sexy part.</p><p>No, you’re not going to become a millionaire
    this year, or even next year. It might take 9 years, 18 years, 25 years, who knows?</p><p><strong>So,
    how do you pick a tiny audience?</strong></p><p>This part takes discipline.</p><p>You
    probably have an idea of a product or service you want to offer; now it’s time
    to select the bullseye: who are the people who will benefit the most from using
    your product or service?</p><p>When I asked Seth Godin to come up with a business
    idea on the fly, he came up with a concierge service to help tourists find an
    Airbnb in Paris.</p><p>But “tourists” could be anybody: are we serving a Japanese
    family looking to go to Versailles for the first time or a Brazilian businessman
    who want a place to stay near Bercy for a seminar?</p><p>So, Seth trimmed down
    his audience: he would help Californian families with young kids to find the best
    place to stay in Paris for their holidays.</p><p>This is much more specific, and,
    all of a sudden, the problems they face and the solutions we can offer become
    much more specific, too.</p><p>Californian families want high-speed internet to
    talk with their relatives who stayed in San Diego. They want to see the Eiffel
    Tower from their balcony just like in the movies. They want to taste the best
    croissants Paris has to offer since they can’t find any in San Diego.</p><p>See
    what I mean?</p><p>You might fear that the audience you’re thinking of is too
    small.</p><p>Here’s a tip I got from <a href=\"https://everyonehatesmarketers.com/positioning-makes-marketing-10x-better/\">Philip
    Morgan</a> (an expert in marketing positioning): if there’s a conference especially
    organized for it, then your audience is big enough.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*5eBo87UBjRzjVt-1LZta6Q.png\"
    alt=\"\"></p><p>For example, did you know that there’s a <a href=\"https://www.soapguild.org/conference/index.php\">conference
    for handcrafted soap makers</a>?</p><p>The next one is in Atlanta, Georgia, and
    450 attendees are expected. If the handcrafted soap maker conference organizers
    managed to make money from such a tiny audience, so can you!</p><h2><strong>3)
    Create a remarkable product</strong></h2><p><img src=\"https://cdn-images-1.medium.com/max/5000/1*Og70eETpvoomcYqj13rMCw.png\"
    alt=\"Step 3: Create a remarkable product.\"><em>Step 3: Create a remarkable product.</em></p><p>Ok,
    ok, this might sound cliché but hear me out first.</p><p><strong>Remarkable marketing
    starts with a remarkable product.</strong></p><p>But, what’s a remarkable product
    you ask?</p><p>It’s a product that your customers simply CAN’T live without; they
    love it so much that they tell their friends, who tell their friends, who tell
    their friends.</p><p>You get the drill.</p><p>The problem is that most of us try
    to sell average products to average people.</p><p>Because the products are average,
    customers are not raving about them.</p><p>They don’t talk about them to their
    friends.</p><p>As a consequence, we have to use shady, aggressive marketing to
    compensate for the loss in business.</p><p>Do you think Slack had to use in-your-face
    marketing to sell their product?</p><p>Nope.</p><p>Anybody can use their product
    for free — there is no string attached. The product is so good that it IS their
    marketing. They went from 16,000 Daily Active Users to 2.7 Million in 2 years.</p><p>As
    <a href=\"https://everyonehatesmarketers.com/seth-godin-marketing-secrets/\">Seth
    Godin</a> mentioned in the episode: did you start using Facebook because you saw
    their ads on a lifestyle magazine? Nope. Your friends told you about it.</p><p>Have
    you heard of MailChimp because they sponsored a conference you went to?</p><p>Nope.</p><p>Their
    email tool was so good that you started to receive newsletters from businesses
    and people you knew, sent from MailChimp. You checked out their site, tried their
    email software for free, and loved the experience.</p><p>Now here’s the hard truth:
    you’re <em>not</em> going to launch the next Facebook, MailChimp, or Slack.</p><p>They’re
    solving big problems for millions of people.</p><p>But, to start with, you can
    create a remarkable product for a small audience.</p><p>It’s time to get out of
    the building and talk to people:</p><ul><li><p>Identify one of their most painful,
    unsolved problems</p></li><li><p>Work your ass off to help them solve it</p></li><li><p>Give
    a sample of your product or service for free</p></li><li><p>Do they rave about
    it and offer to share it with their friends straight away? You have a winner.</p></li><li><p>If
    not, collect their feedback and start again.</p></li></ul><p><img src=\"https://cdn-images-1.medium.com/max/3050/1*myzOr2C_jNVKQ1xlyq_zTQ.png\"
    alt=\"The Hotjar Beta in Numbers.\"><em>The Hotjar Beta in Numbers.</em></p><p>This
    is why <a href=\"https://www.hotjar.com\">Hotjar</a>, the all-in-one analytics
    and feedback solution for your website, wanted to build a remarkable product.</p><p>It
    took them only 4 weeks to come up with the first version of the product, built
    a very simple landing page, let 1,500 people use it straight away, and gathered
    feedback.</p><p><a href=\"https://www.hotjar.com/blog/2016/01/12/the-hotjar-story-part-1-from-idea-to-60000-beta-signups-in-6-months/\">The
    product was so good that those 1,500 early adopters referred an additional 17,500
    people in less than a month</a>. At this point, the Hotjar co-founders knew they
    had a winner.</p><p>There is no silver bullet in building a remarkable product
    and it might take you months or even years to find the right recipe, but, if you
    start with a small audience and gather feedback on the way, your chance of coming
    up with a remarkable product or service will get much, much, higher.</p><h2><strong>4)
    Create an abundance of confidence</strong></h2><p><img src=\"https://cdn-images-1.medium.com/max/5000/1*5P-vd3y4-TGH7_t2kdVdeA.png\"
    alt=\"Step 4: Create an abundance of confidence.\"><em>Step 4: Create an abundance
    of confidence.</em></p><p><strong>How do you get the word out about your product
    or service if you have only $1,000 in the bank?</strong></p><blockquote><h1>In
    the words of Seth Godin, “<em>by giving people an abundance of confidence which
    will create an abundance of value and all I’m asking in return is to be trusted.</em>”</h1></blockquote><p>Let’s
    get back to the example mentioned earlier: a concierge service for Californian
    families who want to get to Paris on holidays and find a place to stay.</p><p>To
    get the word out, Seth proposes to select the best 50 Airbnbs in Paris, take pictures,
    and create an amazing 50-page guide of where our potential customers should stay
    when going to Paris.</p><p>This guide would be available for free, on Medium,
    for everybody to see.</p><p>He would then contact 10 people he knows who fit the
    description of his ideal audience and see if they get any value out of it.</p><p>If
    they do, they’re probably going to share this guide to their friends, who will
    then share it with their friends and so on…</p><p>If they don’t, he would improve
    the guide until they do.</p><p>Here’s the catch: he would leave his email address
    at the bottom of the guide, and expect readers to contact with questions.</p><p>He’d
    give great free advice, engaging with 100 to 1000 people a day back and forth,
    back and forth, until he’d the indispensable middle man.</p><p>Airbnb owners would
    pay him to write a review about their place, while American families will reach
    out to find the best Airbnb apartment in the city center of Paris for less than
    250$ a night.</p><p>This concept can be applied to any type of products to services:
    to be trusted you must first give value for free.</p><p>This requires patience.</p><p>At
    the end of 2016, Unbounce, a landing page software, had more than 16,000 paying
    customers.</p><p>How did they get there?</p><p><img src=\"https://cdn-images-1.medium.com/max/3572/1*OJw8CpEhP6t18xc16lOByg.png\"
    alt=\"“The Noob Guide to Online Marketing” by Unbounce.\"><em>“The Noob Guide
    to Online Marketing” by Unbounce.</em></p><p>They started blogging six months
    before their first product release (in 2010), but, what really helped them to
    become the most popular landing page software on the planet, was a guest post
    on Moz.com called “<a href=\"https://moz.com/blog/the-noob-guide-to-online-marketing-with-giant-infographic-11928\">The
    Noob Guide to Online Marketing</a>”; a giant guide and infographic containing
    TONS of value.</p><p>They turned this post into an ebook which got downloaded
    150,000 times.</p><p>Unbounce got trusted as the go-to online marketing experts,
    and the rest is history.</p><p>Can YOU do the same in your niche?</p><h2><strong>5)
    Make a spinner and spin the wheel</strong></h2><p><img src=\"https://cdn-images-1.medium.com/max/5000/1*gzqFFc5Qab_Yh6kVo1usdg.png\"
    alt=\"Step 5: Make a spinner and spin the wheel.\"><em>Step 5: Make a spinner
    and spin the wheel.</em></p><p>You might feel overwhelmed by all of the above,
    and that’s ok.</p><p>You might not know where to focus on: there are so many things
    you could do, so many channels you could use, so many ideas running in your head.</p><p>How
    do you choose which project to focus on first?</p><p>Simple.</p><blockquote><h1>Just
    pick one, or as Seth Godin would say: “Make a spinner and spin the wheel”.</h1></blockquote><p>Do
    a thing and stick to it.</p><p>I used to act like a headless chicken when I started
    my career: I was impatient, switching from one project to another in a blink of
    an eye.</p><p>7 years ago, I launched a blog about marketing (in French), wrote
    9 articles, and stopped because there weren’t enough people reading them.</p><p>4
    years ago, I wanted to create a community for cystic fibrosis patients to connect
    with each other (my younger brother has cystic fibrosis). I pitched the idea at
    a Startup Weekend, worked on it for two weeks, and quit.</p><p>It is when I started
    interviewing no-nonsense marketers a few months that I had an epiphany: every
    one of my guests, in their own words, mentioned the virtue of tranquility.</p><blockquote><h1>In
    stoicism, tranquility is defined by: “<em>believing in yourself and trusting that
    you are on the right path, and not being in doubt by following myriad footpaths
    of those wandering in every direction</em>”.</h1></blockquote><p>I stopped checking
    my mentions on Twitter every 30 minutes, I stopped checking my website stats on
    Google Analytics every day, I stopped looking at my podcast downloads every Tuesday
    (when I publish a new episode on Everyone Hates Marketers).</p><p>Instead, I’ve
    decided to make a spinner and spin the wheel. I’ve decided to deliver value every
    week and to stop expecting success to knock on my door tomorrow.</p><p>I <em>know</em>
    that success will come; I just don’t know when.</p><p>It’s such a liberating feeling.</p><p><strong>Success
    is a byproduct of helping people solve their biggest most painful problems.</strong></p><p><img
    src=\"https://cdn-images-1.medium.com/max/5000/1*ZMvykZCLtrylyg3cZ2WPkg.png\"
    alt=\"“I know that success will come, I just don’t know when.”\"><em>“I know that
    success will come, I just don’t know when.”</em></p><h2><strong>Key takeaways</strong></h2><ul><li><p>Market
    WITH people, not AT them. Your customers are human beings, just like you.</p></li><li><p>Focus
    on the smallest audience possible. You can always expand later.</p></li><li><p>Create
    a remarkable product. If your first 10 customers spread the word about it, you
    have a winner. If not, collect feedback and start again.</p></li><li><p>Create
    an abundance of confidence. Give away a huge amount of value for free so people
    trust you in return.</p></li><li><p>Make a spinner and spin the wheel. There will
    never be a perfect time to do anything: do something and stick to it.</p></li></ul><h2><strong>Recommended
    resources</strong></h2><ul><li><p><em>Seth Godin’s Marketing Secrets to Launching
    a New Business</em>, podcast episode with Seth Godin:* <a href=\"https://everyonehatesmarketers.com/seth-godin-marketing-secrets/\">*https://everyonehatesmarketers.com/seth-godin-marketing-secrets/</a></p></li><li><p><em>Purple
    Cow</em> by Seth Godin: <a href=\"https://www.amazon.com/Purple-Cow-New-Transform-Remarkable/dp/1591843170\">https://www.amazon.com/Purple-Cow-New-Transform-Remarkable/dp/1591843170</a></p></li><li><p><em>Permission
    Marketing</em> by Seth Godin: <a href=\"https://www.amazon.com/Permission-Marketing-Turning-Strangers-Customers/dp/0684856360\">https://www.amazon.com/Permission-Marketing-Turning-Strangers-Customers/dp/0684856360</a></p></li><li><p><em>Ogilvy
    on Advertising</em> by David Ogilvy: <a href=\"https://www.amazon.com/Ogilvy-Advertising-David/dp/039472903X\">https://www.amazon.com/Ogilvy-Advertising-David/dp/039472903X</a></p></li><li><p><em>Scientific
    Advertising</em> by Claude Hopkins: <a href=\"http://www.scientificadvertising.com/ScientificAdvertising.pdf\">http://www.scientificadvertising.com/ScientificAdvertising.pdf</a></p></li><li><p><em>The
    22 Immutable Laws of Marketing</em> by Al Ries and Jack Trout: <a href=\"https://www.amazon.com/22-Immutable-Laws-Marketing-Violate/dp/0887306667\">https://www.amazon.com/22-Immutable-Laws-Marketing-Violate/dp/0887306667</a></p></li><li><p><em>Avoid
    best practices at all costs</em>, podcast episode with David Darmanin, CEO of
    Hotjar: <a href=\"https://everyonehatesmarketers.com/david-darmanin-avoid-marketing-best-practices/\">https://everyonehatesmarketers.com/david-darmanin-avoid-marketing-best-practices/</a></p></li><li><p><em>Rand
    Fishkin’s guide to inbound marketing</em>, podcast episode with Rand Fishkin:
    <a href=\"https://everyonehatesmarketers.com/rand-fishkin-guide-to-inbound-marketing/\">https://everyonehatesmarketers.com/rand-fishkin-guide-to-inbound-marketing/</a></p></li></ul><h3>If
    you enjoyed this story, please click the \U0001F44F button and share to help others
    find it! Feel free to leave a comment below.</h3><h3>The Mission publishes stories,
    videos, and podcasts that make smart people smarter. You can subscribe to get
    them <a href=\"http://subscribe.themission.co/2105\">here</a>. By subscribing
    and sharing, you will be entered to win three (super awesome) prizes!</h3>"
  :author: Mission.org
  :topic: business
- :url: https://medium.com/free-code-camp/become-how-i-went-from-selling-food-in-the-street-to-working-for-top-firms-in-tech-6aa61a2d0629?source=search_post---------0
  :title: How I went from selling food in the street to working for top firms in tech
  :content: '<p>Illustration by my friend Sebastián Navas.</p><p>In this series of
    articles I want to share with you how I got into the world of programming. I never
    went to university to study IT, but I found a way around it. If you like the series
    and want to see a book out of this, please leave a comment below.</p><p>At the
    end of 2006, I arrived at a crossroads in my life. My hopes of becoming a secondary
    school linguistics teacher had vanished in an instant, as several factors had
    come together and made it impossible for me to continue with my studies.</p><p>Back
    in my hometown of Durazno, Uruguay, my wife was working long hours for a meager
    $160 (USD) a month. Yes, that’s $1,920 a year. We had sacrificed our time together
    so I could become a teacher and get a better job because we were dreaming of a
    better future.</p><p>The problem with dreams is they tend to vanish when you wake
    up, and life’s alarm clock had just gone off.</p><p>Because my career trajectory
    had suddenly strayed off course, I moved back to my hometown to figure out my
    next steps. Needless to say, I was depressed at the way things were, and our living
    situation only made things worse. It was good to be back with my wife, but the
    reasons for it were stressful.</p><p>Additionally, we were sharing a house with
    my wife’s aunt, so our privacy was restricted to our bedroom, and we always felt
    like we were overstaying our welcome.</p><p>As a way to bring in extra income,
    we tried to sell homemade pasta on the streets. I would go door-to-door collecting
    orders for the weekend. “Hello, do you want to order ravioli to eat this Sunday?”
    I’d ask person after person. “Yes, they’re homemade. Just give us a time and we’ll
    deliver them.”</p><p>Then, after people ordered them, we spent our entire weekends
    making 2,000 ravioli only to end up with 500 pesos in our pockets, which comes
    about $20, not counting expenses.</p><p>The whole situation was disheartening,
    and it made us feel hopeless. My wife would work hard all week, then come home
    only to spend her weekends helping me prepare the ravioli. She couldn’t even have
    one day of the weekend for herself. She begged me to stop selling ravioli, even
    if that meant we would end up with less money to pay our bills. Eventually I agreed,
    but it meant I had to try to find a job — and finding a job wasn’t so easy in
    our rural hometown. Anxiety and desperation were starting to set in.</p><p>One
    night, I was talking with a friend who was studying computer engineering at the
    university in Montevideo. He told me about the various job opportunities one could
    find in the capital city, with salaries that were the stuff of dreams for someone
    living in the countryside. “There’s this big company in Montevideo, Live Interactive,”
    he told me. “They’re always looking for programmers; maybe you could try to get
    a job there. They pay really well.”</p><p>The salary he mentioned was around three
    times what we were making at the time, and I couldn’t help but imagine all the
    things we could do with that much money. We wouldn’t need to worry anymore about
    putting food on the table. We could finally pay for our own internet connection,
    get proper clothes and shoes, and even have our own washing machine!</p><p>Not
    only that, but I already had experience with computers. I always liked working
    with them, mostly because they appealed to my knack for problem solving. Programming
    reminded me of having to crack a code or find the solution to a difficult puzzle
    — but in addition to being challenging, it was fun. What’s more is that I saw
    programming as a career with a lot of potential for growth.</p><p>But there was
    one small problem: to work as a computer programmer, one usually needs to know
    how to program computers. Me? I could install Linux on my own, but that was probably
    the extent of it.</p><p>How do you land a job as a computer programmer when you
    have almost no programming experience and you lack a university degree to prove
    your knowledge? How do you learn to program without internet access at home, without
    mentors to connect with, and without access to programming books? That was my
    problem back in 2006, and this is the story of how I tackled it.</p><h2>The Early
    Days</h2><p>I’ve been dabbling with computers since I was a teenager — most of
    the time when visiting a friend who had a PC. While we often used the computer
    to play games, I wasn’t interested in playing that much. Why? Back when I started
    secondary school, a friend’s father let us use his ZX Spectrum computer. He had
    good stack of cassettes with plenty of games for it, and of course, we could play
    all we wanted, but one day he showed me something that blew my mind: people could
    make their own games by programming the computer!</p><p>He showed me some tricks
    in BASIC, like how you could generate random numbers using the RAND function.
    I was amazed. At that point, I realized computers were more than a glorified Nintendo
    with a keyboard: you could actually tell them to do things for you — cool things,
    like drawing lines using trigonometric functions and then painting them by applying
    random colors! You could even make music with them by passing different frequencies
    to BEEP. In fact, once I brought the Spectrum to my house and spent an entire
    afternoon playing different kinds of *beep *sounds on my TV — I’m sure my mom
    loved it.</p><blockquote><h1>How do you land a job as a computer programmer when
    you have almost no programming experience and you lack a university degree to
    prove your knowledge?</h1></blockquote><p>Later on, during my teenage years, I
    continued spending time with friends who had their own computers, and naturally
    we played games on them. Meanwhile, with my more tech-savvy friends, I learned
    a few operating system tricks — mostly MS-DOS.</p><p>Every once in awhile, we
    would try some BASIC programming by copying, character by character, the code
    snippets that appeared in old computer magazines. To us, they seemed like magic
    spells or technological incantations. One thing we really liked was trying to
    edit the text messages a game would show for different situations. We thought
    we were such hackers!</p><p>By the early 2000s, I managed to convince my grandfather
    to buy me a computer: a Pentium MMX with 32MB of RAM! What a machine! I installed
    Linux on it for the first time, using a SUSE CD that came for free with an Argentinean
    computer magazine. I spent quite a lot of time on that computer: trying different
    Linux distributions, getting familiarized with the command line, and so on, but
    never really doing any programming.</p><p>When I look back to those days, I can’t
    understand why I wasn’t learning C programming — or any kind of programming for
    that matter. A friend even offered me the bible of C programming by Kernighan
    and Ritchie, so not having access to a manual wasn’t an excuse. But for some reason,
    after reading a few examples, it didn’t spark any interest in me, as I didn’t
    understand how what it covered would be useful for me. In any case, playing with
    Linux was the only thing I was doing with computers back then.</p><p>From that
    point on, I had several minor jobs, played in a rock ’n’ roll band, and tried
    to become a linguistics teacher, all while getting married and moving all over
    the country together with my wife.</p><p>Fast forward to November 2006 and I found
    myself in need of somehow becoming hirable by a software company. I had to become
    a credible computer programmer.</p><h2>Time for Some Goals</h2><p>If I wanted
    to get hired, the first thing to do was evaluate my skillset as a programmer.
    I had to be honest with myself so I could know where to focus my efforts.</p><p>At
    the time, I knew a bit of ActionScript for Flash MX and the very basics of PHP
    programming. Earlier that year, I had started learning those technologies as a
    hobby. I’d also started a pet project to learn programming, thinking maybe it
    could become a secondary source of income.</p><p>I came up with the idea of making
    a digital map of my hometown where you could drop pins that would point the user
    to the location of businesses, shops, and interesting locations. I would then
    charge those businesses money in exchange for appearing in my online map application.</p><p>Of
    course I know what you’re thinking. “That’s just Google Maps,” you say. Yes, but
    back in 2006, the only thing Google Maps knew about my hometown was that it was
    crossed by a big national highway. Given that, my map seemed like a good idea.
    Also, I figured this project would be the perfect way to showcase my skills to
    a prospective employer. I had a clear goal of what I wanted to build; I just had
    to get down to work and make it happen.</p><p>So at the end of 2006, I set myself
    a deadline: come February 2007, I had to have a working concept of the map application.
    This had to include a Flash frontend, served by a PHP backend, using MySQL for
    data persistence. The technologies I’ve just mentioned might not seem too relevant
    today, but the point here is that I had to nail down every detail of my plan so
    I would know which problems to tackle first, since time was ticking: every day
    that went by was another day where my wife was overloaded, working overtime to
    get food on our table.</p><p>Additionally, to even have a shot at getting a programming
    job, I had to show potential employers that I could program in those particular
    technologies, because that was part of the job description. Naturally, I had nothing
    related to these skills on my resume, so I had to build up my knowledge from scratch,
    and my app would serve as the showcase of my programming expertise.</p><p>The
    plan was to land an interview at the company my friend had mentioned before, and
    hopefully, with the combination of my skills and my app, I would end up getting
    a job there. Even then, I knew the importance of setting clear goals for yourself
    in order to achieve what you want.</p><h2>Learning project: a Map Application</h2><p>The
    map application I created was called Aleph Maps — a reference to Jorge Luis Borges’
    1949 story, “El Aleph,” about a place in the universe where everything — past,
    present, and future — is contained. Not ambitious at all, right? And to bring
    the idea into existence, I would have to learn how to program web apps.</p><p>Having
    no internet at home is a real challenge for a future web developer. When I started,
    ADSL broadband adoption was almost nonexistent, limited only to businesses and
    maybe wealthy households. For the average family, connecting to the internet meant
    dialing in on a modem connection and paying high prices for a slow internet experience.
    I couldn’t afford that, which meant I had to go and bother friends every time
    I needed to access some online tutorial that explained how to program in PHP.</p><p>So
    even though I had a computer and the will to learn, I still didn’t have easy or
    regular access to the information on how to do it. But I was determined to get
    that job, and I knew that even these setbacks wouldn’t deter me from learning
    PHP. When you don’t have time to waste, you don’t have time to feel desperate;
    instead, you have to focus on finding solutions.</p><p>Meanwhile, due to the lack
    of internet access around town, cyber cafes started popping up in the city, charging
    around half a dollar for one hour of surfing. This struck me as a better solution
    than constantly bothering my friends. But this also meant finding an extra 50
    cents and a couple of floppy disks in order to get to a cyber cafe, find the information
    I wanted, copy it onto one of those diskettes, and get it home onto my computer.
    More often than not, data got corrupted in the process of extracting it from the
    floppy disks.</p><p>Imagine how angry and frustrated I was: I had made a trip
    to a cyber cafe and wasted 50 cents for nothing. Half a dollar! This might not
    sound like much, but at that time where we lived, you could buy a burger or a
    bottle of beer for a dollar. For us, it was a lot of money: it meant our daily
    bottle of milk or a loaf of bread.</p><p>During those days, my routine consisted
    of trying to solve problem A to get to point B. Sometimes the tasks were rather
    easy and I felt like I was making quick progress. Other days, it felt like I was
    going nowhere. For example, say I had to implement a feature like “insert new
    data into the database.” This meant writing down all the obstacles I had to solve
    to achieve that — from how to write an SQL INSERT statement to how to execute
    it using PHP — and then integrating everything into the app.</p><p>Each of these
    tasks was an item on my daily “shopping list” for when I went to the internet
    cafe. I would take a couple of floppy disks with me, and then I would google for
    blog posts, tutorials, and guides that would help me solve the items on my list.
    Once that was complete, it was time to save them on my diskettes and head home,
    all the while hoping the data had successfully saved and would be easily accessed
    on my computer.</p><p>Because of the uncertainty involved, the bicycle trip back
    would be fueled by the worst anxiety ever. “What if the data isn’t there at all?”
    I wondered. “What if the bike shakes too much and the data gets corrupted? I really
    don’t have another dollar to spare until tomorrow, so this better work when I
    get home.”</p><blockquote><h1>I was determined to get that job, and I knew that
    even these setbacks wouldn’t deter me from learning PHP. When you don’t have time
    to waste, you don’t have time to feel desperate; instead, you have to focus on
    finding solutions.</h1></blockquote><p>Suffice to say, this wasn’t practical at
    all. Once I was back home, I’d use the information I’d brought back to help me
    accomplish the task in progress, but once it was complete, I lacked the knowledge
    to perform the next step. This means I was left sitting at home, thinking about
    a problem, and waiting until the next day, when I could squeeze another 50 cents
    out of our budget to go to the cafe and repeat this routine. Though at the time
    it seemed like my only option, eventually I had to admit to myself that it was
    time for a new strategy. I needed something that contained most of the information
    on how to write a web application with PHP and Flash MX, with guides explaining
    how to perform the most trivial of tasks, all in one single place. Not the internet,
    but books!</p><p>It seems like such a no-brainer, but for someone in my situation,
    the kinds of books I needed weren’t necessarily in reach. The problem is that
    when you’re part of a marginalized sector of society, accessing books isn’t so
    easy. The closest thing to a programming book you could find at the public library
    would be some outdated manual on how to repair a computer — maybe some dusty MS-DOS
    guide, or perhaps a BASIC or Delphi book if you got lucky — but not much more.</p><p>Well,
    at least one could buy books, right? Not really.</p><p>In most towns in Uruguay’s
    countryside, technical books are usually absent from the bookstore shelves, and
    my town was no exception. Add to the problem the fact that most of the tech books
    — particularly those talking about cutting-edge technology — are written in English,
    and you can just forget about the local bookstore. In the end, this left me with
    only one option: Amazon.</p><p>But it wasn’t that easy either. To buy books on
    Amazon, you need a little piece of plastic called a credit card, but to get access
    to a credit card, you need a good credit history — which for most people is not
    a problem. In my case, though, I was living in a completely different world: everything
    we bought was paid for in cash. We didn’t have the money or the economical certainty
    to enter into a credit plan.</p><p>For us, it worked like this: if we wanted to
    buy something more expensive than our monthly income, we either saved month after
    month until we got enough money to buy what we wanted, or we asked some family
    member to buy the product for us and worked to pay them back later.</p><p>And
    even if we’d had the option of buying books on Amazon, we hadn’t factored in the
    fact that shipping alone from the United States to Uruguay was nearly the cost
    of the book, not to mention it would take a month for it to arrive.</p><blockquote><h1>In
    my case, though, I was living in a completely different world: everything we bought
    was paid for in cash. We didn’t have the money or the economical certainty to
    enter into a credit plan</h1></blockquote><p>Sometimes the solution to these kinds
    of problems is closer to home than we think. Eventually, we ended up resorting
    to asking for help from family. My wife has an aunt who had been living in the
    US for quite a while, so we figured it was worth a shot to ask and see if she
    would buy me a couple of programming books. So on one of my internet excursions,
    I wrote an email to her explaining my situation, hit send, and basically crossed
    my fingers and prayed to every deity out there that she would help us. After a
    couple of days, I had a new email in my inbox. It was her answer, straight to
    the point: “Tell me which books you need and I’ll order them from Amazon.” After
    doing some research, I ended up asking for the <em>Flash MX Bible</em> and the
    <em>PHP 5 and MySQL Bible</em>.</p><p>Those two books proved incredibly helpful
    in the weeks to come. They were both so thorough that I was able to make steady
    progress without needing to constantly visit the internet cafe in search of missing
    information. I could finally make headway on understanding what I needed to know
    to build my maps application. And finally, with access to the information I needed,
    it was time to sit down in front of my computer and get to work.</p><h3>I hope
    you liked this first part. On the <a href="https://medium.com/@old_sound/become-ii-how-i-went-from-selling-food-in-the-street-to-working-for-top-firms-in-tech-5da51d788ea9">next
    article</a> I’ll discuss how I prepared myself for applying to the job position
    and tell you how the interview process went.</h3><p>Credits: The illustration
    on top was made by my friend <strong><em>Sebastián Navas</em></strong>. If you
    want to see more of his art go to his Deviantart profile: <a href="https://polacostyle.deviantart.com">https://polacostyle.deviantart.com</a>
    or get in touch with him via Facebook: <a href="https://www.facebook.com/sebastian.navas.16">https://www.facebook.com/sebastian.navas.16</a></p>'
  :author: freeCodeCamp.org
  :topic: food
- :url: https://medium.com/sylvanaquafarms/clean-food-if-you-want-to-save-the-world-get-over-yourself-8ae9e01cc7ea?source=search_post---------1
  :title: 'Clean Food: If You Want to Save the World, Get Over Yourself.'
  :content: '<p>From Salt Bae, via Facebook</p><p>I’m a permaculture farmer. My goal
    is to develop natural ecosystems that produce food. My dream is a world with ready
    access to a diet that nourishes the body of the consumer, provides a living for
    the producer, and leaves the Earth joyfully habitable.</p><p>I share that dream
    with a lot of people who call themselves permaculturalists, natural farmers, plantsmen,
    or foodies. I fear, however, that this doughty lot of green thumbs and stock-folk
    and food advocates is succumbing to tribalism; forgetting that saving the world
    means saving all of the people in it; even the ones that love cheap burgers and
    Coke. We’re digging foxholes and making monsters out of people who don’t agree
    with us, or who don’t understand, or who do understand but are powerless to act.</p><p>Take
    this quote by Dr. Daphne Miller — author of <a href="https://www.amazon.com/Farmacology-Total-Health-Ground-Up/dp/0062103148">one
    of my favorite books</a> on the links between farming and health — at the end
    of her interview with <a href="https://slowmoney.org/journal/">Slow Money Journal</a>:</p><blockquote><p>“Americans
    are going to fall into two camps when all is said and done: People who buy cheap
    goods, regardless of quality, versus people who are willing and able to pay for
    things that are made with integrity. We are seeing the limits of the “buying cheap
    crap” approach.”</p></blockquote><p>As much as I admire Dr. Miller, this is among
    the more judgmental things I’ve read outside of scripture. Among the implications:</p><ul><li><p>People
    who buy cheap goods (food) are mindless imbeciles who’d just as soon drink gasoline
    as fair trade coffee as long as the price is right.</p></li><li><p>Whether you
    buy cheap or buy quality is a matter of WILL! There are those who are WILLING
    and those who are NOT WILLING! Oh, and able.</p></li><li><p>Those who are not
    willing and able are buying crap. You’re feeding your children crap. You’re killing
    the Earth and you’re killing yourselves. You’re in the wrong camp. You’re crap!
    Shame on you.</p></li></ul><p>That’s not what Dr. Miller wrote, but language is
    meaningless until it’s interpreted in people’s minds. That interpretation is informed
    by the economic, racial, political, religious, family, and personal backgrounds
    of the individual who processes it. Language complimenting one person is a heinous
    insult to another. Imagine how that earlier statement — from a Brown/Harvard educated
    M.D. — reads to a lower-middle income family with no savings.</p><p><img src="https://cdn-images-1.medium.com/max/2560/1*mZT3wzTZBT_sTJ5QjIAcyg.jpeg"
    alt="This just went from “cheap burger” to “political statement of blue-collar
    solidarity.” Thanks, Clean Food, for digging your own grave."><em>This just went
    from “cheap burger” to “political statement of blue-collar solidarity.” Thanks,
    Clean Food, for digging your own grave.</em></p><p>Dr. Miller’s comment is owed,
    in part, to the echo chamber into which she was speaking; the same one into which
    nearly all of us “clean food” advocates speak. It’s the one that asks easy questions
    and accepts facile non-solutions like “people need to pay more for food,” and
    “people need to eat less meat.” Folks like me have cultivated an insular world
    unencumbered by challenges beyond the margins — we may disagree about technical
    details in rotationally-grazing livestock, but we short circuit when asked how
    our system could possibly scale to supply half the current global demand for beef.
    Most of us have never considered such an enormous question with any seriousness.
    We’re surrounded by so much mutual love and affirmation that challenging ourselves
    doesn’t seem necessary. We’re generals on the eve of battle insisting we don’t
    need to study the terrain; we will win because God is on our side.</p><blockquote><p>“Yes,
    the $8/lb ground beef is produced the way it should be. Yes, it’s good for my
    body. Yes it’s good for the Earth. But it’s eight freaking dollars, and my kid
    needs braces and protein. Bye Felicia, we’re going to McDonald’s.”-Bobby Q. Homemaker</p></blockquote><p>Clean
    food people… we’re funny. We’ll say all day long that people don’t pay enough
    for food and they need to value food more. We’ll even take the concept of going
    the extra mile to buy food with “integrity,” turn it into a wedge, and drive it
    into the very heart of America, cleaving our collective body into the willing
    and unwilling.</p><p>But call our products “high-end” and <a href="https://shift.newco.co/farming-while-black-the-anatomy-of-privilege-935bf36c9765">we
    go absolutely apeshit</a>.</p><p>I’ve heard all manner of gaslighting coughed
    into the air in defense of a $10/lb pork chop being called “accessible” (things
    I’ve definitely said in the past):</p><ul><li><p>“It’s more expensive at Whole
    Foods”</p></li><li><p>“The grocery store ribeye is artificially cheap”</p></li><li><p>“Pay
    me now or pay the doctor later”</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*STah1Y0HajfmBxGim6CraQ.jpeg"
    alt="Question: Which is more affordable? Answer: Fuck you."><em>Question: Which
    is more affordable? Answer: Fuck you.</em></p><p><a href="http://vnrli.ien.virginia.edu/">I
    sat on a panel</a> with representatives from Timbercreek Market and Local Food
    Hub in front of an audience of about sixty people. We were all asked a question
    about the accessibility of Local food.</p><p>They came to me last, after my co-panelists
    delivered answers in line with the bullets above; the same answers I certainly
    would have offered two years ago.</p><p>I blurted out, irritated, “our food is
    not accessible. It’s just not. It’s beyond the wallets of damn near everybody,
    it’s the biggest problem with sustainable food systems, and we’re criminally unserious
    about being leaders in sustainability until we propose solutions beyond economic
    relativism, wishful thinking, and see-sawing between charity on one hand and insisting
    that vulnerable, distracted people do all the heavy lifting of finding a way to
    afford our food on the other. And until we do start talking about those solutions…
    all this “save the world” stuff? It’s all bullshit.”</p><p>A hush came over the
    room like I’d just spilled some awful secret. The applause at the end of whatever
    else I said was long and loud. But I’m probably not getting invited back to any
    VNRLI events.</p><p>The food I produce is expensive. It’s high-end. I have customers
    who really have to stretch to get it, and they let me know it. They’re foregoing
    other creature comforts to help me make a living and keep the Earth of my grandmothers
    alive, and they’re doing it not as a gastro-political vote of the food dollar
    or out of guilt for their carbon footprint, but as an act of love. They’re holding
    our work and our mission to their hearts and saying “I believe in you.”</p><p>I
    remember it when I’m up to my shoulders in freezing water; when the inside of
    my truck reeks of four kinds of shit; when I come home covered in blood and muck;
    when I’m hauling water in 100-degree heat; when I’m herding pigs in a driving
    rainstorm and dodging lightning bolts to close up the hens. It reminds me that
    I’m not alone. The energy they impart is worth infinitely more than money; it’s
    the thing that lets me make a life as well as a living. And I’ll dare not call
    that gift anything less than what it is in order to call my food something — like
    ‘accessible’ —that it is not.</p><p>But not everyone can make that sacrifice.</p><p>Nostalgia
    and misguided notions about peasant food aside, <a href="https://www.jacobinmag.com/2015/05/slow-food-artisanal-natural-preservatives/">let’s
    not pretend we really want to go back to the way food used to be</a>. One of the
    great accomplishments of industrial food is an incredible leveling of what’s on
    the plates of the rich and poor. The biggest difference between what you eat and
    what a billionaire eats will generally be <strong>how</strong> food is prepared
    instead of <strong>what</strong> food is prepared. Rich and poor alike all have
    routine access to chicken, pork, and beef — you might be surprised how recently
    that wasn’t the case. And that abundance, especially of once-rare animal protein,
    has had substantial benefits for vulnerable people.</p><p><img src="https://cdn-images-1.medium.com/max/3200/1*rs2N3pGLf8OyqTslDro2mA.jpeg"
    alt="Especially when the mutton’s nice and lean (image from The Spruce)"><em>Especially
    when the mutton’s nice and lean (image from The Spruce)</em></p><p>Industrial
    food, however, hosts an array potent externalities: environmental degradation,
    western chronic disease, inequities in distribution. Clean food responds to this
    by championing non-industrial, artisan farming methods. This creates a higher
    quality but far more expensive product relative to the competition; we respond
    with aggressive marketing and the whole “people need to value food more” shtick
    aimed at the consumer who is able to spend those extra dollars.</p><p>Meanwhile,
    the guy who is NOT able is rendered invisible by clean food’s elitist marketing,
    which is strange because a.) clean food insists it’s trying to save the world,
    yet b.) MOST PEOPLE IN THE WORLD ARE THAT GUY. There’s no solution for him except
    to put him at the mercy of various forms of feel-good charity. That seems fairly
    messed up.</p><p>Also messed up: a foodie telling some poor little boy that he
    can’t eat a 99 cent fast food cheeseburger because it doesn’t have integrity.
    Telling him how easy it is instead to save his ducketts and maybe he can have
    a grass-fed house burger at the end of the month as a reward, but in the meantime
    get your protein from these canned beans that you can’t actually bake because
    you don’t have a stove and, even if you did, your mom works two jobs and moonlights
    as an Uber driver so she doesn’t have time to heat that shit up anyway.</p><p>There’s
    no overstating how coarse it is for a person of means to have that attitude toward
    the poor. It’s straight out of 18th century Versailles.</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*EEqPwhJMyjXYJBQx4KECug.jpeg"
    alt="“Let them eat cake. Oh, it’s not organic? Let them starve!”"><em>“Let them
    eat cake. Oh, it’s not organic? Let them starve!”</em></p><p>Access to good food
    free of social and environmental externalities is a human right. It’s for precisely
    this reason I don’t bristle all that hard (any more) at the idea of <a href="https://en.wikipedia.org/wiki/Cultured_meat">cultured
    meat</a> and <a href="https://modernfarmer.com/2017/05/is-hydro-organic-farming-organic/">hydroponics</a>,
    even though I’m a food-forest-loving permaculture farmer. The food I produce is
    economically out of range for a large number of people, but access to good food
    shouldn’t be restricted to those who can afford to pay. Cultures and hydroponics
    could potentially scale to fill the affordability gap left by “traditional” clean
    food without the externalities. If technology can offer decent, affordable meat
    to people without environmental side-effects, I don’t have the right to reject
    that technology out of hand just because it’s new, weird, or might threaten my
    revenue potential.*</p><p>*<em>You might ask, if cultured meat and hydroponics
    can feed the world, then why is your farm even necessary? The answer is that permaculture
    food forests — complete with trees, perennial plants, and livestock serving their
    critical functions in the water/mineral/energy cycles — are critical to economically
    viable environmental conservation. No matter how far tech goes, we still need
    breathable air, clean water, fertile soil, greenspace, and all the food we can
    responsibly produce.</em></p><p>“Clean Food” — the kind grown in/on living soil,
    minimally processed, eaten closest to the point of harvest, etc. — is part of
    the solution, not THE solution. Clean food advocates have to squarely recognize
    a.) the conflicts that exist at the intersection of environmental, social, and
    economic sustainability, b.) the disproportionate effects of those conflicts on
    the poor and lower-middle classes, and c.) the immorality and impracticality of
    insisting vulnerable people address those conflicts on their own, and judging
    them if they don’t.</p><p>We owe it to our customers, families, friends, and communities
    to be honest about where we fit in a sustainable future. If we’re serious about
    saving the world, we also owe that honesty to people who will never be our customers.
    Finally, we owe that honesty to our mission and our own sanity — the idea of this
    planet’s future health and happiness left to a choice between the average person’s
    pocketbook and their long-term moral considerations is a depressing notion with
    few precedents to buoy our hopes.</p><p>So lets build our soil and grow good food.
    But let the folks in the lab do their thing, too. Like it or not, we’re all depending
    on one another.</p><p><em>Chris Newman is a farmer in Virginia’s Northern Neck.
    He’s tall and skinny and is growing a great and woolly beard for totally non-political
    reasons. If you like what you’ve just read, please consider a click on that there
    green heart thing. And if you really like what you just read, maybe you’ll <a
    href="https://www.patreon.com/farmermang">become a patron</a> (contribute as little
    as $1/month!) so he can spend even more time writing, building foodscapes, and
    democratizing Local food.</em></p><p><em>Visit the farm, Sylvanaqua Farms, on
    Instagram @sylvanaquafarms</em></p>'
  :author: Sylvanaqua Farms | A Place for Regenerative Agriculture
  :topic: food
- :url: https://medium.com/cucumbertown-magazine/the-beginners-guide-to-composition-in-food-photography-how-to-transform-your-food-photos-from-good-39613ab78bf2?source=search_post---------2
  :title: 'The Beginners Guide to Composition in Food Photography: How to Transform
    your Food Photos from Good…'
  :content: '<p>The Beginners Guide to Composition in Food Photography: How to Transform
    your Food Photos from Good to Bloody Beautiful</p><blockquote><h1><a href="http://www.davidlebovitz.com/2011/02/food-blogging-food-blog/">*Use
    photos to tell the story. A nice picture is one thing, but your photos should
    augment the text, or vice-versa — David Lebovitz</a>*</h1></blockquote><p>Don’t
    you agree? And this telling a story aspect is where composition comes in.</p><p>Firstly,
    we need to understand what composition is. Like the word is generally used, it
    is how all the elements that form the final product are used.</p><blockquote><p>Composition
    is a way of guiding the viewer’s eye towards the most important elements of your
    work, sometimes — in a very specific order. A good composition can help make a
    masterpiece even out of the dullest objects and subjects in the plainest of environments.
    On the other hand, a bad composition can ruin a photograph completely, despite
    how interesting the subject may be. — <a href="https://photographylife.com/what-is-composition-in-photography">Photography
    Life</a></p></blockquote><p>And the secret behind great composition? Making it
    look effortless. The composition should be seamless, so that the focus is on the
    food itself and not what was going on in the mind of the photographer.</p><p><a
    href="http://www.passionateaboutbaking.com">**Deeba Rajpal,</a> one of my absolute
    favourites, when it comes to composition, puts her thoughts on composition across
    in such a sublime way.**</p><blockquote><p>Food styling and composition for me
    is a very connected and therapeutic process, and something I immensely enjoy.
    I have experienced however that if I don’t enjoy styling, making or tasting what
    I’ve made, the joy in styling and shooting is somewhat diluted. The results speak!
    So, I feel, it is important to have a passion and to be in sync with what you
    plan to shoot. Also, that we grow with each shot, every ‘image’ is another step
    in the learning curve. I really love shooting dark, moody images, but sometimes
    I chase light rather than block it!</p></blockquote><p>There you have it. This
    is precisely why you sometimes need to go with the flow for your compositions.</p><p>In
    my mind, there are two ways you can approach composition.</p><p>Either your composition
    is telling you a story and making you think about the picture.</p><p>Or it needs
    to present the image in the best way possible.</p><p>Since I’m one for pictures
    that talk to you, here is one of my recent favourites in terms of composition.
    Sandhya of <a href="http://sandhyas-kitchen.blogspot.in/">Sandhya’s Kitchen</a>
    fame creates such a beautiful picture that instantly evokes a story in your mind.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*yswd8tWOfSc_vJwCr72BWA.jpeg" alt=""></p><p>I
    can easily visualise the author, sitting on that chair with her cuppa and browsing
    through that cookbook. Beautiful!</p><p>And what do you think this picture is
    telling?</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*ibaimEn8aucdBb_b_FHX0A.jpeg"
    alt=""></p><p>Don’t get me wrong, it’s not like every composition tells a story.
    Some are effective by simply bringing out the best elements of the food. It needs
    to make the dish stand out, make us want to try it out, and for a food blogger,
    make that reader want to come back for more.</p><p>And the most important thing
    to do, to bring out the best, the absolute best in a photograph, food or not,
    is the RULE OF THIRDS.</p><h3>What is Rule of Thirds?</h3><p>Now, I have had a
    bit of difficulty understanding the rule of thirds. the whole breaking a picture
    into thirds and imagining nine boxes thing, doesn’t really work for me. If you
    do get it the geometrical way, here is a great tutorial on the Rule of Thirds:<a
    href="http://digital-photography-school.com/rule-of-thirds/"><strong>Rule of Thirds
    - Digital Photography School</strong><em>Here&#39;s everything you need to know
    about the &quot;Rule of Thirds&quot; - a simple principle that will help you to
    take well…</em>digital-photography-school.com</a></p><p>But here are a couple
    of things I try to do which a photographer friend of mine told me:</p><ol><li><p>Make
    sure the subject of your photograph occupies only 75% of the frame. And make sure
    that, the 75% is not in the dead centre of the frame.</p></li><li><p>Have three
    objects in the frame to even things out, but keep the focus on your primary object,
    which in this case is the food.</p></li></ol><p>So my advice to you when it comes
    to the rule of thirds is to simply make sure that your image is not dead centre,
    but the focus needs to be on the elements of the dish that you want to stand out.</p><p>Here
    are some gorgeous and delicious examples where the rule of thirds is beautifully
    used.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*6yTs5Z_dhOOz2Gx5u1w_DQ.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*9W43P8j1NhmUcOzkIPeycA.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2048/1*QyUTjNVWtVo5bf-xJD5FLQ.jpeg"
    alt=""></p><p>Having said that, I don’t believe we should always follow the Rule
    of Thirds to take a great picture. Yes, it is probably the easiest way to take
    a good picture. But just because you haven’t it doesn’t mean you will not get
    a beautiful image.</p><h3>The Arrangement of Elements</h3><p>At the end of the
    day composition is all about arranging things in the right way to make the picture
    stand out the most. There are a couple of elements to consider before creating
    a mouthwatering picture which the world will want to pin.</p><p><strong>Background</strong></p><p>The
    right background is what will determine how well your images stand out. The thing
    is there are really no hard and fast rules here. Some people say that you need
    to use a light background when your dishes and props are dark and vice versa.
    But this can be contested when you see images like this. <a href="http://www.sujiscooking.com">Sujitha
    Nair’s </a>images certainly negate that!</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*RPlTvdDuN60HaepXRJPdmA.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2048/1*JnO5WaUoOD3B-rrbnCF5sg.jpeg"
    alt=""></p><p>But the background should be just that. A background. It cannot
    take the focus away from the picture. So be particularly careful when you are
    using bright hues as your background, because, there is a chance that your dish
    may become inconsequential because of the background.</p><p><strong>The Props</strong></p><p>There
    is nothing like a few well coordinated props to make your picture stand. But bad
    prop choices can ruin the picture too. First thing to remember with props: they
    are props. They will aid you in telling whatever story you want with your images.</p><p>Same
    dish, two different compositions.</p><p><img src="https://cdn-images-1.medium.com/max/4168/1*29xe7wnZAiCD799jTwgDxQ.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/3942/1*yjSeJtHLSEU-O9p8r1YNtw.jpeg"
    alt=""></p><p>So they simply need to augment the dish. They are not and should
    never become the central focus of the image.</p><h3><strong>The Angle or Orientation
    of the Image</strong></h3><p>After all the elements have been arranged, the angle
    plays a very, very important role. This can only be determined by what you need
    highlighted in the image. For some dishes like a pizza or pie, overhead shots
    look great, but sandwiches, burgers and the like truly stand out at a lower angle,
    shot from the side and so on.</p><p>Look at this, the same dish and arrangement
    from different angles by <a href="http://www.indugetscooking.com">Indu Matthew</a>.
    Each angle brings out a different character of the dish.</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*Q6_7HiCL2j-PqjTA3J7Otw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2048/1*zDz8vLUmvD_Ckdu8klLgbw.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2048/1*Px7C9V5JDuHjDY73g0Yblg.jpeg"
    alt=""></p><p>So, always shoot from multiple angles till you get the shot right.
    And even your food will want to put their best foot forward. So make sure to use
    the most flattering visuals of our dish in a photograph. And avoid the camera
    slant. Nothing more unappealing that a skewed image of that burger.</p><h3>The
    Use of Colours</h3><p>Remember, composition is all about complementing your dish
    in an artistic way. So don’t be tempted to go overboard with the colours. Don’t
    have a yellow bowl, green spoons and a red table mat, no matter how much you love
    your colours. Instead focus on complementary, contrasting colours.</p><p><img
    src="https://cdn-images-1.medium.com/max/7922/1*Sc0bPCqk56aRmVLj9pxW8w.jpeg" alt=""></p><p>This
    Rajastani Laal Maas curry by <a href="http://thewhiteramekins.com/">Himanshu Taneja</a>,
    another top favourite, is a great example of the use of beautiful complimentary
    colours. Imagine if it was served up in a an orangebowl with a red table cloth
    background. All wrong, right?</p><h3>Use of Negative Space or White Space</h3><p>We
    sometimes have this overwhelming need to fill the image with props and colours.
    But negative space or white space can be used brilliantly to bring out a picture
    beautifully.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*2ngeolxODI-XA_jcvyyIcg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*x6jAgrZVqWKmmSE_cqNpjg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*5GNfwOE4uN4RIvvAVpNtOw.jpeg"
    alt=""></p><p>All these images by <a href="http://www.myfoodstory.in">Richa Gupta</a>
    are a great example of how to use negative space to your advantage in food photography.</p><p>In
    my opinion, these are the key elements that transform a picture from good to mouthwateringly
    beautiful. And to demonstrate how much difference a good composition can make
    to your pictures, here are a few of my favourite food bloggers with their transformational
    food photographs.</p><h3>I have already told you that <a href="http://www.passionateaboutbaking.com">Deeba
    Rajpal</a> has always been an inspiration for me in terms of compositions.Here
    is why.</h3><p><em>“I shot these mulberries from just a dump down shot, and then
    moved to add small elements. They were actually headed for a mulberry cooler,
    so I did take a lighter shot as well. ” — Deeba Rajpal.</em></p><p><img src="https://cdn-images-1.medium.com/max/4000/1*j9ZqDtcRAFw8vVwazuhf1A.jpeg"
    alt=""></p><p>For more from Deeba on styling and food photography, here is a great
    resource which I think every food blogger must, must read.<a href="http://www.passionateaboutbaking.com/?s=foodstyling"><strong>foodstyling</strong><em>&quot;Keep
    props tasteful and simple. Remember the food is the star! Robin Zachary Food photography
    and food styling are…</em>www.passionateaboutbaking.com</a></p><h3>Check out the
    evolution of this picture by Subhasmita Panigrahi of <a href="http://www.theflavoursofkitchen.com">The
    Flavours Of Kitchen</a>.</h3><p><img src="https://cdn-images-1.medium.com/max/8000/1*HF6zM_FbMMdNBqg3dB6gSA.jpeg"
    alt=""></p><p>She has shown through the below six photographs, the evolution that
    her images went through, before she got that final, mouthwatering picture.</p><p><img
    src="https://cdn-images-1.medium.com/max/6000/1*k_d7FATzOXBwkFWZzHCK8g.jpeg" alt=""></p><p>Richa
    Gupta of My Food Story has also<a href="http://www.myfoodstory.in/composing-a-food-photograph">
    written a post about it</a> and detailed the thought process behind creating that
    beautiful picture which you can’t wait to click on!</p><p><img src="https://cdn-images-1.medium.com/max/4032/1*6ioK0hsej-NZ4OaQ8zJkgQ.jpeg"
    alt=""></p><p>So that’s what goes behind making a photograph come alive. For easy
    reminders here’s our top three tips.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*GPcX4FFxKcb_Pn7G5kioCg.jpeg"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*rKWGx4pYrnTkzaCU9f8YGA.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*3iBtUCX_ey9-747zJkFM6Q.png"
    alt=""></p>'
  :author: unknown
  :topic: food
- :url: https://medium.com/free-code-camp/how-i-went-from-selling-food-in-the-street-to-working-for-top-firms-in-tech-part-3-first-week-on-9b4486eb02ee?source=search_post---------3
  :title: 'How I went from selling food in the street to working for top firms in
    tech — Part 3: first week on…'
  :content: '<p>Illustration by my friend Sebastián Navas</p><p>This is the third
    installment in this series of articles where I want to share with you how I got
    into the world of programming. I never went to university to study IT, but I found
    a way around it.</p><p>Here’s the <a href="https://medium.com/@old_sound/become-how-i-went-from-selling-food-in-the-street-to-working-for-top-firms-in-tech-6aa61a2d0629">firs</a>t
    and <a href="https://medium.freecodecamp.org/become-ii-how-i-went-from-selling-food-in-the-street-to-working-for-top-firms-in-tech-5da51d788ea9">second</a>
    parts in case you haven’t seen it yet. If you like the series and want to see
    a book out of this, please leave a comment below. <a href="https://tinyletter.com/videlalvaro">Subscribe</a>
    to my newsletter to stay up to date as I go along writing this book.</p><h2>The
    Technical Interview</h2><p>The programmer who was interviewing me explained how
    things would go, that I was going to walk right into their offices, get my own
    desk, and program at one of their computers, with everybody else just doing their
    jobs, since “that’s how it’s going to be if you join us.” I thought that was pretty
    cool already. And just like he said, once I got into the office, everybody said
    hello and continued doing their jobs. Even though I wasn’t close to getting the
    job, I was already starting to feel like a part of something.</p><p>The test consisted
    of building a website to list books for an imaginary library. It seemed simple
    enough: connect to a database, fetch a list of books, and display them on a webpage,
    with the buttons for the usual actions for adding books, deleting them, and updating
    their information. “I can do that,” I thought.</p><p>While I was focusing on the
    test, behind me were programmers who were splitting their time between working
    on their tasks and playing with tennis balls in a very particular way: they were
    throwing them at each other, with a lot of force, up to the point where one shot
    hit the reset button of one of the computers and one guy lost what he was doing
    on his editor. “That’s a strange way to work, but it’s kinda cool,” I thought.
    I had expected a more formal working environment, but was pleasantly surprised
    at how relaxed the environment was.</p><p>Meanwhile, halfway through my implementation,
    I got stuck. I couldn’t get my code to print the list of books, and nothing was
    showing up on the screen. “How do I get out of this one?” I wondered. I tried
    to debug it by adding print statements here and there, but that didn’t work, and
    I had no idea what was going on. The clock was ticking away, and I was starting
    to get really desperate. “Come on,” I told myself. “I can’t miss this opportunity
    because of this problem. What do I do? Should I ask for help? What if this disqualifies
    me instantly?”</p><p>I thought about it some more. “I guess they help each other
    during work,” I reasoned. “OK, whatever, I’m going to ask for help.” I called
    the interviewer over and talked him through my problem, trying to explain everything
    I had tried so far, so he wouldn’t think I was cheating him into giving me an
    answer. Lucky for me, he also had no idea what was going on, so he told me it
    was fine and that I could leave it as it was.</p><p>Unfortunately, I had used
    too much time on this debugging session so I didn’t have enough time to complete
    the second part of the test. Later on, I would value this lesson, since I saw
    that asking for help earlier would have saved a lot of time later — time that
    in this particular case was critical for me. And in the future, it could be critical
    for the company I would end up working for.</p><p>I didn’t want to ask for extra
    time to try to solve the next problem, since I thought that wasn’t fair. I wanted
    to play by the rules, because I felt it was the right thing to do. As we’ll see
    later, I think that decision paid off.</p><p>In the meantime, I had the second
    problem in front of me and I had to do something about it. I skimmed through it
    and saw that it was about parsing URLs out of some log files, so I gathered some
    courage. I put my most convincing face and told the guy that while I understood
    my time was up, the solution was a matter of just “splitting these lines by these
    characters, and then going with the URL splitting by using this and that character.”
    The guy nodded, and told me that indeed that was the solution. Then he said that
    the interview was over, and he asked me if I had any questions about the company
    or if there was something I wanted to add.</p><blockquote><h1>Later on, I would
    value this lesson, since I saw that asking for help earlier would have saved a
    lot of time later</h1></blockquote><p>“Well, now that you ask, yes,” I began.
    “I’ve been building this mapping application that I want to show you…” This was
    my opportunity to shine. I typed the website URL on the computer in front of us
    and started to pray to every god out there for it to load without problems. “Please,
    just this one time,” I thought. And as every element from the website finished
    loading, my anxiety decreased and my excitement increased. The creation I was
    most proud of was there, right in front of my eyes, and more importantly, in front
    of the eyes of the person who would decide if I had a job or not.</p><p>I went
    through every feature of the app, explaining with passion the goal of the app,
    which features it had, and which features it lacked but that I knew I had to implement
    to have a clear business case.</p><p>After a demo, he seemed impressed by Aleph
    Maps and gave me kudos for it, which made me happy I’d had the chance to run the
    demo for him and gone ahead with it. This showed me that all the demos I had run
    for various members of my family and for my friends had been worthwhile, since
    when it mattered, I was able to show that I could not only build things on my
    own, but also that I was good at explaining things.</p><p>By then it was around
    6 p.m. — time for them to call it a day, and for me to get back home. As we were
    leaving the building together, I asked the man who conducted my tests if he was
    attending university, because perhaps he knew my friend who had told me about
    this job opportunity. “Oh yeah, I know your friend, why didn’t you mention him
    before?” he asked. I didn’t answer, but the fact was that I didn’t want to bring
    it up and use it to my advantage during the interview. But in any case, it didn’t
    hurt afterward. He showed me how to get public transport back to the bus terminal
    and then we parted ways.</p><p>Once on my own, I couldn’t believe I was done with
    the interview. Everything I had prepared for in the last two months had passed
    in what felt like the blink of an eye. All the stressing out about the little
    details — some that mattered, some that didn’t — was gone. Now it was me and Montevideo,
    and the streets crowded with people going back to their homes, and the cars, and
    the night falling over the city. I’d done it.</p><p>Once I had processed all of
    it, the worst part came. It was time to take the bus and head home to wait for
    an answer, and waiting is something I’m really bad at. But that’s what it became.
    Waiting while staring at the ceiling of our room, wondering with my wife how our
    lives would change if I got the job. Waiting while looking at my books without
    knowing if I should have kept reading them or not. Waiting while making sure my
    phone had enough battery power so there would be no missed phone calls. Waiting,
    until at some point the wait was over, my phone rang, and again it was that number
    from Montevideo.</p><p>“When can you start?” asked the voice on the other end.
    I was in. Yes, me. They wanted me: the guy who barely knew how to program, but
    let’s not worry about that now. “They want me,” I told myself, letting it sink
    in. “I’m in.” The whole gamble had paid off. Finally, after all those years of
    having jobs that paid nothing, working just because that’s what people do, even
    if having jobs meant forgetting about our dreams — finally, life was starting
    to turn around and smile on us, and from one day to the next, we could see a life
    that was worth living.</p><p>I asked for one week to move to Montevideo, so they
    told me February 26 would be my starting date. “You will be working in PHP and
    JavaScript. You’re going to earn 15,000 pesos (500 USD) a month.” FIFTEEN THOUSAND
    PESOS! That was three times what my wife was making! “We are going to be rich!”
    I thought. I was going to be able to buy as much Coca-Cola as I wanted! We could
    probably even manage to save $100 per month and buy a house someday. We couldn’t
    believe what was happening to us.</p><blockquote><h1>Finally, life was starting
    to turn around and smile on us, and from one day to the next, we could see a life
    that was worth living</h1></blockquote><p>I spent that week prepping in JavaScript
    and trying to find a place to stay in Montevideo. A friend hooked me up with his
    apartment, since he was going to move out after Easter. The rent was good for
    us, so we decided that in about a month my wife would move to Montevideo and join
    us. The “apartment” was just one room, plus a kitchen and a small bathroom, and
    you could only fit two beds and a dining table in there. For a short while, it
    would be three of us living in that room, but honestly, that didn’t matter to
    us. I would be starting a new and exciting job, and we would have a place to live.
    Mission accomplished.</p><h2>First Week at Work</h2><p>My first day at work began
    with a nice twist: the person who conducted the interview was also my new manager.
    He brought me to office kitchen, we sat down at the table, and he started explaining
    what the company was doing, what the business model was, and so on. He then proceeded
    to lay down on a piece of paper depicting what the backend architecture was like,
    how things worked, what the server was doing, where the database was located,
    and many other details. I have to be honest: it was hard to follow. I recall hearing
    the term “production” a couple of times too. “This is our production setup,” “Here’s
    the production database,” and so on. I had no idea what this <em>production</em>
    thing he kept talking about was! Later, I learned that production referred to
    all the infrastructure, including code, that was facing clients and producing
    income for the company.</p><p>We went through a couple of questions and answers
    here and there, and then came to what was, for me, the most significant part of
    that day. He looked at me and told me, honest and straight to the point: “We know
    that you’re not a good programmer, that you are just starting at this, and that
    you have no experience, so before you’re even able to commit one line of code
    to our codebase, we need you to study this book,” he said as he handed me a copy
    of <em>PHP Objects, Patterns, and Practice</em> by Matt Zandstra. “You have to
    know it by next week.” As straightforward it was, this was some of the most solid,
    sincere, and helpful feedback I’ve ever received as a programmer. To this day,
    I thank him for being forthright with me. During my career, I’ve learned how difficult
    it is to come by a manager who will give you this kind of feedback — feedback
    that’s useful for understanding your own shortcomings, but at the same time puts
    you on the right track in order to overcome them.</p><p>Then he told me: “We know
    you are inexperienced, but during the interview you showed yourself as a person
    with a great attitude. That’s why we hired you.” I was speechless. I wondered
    what I’d done to deserve such an opportunity. Even more, I knew I had to prove
    I was worth it, so I set myself a goal of mastering the design patterns book as
    quickly as possible. First, I couldn’t disappoint my new boss who had taken a
    chance on me, and second, I finally had an opportunity in the big leagues, at
    the job I’d worked so hard for. It was time to shine.</p><blockquote><h1>“We know
    you are inexperienced, but during the interview you showed yourself as a person
    with a great attitude. That’s why we hired you.”</h1></blockquote><h2>Fired After
    One Week on the Job</h2><p>During my first week, I studied that book like my life
    depended on it, because in a way, it did. I tried to learn as many of those design
    patterns as possible, practicing every example, and I tried to absorb as much
    knowledge as possible. By the end of the week, I wanted my manager to come to
    me and tell me, “Now you’re ready to start programming with us.” But as with every
    tale, this story needed a twist.</p><p>That Thursday, some people from the company
    came and called me to another room to deliver some news: the company was conducting
    layoffs, and I was among the people being let go. “Nothing personal,” they said.
    “Business isn’t going too well, and we need to downsize, so we’re letting go of
    people who just joined the company. We hope you understand.” That day, I was one
    of around 50 employees who lost their jobs.</p><p>I’m not sure I can accurately
    describe what I felt at that moment. “Why does life has to be like this?” I wondered,
    feeling somewhat discouraged and helpless. “What do I do now?” I asked to use
    the phone and called my wife. “Please don’t worry, but I have some bad news…”
    I began. I tried hard not to lose my composure, but meanwhile, the whole world
    was coming apart below my feet. All around me were employees coming in from other
    rooms and bidding farewell to all the people who were just fired, which only made
    me feel worse. Even so, I tried to convince myself that I shouldn’t despair. I
    had gotten this far, so it was simply a matter of applying to another job somewhere
    else.</p><p>While I was saying goodbye to my short-lived colleagues, one of them
    tipped me off about some companies I should apply for, so I took note. From an
    internet cafe, I sent out job applications to the companies my brand new former
    colleague gave me, and when I was done, I headed back home.</p><blockquote><h1>I
    tried to convince myself that I shouldn’t despair. I had gotten this far, so it
    was simply a matter of applying to another job somewhere else.</h1></blockquote><p>“What
    a depressing day,” I thought. I entered the apartment and laid down on the bed,
    which for the record, was just a mattress on the floor. I remember the sky was
    gray, a perfect match for how I was feeling. I tried to nap, but my mind was lost,
    staring at the ceiling of that empty apartment and thinking about this new turn
    of events. “What if I hadn’t been fired?” “What did I do wrong?” I knew I had
    done nothing wrong. It was just bad luck, but it was hard to accept it.</p><p>Suddenly
    my phone rang.</p><p>“Is this Alvaro Videla? I’m calling from Intersys. We received
    your application and we want to have an interview with you. Is next Monday OK
    for you?”</p><p>“OF COURSE THAT’S FINE WITH ME,” I thought, but instead I said,
    “Yes, that sounds great, I’ll be there.” As I hung up and placed my phone on the
    floor, I was in shock, unable to believe what had just happened. Montevideo was
    a city full of surprises.</p><p>The next day I went down the street and asked
    the barber if he would give me a free haircut, since I had a job interview lined
    up but I had no money left. I still hadn’t received my salary from the week of
    work, so I needed a favor in exchange for being paid back the following week.
    Luckily, he was really happy to help me. I still remember his warm smile; he felt
    proud he was helping a neighbor get a job. While I was getting the haircut, he
    shared his story. I learned that in the early 2000s, he and his crew were the
    winners of some world hairdresser championship! I had no idea there were hairdresser
    championships. Don’t worry, I couldn’t believe him either back then. Either way,
    getting a haircut with a “world champion” was cool, but also meant that the service
    was expensive — $10 to be exact. It doesn’t seem like much, but keep in mind that
    in my hometown I could get a haircut for less than $2, and $10 could buy me at
    least five burgers and a soda. That said, it was quite an investment for my next
    job interview. I couldn’t complain though: a total stranger was doing me a favor
    when I needed it the most, and that raised my spirits.</p><p>The next week came
    and I had my interview, which went great. The company I was just fired from was
    Live Interactive, after all, which happened to be well known in Montevideo due
    to being one of the biggest internet companies in the country. This meant that
    programmers coming from there were well regarded. Needless to say, I got the job.
    The salary wasn’t that great, but our plan of moving to the capital was still
    intact. Not bad for my first 10 days in Montevideo.</p><h2>Conclusion</h2><p>All
    in all, my plan had worked, and all my preparation and study paid off. I got my
    first job interview as a programmer and then passed it. I was hired and fired
    in the space of one week, but I didn’t give up and went on to secure a second
    job interview, landing a new position in my second week in Montevideo.</p><p>But
    in order for this to happen, the first and most important step was being honest
    with myself. This allowed me to assess my skills to see what I was good at doing
    and where I had to improve.</p><p>Being self aware helped me when I embarked upon
    the task of creating a program from scratch, because I was realistic about what
    I could do, but at the same time it forced me to do something about the areas
    where I was lacking. Additionally, dividing the project into actionable tasks
    helped me make progress and follow my idea through to completion.</p><p>But it
    wasn’t just about skills; I also had to believe in myself, and that self confidence
    helped me whenever I faced a challenge that seemed like an insurmountable mountain.</p><p>Meanwhile,
    humility always kept me in check, reminding me that what I had just climbed was
    but a little peak from among the many I had yet to climb.</p><p>Finally, my family
    and friends offered help and support, and whenever I felt defeated, they kept
    me focused and reminded me why I was on my journey and what the destination was.
    In the end, because I persisted, I had become hirable, and now it was time to
    become an actual programmer.</p><p>I hope you enjoyed reading these series. My
    goal is to get a book out of this, telling more stories, like how ended up living
    in China for three years, or how I started my career as an international speaker,
    or how I got my first book contract to write about RabbitMQ.</p><p>If you want
    to follow along and stay up to date, don’t forget to <a href="https://tinyletter.com/videlalvaro">subscribe</a>
    to my newsletter.</p><p><strong>Credits</strong>: The illustration on top was
    made by my friend <strong><em>Sebastián Navas</em></strong>. If you want to see
    more of his art go to his Deviantart profile: <a href="https://polacostyle.deviantart.com">https://polacostyle.deviantart.com</a>
    or get in touch with him via Facebook: <a href="https://www.facebook.com/sebastian.navas.16">https://www.facebook.com/sebastian.navas.16</a></p>'
  :author: freeCodeCamp.org
  :topic: food
- :url: https://medium.com/free-code-camp/become-ii-how-i-went-from-selling-food-in-the-street-to-working-for-top-firms-in-tech-5da51d788ea9?source=search_post---------6
  :title: 'How I went from selling food in the street to working for top firms in
    tech — Part 2: getting the…'
  :content: '<p>Illustration by my friend Sebastián Navas</p><p>This is the second
    installment in this series of articles where I want to share with you how I got
    into the world of programming. I never went to university to study IT, but I found
    a way around it. If you like the series and want to see a book out of this, please
    leave a comment below. Here’s the <a href="https://medium.com/@old_sound/become-how-i-went-from-selling-food-in-the-street-to-working-for-top-firms-in-tech-6aa61a2d0629">first
    part</a> in case you haven’t seen it yet.</p><h2>Getting the Job</h2><p>During
    December 2006 and January 2007, I worked hard to get my maps application up and
    running. While building it, I wanted to learn as many programming notions as possible,
    trying to cram all the knowledge that would get me ready for the job interview
    into my head.</p><p>Out of all the concepts I could learn, I identified the main
    ones that I thought would be relevant for getting the job. This narrowing of focus
    is a very important step toward achieving goals, since we don’t want to be all
    over the place, trying to grasp a bit of every subject but then failing to reach
    deepness on any of them.</p><p>For my situation, I understood that I had to learn
    about object-oriented programming, since that was one of the most important programming
    techniques in use. On the technological side, I had identified PHP as the key
    programming language that would land me a job, while learning Flash programming
    would be the skill that would differentiate me from other candidates.</p><p>How
    did I know that? It was a bit of hunch informed by what I was seeing mentioned
    on the web, along with what the computer magazines were writing about.</p><p>Even
    back then, before I had the job, I knew it was very important to learn to understand
    and analyze the market I wanted to break into, and finding the right websites
    and publications is a very important step toward this. This is because these resources
    often have information that points to the ideas, trends, and technologies that
    we should focus on.</p><p>Once my app was done and I felt I was ready for the
    interview, it was time to build my resume. However, I had no idea what should
    go on a tech resume and what should be left out. I listed things like MS Word
    and MS Excel as some of my skills, together with Adobe Illustrator and some InDesign.
    Why not, right?</p><p>Wrong. Just thinking about that first resume makes me blush.
    If nothing else, what was clear about it was the message it was signaling: this
    person is a complete noob.</p><p>The problem is that as someone trying to break
    into a new field and start a career, it was difficult to have something to write
    down on my resume that made me look competent. I had no idea what to include,
    so I listed everything.</p><p>Today, if someone presented themselves for a backend
    developer position listing MS Word as a skill, I’m quite sure that person would
    be rejected straight away. Even worse, I think I would be the one rejecting a
    resume like that. But of course, hindsight is 20/20.</p><p>Once my resume was
    complete and I got a cell phone number I could be reached at, I applied for the
    position of PHP programmer at Live Interactive. You’d better believe I read and
    reread every input box on that online form as I went over a mental checklist.
    “Did I spell my name correctly? Did I type the right phone number? Let’s double
    check the email. I don’t want to miss this opportunity because I wrote the wrong
    address.” I was all nerves, but at some point, I had to hit that send button.
    Click. Done. Exhalation. “I’ve done it. I’ve applied for my first job.”</p><blockquote><h1>Once
    my app was done and I felt I was ready for the interview, it was time to build
    my resume. However, I had no idea what should go on a tech resume and what should
    be left out.</h1></blockquote><p>After I submitted my application, I lingered
    at the internet cafe, browsing the web for random stuff. To my surprise, about
    half an hour later, my cellphone started to ring.</p><p>“I don’t know this number,”
    I thought. The area code told me it was from Montevideo, but it was so quick,
    it couldn’t be them. Or could it?</p><p>It took me a couple of seconds to understand
    that, yes, in fact, they were calling me! Can you imagine that? I honestly didn’t
    know what to do. “Should I take the call?” I wondered. “I’m probably not ready
    for this!” I quickly tried to get ahold of myself and walked outside to answer.</p><p>“Hi,
    we’re calling from Live Interactive about your job application. Is this Alvaro
    Videla?” said the voice on the other end.</p><p>Do you see what happened right
    there? I couldn’t believe it! I was being contacted by the company where I had
    just applied for a job.</p><p>“Yes, it’s me,” I replied.</p><p>The caller turned
    out to be the HR manager getting in touch, trying to set up an interview with
    me. She asked me when would it be a good time for me, so I told her that I needed
    a week, since “I have to arrange things here.” This wasn’t necessarily the case,
    as I could’ve just boarded the next bus and traveled there straightaway, but I
    wanted to prepare — to be 100 percent ready for it and not botch my only opportunity.</p><p>I
    hung up at the end of that phone call having secured a job interview. Now it was
    time to get myself together and prepare for that interview. I had no doubt this
    was my once-in-a-lifetime opportunity and I couldn’t waste it. But first, I had
    to share my excitement with my mother and my wife: I needed to talk about what
    had happened with someone to help process my emotions.</p><p>On one hand, all
    my hard work was starting to pay off, which felt great. But on the other hand,
    life had allowed me to see a tiny glimpse of a better future. Making that future
    a reality now rested entirely on my shoulders, but it was too much of a responsibility
    for me to handle alone.</p><p>I spent the entire next week preparing for the interview,
    from reading and rereading the books I had, to trying to guess what kind of clothes
    I should wear for the interview. I had never worked as a programmer, and as such,
    I had no idea how the programmer culture worked and what kind of behavior would
    be expected from me. I didn’t have anyone to ask about this either, so at some
    point I decided to stop worrying too much about the appearance side and tried
    to focus on the technical aspect of the process, hoping my skills would speak
    for themselves.</p><blockquote><h1>I had no doubt this was my once-in-a-lifetime
    opportunity and I couldn’t waste it, but first, I had to share my excitement with
    my mother and my wife: I needed to talk about what had happened with someone to
    help process my emotions.</h1></blockquote><h2>Unexpected obstacles</h2><p>The
    time passed quickly, and before I knew it, I was sitting on a two-hour-long bus
    trip, heading to Montevideo. I had the <em>PHP Bible</em> in my backpack and enough
    money to buy a burger and pay for the ticket from the bus terminal to the company’s
    offices in downtown Montevideo. I didn’t want to arrive late, so I was around
    the area an hour in advance, trying my best to fight off a nervous breakdown.</p><p>I
    had to find something to kill time and occupy my worried mind, so I walked to
    a nearby square, found a bench, and sat down to keep studying. I couldn’t believe
    that all my struggles over the previous months would be decided in about an hour.
    “Did I prepare the best I could? That time I didn’t want to study that part of
    the book so I could go outside, was it worth it?” I wondered. Then I came to my
    senses. “Stop it,” I told myself. “It’s time to focus on the book in front of
    me right now, since there’s no reason for worrying about <em>could haves</em>.”</p><p>Soon,
    it was time to head up for the interview. If this was a Tarantino film, my character
    would probably be called Mr. Blue: dark blue jeans, blue shirt, and dark blue
    hoodie.</p><p>I got to the reception area and was welcomed by the HR manager,
    who I’d spoken to on the phone the week before. She asked me to sit and wait and
    offered me a glass of water. I took the offer and immediately started doubting
    myself. “Is this the right thing to do?” I wondered. “Am I being polite or impolite?”
    Anxiety was taking over.</p><p>Meanwhile, people were walking around, going from
    one office to another. “Are any of them my interviewer?” I asked myself, studying
    each person who walked by. One man walked up to the HR manager and started talking.
    “Ah, it must be him,” I thought. But it wasn’t.</p><p>After more of this wondering,
    the HR manager called my name and took me into a big conference room. She handed
    me a pile of paper and told me this was the first part of the interview: a psychological
    test with more than 100 behavioral and situational questions. What. Is. This?
    Nowhere in the <em>PHP Bible</em> did it mention that people needed to pass psychological
    tests to become a programmer! But I tried the best I could, second guessing the
    intention of every question. Of course, I had no idea if the answers I was choosing
    were correct, but I hoped they would bring me one step closer to getting the job
    I wanted.</p><p>Once I was done, I returned the papers with my answers and then
    was asked to take a seat again and wait for the next stage. Soon the HR manager
    introduced me to someone who was going to conduct the programming interview. “Now
    or never,” I thought. “Now or never.” At that moment, I felt that all the pressure
    was on me, that I couldn’t let down my wife, my mom, my family. “If I don’t get
    this job, let it be known that it wasn’t because I got blocked mid interview,
    and didn’t know what to do,” I thought. “If I don’t pass the next stage, it’d
    better be because they didn’t want me, and not because I lacked the knowledge
    or preparation.”</p><h3>I hope you liked this second part. On the <a href="https://medium.com/@old_sound/how-i-went-from-selling-food-in-the-street-to-working-for-top-firms-in-tech-part-3-first-week-on-9b4486eb02ee">next
    article</a> I’ll tell you how I got the job, and what happened on that first week
    at work.</h3><p>Credits: The illustration on top was made by my friend <a href="https://twitter.com/SebastianNavasF">***Sebastián
    Navas</a>***. If you want to have his amazing illustrations for your articles
    or presentations, don’t hesitate to get in touch with him. Here’s his Deviantart
    profile: <a href="https://polacostyle.deviantart.com">https://polacostyle.deviantart.com</a>
    or his Facebook: <a href="https://www.facebook.com/sebastian.navas.16">https://www.facebook.com/sebastian.navas.16</a></p>'
  :author: freeCodeCamp.org
  :topic: food
- :url: https://uxdesign.cc/ux-ui-case-study-designing-a-food-app-in-3-days-1e2856680205?source=search_post---------7
  :title: Designing a CSA food app in 3 days — a UX case study
  :content: '<p>A couple of weeks back I was tasked with designing a digital solution
    for the food industry. Now here’s the catch: it had to be done in less than three
    days. If you are familiar with <a href="https://designsprintkit.withgoogle.com/introduction/overview">GV’s
    Design Sprint</a> then you understand <strong>this is actually possible</strong>.
    I found this a great opportunity to document a step-by-step guide to designing
    an app in just 24 business hours. In this article I will break down my process
    and the design phases for each day.</p><h2><strong>Background</strong></h2><p>Common
    Food is a farm that uses Community Supported Agriculture (CSA) to sell their vegetables
    and fruits. They sell shares of their farm that people pre-pay for at the beginning
    of the year. Each week during the growing season community members receive a box
    of food.</p><h2><strong>Challenge</strong></h2><p>Design a digital experience
    that will help Common Food Farm sell its extra food each week to its shareholders.
    Help the shareholders find extra food considering their varying knowledge, interest
    and dietary constraints.</p><h2><strong>Day 1: Learn</strong></h2><h3>Research
    Methods</h3><p>The research phase tends to take up some time so any existing information
    I have at hand is a great way to save time. Marketing material, competitors, user
    surveys or if it’s an existing app reading user reviews in the app store so I
    start getting in that user mindset early on.</p><h3>Surveys</h3><p>Common Food
    surveys their shareholders at the end of every season to better understand them.
    Here is some of this year’s feedback</p><blockquote><p><em>“I LOVE cooking and
    canning. Love it! Can I get some more of those heirloom tomatoes?!”</em>“<em>What
    is kohlrabi? I just threw it away. The lettuce was great though.”</em>“<em>My
    son is allergic to broccoli so we never use that. I don’t know what to do with
    the garlic scapes.”</em>“<em>I wish I had more kohlrabi! I like to turn it into
    kimchi.”</em>“ <em>I keep telling you — we have to get more CSAs out there! Big
    Farm is not stopping. Everywhere I look I see more genetically modified monster
    crops! We need to support getting this out to the people …. (continues) ….”</em><em>“Is
    there a way we could get more beets?”</em><em>“I’ve never heard of bok choi before.
    It looks pretty but I am not sure how to cook it.”</em></p></blockquote><p><a
    href="https://info.fieldagent.net/the-digital-shopper">A new report from Field
    Agent</a> finds that produce is a popular category for online grocery shoppers
    in both planned and unplanned purchases. Sixty-five percent of the consumers surveyed
    said they bought fresh produce, making it the top choice along with chilled dairy
    products. Thirty-one percent said they bought fresh fruits and vegetables on impulse,
    beating out snacks (23%) and candy (14%). <strong>However, 39% of digital shoppers
    didn’t buy fresh produce online because they prefer to inspect it in person.</strong>
    Source: <a href="https://www.grocerydive.com/news/grocery--survey-most-online-grocery-shoppers-buy-produce/534080/">Grocery
    Dive</a></p><h3>Market Research</h3><p>Although consumers are increasingly turning
    online to buy groceries, just one in 10 Americans buy fresh produce, meat, poultry
    and fish through e-commerce, <a href="https://www.foodnavigator-usa.com/Article/2018/05/22/Consumers-have-trust-issues-when-it-comes-to-online-shopping-that-can-be-remedied-says-Mintel">market
    research company Mintel found</a>. <strong>To counteract consumer hesitation and
    improve sales, grocers should promote cost savings and provide in-depth product
    information to build trust and convey quality</strong>, the research suggests.
    Also reordering options like Amazon’s “Subscribe and Save” ​are an appealing feature
    to busy consumers, especially women (48%) who are more likely than men (37%) to
    make online food or drink purchases. Source: <a href="https://www.grocerydive.com/news/grocery--consumers-still-hesitate-to-buy-fresh-produce-online/533989/">Grocery
    Dive</a></p><h3><strong>How Might We’s (Brainstorming)</strong></h3><p><img src="https://cdn-images-1.medium.com/max/4186/1*Ms6z5wK4isqWTCdPuNK1Cg.gif"
    alt="How Might We Questions"><em>How Might We Questions</em></p><p><em>How might
    we reduce waste and allocate foods by collecting data from our shareholders?</em></p><p><em>How
    might we sell extra food each week through seasonal recipes and promotions?</em></p><p><em>How
    might we help the shareholders find extra food based on their dietary preferences?</em></p><h3><strong>User
    Personas</strong></h3><p>The results from the user survey provided sufficient
    information to create user personas. I opted for creating age and gender agnostic
    personas to focus on achieving user goals equally regardless of age and gender.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*RN1A3ZlM1OqSLigO8w5m7A.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*W9tX72rbQfeFlWCi2FbSRQ.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*0NbsPC9RNrwOdJooaJkbWw.png" alt="User
    Personas"><em>User Personas</em></p><h3>Comparable Problem</h3><p>Once I am ready
    to enter the sketching phase I research a similar problem and solution that exists
    in similar industries or from direct competitors to identify best practices.</p><p><strong>Box
    size and content variety</strong></p><p><a href="https://www.farmboxdirect.com/">FarmBox
    Direct</a> and <a href="http://www.farmfreshtoyou.com/">Farm Fresh to you</a>
    offer different box sizes and different produce options.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*XtXfW_QkiJm67sc5UBT69w.gif"
    alt=""></p><p><strong>Customize box content</strong></p><p><a href="http://www.farmfreshtoyou.com/">FarmFresh
    to you </a>lets you customize your box, add or remove produce and set quantity
    of an item. You must pay for your box before you can customize it. You can also
    create lists for items to exclude.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*QoSFXicvtPonj1KrkRS5ZQ.gif"
    alt="FarmFresh to You"><em>FarmFresh to You</em></p><p><strong>Authentic Photography</strong></p><p><a
    href="https://www.farmsteadapp.com/">Farmstead</a> lets you add as many items
    as you wish to your box (as its not subscription based) you can add, remove and
    browse items than checkout once you are fully satisfied. Farmstead offers authentic
    fresh photography of produce unlike the other competitors who use stock photos.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*xi4k4fOdh0SQr_JNNCQtMA.gif" alt=""></p><h3>Approach</h3><p>My
    approach is to design an app to collect data from shareholders, such as household
    size, dietary preferences and constraints in order to recommend seasonal food
    crates that shareholders can easily customize. Using Artificial intelligence to
    learn about the food habits of shareholders to provide recipes, food suggestions
    and targeted promotions to help find and sell extra food. Test which combinations
    are the best for a specific dietary preference and make suggestions. This received
    data helps to get feedback from shareholders we can then find out what type of
    produce or combinations users keep reordering and what produce they actually like
    the most during what season.</p><h2><strong>Day 2: Sketch and Design</strong></h2><p>I
    like to start sketching right of the back as soon as I feel I kind of “get it”,
    I sketch a lot I like to get all the bad ideas out of the way and keep what works
    best. <strong>I map out the journey and from there I define user, task, and goal
    specific journeys.</strong></p><p><img src="https://cdn-images-1.medium.com/max/2400/1*YSnF8KvTYQ_NZTKlSQMSWg.gif"
    alt=""></p><h3>User Journey</h3><p>Having settled my user personas, comparable
    problem, and initial sketches. I set forth to design a journey for an existing
    shareholders who already subscribed to the service and is placing an order for
    the first time through the mobile app, hence we already have the user’s schedule,
    shipping and billing information in our database. Once all this is done I’m ready
    to start wireframing.</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*Wmo1boiQRR5d5BdP1GHNtg.png"
    alt=""></p><h3>Wireframes</h3><p>Wireframes are a skeleton view of the app or
    as I like to call it the <em>bones</em> this allows me to focus on key functions,
    elements, and actions before starting on visual design or putting on some <em>skin</em>.
    I opted for High-Fidelity wireframes this way I just have to splash on some color
    and place images and icons.</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*_Hg-udhB-mJQTQklpddIVw.png"
    alt=""></p><h3>Visual References</h3><p>After wireframing I look for visual references
    within the industry for my moodboard.</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*gbQny6v2MpS5A1UcvNnUVg.jpeg"
    alt=""></p><h3>Color Scheme</h3><p>I went for a bright red color scheme. Bright
    colors create appetite and red is also a color that triggers shopping (Sales,
    promos, clearance etc.)</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*UY6O3KRtyFU5VrlZ0FhhjA.png"
    alt=""></p><h3><strong>Typography</strong></h3><p><img src="https://cdn-images-1.medium.com/max/2000/1*DgneAV-EFCAHrmkpJwEkOw.png"
    alt=""></p><h3>Iconography</h3><p>When it comes to icons and saving I time I don&#39;t
    recommended drawing them out. As much as I enjoy illustrating my own icons time
    is not on my side right now. I recommended an icon library like <a href="https://material.io/tools/icons/">Material
    Design icons</a> or as I used for this app <a href="https://thenounproject.com/">The
    Noun Project</a>. However, The Noun Project requires a subscription to be able
    to fully customize their icons if you don’t purchase a subscription you must give
    the author attribution.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*nUfRQLyDl-75WG_eKnCFgQ.png"
    alt=""></p><h3>Logotype</h3><p>I wanted an obvious name but also a significant
    logo so FarmCrate was the best choice for the name once I thought of that I though
    a crate as a logo and soon after some iterations I came up with combining a farm
    and a crate.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*_zuQV5rdU5ORf5W4FTkx0A.png"
    alt=""></p><h3>Design Variations</h3><p>I like to try out different styles and
    design variations I try not to settle for the first option and iterate until I
    find a common ground in my design.</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*DptHNQc4VT8XNGayA_3vkA.png"
    alt=""></p><h2><strong>Day 3: Prototype</strong></h2><p>On the third day I finished
    up the final designs and I started to prototype. I preferred to wait until this
    stage mainly because if I start prototyping during the wireframing phase although
    they are Hi-Fi (and I often do this) a lot of time is spent on interaction screens.
    For this project I added the interaction screens, hover actions, screen overlays,
    and pressed buttons after the design was finalized to save time.</p><h3>Final
    Designs</h3><p><img src="https://cdn-images-1.medium.com/max/2400/1*zMqKZem3kHkLuQ-Jd4Jjew.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2400/1*9ZPni9R7qPGnDmWGUc7A0g.png"
    alt=""></p><h3>Auto-animate</h3><p>I used Adobe XD for prototyping thanks to the
    <a href="https://helpx.adobe.com/xd/help/create-prototypes-using-auto-animate.html">auto-animate</a>
    feature I now have a fully functional prototype. This is a great way to save time
    on interactions instead of spending a couple of hours on After Effects I just
    selected the auto-animate option on XD.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*BI_u4JDgdPDAjg_YHZiHWg.gif"
    alt=""></p><h2>Next Steps</h2><h3>Usability Testing</h3><p>Test the prototype
    with actual users. My personal favorite for usability testing on prototypes is
    <a href="https://maze.design/">Maze.Design</a> it’s easy to use and offers comprehensive
    data on your prototype.</p><h3>Iterate</h3><p>Take the findings from the usability
    test and iterate upon the design also improve the user flow.</p><h2>Conclusion</h2><p>There
    is no space for distractions on limited timelines you have to stay focused on
    the project and organize yourself. <strong>I timed myself and set limits for how
    much time I would spend on a given task</strong>. I tried to keep it as simple
    as possible, starting from the sketches and the user journey then everything just
    fell into place.</p><h3>Final Thoughts</h3><p>Always trust your instinct and don’t
    be afraid to tweak your design here and there. If you compare my wireframes to
    the final design I made design choices to improve the final design and boy did
    they improve. Also use a software you are familiar with, you know the shortcuts
    and don’t have to spend much time figuring where things are.</p><p>Follow me on
    twitter <a href="https://twitter.com/polliea_">**@polliea_</a>** | Appreciate
    my work on <a href="https://www.behance.net/polliea">**Behance</a>** | Checkout
    my shots on <a href="https://dribbble.com/polliea">**Dribbble</a>**</p><p>Thanks
    for reading!</p><iframe src="https://medium.com/media/a19f46680bac3cbdc42953c920d0c104"
    frameborder=0></iframe>'
  :author: UX Collective
  :topic: food
- :url: https://heated.medium.com/which-foods-are-anti-inflammatory-de526a5acdb?source=search_post---------8
  :title: Which Foods Are Anti-Inflammatory?
  :content: '<p>Which Foods Are Anti-Inflammatory?</p><h3>It’s not so much what you
    eat, but what you don’t eat</h3><p><img src="https://cdn-images-1.medium.com/max/7016/1*mftW-uAcc5Cr3iSTUN7H0g.jpeg"
    alt="Photo: Daria Ustiugova/iStock/Getty Images Plus"><em>Photo: Daria Ustiugova/iStock/Getty
    Images Plus</em></p><p><em>When I was writing for the opinion section of The New
    York Times, I had a number of close advisers. On nutrition matters, I came to
    rely more and more heavily on David Katz. Later, we became friends and, in 2018,
    I asked him to sit down and talk with me about how we should be eating, for a
    Grub Street piece that ran (untruthfully) as “<a href="https://www.grubstreet.com/2018/03/ultimate-conversation-on-healthy-eating-and-nutrition.html">The
    Last Conversation You’ll Ever Need to Have About Eating Right</a>.”</em></p><p><em>The
    response was tremendous — it was one of the most-read articles of the year. Not
    just in food, not just for New York Magazine, but online, period.</em></p><p><em>What
    we didn’t realize until then was the degree to which people are looking for guidance
    on how to eat from people they can trust. And that we qualified.</em></p><p><em>The
    net result is our new book, “How to Eat: All Your Food and Diet Questions Answered.”
    In it, we answer what we hope are the most pressing questions about diet that
    confront many readers. We think it’s a useful tool to understand, commit to, and
    maintain a truly healthy diet, and one that will serve as a useful counter to
    all the bullshit out there. Here’s our fourth excerpt.</em></p><p><em>“How to
    Eat” by Mark Bittman and David L. Katz, M.D., is published by Houghton Mifflin
    Harcourt and is available <a href="https://www.amazon.com/gp/product/035812882X/ref=as_li_tl?camp=1789&creative=9325&creativeASIN=035812882X&ie=UTF8&linkCode=as2&linkId=a37f877cd5f90efc450b850262e4fdc8&tag=doublebpublis-20">here</a>.</em></p><h3>What’s
    the hype about anti-inflammatory diets? I see “anti-inflammatory” as a benefit
    on a lot of foods.</h3><p>In short: Certain foods encourage inflammation. An anti-inflammatory
    diet avoids these foods. The body makes compounds called prostaglandins that can
    be either pro-inflammatory or anti-inflammatory. Both saturated fat and omega-6
    unsaturated fat are building blocks for pro-inflammatory prostaglandins. Too much
    omega-6 — which is abundant in ultraprocessed foods — is not a good thing; it
    can contribute to excess inflammatory response.</p><h3><strong>So this is yet
    another reason to steer clear of ultraprocessed foods?</strong></h3><p>For several
    reasons: Many ultraprocessed foods contain omega-6-heavy oils as well as highly
    refined carbs, like white flour and added sugars. Starch and sugar don’t directly
    flow into the production of inflammatory prostaglandins, but they drive up insulin.
    And insulin — a growth and stimulating hormone — enhances the activity of the
    immune system in a way that increases inflammation. Finally, diets high in ultraprocessed
    foods foster obesity, and excess fat cells contribute more inflammatory compounds
    to the bloodstream.</p><h3><strong>Are there certain fats that aren’t inflammatory?</strong></h3><p>Yes.
    Some fats are even anti-inflammatory. Omega-3 fat is most associated with anti-inflammation.
    Monounsaturated fat, the kind that predominates in olive oil, is less distinctly
    anti-inflammatory, but does not increase inflammation, either.</p><h3><strong>What
    other foods should I be eating to keep my immune system in balance?</strong></h3><p>The
    very foods you should eat to balance health overall, and by now you know the drill:
    vegetables and fruits, whole grains, legumes, nuts, and seeds. For optimal health,
    these are the foods to increase. And sure enough, all of these are associated
    with dialing down inflammation.</p><h3><strong>Is an anti-inflammatory diet something
    most people should worry about?</strong></h3><p>Well . . . worrying is inflammatory!
    So, let’s say it’s something worth being conscious of.</p><p>Insulin resistance
    (prediabetes) is widespread in the United States, and remember that insulin is
    pro-inflammatory. Fixing this with diet and lifestyle is pretty much a universal
    priority. But fixing it with diet is easy, and requires no special effort, as
    long as you’re fixing your diet anyway: You just need to move toward an optimal
    diet for general health. You can think about it in terms of anti-inflammatory,
    or you can think about in terms of “healthy.” You’ll be making all the same adjustments
    either way.</p><h3><strong>Are there other contributing factors to inflammation
    besides food?</strong></h3><p>Absolutely. Psychological stress is inflammatory;
    it is associated with stimulation of the adrenal gland. Sleep deprivation is associated
    with disturbances in hormonal balances that increase inflammatory responses. So
    although the narrative has become “inflammation is bad and you want an anti-inflammatory
    diet,” the underlying reality, again, is that imbalance is bad. The prevailing
    imbalance is what causes excess inflammatory responses, and can be addressed,
    fortunately, by the same good kinds of eating patterns we’re talking about here.</p>'
  :author: For Kurt Evans, ‘Staying Busy Keeps You Alive’
  :topic: food
- :url: https://uxdesign.cc/grab-design-challenge-case-study-food-driver-mobile-app-e5d6b65cdd30?source=search_post---------9
  :title: Designing a food delivery app for motorbike drivers — a UX case study
  :content: "<p>The following case study is part of a design challenge. I am not in
    any way affiliated to Grab or any other companies/individuals mentioned in this
    article. The design decisions and assumptions taken in this case study are solely
    based on publicly available information.</p><p><img src=\"https://cdn-images-1.medium.com/max/3840/1*OdiyrwJc_EIkZc4-X7MqMQ.png\"
    alt=\"\"></p><h2>The Challenge</h2><p>Imagine that Grab is introducing food delivery
    service in Philippines (like FoodPanda). You are tasked to design the <strong>driver
    app</strong> for <strong>motorbike drivers</strong>. Here is a rough outline of
    how the process is like:</p><ul><li><p>Customer orders food delivery through the
    Grab app.</p></li><li><p>A job card is shown to the driver. Driver has to decide
    if he/she wants to take up the job. Note that the job card has to be flexible
    to show not just food delivery jobs, but also courier jobs like Courier Delivery.</p></li><li><p>Once
    driver accepts the job, he will have to go to the restaurant to pick up the food</p></li><li><p>After
    picking up the food, the driver will have to deliver the food to where the customer
    is.</p></li></ul><p>Please describe your approach / problems / considerations
    / when you start designing the app.</p><p><strong>Key Deliverables</strong></p><ul><li><p>A
    list of assumptions you have, and how you would validate the assumptions.</p></li><li><p>Wireframe
    of the end to end flow for the driver app. We expect microstates to be shown for
    flows that requires user interaction</p></li><li><p>Select a few key screens to
    showcase the visual design</p></li></ul><p>*<em>Platform: *</em>Android Phone
    — 720 X 1280</p><h2>Understanding the task</h2><p>Grab’s mission is to build a
    ecosystem where everyone has access to better services in SouthEast Asia. Grab
    is present in eight countries across the region, and countless people are using
    its services every day.</p><p>In order to understand and relate to challenges
    associated with Drivers, we also have to understand different areas of the ecosystem
    they interact with.</p><p><img src=\"https://cdn-images-1.medium.com/max/2800/1*dgziqjeFQaPbk6sPoMBPlw.png\"
    alt=\"**Figure 1:** Diagram of Grab delivery ecosystem\"><em>**Figure 1:</em>*
    Diagram of Grab delivery ecosystem*</p><ol><li><p><strong>Drivers</strong>, partners
    of Grab are huge part of daily operations and work with the company to provide
    best services to customers. Therefore in order to serve the customers with highest
    satisfaction and quality, Grab empowers them with tools and services that enables
    them to do their job effectively with great customer experience.</p></li><li><p>*<em>Business
    owners (deliver job creators), *</em>who are also the partners of Grab empowering
    them to avail the delivery services for improving their business as entrepreneurs
    and creating a business relationship that is built on trust and effective solutions.</p></li><li><p>*<em>Consumers,
    *</em>who are the end users of the delivery ecosystem and ultimately we device
    tools and services in order to make their experience as frictionless as possible.</p></li></ol><p>For
    the scope of this exercise, I will be focusing on the <strong><em>Drivers</em></strong>
    aspect of the ecosystem.</p><p>As Grab is introducing food delivery service in
    Philippines, understandably Manila will be the primary spot to initiate the operations.
    Manila has 3rd worst traffic in SE Asia <a href=\"https://www.rappler.com/business/190016-metro-manila-traffic-southeast-asia-study-bcg-uber\">[1]</a>.
    It makes sense to have 2 wheelers to beat the congested traffic because of the
    obvious advantages of riding through narrow alleys and shortcuts to reach destination.</p><p>The
    design of driver app for motorbike drivers is an opportunity to improve driver’s
    app experience where they can perform jobs faster, beat traffic woes, improve
    delivery ETA and potentially boost economy in the region.</p><p>Grab has already
    a Driver app in playstore, but I am not sure if there are multiple apps for different
    modes of transportation or one general purpose app. So I believe that, to some
    degree, I am going to redesign it during this task.</p><h2>Defining the audience</h2><p>According
    to the task defined above, I will focus on the driver audience.</p><p>We can divide
    the driver’s audience into two main groups</p><ul><li><p>*<em>First time enrolled
    drivers: *</em>Drivers successfully completed their enrolment to Grabs delivery
    service</p></li><li><p>*<em>Experienced drivers: *</em>Drivers who have been part
    of the delivery service for a while (25–30 jobs per day)</p></li></ul><p>Both
    have similar motivations but slightly different needs. More introductory guidance
    is needed for first time enrolled drivers, and more efficiency is needed for experienced
    drivers.</p><p>I will define more on the challenges in the next section where
    we identify user needs by using <strong>Exploration vs Exploitation</strong> framework.</p><h2>Understanding
    the user contexts and needs</h2><p>Before jumping off to solutions, it is better
    to understand current contexts on when/where the app will be used and what the
    current challenges faced currently by the users.</p><ul><li><p>*<em>When. *</em>I
    assume the drivers will use the app during working hours. The working shift may
    differ, some may use it during the day, while others may use it during night.</p></li><li><p>*<em>Where.
    *</em>Drivers will mostly use this app probably while riding to different pick-up
    and delivery locations on their motorbikes in order to get accurate instructions.</p></li></ul><p>I
    also went to the Grab driver app in playstore to go through some of the reviews
    and identify any feedbacks that are aligned with the task at hand. I wanted to
    know any current problems users are facing and also positive feedbacks so that
    I can put more emphasis on it.</p><p><img src=\"https://cdn-images-1.medium.com/max/2398/1*Df3ES0Sgpwt4Z0PeguS1TQ.png\"
    alt=\"\"></p><p>I collected all the contexts and put in a mind-map so that when
    I am making those design decisions I can always refer back to the chart that identifies
    what contexts will make a great driver experience and what to avoid.</p><p>In
    addition to that, I have also made assumptions on how jobs are allocated or notified
    to drivers in order to make the allocation procedure and transparent.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/5022/1*o-LeMEd-e9xL-YolYIU8Uw.png\"
    alt=\"**Figure 2: **Mindmap of extensive contextual analysis from driver’s perspective\">**<em>Figure
    2: *</em>Mindmap of extensive contextual analysis from driver’s perspective*</p><h3><strong>Storyboard</strong></h3><p>I
    have already defined that we will be building an Android app according to the
    deliverable of the task.</p><p>Let me create a quick storyboard on how I see the
    user experience. This technique was inspired by Brian Chesky, CEO of Airbnb who
    hired Pixar animator to visualize the experience of Airbnb customers (hosts/guests)
    <a href=\"https://mastersofscale.com/brian-chesky-handcrafted/\">[2]</a>.</p><p>Creating
    storyboards help me to empathize the user journey and also enables me to understand
    contextual situation and ideate potential challenges or needs users may have.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2376/1*cjDfxs5sss581eK8LN0p5Q.png\"
    alt=\"**Figure 3: **Storyboard of a happy flow of entire driver journey\">**<em>Figure
    3: *</em>Storyboard of a happy flow of entire driver journey*</p><h2>Problems</h2><p>By
    going through the user reviews, various contextual situations and storyboard,
    I assume the following are some of the pain points I can tackle in order to elevate
    the end-to-end user experience.</p><ul><li><p>Getting pick up location far off
    from current location.</p></li><li><p>Unable to accept multiple jobs along fairly
    similar route for efficiency.</p></li><li><p>Date consumption by the app</p></li><li><p>Ability
    to perform on 2G or low speed networks</p></li></ul><p>I have listed down some
    of the good vs bad experience specific to stages that are crucial in the driver
    app user flow.</p><ol><li><strong>Accept a job</strong></li></ol><ul><li><p>*<em>Good
    Experience: *</em>getting jobs that are within the service area set.</p></li><li><p>*<em>Good
    Experience: *</em>ability to quickly skim to available jobs before accepting.</p></li><li><p>*<em>Good
    Experience: *</em>ability to see delivery locations and estimated earning.</p></li><li><p>*<em>Bad
    Experience: *</em>getting jobs request while in the middle of a previous job.</p></li></ul><p><strong>2.
    Picking up item to deliver</strong></p><ul><li><p>*<em>Good Experience: *</em>ability
    to identify the package is correct.</p></li><li><p>*<em>Good Experience: *</em>ability
    to check pick-up status if it is a food delivery.</p></li></ul><p><strong>3. At
    pick-up and drop-off locations</strong></p><ul><li><p>*<em>Good Experience: *</em>ability
    to contact assigned people.</p></li><li><p>*<em>Bad Experience: *</em>unable to
    contact people which may result in delay of the job.</p></li></ul><h2>User Journey
    and prioritization</h2><p>According to the book Algorithms to live by, when faced
    with unknown situation, people have the tendency to use explore/exploit tradeoff.
    To explore is to try out new things to gather knowledge. To exploit is to use
    that information to perform tasks efficiently.</p><h3>Exploration and Exploitation</h3><h3><strong>To
    Explore</strong></h3><p>In order to make onboarding for the first time drivers
    delightful and easy, I am using a method called progressive disclosure. It is
    an interaction technique that delays the appearance of advanced or little used
    options to reduce the number of errors and facilitate user learning.</p><p>The
    main objective is <strong>not to overwhelm the user with all the available options</strong>,
    for this we relegate the less frequent or more complex tasks to later steps focusing
    on the core user flow.</p><p>In this scenario, we are enabling the new users to
    go through our complete end-to-end user journey.</p><p><img src=\"https://cdn-images-1.medium.com/max/2288/1*Hp9IYSxWj2srAPjzCw8bpw.png\"
    alt=\"**Figure 4: **A simple linear end-to-end user journey\">**<em>Figure 4:
    *</em>A simple linear end-to-end user journey*</p><h3><strong>To Exploit</strong></h3><p>After
    the drivers are familiar with the flow, they may want to set their preferences
    in order to maximize their earnings by completing more jobs in a day. In this
    the technological and business context comes into play where the AI is providing
    more jobs along a optimized route and business is offering bonuses as appreciation
    to hard working drivers.</p><p><img src=\"https://cdn-images-1.medium.com/max/2458/1*BdzcZ1SaVnJZ5dJNgIee8w.png\"
    alt=\"**Figure 5: **advanced user flow with user preferences\">**<em>Figure 5:
    *</em>advanced user flow with user preferences*</p><h3>Information architecture</h3><p>In
    order to accomodate both beginner and expert users, I wanted to leverage an architecture
    where there is a single point of start and single prominent ability to take action
    in each stage of the journey.</p><p><img src=\"https://cdn-images-1.medium.com/max/2800/1*jPOP_fGaF25kYNdMabmPLg.png\"
    alt=\"**Figure 6: **Information architecture of the driver’s app\">**<em>Figure
    6: *</em>Information architecture of the driver’s app*</p><p>I did some quick
    rough sketching in order to identify how the above IA would look like in terms
    of screens and various other states based on the user journey mentioned above.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2604/1*ST5L233sewdR4mGlfT8Yzw.png\"
    alt=\"**Figure 7: **Snapshot of rough explorations of layout and states of user
    journey\">**<em>Figure 7: *</em>Snapshot of rough explorations of layout and states
    of user journey*</p><p>You can read more about the navigation in android here
    \U0001F447<a href=\"https://material.io/design/navigation/understanding-navigation.html#lateral-navigation\"><strong>Understanding
    navigation</strong><em>Types of navigation Lateral navigation refers to movement
    between screens at the same level of hierarchy. It enables…</em>material.io</a></p><h2>Wireframes</h2><p>I
    wanted to explore 2 types of app after understanding some of the current challenges
    and needs:</p><ul><li><p>in-app navigation app for full end-to-end experience</p></li><li><p>lightweight
    app that gets the job done</p></li></ul><p>Also while doing lo-fi prototyping,
    I made sure the screens were based on 2 important concepts</p><ol><li><p><strong>mapping</strong>
    call to actions or functionalities to a specific area or screen for <strong>affordance</strong></p></li><li><p>providing
    not more than 2 options to perform actions at any given screen</p></li></ol><h3>In-app
    navigation app for full end-to-end experience</h3><ul><li><p>it will give more
    control on the performance measurement and provide very personal suggestions to
    improve driver’s performance ultimately elevating entire experience.</p></li><li><p>remove
    any 3rd party reliability where the experience/performance cannot be owned</p></li></ul><h3>Lightweight
    app that get the job done</h3><ul><li><p>barebone app that is purely functional.</p></li><li><p>save
    data consumptions and battery usage.</p></li></ul><h3>1. Home</h3><p>In the wireframe
    below, we have established the layout and mapping of functionalities. As described
    in the IA, the current screen will have the linear flow of everything that is
    related to pickup/drop jobs.</p><p>If a user taps on the profile button, they
    will be redirected to the 2nd part of the IA, i.e profile and preferences related
    data.</p><p>This layout establishes a very simple navigation flow. There is a
    prominent button (CTA) that hints the user about the possible next action.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2766/1*KjnCCQnkBw0NF9rkugKBiw.png\"
    alt=\"**Figure 8: **Home screen (offline)\">**<em>Figure 8: *</em>Home screen
    (offline)*</p><h3>2. Online</h3><p>When user taps on *<em>Go Online *</em>button,
    they are presented with the above screen.</p><ul><li><p>The <strong>live status
    card</strong> is designed to give summary/overview of latest events and status.
    It can also be used to inform user with latest announcements by company. Users
    can swipe up the card to see any relevant information.</p></li><li><p>The *<em>jobs
    cards *</em>display essential information to drivers like from/to location, estimated
    fare, estimated time duration to help them make decisions.</p></li><li><p>The
    *<em>route overview *</em>informs drivers on the locations visually in order to
    clearly identify informations like traffic, road networks according to local norms.</p></li><li><p>The
    *<em>CTA, *</em>is as mentioned previously is made prominent with a clear label
    than informs the possibility of next actions.</p></li></ul><p><img src=\"https://cdn-images-1.medium.com/max/2450/1*3x87zdRk-80rDmsBT-24NQ.png\"
    alt=\"**Figure 9: **Home screen (online)\">**<em>Figure 9: *</em>Home screen (online)*</p><p>The
    rest of the wireframes can be viewed below.</p><p><img src=\"https://cdn-images-1.medium.com/max/9632/1*B6LaBVv8xBiWEXc3f9IYyw.png\"
    alt=\"**Figure 10: i**n-app navigation app user flow\"><em>**Figure 10: i</em><em>n-app
    navigation app user flow</em></p><h3>Lightweight version of the app</h3><p><img
    src=\"https://cdn-images-1.medium.com/max/9632/1*usOiyDVYT27AhB6M7IissQ.png\"
    alt=\"**Figure 11: **lightweight app user flow\">**<em>Figure 11: *</em>lightweight
    app user flow*</p><h2>Visual</h2><p>In mobile app interface design or design for
    any screen for that matter, it is often referenced that 90% of UI is typeface.
    I also prefer that way since I am not an illustrator and it is often hard to find
    icon packs or graphics that cover all my use-cases, looking for different icons
    with same theme and rhythm are next to impossible.</p><h2>Clean, Simple and Functional</h2><h3><strong>Typography</strong></h3><p>I
    have strictly followed the rules mentioned in material.io guidelines. The font
    I decided to use is SF Pro.<a href=\"https://material.io/design/typography/the-type-system.html#\"><strong>The
    type system</strong><em>The following units are used to express font size on Android,
    iOS, and the web. Platform Android iOS Web Font size unit…</em>material.io</a></p><h3><strong>Map
    design</strong></h3><p>In order to feel integrated to the brand, map design plays
    a crucial role and should complement the style and branding of the app. I have
    used mapbox to design the map styles. Since it is a very visual process of matching
    map with the theme of the app, Framer X Mapbox component was super helpful in
    exploration and adjustments.</p><p><img src=\"https://cdn-images-1.medium.com/max/5760/1*rdMeQs_ge-DN8GPELY_JjA.gif\"
    alt=\"**Figure 12: **Framer X Mapbox component\">**<em>Figure 12: *</em>Framer
    X Mapbox component*</p><p>In the following screens I have explored various themes
    and layout for the app that will complement the established branding of the company.
    I have also tried to integrated subtle signifiers that signifies user is either
    online or offline. It was very important to get the theme of the map match the
    brand of Grab and the app. The color choices for the map were based on</p><ul><li><p>not
    overwhelming users with irrelevant location data on the map.</p></li><li><p>light
    map style in order to highlight routes and priority locations.</p></li><li><p>less
    saturated colors for viewing pleasure.</p></li></ul><p><img src=\"https://cdn-images-1.medium.com/max/7776/1*GJUyCOsTlkGJGd7Py1fj5A.png\"
    alt=\"**Figure 13: **Different iterations of map style and card\">**<em>Figure
    13: *</em>Different iterations of map style and card*</p><p>The card is used to
    provide summary of the driver if the user is offline. The card design is aligned
    with the material guidelines.<a href=\"https://material.io/design/components/cards.html\"><strong>Cards</strong><em>Cards
    are surfaces that display content and actions on a single topic. They should be
    easy to scan for relevant and…</em>material.io</a></p><p><img src=\"https://cdn-images-1.medium.com/max/2400/1*bRklnWEjUlVa4YbLioeuEw.png\"
    alt=\"**Figure 14: **Card and FBA explained\">**<em>Figure 14: *</em>Card and
    FBA explained*</p><p>I have also used floating action button (FBA) which is very
    specific to Android design for prominent call to action. You can read more about
    it here<a href=\"https://material.io/design/components/buttons-floating-action-button.html\"><strong>Buttons:
    floating action button</strong><em>A FAB&#39;s icon should clearly illustrate
    its action. A FAB shouldn&#39;t contain notifications or actions found elsewhere
    on…</em>material.io</a></p><p>I have tried to used the brand color to highlight
    the card which not only signifies the availability of the user but also it helps
    reinforce the brand. On top of that, I have used higher contrast color for buttons
    which passes the Web Content Accessibility Guidelines (WCAG).</p><p>After drivers
    go online, one of the challenges I faced was to prioritize information shown on
    the card so that drivers are able to skim through the information quickly and
    take decisions faster.</p><p>Some of the assumptions I made for the screen designs
    are</p><ul><li><p>drivers use <strong>streets names to identify locations</strong>
    over <strong>landmarks</strong>.</p></li><li><p>drivers prefer to know estimated
    money they will earn from a particular job.</p></li><li><p>driver would like to
    know total distance for the job so that they make sure they have enough gas for
    the trip.</p></li></ul><p>I also experimented with different layouts for showing
    the above information.</p><p><img src=\"https://cdn-images-1.medium.com/max/2400/1*4VgZDWeG2iS5HBhyz9j9_w.png\"
    alt=\"**Figure 15: **Information layout in card exploration\">**<em>Figure 15:
    *</em>Information layout in card exploration*</p><p>I also experimented with different
    states of the live status card at the bottom.</p><p><img src=\"https://cdn-images-1.medium.com/max/2398/1*-4E5WRrMElCFa_d2R6mTHg.png\"
    alt=\"**Figure 16: **Exploring different live status cards\">**<em>Figure 16:
    *</em>Exploring different live status cards*</p><p>You can see some of the screens
    I designed and how they fit together in the user journey.</p><p><img src=\"https://cdn-images-1.medium.com/max/6240/1*K80QDE-87bM_ki-G1kNSNg.png\"
    alt=\"**Figure 17: **UI design from offline to pickup navigation\">**<em>Figure
    17: *</em>UI design from offline to pickup navigation*</p><h2>Conclusion</h2><p>I
    had a blast working on this design exercise. I am certain that I have just touched
    the surface of the entire delivery ecosystem and need a lot more contextual and
    user analysis to identify new challenges and needs. I would to like to list down
    some future explorations, I want to take on to make the driver’s experience more
    holistic and pleasant.</p><h3><strong>User friendly navigation for 2-wheelers.</strong></h3><p>This
    itself is another product which immensely elevate the driving experience for bikes
    and motorcycles. I really loved the concept designed by Johny Vivo in his case
    study <strong><em>Tangible Google map for bike/cycle riders.</em></strong><a href=\"https://medium.muz.li/features-of-navigation-that-make-everyone-love-it-ab470a17cf68\"><strong>Tangible
    Google map for bike/cycle riders</strong><em>Brief: An ingenious, electrical navigation
    tool to be fixed on the handle of a bike will light up according to the…</em>medium.muz.li</a></p><h3><strong>Picture
    in Picture (PIP) mode</strong></h3><p>One of the things I love about Android is
    the capability of the apps to communicate with central OS creatively but also
    between apps. This pip is used by Swiggy in India and I would love to explore
    various interactions Grab app can leverage.<a href=\"https://bytes.swiggy.com/making-swiggys-order-tracking-a-magical-experience-37464b878fc7\"><strong>Making
    Swiggy’s order tracking a magical experience.</strong><em>Picture in Picture Mode</em>bytes.swiggy.com</a></p><p>Thank
    you for reading. I will really appreciate any feedbacks or areas I can improve.</p><h3>**My
    portfolio \U0001F449 <a href=\"https://tridipthrizu.com/\">**https://tridipthrizu.com/</a></h3>"
  :author: UX Collective
  :topic: food
- :url: https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53?source=search_post---------0
  :title: Goodbye, Object Oriented Programming
  :content: "<p>I’ve been programming in Object Oriented languages for decades. The
    first OO language I used was C++ and then Smalltalk and finally .NET and Java.</p><p>I
    was gung-ho to leverage the benefits of <strong><em>Inheritance</em></strong>,
    <strong><em>Encapsulation</em></strong>, and <strong><em>Polymorphism</em></strong>.
    The Three Pillars of the Paradigm.</p><p>I was eager to gain the promise of Reuse
    and leverage the wisdom gained by those who came before me in this new and exciting
    landscape.</p><p>I couldn’t contain my excitement at the thought of mapping my
    real-world objects into their Classes and expected the whole world to fall neatly
    into place.</p><p><strong>I couldn’t have been more wrong.</strong></p><h2>Inheritance,
    the First Pillar to Fall</h2><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*T2x8IApyIXIs4nNexGryEw.png\"
    alt=\"\"></p><p>At first glance, Inheritance appears to be the biggest benefit
    of the Object Oriented Paradigm. All the simplistic examples of shape hierarchies
    that are paraded out as examples to the newly indoctrinated seem to make logical
    sense.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*o-Mdcrd9B5hTrrQKhcP8yA.png\"
    alt=\"\"></p><p>And Reuse is the word of the day. No… make that the year and perhaps
    evermore.</p><p>I swallowed this whole and rushed out into the world with my newfound
    insight.</p><h3>Banana Monkey Jungle Problem</h3><p>With religion in my heart
    and problems to solve, I started building Class Hierarchies and writing code.
    And all was right with the world.</p><p>I’ll never forget that day when I was
    ready to cash in on the promise of Reuse by inheriting from an existing class.
    This was the moment I had been waiting for.</p><p>A new project came along and
    I thought back to that Class that I was so fond of in my last project.</p><p>No
    problem. Reuse to the rescue. All I gotta do is simply grab that Class from the
    other project and use it.</p><p>Well… actually… not just that Class. We’re gonna
    need the parent Class. But… But that’s it.</p><p>Ugh… Wait… Looks like we gonna
    also need the parent’s parent too... And then… We’re going to need ALL of the
    parents. Okay… Okay… I handle this. No problem.</p><p>And great. Now it won’t
    compile. Why?? Oh, I see… <strong><em>This</em></strong> object contains <strong><em>this
    other</em></strong> object. So I’m gonna need that too. No problem.</p><p>Wait…
    I don’t just need <strong><em>that</em></strong> object. I need the object’s parent
    and its parent’s parent and so on and so on with every contained object and ALL
    the parents of what those contain along with their parent’s, parent’s, parent’s…</p><p>Ugh.</p><p>There’s
    a great quote by <strong><em>Joe Armstrong</em></strong>, the creator of Erlang:</p><blockquote><p>The
    problem with object-oriented languages is they’ve got all this implicit environment
    that they carry around with them. You wanted a banana but what you got was a gorilla
    holding the banana and the entire jungle.</p></blockquote><h3>Banana Monkey Jungle
    Solution</h3><p>I can tame this problem by not creating hierarchies that are too
    deep. But if Inheritance is the key to Reuse, then any limits I place on that
    mechanism will surely limit the benefits of Reuse. Right?</p><p>Right.</p><p>So
    what’s a poor Object Oriented Programmer, who’s had a healthy helping of the Kool-aid,
    to do?</p><p>Contain and Delegate. More on this later.</p><h3>The Diamond Problem</h3><p>Sooner
    or later, the following problem will rear its ugly and, depending on the language,
    unsolvable head.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*88yGno_LfU7P26RAHLGHCw.png\"
    alt=\"\"></p><p>Most OO languages do not support this, even though this <strong><em>seems</em></strong>
    to make logical sense. What’s so difficult about supporting this in OO languages?</p><p>Well,
    imagine the following pseudocode:</p><pre><code>Class PoweredDevice {}Class Scanner
    inherits from PoweredDevice {  function start() {  }}Class Printer inherits from
    PoweredDevice {  function start() {  }}Class Copier inherits from Scanner, Printer
    {}</code></pre><p>Notice that both the <em>Scanner</em> class and the <em>Printer</em>
    class implement a function called <em>start</em>.</p><p>So which start function
    does the <em>Copier</em> class inherit? The <em>Scanner</em> one? The <em>Printer</em>
    one? It can’t be both.</p><h3>The Diamond Solution</h3><p>The solution is simple.
    Don’t do that.</p><p>Yes that’s right. Most OO languages don’t let you do this.</p><p>But,
    but… what if I have to model this? I want my Reuse!</p><p>Then you must <strong>Contain
    and Delegate</strong>.</p><pre><code>Class PoweredDevice {}Class Scanner inherits
    from PoweredDevice {  function start() {  }}Class Printer inherits from PoweredDevice
    {  function start() {  }}Class Copier {  Scanner scanner  Printer printer  function
    start() {    printer.start()  }}</code></pre><p>Notice here that the <em>Copier</em>
    class now contains an instance of a <em>Printer</em> and of a <em>Scanner</em>.
    It delegates the <em>start</em> function to the <em>Printer</em> class’s implementation.
    It could just as easily delegated to the <em>Scanner</em>.</p><p>This problem
    is yet another crack in the Inheritance pillar.</p><h3>The Fragile Base Class
    Problem</h3><p>So I’m making my hierarchies shallow and keeping them from being
    cyclical. No diamonds for me.</p><p>And all was right with the world. That is
    until…</p><p>One day, my code works and the next day it stops working. Here’s
    the kicker. <strong>I didn’t change my code</strong>.</p><p>Well, maybe it’s a
    bug… But wait… <strong>Something did change</strong>…</p><p><strong>But it wasn’t
    in my code</strong>. Turns out the change was in the class that I inherited from.</p><p>How
    could a change in the Base class break my code??</p><p>This is how…</p><p>Imagine
    the following Base class (It’s written in Java, but it should be easy to understand
    if you don’t know Java):</p><pre><code>import java.util.ArrayList;public class
    Array{  private ArrayList&lt;Object&gt; a = new ArrayList&lt;Object&gt;();  public
    void add(Object element)  {    a.add(element);  }  public void addAll(Object elements[])
    \ {    for (int i = 0; i &lt; elements.length; ++i)      **a.add(elements[i]);
    // this line is going to be changed**  }}</code></pre><p><strong>IMPORTANT</strong>:
    Notice the commented line of code. This line is going to be changed later which
    will break things.</p><p>This class has 2 functions on its interface, <strong><em>add()</em></strong>
    and <strong><em>addAll()</em></strong>. The <strong><em>add()</em></strong> function
    will add a single element and <strong><em>addAll()</em></strong> will add multiple
    elements <strong>by calling the add function</strong>.</p><p>And here’s the Derived
    class:</p><pre><code>public class ArrayCount extends Array{  private int count
    = 0;  [@Override](http://twitter.com/Override)  public void add(Object element)
    \ {    super.add(element);    ++count;  }  [@Override](http://twitter.com/Override)
    \ public void addAll(Object elements[])  {    super.addAll(elements);    count
    += elements.length;  }}</code></pre><p>The <strong><em>ArrayCount</em></strong>
    class is a specialization of the general <strong><em>Array</em></strong> class.
    The <strong>only</strong> behavioral difference is that the <strong><em>ArrayCount</em></strong>
    keeps a <strong><em>count</em></strong> of the number of elements.</p><p>Let’s
    look at both of these classes in detail.</p><p>The <strong><em>Array</em></strong>
    <strong><em>add()</em></strong> adds an element to a local <strong><em>ArrayList</em></strong>.The
    <strong><em>Array</em></strong> <strong><em>addAll()</em></strong> calls the local
    <strong>ArrayList</strong> add for each element.</p><p>The <em>**ArrayCount</em>*
    <strong>add()</strong>* calls its parent’s <strong><em>add()</em></strong> and
    then increments the <strong><em>count</em></strong>.The <strong>ArrayCount</strong>
    <strong><em>addAll()</em></strong> calls its parent’s <strong><em>addAll()</em></strong>
    and then increments the <strong><em>count</em></strong> by the number of elements.</p><p>And
    all works fine.</p><p>Now for the <strong>breaking change</strong>. The commented
    line of code in the Base class is changed to the following:</p><pre><code>  public
    void addAll(Object elements[])  {    for (int i = 0; i &lt; elements.length; ++i)
    \     **add(elements[i]); // this line was changed**  }</code></pre><p>As far
    as the owner of the Base class is concerned, it still functions as advertised.
    <strong>And all of the automated tests still pass</strong>.</p><p>But the owner
    is oblivious to the Derived class. And the owner of Derived class is in for a
    rude awakening.</p><p>Now <strong><em>ArrayCount addAll()</em></strong> calls
    its parent’s <strong><em>addAll()</em></strong> which <strong>internally</strong>
    calls the <strong><em>add()</em></strong> which has been <strong>OVERRIDEN</strong>
    by the <strong>Derived</strong> class.</p><p>This causes the <strong><em>count</em></strong>
    to be incremented each time the <strong>Derived</strong> class’s <strong><em>add()</em></strong>
    is called and then it’s <strong>incremented</strong> <strong>AGAIN</strong> by
    the number of elements that were added in the <strong>Derived</strong> class’s
    <strong><em>addAll()</em></strong>.</p><p><strong>IT’S COUNTED TWICE.</strong></p><p>If
    this can happen, and it does, the author of the Derived class must KNOW how the
    Base class has been implemented. And they must be informed about every change
    in the Base class since it could break their Derived class in unpredictable ways.</p><p>Ugh!
    This huge crack is forever threatening the stability of precious Inheritance pillar.</p><h3>The
    Fragile Base Class Solution</h3><p>Once again Contain and Delegate to the rescue.</p><p>By
    using Contain and Delegate, we go from White Box programming to Black Box programming.
    With White Box programming, we have to look at the implementation of the base
    class.</p><p>With Black Box programming, we can be completely ignorant of the
    implementation since we cannot inject code into the Base class by overriding one
    of its functions. We only have to concern ourselves with the Interface.</p><p>This
    trend is disturbing…</p><p>Inheritance was supposed to be a huge win for Reuse.</p><p>Object
    Oriented languages don’t make Contain and Delegate easy to do. They were designed
    to make Inheritance easy.</p><p>If you’re like me, you’re starting to wonder about
    this Inheritance thing. But more important, this should shake your confidence
    in the power of Classification via Hierarchies.</p><h3>The Hierarchy Problem</h3><p>Every
    time I start at a new company, I struggle with the problem when I’m creating a
    place to put my Company Documents, e.g. the Employee Handbook.</p><p>Do I create
    a folder called Documents and then create a folder called Company in that?</p><p>Or
    do I create a folder called Company and then create a folder called Documents
    in that?</p><p>Both work. But which is right? Which is best?</p><p>The idea of
    Categorical Hierarchies was that there were Base Classes (parents) that were more
    general and that Derived Classes (children) were more specialized versions of
    those classes. And even more specialized as we make our way down the inheritance
    chain. (See the Shape Hierarchy above)</p><p>But if a parent and child could arbitrarily
    switch places, then clearly something is wrong with this model.</p><h3>The Hierarchy
    Solution</h3><p>What’s wrong is…</p><p><strong>Categorical Hierarchies don’t work</strong>.</p><p>So
    what are hierarchies good for?</p><p><strong>Containment</strong>.</p><p>If you
    look at the real world, you’ll see Containment (or Exclusive Ownership) Hierarchies
    everywhere.</p><p>What you won’t find is Categorical Hierarchies. Let that sink
    in for a moment. The Object Oriented Paradigm was predicated upon the real world,
    one filled with Objects. But then it uses a broken model, viz. Categorical Hierarchies,
    where there is no real-world analogy.</p><p>But the real world is filled with
    Containment Hierarchies. A great example of a Containment Hierarchy is your socks.
    They are in a sock drawer which is contained in one drawer in your dresser which
    is contained in your bedroom which is contained in your house, etc.</p><p>Directories
    on your hard drive are another example of a Containment Hierarchy. They contains
    files.</p><p>So how do we categorize then?</p><p>Well, if you think of the Company
    Documents, it pretty much doesn’t matter where I put them. I can put them in a
    folder of Documents or a folder called Stuff.</p><p>The way I categorize it is
    with tags. I tag the file with the following tags:</p><pre><code>DocumentCompanyHandbook</code></pre><p>Tags
    have no order or hierarchy. (This solves the Diamond Problem too.)</p><p>Tags
    are analogous to interfaces since you can have multiple types associated with
    the document.</p><p>But with so many cracks, it looks like the Inheritance pillar
    has fallen.</p><p><strong>Goodbye, Inheritance.</strong></p><h2>Encapsulation,
    the Second Pillar to Fall</h2><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*ta9gcTzwC_RxZxvD7EhlAw.png\"
    alt=\"\"></p><p>At first glance, Encapsulation appears to be second biggest benefit
    of Object Oriented Programming.</p><p>Object state variables are protected from
    outside access, i.e. they’re Encapsulated in the Object.</p><p>No longer will
    we have to worry about global variables that are being accessed by who-knows-who.</p><p>Encapsulation
    is a Safe for your variables.</p><p>This Encapsulation thing is INCREDIBLE!!</p><p>Long
    live Encapsulation…</p><p>That is until…</p><h3>The Reference Problem</h3><p>For
    efficiency sake, Objects are passed to functions NOT by their value but by reference.</p><p>What
    that means is that functions will not pass the Object, but instead pass a <strong><em>reference</em></strong>
    or pointer to the Object.</p><p>If an Object is passed by reference to an Object
    Constructor, the constructor can put that Object reference in a private variable
    which is protected by Encapsulation.</p><p>But the passed <strong>Object is NOT
    safe!</strong></p><p>Why not? Because some other piece of code has a pointer to
    the Object, viz. the code that called the Constructor. It MUST have a reference
    to the Object otherwise it couldn’t pass it to the Constructor?</p><h3>The Reference
    Solution</h3><p>The Constructor will have to Clone the passed in Object. And not
    a shallow clone but a deep clone, i.e. every object that is contained in the passed
    in Object and every object in those objects and so on and so on.</p><p>So much
    for efficiency.</p><p>And here’s the kicker. Not all objects can be Cloned. Some
    have Operating System resources associated with them making cloning useless at
    best or at worst impossible.</p><p>And <strong>EVERY</strong> single mainstream
    <strong>OO language</strong> has this problem.</p><p><strong>Goodbye, Encapsulation.</strong></p><h2>Polymorphism,
    the Third Pillar to Fall</h2><p><img src=\"https://cdn-images-1.medium.com/max/3000/1*PgDq0T-0PpSd-huvTaZxkw.png\"
    alt=\"\"></p><p>Polymorphism was the redheaded stepchild of the Object Oriented
    Trinity.</p><p>It’s sort of the Larry Fine of the group.</p><p>Everywhere they
    went he was there, but he was just a supporting character.</p><p>It’s not that
    Polymorphism isn’t great, it’s just that you don’t need an Object Oriented language
    to get this.</p><p>Interfaces will give you this. And without all of the baggage
    of OO.</p><p>And with Interfaces, there isn’t a limit to how many different behaviors
    you can mix in.</p><p>So without much ado, we say goodbye to <strong>OO</strong>
    Polymorphism and hello to <strong>interface-based</strong> Polymorphism.</p><h2>Broken
    Promises</h2><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*BKqtA-ynElomtJ7v6n5FHw.png\"
    alt=\"\"></p><p>Well, OO sure promised a lot in the early days. And these promises
    are still being made to naive programmers sitting in classrooms, reading blogs
    and taking online courses.</p><p>It’s taken me years to realize how OO lied to
    me. I too was wide-eyed and inexperienced and trusting.</p><p>And I got burned.</p><p><strong>Good-bye,
    Object Oriented Programming.</strong></p><h2>So then what?</h2><p>Hello, <strong>Functional
    Programming</strong>. It’s been so nice to work with you over the past few years.</p><p>Just
    so you know, I’m NOT taking any of your promises at face value. I’m going to have
    to see it to believe it.</p><p><strong>Once burned, twice shy and all.</strong></p><p>You
    understand.</p><p><em>If you liked this, click the\U0001F49A below so other people
    will see this here on Medium.</em></p><p>If you want to join a community of web
    developers learning and helping each other to develop web apps using Functional
    Programming in Elm please check out my Facebook Group, <strong><em>Learn Elm Programming</em></strong>
    <a href=\"https://www.facebook.com/groups/learnelm/\">https://www.facebook.com/groups/learnelm/</a></p><p>My
    Twitter: <a href=\"https://twitter.com/cscalfani\">@cscalfani</a></p>"
  :author: Charles Scalfani
  :topic: programming
- :url: https://medium.com/free-code-camp/what-programming-language-should-i-learn-first-%CA%87d%C4%B1%C9%B9%C9%94s%C9%90%CA%8C%C9%90%C9%BE-%C9%B9%C7%9D%CA%8Dsu%C9%90-19a33b0a467d?source=search_post---------1
  :title: What programming language should you learn first?
  :content: "<p>Most people’s journey toward learning to program starts with a single
    late-night Google search.</p><p>Usually it’s something like “Learn ______”</p><p>But
    how do they decide which language to search for?</p><blockquote><h1>“They always
    joke about Java on Silicon Valley. I guess I should learn that.”</h1></blockquote><p>Or:</p><blockquote><h1>“Haskell.
    So hot right now. Haskell.”</h1></blockquote><p>Or:</p><blockquote><h1>“That Go
    gopher is just so gosh-darn cute.”</h1></blockquote><p><img src=\"https://cdn-images-1.medium.com/max/7722/1*7kbd-tVk3co-9RiilFN1TA.png\"
    alt=\"\"></p><p>And then there’s the rest of us. We’ll probably search for something
    like:</p><blockquote><h1>“Which programming language should I learn first?”</h1></blockquote><p>Few
    questions are so commonly asked that they get the full infographic treatment.
    But this is one of them:</p><p><img src=\"https://cdn-images-1.medium.com/max/2864/1*OF594B5qtCJR9MFSRTI-5g.png\"
    alt=\"[Image credit](http://carlcheo.com/startcoding)\"><em><a href=\"http://carlcheo.com/startcoding\">Image
    credit</a></em></p><p>Deciding on your first programming language can be a fun
    process — kind of like one of those “Which Quentin Tarantino character are you?”
    personality quizzes.</p><p>But before you run off to learn Ruby because you enjoyed
    playing with Play-Doh as a kid, let me remind you: the stakes are pretty high
    here.</p><p>It will take you hundreds of hours of practice to become even remotely
    competent with your first programming language.</p><p>So you should consider the
    following factors:</p><ul><li><p>the job market for the language</p></li><li><p>the
    long term prospects for the language</p></li><li><p>how easy the language is to
    learn</p></li><li><p>what projects you can build while you’re learning (and share
    with friends so you can stay motivated)</p></li></ul><p>Every year brings new
    programming languages, and with them, new academic papers. And new web comics.</p><p>Seriously.
    Check out this gem from last month:</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*she624Vf-hrpgLdWd8hKKw.jpeg\"
    alt=\"\"></p><p>When it comes to choosing a first programming language, there’s
    no shortage of options. To narrow it down a bit, here are the most common Google
    searches related to learning programming, over the past 12 years:</p><p><img src=\"https://cdn-images-1.medium.com/max/2852/1*znaagCC5fn0-Dqy43ILeqQ.png\"
    alt=\"\"></p><p>Java has had its ups and downs.</p><p>Python has gradually risen
    to become the most popular choice.</p><p>But tucked away below these is the Little
    Engine That Could, slowly choo-choo’ing up in popularity over the past few years.
    And that engine is JavaScript.</p><p>Before I talk about these programming languages,
    let me clarify:</p><ul><li><p>I’m not arguing that any one language is objectively
    better than any other</p></li><li><p>I agree that developers should eventually
    learn more than one language</p></li><li><p>I’m arguing that first they should
    learn one language well. And — as you can probably guess from the upside down
    text in my headline — that language should be JavaScript.</p></li></ul><p>Let’s
    kick things off by exploring how programming is currently taught in school.</p><h2>Computer
    Science 101</h2><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*eu4cWRZXUt3ybNFzeT-q8Q.png\"
    alt=\"\"></p><p>Universities have traditionally taught programming under the umbrella
    of computer science, which itself is often seen as an extension of mathematics,
    or tie-in to an electrical engineering degree.</p><p>Of course, as you may have
    heard by now:</p><blockquote><h1>“Computer science education cannot make anybody
    an expert programmer any more than studying brushes and pigment can make somebody
    an expert painter.” — Eric S. Raymond</h1></blockquote><p>As of 2016, many universities
    still treat programming like it’s computer science, and computer science like
    it’s math.</p><p>As a result, many introductory programming courses focus on low-level-of-abstraction
    languages like C, or mathematically-focused languages like MATLAB.</p><p>And department
    chairs generally stay the course, pointing to annual programming language leaderboards
    like the <a href=\"http://www.tiobe.com/tiobe-index/\">TIOBE Index</a>, or this
    one from the <a href=\"http://spectrum.ieee.org/computing/software/the-2016-top-programming-languages\">IEEE</a>:</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*8yWwh_UrWeoxYSVsWTnEBA.png\"
    alt=\"\"></p><p>Most of these leaderboards look virtually identical to how they
    were 10 years ago.</p><p>But change does happen. Even in academia.</p><p>In 2014,
    Python <a href=\"http://cacm.acm.org/blogs/blog-cacm/176450-python-is-now-the-most-popular-introductory-teaching-language-at-top-u-s-universities/fulltext\">overtook
    Java</a> as a the most popular language of instruction at top US Computer Science
    programs.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*728HWv2YP3PjY1_QmGQg1g.png\"
    alt=\"\"></p><p>And yet another change is bound to… eventually… happen.</p><p>Because
    if you look at the languages actually used by the workforce, it paints a very
    different picture:</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*fUxhG3xtbuyAH-NCPYs4lQ.png\"
    alt=\"JavaScript is by far the most popular language used by the 49,397 developers
    who responded to Stack Overflow’s 2016 Survey.\"><em>JavaScript is by far the
    most popular language used by the 49,397 developers who responded to Stack Overflow’s
    2016 Survey.</em></p><p>More than half of all developers use JavaScript. It’s
    vital to front-end web development and increasingly relevant for back-end development.
    And it’s rapidly expanding into areas like game development and the Internet of
    Things.</p><p>Job postings also mention JavaScript more than any programming language
    other than Java:</p><p><img src=\"https://cdn-images-1.medium.com/max/2196/1*Nju6ZEORusBE-4UB290Ftw.png\"
    alt=\"Data from the world’s largest job posting aggregator, [Indeed.com](http://www.indeed.com/jobtrends/q-java-q-python-q-javascript-q-ruby-q-php-q-android-q-ios.html)\"><em>Data
    from the world’s largest job posting aggregator, <a href=\"http://www.indeed.com/jobtrends/q-java-q-python-q-javascript-q-ruby-q-php-q-android-q-ios.html\">Indeed.com</a></em></p><p>It’s
    no accident that we built our <a href=\"https://www.freecodecamp.com\">open source
    community</a>’s curriculum around JavaScript. Over the past two years, more than
    5,000 people have used Free Code Camp to get their first developer job.</p><p>I’m
    not advocating JavaScript because I teach it. I teach JavaScript because it’s
    the surest path to a first developer job.</p><p>But is JavaScript right for you?
    Is it worthy of being your first programming language? Let’s explore those factors
    I mentioned earlier.</p><h2>Factor #1: The job market</h2><p>If you’re learning
    to program purely out of intellectual curiosity, feel free to skip this factor.
    But if you — like the <a href=\"https://medium.freecodecamp.com/we-asked-15-000-people-who-they-are-and-how-theyre-learning-to-code-4104e29b2781#.30hlfqj32\">vast
    majority of people learning to program</a> — want to use this skill to get a job,
    this is an important consideration.</p><p>As I mentioned earlier, Java is mentioned
    in more job postings than any other programming language. JavaScript is a close
    second.</p><p>But here’s the thing about JavaScript: even though it’s been around
    for 20 years, it only recently became a serious tool that companies like Netflix,
    Walmart, and PayPal would build entire applications around.</p><p>As a result,
    plenty of companies are hiring JavaScript developers, but there just aren’t that
    many on the job market.</p><p><img src=\"https://cdn-images-1.medium.com/max/2170/1*EanhlHoMIsF-By0gRrAcYQ.png\"
    alt=\"Data from [Indeed.com](http://www.indeed.com/jobtrends/q-java-q-python-q-javascript-q-ruby-q-php-q-android-q-ios.html)\"><em>Data
    from <a href=\"http://www.indeed.com/jobtrends/q-java-q-python-q-javascript-q-ruby-q-php-q-android-q-ios.html\">Indeed.com</a></em></p><p>There
    are 2.7 Java developers competing for every open Java position. Competition for
    PHP and iOS jobs is similarly fierce.</p><p>But for every open JavaScript position,
    there are only 0.6 JavaScript developers. It is very much a sellers’ market for
    developers with JavaScript skills.</p><h2>Factor #2: The long term prospects</h2><p>The
    average JavaScript project receives twice as many pull requests as the average
    Java, Python, or Ruby project. And on top of this, JavaScript is growing faster
    than any other popular language.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*-GxMW33X9Gb5lboyN02hKw.png\"
    alt=\"Source: The GitHub’s [2016 State of the Octoverse](https://octoverse.github.com/)\"><em>Source:
    The GitHub’s <a href=\"https://octoverse.github.com/\">2016 State of the Octoverse</a></em></p><p>JavaScript’s
    ecosystem also benefits from a heavy investment of money and engineering talent
    from companies like Google, Microsoft, Facebook, and Netflix.</p><p>For example,
    TypeScript (a statically-typed superset of JavaScript) has more than 100 open
    source contributors, many of whom are Microsoft and Google employees being paid
    to work on it.</p><p>This type of inter-company cooperation is harder to find
    with Java. Oracle — who effectively owns Java through its acquisition of Sun Microsystems
    — <a href=\"https://medium.freecodecamp.com/why-todays-victory-over-oracle-matters-so-much-to-developers-4e24b4a368b5#.pk8efc9um\">often
    sues</a> companies who try to expand upon it.</p><h2>Factor #3: Difficulty to
    learn</h2><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*d8TITW3skawGd-ioyHh2nQ.png\"
    alt=\"This is a parody of an [XKCD comic](https://xkcd.com/435/).\"><em>This is
    a parody of an <a href=\"https://xkcd.com/435/\">XKCD comic</a>.</em></p><p>Most
    programmers would agree that high-level scripting languages are relatively easy
    to learn. JavaScript falls into this category, along with Python and Ruby.</p><p>Even
    though universities still teach languages like Java and C++ as first languages,
    they’re considerably harder to learn.</p><h2>Factor #4: Projects you can build
    with it</h2><p>This is where JavaScript really shines. JavaScript runs on any
    device that has a browser, right there in the browser. You can build basically
    anything with JavaScript, and share it anywhere.</p><p>Because of JavaScript’s
    ubiquity, Stack Overflow co-founder Jeff Atwood coined his now-famous law:</p><blockquote><h1>“Any
    application that <em>can</em> be written in JavaScript, <em>will</em> eventually
    be written in JavaScript.”</h1></blockquote><p>And <a href=\"https://www.reddit.com/r/atwoodslaw/\">with
    each passing month</a>, Atwood’s Law holds strong.</p><p>Java once promised to
    run everywhere, too. You may remember <a href=\"http://motherboard.vice.com/read/a-brief-history-of-the-java-applet\">Java
    Applets</a>. Oracle officially killed them off earlier this year.</p><p>Python
    suffers from much the same problems:</p><blockquote><h1>“How can I give this game
    I made to my friend? Even better, is there a way can I put this on my phone so
    I can show it to kids at school without them having to install it? Um.” — James
    Hague in <a href=\"http://prog21.dadgum.com/203.html\">Retiring Python as a Teaching
    Language</a></h1></blockquote><p>By contrast, here are some apps that members
    of our open source community built in their browsers on CodePen. You can click
    through and use these right in your browser:</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*i-bre5pF0rk6Wgz5yjugjw.png\"
    alt=\"[1970s style Simon game](http://s.codepen.io/adambeagle/debug/qOamaz)\"><em><a
    href=\"http://s.codepen.io/adambeagle/debug/qOamaz\">1970s style Simon game</a></em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2924/1*GtVQI4LUU0-_Soyhi93LBg.png\"
    alt=\"[Conway’s Game of Life](http://s.codepen.io/safx/debug/Ewcym)\"><em><a href=\"http://s.codepen.io/safx/debug/Ewcym\">Conway’s
    Game of Life</a></em></p><p><img src=\"https://cdn-images-1.medium.com/max/3764/1*jkx-Vf8esZ0GYv_L6S2i9A.png\"
    alt=\"[Star Wars-themed Wikipedia Search](http://s.codepen.io/duttakapil/debug/BKGjOa)\"><em><a
    href=\"http://s.codepen.io/duttakapil/debug/BKGjOa\">Star Wars-themed Wikipedia
    Search</a></em></p><p><img src=\"https://cdn-images-1.medium.com/max/2190/1*PiI9yXaUNJANSffWvdotDQ.png\"
    alt=\"[A roguelike dungeon crawler game](http://s.codepen.io/Megabyteceer/debug/qbXJMQ)\"><em><a
    href=\"http://s.codepen.io/Megabyteceer/debug/qbXJMQ\">A roguelike dungeon crawler
    game</a></em></p><h2>Learn one language well. Then learn a second one.</h2><p>If
    you keep jumping from language to language, <a href=\"https://medium.freecodecamp.com/a-cautionary-tale-of-learning-to-code-my-own-eddb24d9d5a7\">you
    won’t get far</a>.</p><p>In order to move beyond the basics, you need to learn
    your first language well. Then your second language will be much, much easier.</p><p>From
    there, you can branch out, and become a more well-rounded developer by learning
    lots of languages:</p><ul><li><p>C is a great way to learn how computers actually
    work in terms of memory management, and is useful in high-performance computing</p></li><li><p>C++
    is great for game development.</p></li><li><p>Python is awesome for science and
    statistics.</p></li><li><p>Java is important if you want to work at large tech
    companies.</p></li></ul><p><strong>But learn JavaScript first.</strong></p><p>OK,
    now I’m going to attempt the impossible — I’m going to try and anticipate objections
    from the comments section.</p><h2>Objection #1: But isn’t JavaScript slow?</h2><p>JavaScript
    is — for most practical purposes — as fast as high-performance languages.</p><p>JavaScript
    (Node.js) is orders of magnitude faster than Python, Ruby, and PHP.</p><p>It is
    also nearly as fast as high-performance languages like C++, Java, and Go.</p><p>Here
    are the results of the most comprehensive recent cross-language benchmark:</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2642/1*h91cfcE8NlgyHfm4CLbV6w.png\"
    alt=\"\"></p><h2>Objection #2: But JavaScript isn’t statically typed</h2><p>Like
    Python and Ruby, JavaScript is dynamically typed, which is convenient. But you
    can get into trouble. Here I intend for exampleArray to be an array. I set its
    values, then check its length — meaning the number of elements it contains.</p><pre><code>exampleArray
    = [1, 2]-&gt; [1, 2]exampleArray.length-&gt; 2</code></pre><p>But then I accidentally
    assign it to be a string.</p><pre><code>exampleArray = “text”-&gt; “text”exampleArray.length-&gt;
    4</code></pre><p>These kinds of errors happen all the time in dynamically typed
    languages. Most developers just put checks in place to prevent them, and write
    tests accordingly.</p><p>If you absolutely must have static typing in your first
    programming language, then I still recommend you learn JavaScript first. Then
    you can quickly pick up TypeScript.</p><blockquote><h1>“Typescript has a learning
    curve, but if you already know JavaScript, it will be a smooth one.” — <a href=\"https://medium.freecodecamp.com/when-should-i-use-typescript-311cb5fe801b#.j920zs7g2\">Alex
    Ewerlöf on TypeScript</a></h1></blockquote><h2>Objection #3: But I really want
    to make a mobile app</h2><p>I still recommend learning JavaScript first.</p><ol><li><p>JavaScript
    features several tools for making native mobile apps, such as <a href=\"http://ngcordova.com/\">Angular
    Cordova</a> and <a href=\"https://facebook.github.io/react-native/\">React Native</a>.</p></li><li><p>In
    order for your mobile app to actually do anything interesting, it will probably
    need a proper back end, which you’ll want to build with a proper web development
    framework, like Node.js + Express.js.</p></li></ol><p>Also, it’s worth pointing
    out that the mobile app development’s best days may very well be behind it.</p><p>For
    starters, as much as people use mobile apps, nearly half of all developer jobs
    are web development. Compare this with a mere 8% of jobs that involve mobile app
    development.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*6RsFHNgrzFyX-9p37FVtpA.jpeg\"
    alt=\"The occupations of 49,525 developers, based on responses to the [2016 Stack
    Overflow](https://medium.freecodecamp.com/2-out-of-3-developers-are-self-taught-and-other-insights-from-stack-overflow-s-2016-survey-of-50-8cf0ee5d4c21#.f39zmdujb)
    survey.\"><em>The occupations of 49,525 developers, based on responses to the
    <a href=\"https://medium.freecodecamp.com/2-out-of-3-developers-are-self-taught-and-other-insights-from-stack-overflow-s-2016-survey-of-50-8cf0ee5d4c21#.f39zmdujb\">2016
    Stack Overflow</a> survey.</em></p><p>The grand vision of “there’s an app for
    that” has not come to pass. Instead, most smartphone owners have <a href=\"http://www.recode.net/2016/9/16/12933780/average-app-downloads-per-month-comscore\">stopped
    downloading new apps</a>.</p><p>Sure — they still use apps. Mostly Facebook, Google
    Maps, and handful of others. As such, much of the demand for mobile app developers
    is concentrated in a few large employers.</p><p>The outlook for those mobile development
    jobs is hard to forecast. Many aspects of developing, maintaining, and distributing
    mobile apps are easier with JavaScript. So companies like Facebook and Google
    are investing heavily in better tools for building these using JavaScript.</p><p>As
    of 2016, pretty much all development is web development. Everything touches that
    big platform that is “the web.” And the next wave of devices that you’ll talk
    to around your home, and cars that pick your kids up from school — they’ll all
    be piped together using the web, too.</p><p>And that means JavaScript.</p><h2>Objection
    #4: Isn’t JavaScript a toy language that was written in 10 days?</h2><iframe src=\"https://medium.com/media/725495f00cb47d90634eff9263efdd7c\"
    frameborder=0></iframe><p>JavaScript has a <a href=\"https://www.w3.org/community/webed/wiki/A_Short_History_of_JavaScript\">quirky
    history</a>.</p><p>You will undoubtedly hear people crack jokes at its expense.</p><iframe
    src=\"https://medium.com/media/a97448549c9925f181c742f6dff5626e\" frameborder=0></iframe><p>Well
    people love to hate on C++, too. And like JavaScript, C++ has succeeded despite
    this hate, and now it’s pretty much everywhere as well.</p><p>So if anybody ever
    gives you a hard time for learning JavaScript instead of elite-language-of-the-week,
    just remember the famous words of the guy who created C++:</p><blockquote><h1>“There
    are only two kinds of programming languages: those people always bitch about and
    those nobody uses.” — Bjarne Stroustrup</h1></blockquote><p><strong>I only write
    about programming and technology. If you <a href=\"https://twitter.com/ossia\">follow
    me on Twitter</a> I won’t waste your time. \U0001F44D</strong></p><p><center><iframe
    width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/VqiEhZYmvKk\"
    frameborder=\"0\" allowfullscreen></iframe></center></p>"
  :author: freeCodeCamp.org
  :topic: programming
- :url: https://medium.com/@tashian/the-art-of-computer-programming-by-donald-knuth-82e275c8764f?source=search_post---------2
  :title: "“The Art of Computer Programming” by Donald Knuth"
  :content: '<p>Donald Knuth at the IBM 650 console; illustration by Siobhán K Cronin</p><p>Some
    books look so beautiful on the shelf. Not only for their aesthetic virtues, but
    for what their spines say about the owner. The four hardbound volumes of Donald
    Knuth’s “The Art of Computer Programming” — all snug in their dark purple case
    — send a clear message: Step aside, Muggles, because you’re in the presence of
    a Real Programmer. A Serious Practitioner of Computer Science.</p><p>Bill Gates
    once said, “If you think you’re a really good programmer… read Art of Computer
    Programming… You should definitely send me a résumé if you can read the whole
    thing.”</p><p>For me, the act of ordering this series felt like a major professional
    accomplishment. I allocated a special place on my shelf for these books before
    they arrived, as one might make room out in the barn for a shiny new mainframe.</p><p>The
    weight of their authority was so great that they became immovable. So I never
    read them, and this isn’t really a book review of the series. Sorry not sorry.</p><p>This
    also isn’t one of those reviews where the reviewer walked out of the movie early,
    in disgust. Knuth’s books are epic, and he is truly a master of the fundamentals
    of computer programming, its origins in mathematics, and the intersection of the
    two fields. So much respect.</p><p>It’s just that I’m not worthy of the depths
    of TAOCP.</p><p>I’ve read the preface of Volume 1 three or four times, and I’ve
    tried to imagine how it would feel to complete the entire series. I would disconnect
    from the Internet for a few months and move alone to a cabin on a Wyoming mountaintop
    with a ream of paper, a couple boxes of pencils, TAOCP, a few supplementary math
    books, and a 90 day supply of Adderall.</p><p>I would take long hikes in the mountains,
    thinking deeply about the fundamental algorithms. No laptop, no wifi, no electricity
    — these are all distractions. After sunset I’d read and work problem sets by candlelight,
    and my dreams would be joyrides through a universe of harmonic numbers, binomial
    coefficients, and nonlinear data structures.</p><p>But that’s never going to happen.
    So, yesterday as I was reviewing the preface again, I felt I should pause and
    reflect on my journey so far.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*RPiGQBLThunoBjN8OtxHnw.png"
    alt=""></p><p>Such is Knuth’s love of computers, that the entire series is dedicated
    to one: the IBM 650 mainframe that was popular in the 1950s. It was the first
    “mass-produced” computer and it cost a few hundred thousand in todays dollars.
    This is the machine Knuth cut his teeth on.</p><p>To be excited about computers
    in the 1950s was to be excited about applied math. The early IBM 650 had basic
    math operations and control structures, and it was built around decimal math,
    not binary.</p><p>There was no display and no command line. The human was the
    operating system: a control console allowed The Operator to start and stop programs
    and so on.</p><p>Say you wanted to write a program to generate fibonacci numbers.
    FORTRAN didn’t exist yet — that came four years after the 650 was released. So,
    in those early years you had to write out the machine-level operation codes for
    what you wanted to do, and then hand-assemble your program and punch out a deck
    of cards with your program stamped into them using a key punch machine.</p><p>There
    were a couple ways to optimize your program. You could design a faster algorithm
    or deploy data structures that are better suited to the problem.</p><p>You could
    also optimize how your program loads and runs — working with the grain of the
    machinery. Magnetic drum memory, a forerunner to the modern hard drive, was the
    primary memory for the 650, and it was very slow. So your goal as a programmer
    was to minimize the rotational latency of the 12,500 RPM drum machine such that
    all of your code and data would be easily within reach of the CPU at the right
    moment during execution. You wanted perfect synchronization between the CPU cycles
    of the mainframe and these drum memory rotations.</p><p>Computer programming was
    forged here, at the rough intersection of mathematics and mechanical engineering.
    It could be completely understood by one very smart person. That is no longer
    true. Knuth and the programmers of that era had to be smarter than the IBM 650.
    They understood every vacuum tube and control switch. We are no longer smarter
    than our computers in this way.</p><p>In the first paragraph of the preface, Knuth
    calls programming “an aesthetic experience much like composing poetry or painting.”
    I think this aesthetic beauty still captivates every aspiring programmer. After
    traveling a great distance along an exponential curve since the 1950s, it’s comforting
    to know that beauty remains intact. Though we no longer hammer out software and
    feed it into a hot, loud calculator, the beauty of programming still infuses every
    layer of abstraction.</p><p>I wonder how the performative nature of writing software
    was shaped by the constraints of hand assembly within 8kb of memory, and by the
    labor of crafting punch cards. I imagine writing code in Knuth’s time had the
    thrill and the risk of walking a high wire. Small mistakes were painful.</p><p>Since
    then, decades of abstraction have stacked up like a pile of mattresses, and most
    of us just roll around on top.</p><p>The short feedback loop and malleability
    of today’s software comes with a price. While software development can be much
    more playful today, it’s also easier to hack before we think, and it can create
    a lot of problems. Great software still does require a lot of thought, and with
    ease we lose rigor.</p><p>The IBM 650’s constraints were hard and fast, and today’s
    constraints are softer and often self-imposed. The tiny screens of mobile phones
    have heralded a wave of innovations in economical software and interface design.
    And it strikes me that whoever chooses the constraints of the target development
    environment is choosing the playing field for our future innovations.</p>'
  :author: Carl Tashian
  :topic: programming
- :url: https://medium.com/free-code-camp/how-i-went-from-programming-with-a-feature-phone-to-working-for-an-mit-startup-40ca3be4fa0f?source=search_post---------3
  :title: How I went from programming with a Nokia feature phone to working for an
    MIT Startup
  :content: "<p>In 2012, I was just a village boy from Nigeria who had nothing but
    a dream and a Nokia feature (J2ME) phone. Today, I’m a 19 year old Android developer
    who has worked on over 50 apps and currently works for an MIT startup. My name
    is Elvis Chidera and this is my story.</p><p><img src=\"https://cdn-images-1.medium.com/max/2560/1*wD_pWV3M0ZnAAimGMD_i0g.jpeg\"
    alt=\"\"></p><p>My journey began with my curiosity about how to build a website.
    Growing up, I spent a lot of time online as I loved downloading games and reading
    <a href=\"https://www.societyofrobots.com\">Society Of Robots</a>. I would save
    for weeks to buy a 10 MB internet bundle for 100 Naira ($0.28), and back in 2012,
    that could last for a month.</p><p>When learning to code, I took the first and
    simple step of doing a Google search about how to build a website. I got millions
    of results. Not knowing where to start, I clicked on the first link I saw, which
    was from <a href=\"http://www.w3schools.com\">W3CSchools</a>.</p><p>The article
    explained that I need to learn some languages (HTML and CSS) to be able to build
    a website. I checked some other resources to confirm that I actually needed to
    learn these things. Then I started the W3CSchools HTML and CSS course.</p><p>Each
    day after school I would head over to the website to study. Initially, the code
    examples and explanations didn’t make much sense to me. But I kept studying regardless.
    I referred to various tutorials when I was stuck. This helped me view the problems
    I encountered from many different angles.</p><p>When I was younger, I struggled
    with my reading and writing skills in school. I was only able to get better at
    them through continuous practice. So I already had this model in my head: if I
    continue to practice — no matter how long it takes — I will ultimately be able
    to understand these programming languages.</p><p>A few months of intensive learning
    got me acquainted with HTML, CSS, and JavaScript. While I was still learning,
    a friend showed me the movie “The Social Network.” And after watching it, I was
    super motivated to build the next big thing. Thank you, Hollywood.</p><p>I had
    a eureka moment a few days later. The idea was to build a better version of Facebook.
    At that time, you couldn’t see your Facebook friends that were online. Also, Facebook
    was built to connect with people you already knew in real life.</p><p>So that
    was my billion dollar startup idea: build a social network with all the features
    Facebook didn’t have. Mark Zuckerberg - I’m coming for you - or so I thought.</p><p>I
    spent the next few months building a better social network by adding any feature
    I could even think of using.</p><p>I was naively confident that I was going to
    win.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*hr0jA_thHZpZ7GFKgWlGMA.png\"
    alt=\"\"></p><p>After completing the project, I did what anybody without an advertising
    budget would do. I spammed the internet for days and days.</p><p>After several
    days of marketing, reality slapped me hard in the face. I only got 200 users,
    which I had to keep begging to come back to the site.</p><p>I was depressed! A
    few months of hard work spent in vain. This taught me two important lessons the
    hard way:</p><ol><li><p>I needed to recognize the <a href=\"http://platformed.info/seeding-two-sided-businesses-strategy-chicken-and-egg-problem/\">cold
    start AKA chicken and egg problem</a> that new platforms face early on.</p></li><li><p>I
    was building something I *<em>thought *</em>people needed. But I ended up building
    just another <a href=\"https://hackernoon.com/12-signs-youre-working-in-a-feature-factory-44a5b938d6a2\">feature
    factory</a>.</p></li></ol><p>While it’s okay to be motivated by a project, you
    also need to know when you’re headed down a dead end. I spent a few more months
    trying to see if I could get more people on my site, but retention numbers kept
    dancing toward 0%, and I eventually gave up on the project.</p><p>But I was motivated
    by the motto of Lewis in <a href=\"https://en.wikipedia.org/wiki/Meet_the_Robinsons\">Meet
    the Robinsons</a>, “Keep moving forward.”</p><p>Seeking inspiration for my next
    project, I reflected on the needs of my local community. This time around, I wanted
    to build something that people actually needed and are willing to pay for.</p><p>I
    came up with an idea to make text messages cheaper and easier to send to multiple
    people at a time. This was more like Whatsapp backed by SMS. After speaking to
    different people about it, I decided this was the next thing to do.</p><p>I named
    the project Xmx Me. It was going to be a J2ME app. This meant I had to learn Java.
    Looking back in time, I have to admit that it was the biggest challenge I’d yet
    encountered. I had to read some tutorials several times to fully understand them.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*TSQPIwq4-jh_oK85PbAShQ.jpeg\"
    alt=\"Promotional graphics for Xmx Me\"><em>Promotional graphics for Xmx Me</em></p><p>After
    completing a few Java courses, I was ready for work. Relentlessly typing one line
    of code after another, I carefully built the backend with PHP, the frontend with
    HTML and CSS, and the mobile app with J2ME. The app was coming to life.</p><p>But
    here’s the thing — I didn’t own a laptop. I was building out all of these pieces
    of my app on my J2ME feature phone.</p><p>Wait. What?</p><p>You read that right.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*sNfEGc2wTs-aR4Mg5_0ODQ.jpeg\"
    alt=\"I wrote my code on a Nokia 2690\"><em>I wrote my code on a Nokia 2690</em></p><h2>How
    I built my production apps on a feature phone</h2><p>At this point in my life,
    I had never actually programmed on a laptop. I simply couldn’t afford one. My
    parents wanted to help me. But it was difficult for them because they had to choose
    between paying my school fees (and other necessities) versus buying me a laptop.</p><p>I
    hadn’t used a laptop before, and my only interaction with computers was at cyber
    cafes. I remember watching some videos about how to use a computer (left click,
    drag, drop, and other basic stuff) and then walking into a cyber cafe to practice
    them.</p><p>I was lucky that a relative had gifted me a feature phone (<a href=\"https://www.gsmarena.com/nokia_2690-3004.php\">The
    Nokia 2690</a>). This phone changed my life. It’s what I used to develop Xmx Me,
    my failed social network, and several other projects.</p><p>With nothing but a
    phone and the will to succeed, hour after hour I typed my code on that tiny keyboard.
    I was lucky again to have found an app that allowed me to compile my <a href=\"http://elvischidera.blogspot.com.ng/2013/09/create-j2me-apps-with-your-mobile-phone.html\">J2ME
    projects</a>. Yes, building a J2ME app on a J2ME phone <em>is</em> possible.</p><p>The
    SDK was resource hungry, so my battery often died. I would carry on, writing out
    all my code on paper and try to review it for any syntax errors.</p><p>I don’t
    think I’ll fail any Java whiteboard coding tests after having done this for so
    long. :)</p><h2>Launching my group SMS app</h2><p>After several months, I had
    the product ready. I was able to convince someone I met on an internet forum to
    help me pay for the <a href=\"http://www.zettahost.com/\">website hosting</a>
    and the bulk <a href=\"http://www.80kobo.com/\">SMS service</a> for a limited
    number of SMS units.</p><p>The app launch went well — at least better than my
    first project. We got some local press, and one of Kenya’s top blogs even <a href=\"https://techmoran.com/xmx-mebulk-sms-app-developed-by-a-14-year-old-boy-from-port-harcourtnigeria/\">wrote
    about the app</a>. We grew organically to about 5,000 users.</p><p>We were in
    business. And we were getting transactions a couple of times a day.</p><p>With
    no prior experience running a business, I made some huge mistakes, some of which
    were:</p><ol><li><p>There was no easy way to charge users in Nigeria. Not everybody
    has a debit card. So I allowed people to pay using their mobile phone credit.
    The problem here was, there was no official way to convert this credit into money.
    I had to sell to vendors, who bought it back at a ridiculously low rates.</p></li><li><p>There
    was little to no accounting. I was losing money and I didn’t know about it. I
    didn’t factor in some overhead costs. There were several missing pieces.</p></li></ol><p>I
    was considering selling the App to buy a laptop. Not knowing what to do, I went
    <a href=\"http://www.nairaland.com/1339891/14-year-old-nigerian-bulk-sms-app\">online
    to beg</a>. Yes, I was that shameless and hungry. It didn’t turn out well. Somebody
    accused of being a scammer, which I eventually resolved. Again, I was inexperienced
    and I handled the situation poorly.</p><p>After borrowing money multiple times
    to keep the business running, I decided to throw in the towel. Looking back, I
    think this was a bad decision. With a little more learning and experience, I would
    have been able to make things better. Maybe I didn’t see any future in an SMS
    app. Well, I released a throwback app recently, and many of the users still use
    it and love it.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*gjQIIY_feDLAPIGGumvVfA.png\"
    alt=\"\"></p><h2>Lessons I learned along the way</h2><p>I realized that if I was
    going to be able to afford a computer anytime soon, I would need to work hard
    for it. So I began saving all the money I could. I cut my daily expenses and lived
    as simple a life as possible. I asked my relatives for help. I even sold some
    personal belongings to raise money for the laptop.</p><p>Still, it wasn’t enough.
    Determined to achieve my goal, I took on a freelance job of building a website
    so I could earn the remaining sum.</p><p>How do you use a feature phone to build
    a website designed for PC users? Simple: have a Facebook friend who you disturb
    every night to view your website on his computer and give you feedback. It was
    cheaper than going to a cyber cafe repeatedly.</p><p>I also made heavy use of
    <a href=\"http://ideone.com\">Ideone</a> which allowed me to run my PHP scripts
    to see if they work before uploading them.</p><p>Well, I finally was able to get
    that laptop. I can still remember the feeling of joy I had. That smell of plastic
    when you unbox a brand new cheap computer. I could now work on any project I wanted
    without feeling restricted because of my phone.</p><p>Since J2ME devices were
    slowly dying out, I eventually switched to building for the Android platform.
    My Java skills were still relevant there. I just needed to learn some platform-specific
    things.</p><p>The next year in 2015, after high school, I decided to start working
    to support my family. So I began freelancing. I was always active in local forums
    and groups, looking for people who wanted help with building an Android app.</p><p>Because
    I didn’t have a good portfolio, I would build apps for some people before they
    even paid, without any guarantee that I’d be paid. I was stung by this approach
    several times, but it allowed me to build a good enough portfolio.</p><p>I would
    like to share something I wish I knew while I was freelancing:</p><blockquote><h1>Don’t
    spread yourself too thin. Taking up too many responsibilities is not good for
    your health, your family, or the clients.</h1></blockquote><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*Lc_U45aDF-OjboxDjyWnhg.jpeg\"
    alt=\"\"></p><p>I worked with several clients from different parts of Nigeria
    who loved my work. I eventually got a full-time job in Lagos, Nigeria after working
    with a client remotely.</p><p>Then, while going through my news feed, I saw a
    job advert for an Android developer position at <a href=\"http://www.dotlearn.org\">Dot
    Learn</a>. I looked them up and realized they are an MIT startup working in an
    education technology field that I was passionate about, and in a market I understood.
    They had a unique idea: to solve the problem of access to online education by
    making educational videos that are extremely data-light — as low as 1MB for every
    hour of video.</p><p>This was almost unbelievable, and I knew it was key to making
    education very accessible to a lot of people.</p><p>I am very passionate about
    revolutionizing education in Africa. In fact, I have already built a free (ad-supported)
    exam prep app called <a href=\"https://play.google.com/store/apps/details?id=elvis10ten.com.past_questions&hl=en\">PrepUp</a>
    that has over 35,000+ installs and was one of the finalists at the <a href=\"https://techpoint.ng/2016/03/24/west-africa-mobile-awards-2016-finalists/\">West
    Africa Mobile Awards in 2016</a>. So I wanted to be part of what Dot Learn was
    building.</p><p>So I went through the developer job requirements and I felt I
    had a chance. But impostor syndrome didn’t want me to be great.</p><p>For days
    I had conflicting thoughts. Should I apply or not?</p><p>Then I realized one thing:
    I had nothing to lose.</p><p>The worst that could happen would be that I got rejected.
    But I wouldn’t die. So, I went ahead and applied.</p><p><img src=\"https://cdn-images-1.medium.com/max/2142/1*8cPBViJqnZ6LdpRtpvKhFw.jpeg\"
    alt=\"\"></p><p>Fingers crossed, I started re-watching several of the videos I
    had downloaded from <a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/\">MIT
    OCW</a>. I also spent some nights watching some <a href=\"https://www.youtube.com/channel/UCxX9wt5FWQUAAz4UrysqK9A/videos\">coding
    interview solution videos</a>. In the past, I had mostly been hired based on my
    strong portfolio and previous job experience, but I didn’t want to be caught off
    guard if they gave me a coding interview.</p><p>Well, long story short: after
    lots of preparation, answering some difficult questions, a phone interview, and
    some coding projects, I was accepted.</p><p>I couldn’t believe it. I was ecstatic.</p><p>Looking
    back at it, this was one of my best decisions.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*1E29yDhfRRk_xiqdjNygtA.jpeg\"
    alt=\"\"></p><p>Working at Dotlearn, I have had exponential growth in my career
    and have met with lots of awesome people from MIT, Harvard, and other great places.</p><p>From
    attending big events like the <a href=\"https://techcrunch.com/video/dot-learn-startup-battlefield-africa-2017/59df0c729e45105de569e2c1/\">Techcrunch
    Battlefield</a> (I ended up missing my flight) to realizing I could rap, it’s
    been a fun and exciting experience so far.</p><h3>Final Notes</h3><p>I know I’m
    just getting started, but the goal of my story is to inspire someone somewhere
    in a similar situation like me.</p><p>You can <a href=\"https://twitter.com/elvisnchidera\">follow
    me on Twitter</a> or <a href=\"https://medium.com/@elvischidera\">on Medium</a>
    for more updates. You can also <a href=\"https://www.linkedin.com/in/elvischidera/\">connect
    with me on LinkedIn</a>. Thanks.</p><h3>If you enjoyed this story, please click
    the \U0001F44F button and share to help others find it. Feel free to leave a comment.</h3>"
  :author: freeCodeCamp.org
  :topic: programming
- :url: https://blog.usejournal.com/10-signs-you-will-suck-at-programming-5497a6a52c5c?source=search_post---------4
  :title: 10 Signs You Will Suck at Programming
  :content: "<p>More Stickers Doesn’t Make You More Better. — Photo by Tim Gouw on
    Unsplash</p><p>I often see questions on Reddit or Quora along the lines of “How
    do I know if I’ll succeed as a programmer?” <em>(In fact this post expands on
    an <a href=\"https://www.quora.com/What-are-the-signs-that-show-you-wont-succeed-as-a-programmer/answer/Jonathan-Bluks\">answer
    I gave on Quora a while back</a>.)</em> When someone is considering a career change,
    or is interested in software development and curious about what it takes, inevitably
    the question of programming comes up.</p><p>In fact, I think this is a major barrier
    to entry in people’s minds when they don’t have any formal training in computing.
    It’s natural to think that if you aren’t good at programming, then your desire
    is a non-starter. It’s kind of like if you want to be an actor and wonder if you’ll
    be good at acting.</p><p>As an Educator that teaches Full-Stack Web Development,
    I have taught many “first time programmers”. And the good news is that I have
    rarely found a student that couldn’t learn to program. I see it as a basic human
    skill, just like reading, writing, and arithmetic. Anyone can do it, it is part
    of our human capacities, but does need to be learned.</p><blockquote><p><em>Want
    to read this story later? Save it in <a href=\"https://usejournal.com/?utm_source=medium.com&utm_medium=blog&utm_campaign=noteworthy&utm_content=eid7\">Journal</a>.</em></p></blockquote><p>Over
    the past two years of teaching, I have witnessed various students struggle in
    the process, and some common themes that come up in their struggles. <em>If you
    look at this list and see them in yourself, rest assured, you will truly suck
    at programming</em> and should probably find something else to do with your time.
    But, if you are still committed to your goal of becoming a developer, you can
    easily face these issues and change.</p><blockquote><h1>Programming is a basic
    human skill, just like reading, writing and arithmetic. Anyone can learn to program
    with time and effort.</h1></blockquote><p>The following list will help you know
    if you will suck at programming — and what you can do about it if you want to
    change.</p><h2>1 | Lack of curiosity</h2><blockquote><h1>If you lack curiosity
    about computers and how technology works, you will never be successful as a programmer.</h1></blockquote><p>A
    fundamental requirement for learning is an active interest in the thing you are
    learning. If you do not possess a mind that is curious about technology, you will
    not have the energy it takes to persist in learning the broad and deep knowledge
    required to be a successful programmer.</p><p>In contrast, the world of technology
    is like a huge ocean of interesting domains, inter-connected ideas, and possibilities
    that can excite the imagination. It takes an inherent internal motivation to want
    to dive in and discover all that you can.</p><blockquote><p>*<em>Find Your Curiosity:
    *</em>Ask yourself if programming truly interests you. If your honest answer is
    that it doesn’t, go find something that you are interested in. Save yourself the
    time and energy. But if your answer is “Yes”, then push yourself find something
    new that you haven’t noticed before, recognize the vast ocean and dive a little
    deeper.</p></blockquote><h2>2 | Lack of autonomy and resourcefulness</h2><blockquote><h1>If
    you don’t develop the ability to solve problems for yourself, you will never be
    successful as a programmer.</h1></blockquote><p>Without a doubt, to be a successful
    developer, you have to be confident in your OWN ability to learn. This is actually
    a fundamental life skill — if you are are over the age of 18, nobody is obligated
    to teach you anything. That’s reality. It’s up to you to find the information
    and help that you need to learn what is important to you.</p><p>In the world of
    development, all the information you need is found in that magical place formerly
    known as the <em>Information Super Highway</em>. This massive library has one
    huge doorway: <a href=\"https://www.google.com\">Google</a>. Learning that you
    can simply type whatever you want into Google and get to the information you need
    is the first hurdle to cross when you want to learn the skills needed to be in
    technology.</p><p>In addition to being a good googler, all programming languages
    have documentation and specifications that are <strong>very</strong> explicit
    about how the language works. It’s like using a dictionary — when you see a word
    you don’t recognize, you look it up. The quickest, most reliable way to build
    your skill as a programmer is to simply read the documentation. It’s literally
    all there.</p><blockquote><p><strong>Use the Resources:</strong> Recognize that
    all the answers you need really are out there. When you have a question, force
    yourself to google it before asking someone else for the answer and check the
    documentation. Save the time of others for when you have tried and truly failed
    to find the answer you need.</p></blockquote><h2>3 | Lack of persistence in the
    face of a problem</h2><blockquote><h1>If you give up easily in the face of problems,
    you will never be successful as a programmer.</h1></blockquote><p>The essence
    of programming is solving problems. That’s the whole reason computers were invented!
    Whenever you begin working on a program you will encounter a whole “stack” of
    problems. And once you resolve a problem, there is almost always another problem
    right behind it. You <em>are</em> making progress, but there are always <em>new</em>
    problems to face.</p><p>Facing that stack of problems can be daunting and discouraging.
    If you feel like things should “just work”, then you won’t have the energy to
    persist as the problems continue and little by little knock down your emotional
    resolve. It’s literally your job to figure out why things aren’t working.</p><p>From
    my in-class experience, there are usually one or two students per class who seem
    to have knack for encountering more problems than other students — often quite
    random and obscure problems. I remind the student that the more problems they
    face upfront, the possibility of learning more deeply and thoroughly increases.
    If they can gain understanding through these problems, they will quickly find
    that they are more confident because they have faced and resolved more problems
    than the average student.</p><blockquote><p><strong>Patient Acceptance:</strong>
    You need to recognize that problems come with the territory and are not problems,
    but in fact challenges. Every challenge you face and overcome gives you deeper
    understanding and a better ability to face new challenges, and quickly resolve
    old ones.</p></blockquote><h2>4 | No feeling of success in overcoming a problem</h2><blockquote><h1>If
    you don’t feel a sense of excitement and accomplishment after solving a problem,
    you will never be successful as a programmer.</h1></blockquote><p>Related to the
    previous issue of giving up too easily is a lack of “good feelings” once you have
    successfully resolved a problem. When fixing bugs and issues becomes a treadmill
    that never seems to end, you lose touch with the excitement that comes in overcoming
    a problem.</p><p>There is actually a dopamine hit that you need when you overcome
    a problem. This is similar to the experience of completing a level in a video
    game, or solving a challenge like a crossword or sudoku. We all know that there
    is a good feeling that comes from persisting through a challenge and then finally
    winning at the end. But if you have lost the ability to feel those feelings, or
    never truly cared in the first place, you will not be able experience the joy
    that comes from programming. If you see programming as a grind where you just
    want to get a result as easily as you can, you will never truly be a successful
    programmer.</p><blockquote><p><strong>Celebrate Your Wins:</strong> Whenever you
    solve a problem that you struggled with, no matter how small, always take pride
    in your accomplishment, take a break and congratulate yourself for a job well
    done. Let the feeling of success sink in and energize you for the next problem
    you face.</p></blockquote><h2>5 | Impatient about learning and understanding</h2><blockquote><h1>If
    you are impatient about learning and expect to master everything quickly and effortlessly,
    you will never truly be successful at programming.</h1></blockquote><p>As humans
    we are limited creatures. Even though our world moves faster and faster, and computers
    are a big cause of that, we can only move as fast as we are able. Our brains work
    at a certain speed, and depending on our past, our beliefs, our emotional states,
    our health…we will all learn and integrate information at different speeds.</p><p>The
    world of technology is like a vast ocean. You will never get to the end of it,
    you will never get to a point where you are a master with nothing else to learn.
    If you let yourself get overwhelmed, you will always feel a pressure to “catch
    up” and feel that you never know enough. If you can’t accept what you know and
    then learn a little bit more, you will feel like you are getting nowhere, and
    give up.</p><p>Instead, you need to enjoy the journey of learning for itself.
    Every little bit of knowledge you gain, or new skill you gain needs to make you
    excited. Like solving problems, you need to let yourself feel the pride of recognizing
    that you have taken a step forward, even if it is a small one.</p><blockquote><p><strong>Acknowledge
    Your Progress:</strong> There is a lot to learn, and the journey of programming
    never ends. But the knowledge is cumulative, so take pride it what you do know,
    and trust that every effort you take in your learning will create a strong foundation
    of knowledge for wherever your career takes you.</p></blockquote><h2>6 | Getting
    bored/tired from thinking</h2><blockquote><h1>If you are lazy in your thinking
    and see concentrated, focused thinking as a chore, you will never truly be successful
    at programming.</h1></blockquote><p>Programming is a thinking activity. As humans
    we are really good at thinking, but the reality is that even though we naturally
    spend all day doing it, we are lazy in our thinking. The ability to maintain concentrated,
    focused effort on a single problem over a period time is difficult if you aren’t
    used to it.</p><p>Symptoms of this include staring blankly at the screen, feeling
    a cloud descend on your thoughts, procrastinating on a problem, flipping between
    browser tabs, and desperately scanning StackOverflow for “an answer”. These are
    signs that you have hit a mental limitation and need to find a way through.</p><p>While
    programming, you will get tired and thinking literally burns physical energy just
    like exercising our bodies. When you aren’t used to exerting the mental energy
    needed to it can feel difficult to stay focused. But it is just like going to
    the gym, the more that you do it, the stronger you will get.</p><blockquote><p><strong>Your
    Mind is a Muscle:</strong> Trust that your brain is like a muscle — as you use
    it, it gets better and more efficient in it’s thinking. As you put pieces together
    and develop mental concepts, it becomes much easier to discover solutions.</p></blockquote><h2>7
    | Inability to think for yourself</h2><blockquote><h1>If you expect others to
    think for you, and are unwilling to look at the details of your own situation,
    you will never be a truly successful programmer.</h1></blockquote><p>When you
    are learning something new, it is easy to feel like you lack the knowledge and
    experience to have your own opinions. Taking initiative or doing/saying the wrong
    thing seems risky.</p><p>There is an inherent fear we all have in being wrong.
    When that fear of being wrong inhibits your exploration and curiosity, you stifle
    the ability to develop true knowledge, knowledge that is gained from experience
    and “failure”. When you need to rely on the “guru’s” opinion, a popular blogger,
    a best practice, or the “textbook” answer, then you have not truly integrated
    a working knowledge of programming.</p><p>You need to develop you own opinions
    about what works and what doesn’t. You need to understand why you think your solution
    works, and what the benefits are. You need to developed a nuanced perspective
    that goes beyond what is obvious. You need to be able to “argue” your side, and
    then if you change, you can own the new perspective you have gained.</p><blockquote><p><strong>Think
    for yourself:</strong> Through your experience and critical thinking skills, develop
    your own perspectives. Make reasonable guesses, take a position, and be willing
    to change as new information comes to light.</p></blockquote><h2>8 | Rigid, narrow
    and/or disorganized thinking</h2><blockquote><h1>If you are rigid in your thinking,
    and you have difficulty keeping your code organized — and by extension your thoughts
    organized and focused, you will never be successful at programming.</h1></blockquote><p>There
    are two extremes that I sometimes see in students. The first is a rigid and narrow
    approach to thinking. This attitude refuses help, and despite feedback, doesn’t
    change. Things are seen from one perspective only, and suggestions are ignored.</p><p>A
    second extreme I see is disorganized thinking. Students seem to make things more
    complicated than necessary, their code is messy and hard to follow. They overthink
    problems and write 100 lines of code, when 10 would have been sufficient.</p><p>When
    these two mindsets are combined the result is an uptight approach to programming,
    like a brute force approach that leads to layers and layers of fixes and “hacks”.
    What is required is the ability to go back over the solution, reevaluate it, give
    up on the initial approach, and reorganize.</p><p>Not being able to see other
    possibilities or receive feedback inhibits the ability to grow and improve. Being
    disorganized slows you down and prevents you from seeing patterns that would otherwise
    be obvious. And the overall quality of your work is diminished.</p><blockquote><p><strong>Self
    Reflection:</strong> You need to take a step back, and look at the bigger picture
    of how you are approaching things. How can you do this better? Is there anything
    you can do to make your life easier? What are you missing that could help you?</p></blockquote><h2>9
    | Needing the “right” answer instead of recognizing a spectrum of “good” and “bad”
    answers</h2><blockquote><h1>If you see the end goal of programming as finding
    the right solution, rather than a spectrum of solutions, you will never truly
    be successful as a programmer.</h1></blockquote><p>When starting to learn the
    skills or programming, students often want to know whether what they have done
    is “right”. The answer is always “it depends.”</p><p>Computer Science is a science
    of evaluating tradeoffs. Given different sets of circumstances, which would be
    the better path? It all depends on the circumstances and goals. When you see programming
    as a test with either a right answer or wrong answer, you are losing sight of
    the bigger picture, and giving up your creativity. Any answer can be “right” if
    you can justify it given the circumstances.</p><p>The reality is that programming
    is more like writing poems or short stories (or potentially novels if the programs
    are large). There is an aesthetic and beauty that can be seen in your code, and
    sometimes it is only recognizable by you and other programmers. The reasons you
    decided on your solution, and the way you conceived of your answer is more important
    than the “right way” or the “wrong way”. Having the mind of an artist allows you
    to play with options and possibilities, rather than thinking there is only one
    way. That is the beauty of programming, there are many ways to solve a problem,
    and the consideration of different possibilities leads to a feeling about which
    way is best for the situation.</p><blockquote><p><strong>Get Creative:</strong>
    Recognize that there are numerous ways to solve a problem, and through experience
    and exposure, you will develop a nuanced understanding overtime about which solutions
    feel better than others. Looking at the big picture, imagining different possibilities
    and trusting your gut will lead to better solutions that are more satisfying.</p></blockquote><h2>10
    | Not paying careful attention to details</h2><blockquote><h1>If you gloss over
    details, and overlook little things, you will never be a truly successful programmer.</h1></blockquote><p>Computers
    are precise machines. When it comes to programming a computer, you need to provide
    the necessary commands <em>precisely</em> in the way a computer expects. If you
    don’t, nothing will work. There isn’t a middle ground where things mostly work
    — it either does or it doesn’t.</p><p>That means that when you are programming
    you have to have an eye for details. Every space, bracket, or semi-colon counts.
    When out of place, nothing will work. When the computer spits back an error message,
    you have to be able to look at that message and understand exactly what it is
    telling you. And the reality is that if you miss details like that, you could
    spend hours tracking down a problem that was literally the result of a typo.</p><p>As
    they say, the devil is in the details. And that is definitely true for programming.</p><blockquote><p><strong>Pay
    Attention to the Details:</strong> The details matter and you have to accept that.
    Once you do, you can begin to always be scanning your code for anything that is
    out of place. You can organize your code and use tools that help you identify
    issues quickly.</p></blockquote><h2>Bonus: Being Business-Minded</h2><p>This is
    a side observation that I have noticed — students who are particularly business-minded,
    are often focused on the outcome rather than process. They want to get a “working
    app” that will move them forward on their business idea, they want to “get to
    market first”, and they see the learning curve as a barrier to their goal of getting
    their business going.</p><p>In reflecting on students that were difficult to truly
    help grow as programmers, I found an impatience with the process inhibiting the
    learning needed to truly understand technology. They tend to see technology as
    a means to an end, rather than a legitimate domain of knowledge to be explored
    and enjoyed.</p><p>As a natural extension of this, I have found certain students
    that were more business inclined, and struggled with their learning, often quickly
    had freelance clients signed up for work that they didn’t actually have the skills
    do themselves! They would scramble to find resources/templates to get a project
    working for a client, or, outsource the work to someone else. <em>They truly sucked
    at programming, but were amazing at getting people to pay them to program!</em></p><p>So
    what I would add, is that students who desire to start businesses, are excellent
    at sales, networking, and business development may struggle more than others to
    learn the skill of programming. Their natural desire to create financial opportunities
    and connect people to solutions makes them impatient with the tedious details
    involved in programming.</p><h2>Conclusion</h2><p>While programming can be a difficult
    skill to learn, it is certainly one that most people can learn. The above list
    contains attitudes and mindsets that get in the way, but most people can overcome
    them and develop a competency in the area of programming — if not mastery.</p><p>If
    you are interested in learning to program, I encourage you to begin the journey.
    Keep the above list in mind, and start exploring the many resources available
    online that can get you moving forward quickly. You won’t regret it.</p><p><em>Disclaimer:
    The opinions expressed here are strictly my own, based on my professional experience
    as an Educator and Web Developer. They do not represent the opinions or views
    of BrainStation.</em></p><p><img src=\"https://cdn-images-1.medium.com/max/4000/1*ArLSH4tuI2v4pF0giI3-OQ.png\"
    alt=\"\"></p><p>\U0001F4DD Read this story later in <a href=\"https://usejournal.com/?utm_source=medium.com&utm_medium=noteworthy_blog&utm_campaign=tech&utm_content=guest_post_read_later_text\">Journal</a>.</p><p>\U0001F469‍\U0001F4BB
    Wake up every Sunday morning to the week’s most noteworthy stories in Tech waiting
    in your inbox. <a href=\"https://usejournal.com/newsletter/noteworthy-in-tech/?utm_source=medium.com&utm_medium=noteworthy_blog&utm_campaign=tech&utm_content=guest_post_text\">Read
    the Noteworthy in Tech newsletter</a>.</p>"
  :author: Noteworthy
  :topic: programming
- :url: https://medium.com/free-code-camp/best-programming-languages-to-learn-in-2018-ultimate-guide-bfc93e615b35?source=search_post---------5
  :title: Here are the best programming languages to learn in 2018
  :content: '<p>This is the definitive guide for anyone wanting to choose the right
    programming language career path in 2018.</p><p>And let me be clear about something:</p><p>This
    is <em>not</em> a “top hottest languages” post throwing around a bunch of names
    and buzzwords.</p><p><strong>This is an objective and practical review of the
    current state, tendencies, and safe near-future predictions of the IT industry
    at the start of 2018.</strong></p><p>It’s based on statistical data from various
    trusted sources and is the result of a two-week period of in-depth research.</p><p>The
    goal of this post is to help you make an informed decision about which languages
    the IT market is looking for in 2018. It’ll help you decide which niche is worth
    the time and effort to master, and which will help you start (or continue) a <a
    href="https://www.myfirstitjob.com/career-shift/">**successful and profitable
    career as a software developer</a>**.</p><p>When trying to decide which programming
    language makes the best career path, developers typically look for these four
    traits:</p><ol><li><p>High salary</p></li><li><p>Popularity — plenty of job openings,
    variety</p></li><li><p>Tendency to become more in-demand in the future</p></li><li><p>Preferably
    easy to learn and pleasant to work with</p></li></ol><p>For each language outlined
    in the list, you’ll see:</p><ol><li><p>A brief intro to get you familiar with
    the language, what types of career options it can offer, and what’s cool about
    it</p></li><li><p>Language popularity diagrams according to <a href="https://www.tiobe.com/tiobe-index/">TIOBE</a>
    and <a href="https://octoverse.github.com/">GitHub Octoverse</a></p></li><li><p>Salary
    comparison based on data from <a href="https://www.indeed.com/">Indeed.com</a>
    and <a href="https://insights.stackoverflow.com/survey/2017#technology-top-paying-technologies-by-region">StackOverflow’s
    2017 survey</a></p></li><li><p>The tendency in demand for the last five years
    according to <a href="https://trends.google.com/trends/">Google Trends</a></p></li><li><p>A
    short example code snippet to give you a visual idea of the language’s syntax</p></li></ol><p>At
    the end, I’ve included four lesser-known languages which gained rapid popularity
    in the past few years and are expected to be in very high demand for 2018.</p><p>Let’s
    dive right in with the number one pick.</p><h2>1. JavaScript</h2><p>JavaScript
    is the most popular language according to <a href="https://insights.stackoverflow.com/survey/2017#technology-programming-languages">StackOverflow’s
    annual survey</a>, with 62.5% of respondents claiming to use it.</p><p>It’s undoubtedly
    the dominant language of the web and the growth of JavaScript over the past decade
    has been immense. Why? Just look around and count how many web-enabled devices
    you can see. Stack Overflow’s co-founder and popular programming figure <a href="https://en.wikipedia.org/wiki/Jeff_Atwood">Jeff
    Atwood</a> famously <a href="https://blog.codinghorror.com/the-principle-of-least-power/">said:</a></p><blockquote><h1>Any
    application that can be written in JavaScript will eventually be written in JavaScript.</h1></blockquote><p>Having
    that in mind, it’s safe to say there will be no shortage of JavaScript opportunities
    in 2018 and beyond.</p><p>JavaScript knowledge feeds into plenty of front-end
    frameworks such as Angular, React, Ember, Backbone, and others, as well as the
    Node.js run-time environment, which allows you to run JavaScript on the backend
    with high efficiency.</p><p>Three of the top four <a href="https://insights.stackoverflow.com/survey/2017#technology-frameworks-libraries-and-other-technologies">most
    popular frameworks</a> for 2017 according to StackOverflow are JavaScript-based.</p><p>If
    you enjoy immediately seeing the results of your work in action, for example making
    interactive web components, JavaScript is a good idea for you. Have in mind that
    a career in JavaScript implicitly means you should also be comfortable with HTML
    and CSS, which is basically what web pages are made of.</p><p>Tools like <a href="https://cordova.apache.org/">Apache
    Cordova</a> or <a href="https://facebook.github.io/react-native/">React Native</a>
    allow using JavaScript for mobile applications. It’s even possible to get into
    game development or desktop app development with projects like <a href="https://electronjs.org/">Electron</a>.</p><p>Let’s
    see the stats behind JavaScript being the #1 pick:</p><iframe src="https://medium.com/media/7b18ce7f1e39a87ec41266db77c32cb3"
    frameborder=0></iframe><p>JavaScript tendency in popularity for the past 5 years:
    <strong>Steady increase</strong></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*ygdBpTRZtFbQIvFPh-QCqw.jpeg"
    alt=""></p><p>JavaScript example code snippet:</p><iframe src="https://medium.com/media/a2b6c65a316ef08be86116967f7ab841"
    frameborder=0></iframe><h2>2. Swift</h2><p>Swift is a relatively new programming
    language released by Apple in 2014. This is a language for developing native iOS
    or macOS applications.</p><p>It is considered an improvement in terms of usability
    and performance compared to Objective-C — the language used for Apple’s iOS and
    macOS operating systems.</p><p>Swift is generally favored by developers, standing
    at #4 in the list of <a href="https://insights.stackoverflow.com/survey/2017#technology-most-loved-dreaded-and-wanted-languages">most
    loved languages</a> for 2017, after being <a href="https://insights.stackoverflow.com/survey/2015#tech-super">#1
    in 2015</a>. Should you pick up a career with Swift, chances are you would enjoy
    it.</p><p>If you want to get into mobile development, you should definitely consider
    Swift as a high-paid career path. Generally, iOS apps have proven to be <a href="http://bgr.com/2016/07/20/ios-vs-android-developers-profits-app-store-google-play/">more
    profitable</a> than Android apps.</p><iframe src="https://medium.com/media/d255e66246e6b76752d80d2631d0d22b"
    frameborder=0></iframe><p>Swift tendency in popularity for the past 5 years: <strong>Steep
    up</strong></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*NZsm2FyHJiOpFECGFTkepQ.jpeg"
    alt=""></p><p>Swift example code snippet:</p><iframe src="https://medium.com/media/75e02ad7a5b9ac96242d2900769d7553"
    frameborder=0></iframe><h2>3. Python</h2><p>Python is a general purpose language
    which you can find almost anywhere today. You’ll find it in web applications,
    desktop apps, network servers, machine learning, media tools and more.</p><p>It’s
    used by big players like NASA or Google, where the Python creator <a href="https://en.wikipedia.org/wiki/Guido_van_Rossum">Guido
    van Rossum</a> was employed for about 8 years writing mostly…Python.</p><p>Python
    code is neat, readable, and well-structured. Proper indentation is not just for
    beauty here — it determines code execution.</p><p>Python-based web development
    frameworks like <a href="https://en.wikipedia.org/wiki/Django_(web_framework)">Django</a>
    and <a href="https://en.wikipedia.org/wiki/Flask_(web_framework)">Flask</a> have
    been gaining more and more popularity. Also, the language is heavily equipped
    with quality machine learning and data analysis libraries like <a href="https://en.wikipedia.org/wiki/Scikit-learn">Scikit-learn</a>
    and <a href="https://en.wikipedia.org/wiki/Pandas_(software)">Pandas</a>.</p><p>On
    the whole, career paths with Python are various and here to stay. It’s a good
    choice for beginner developers, as it’s high-level and easy to read and comprehend.</p><iframe
    src="https://medium.com/media/06f582ae88d7da9d0c760d33eb024f34" frameborder=0></iframe><p>Python
    tendency in popularity for the past 5 years: <strong>Impressive</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*TdyFAkEj0LUVjS39lQbm7Q.jpeg" alt=""></p><p>Python
    example code snippet:</p><iframe src="https://medium.com/media/361926fa730632efe89c2e226f9c5bb5"
    frameborder=0></iframe><h2>4. Java</h2><p>Java is arguably the most popular programming
    language as 90% of the <a href="http://fortune.com/global500/list">Fortune 500</a>
    companies heavily use it. Its famous slogan <a href="https://en.wikipedia.org/wiki/Write_once,_run_anywhere">“write
    once, run anywhere”</a> captures one of the keys that makes Java so valuable —
    its powerful Java Virtual Machine (JVM), which makes it cross-platform compatible.</p><p>Popular
    career paths with Java are backend developer, big data developer, embedded systems
    engineer, or Android developer. Although not the most “trendy” language at the
    moment, Java is so heavily used that we can pretty much guarantee it won’t go
    anywhere in the next decade and beyond.</p><p>Because of this, you can be confident
    that there are plenty of Java job positions both in your city and remotely, which
    can’t be said for some of the less popular languages on this list. Thus, if you
    are comfortable with Java, it’s only a matter of time before you’ll find the right
    place.</p><iframe src="https://medium.com/media/8fc84ff244b7b3966761a8a452d58c17"
    frameborder=0></iframe><p>Java tendency in popularity for the past 5 years: <strong>Decrease</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*t4FW76c2WInNwcQQcO3w_w.jpeg" alt=""></p><p>Java
    example code snippet:</p><iframe src="https://medium.com/media/b51d15a429cbc82a3f9df5a98e18c7cf"
    frameborder=0></iframe><h2>5. C++</h2><p>C++ is a highly efficient and flexible
    language, first created back in 1985. It has remained in high demand due to its
    performance, reliability, and variety of contexts you can use it in.</p><p>Plenty
    of large systems have been created and maintained successfully using C++, including
    the likes of Microsoft, Oracle, PayPal, and Adobe.</p><p>A career with C++ typically
    involves developing desktop applications, especially for performance-intensive
    tasks. While rather complex, getting comfortable with C++ would give you a deeper
    understanding of how languages work, for example by giving facilities for low-level
    memory manipulation.</p><iframe src="https://medium.com/media/a7309699d7c768b1df38ba5b76a4e6ea"
    frameborder=0></iframe><p>C++ tendency in popularity for the past 5 years: <strong>Ups
    and downs</strong></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*xT1-3aYqLs1mPkMkMAt7Tw.jpeg"
    alt=""></p><p>C++ example code snippet:</p><iframe src="https://medium.com/media/d2d80e229a2a10f75b695046725455f9"
    frameborder=0></iframe><h2>6. Ruby</h2><p>Ruby is one of the most loved programming
    languages around. It’s designed to be friendly and easy to use by developers,
    as even its own tagline is “<a href="https://www.ruby-lang.org/en/">a programmer’s
    best friend</a>.”</p><p>Ruby is a high-level language which aims to achieve a
    lot with few lines of clean, readable code. This sometimes takes significant effort
    “under the hood,” which makes Ruby relatively slower in terms of efficiency compared
    to other popular languages — but it definitely boosts your productivity.</p><p>Well-written
    Ruby code almost looks like sentences written in plain English. It’s a great choice
    for the first language to learn, as beginners typically pick it up fast and enjoy
    it along the way.</p><p>Ruby is mostly used for its most popular framework — <a
    href="http://rubyonrails.org/">Ruby on Rails</a>. Ruby on Rails is a web framework
    which encapsulates all of Ruby’s ideas into a powerful tool for the web. The great
    productivity achieved with Rails makes it a <a href="https://medium.com/@RubyGarage/what-are-the-benefits-of-using-ruby-on-rails-for-your-startup-f3d6f6b9938d">common
    choice for startups</a> who aim for a running start.</p><p>A career with Ruby
    on Rails is definitely a great choice as the framework is “<a href="http://rubyonrails.org/doctrine/#optimize-for-programmer-happiness">optimized
    for programmer happiness</a>” and is also well-paid. The only major drawback of
    picking up a career with Ruby is that the language is not quite as popular compared
    to the languages mentioned above. Thus, job openings with Ruby may be limited
    in some locations.</p><iframe src="https://medium.com/media/e426422ce2064298bd9b3282bd70e642"
    frameborder=0></iframe><p>Ruby tendency in popularity for the past 5 years: <strong>Decrease</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*oyQoq2-vhaTO3s_SNVWtRA.jpeg" alt=""></p><p>Ruby
    example code snippet:</p><iframe src="https://medium.com/media/17b538f2ab3c56efb166ae08668dae8a"
    frameborder=0></iframe><h2>7. Rust</h2><p>Rust is sponsored by Mozilla and was
    voted <a href="https://insights.stackoverflow.com/survey/2017#most-loved-dreaded-and-wanted">most
    liked by developers</a> for a second consecutive year in StackOverflow surveys.
    This is a relatively new language, first appearing in 2010, which already gained
    remarkable popularity and is expected to improve even more in the future.</p><p>Rust
    is a compiled language which is often compared to C both in terms of use cases
    and performance. The main difference is that Rust is memory safe. One of the most
    common faults you could find in C code are dangling pointers, buffer overflows,
    or any other kind of memory errors. Rust is created with the purpose of avoiding
    those — the language literally makes it <em>impossible</em> for you to make such
    errors as they are caught during compilation (before the code was ever run).</p><p>For
    a beginner, Rust might be a bit of a struggle to pick up as it insists on various
    rules to achieve the memory safety. However, experienced developers <a href="https://medium.com/mozilla-tech/why-rust-is-the-most-loved-language-by-developers-666add782563">love
    it</a>, and it’s quite possible that in the next few years Rust will be in very
    high demand.</p><p>As far as salary is concerned, Rust is considered well-paid,
    <a href="https://insights.stackoverflow.com/survey/2017#technology-top-paying-technologies-by-region">ranking
    second worldwide</a> in StackOverflow’s 2017 survey.</p><p>One more reason to
    choose Rust is that the language is being developed by a household name in IT,
    Mozilla.</p><p>Rust tendency in popularity for the past 5 years: <strong>Rising</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*l9szz25VQZdj6LZZLIn3_Q.jpeg" alt=""></p><p>Rust
    example code snippet:</p><iframe src="https://medium.com/media/f212baa6dc89a8f3943529b4fef0cd44"
    frameborder=0></iframe><h2>8. Elixir</h2><p>Elixir is another new language, first
    appearing in 2011, that immediately gained popularity.</p><p>Elixir was inspired
    by <a href="https://en.wikipedia.org/wiki/Erlang_(programming_language)">Erlang</a>,
    a language developed back in the 1980s by Ericsson and stands as arguably one
    of the best tools for heavy concurrency. Elixir’s author José Valim himself <a
    href="http://www.creativedeletion.com/2015/04/19/elixir_next_language.html">said</a>
    that he liked everything about Erlang, but also saw room for improvement. The
    biggest drawback of Erlang for developers is the often quirky syntax and usability
    plus the lack of intuitive package management.</p><p>Thus, Elixir appears — combining
    aspects from Ruby, a highly developer-friendly language and ecosystem, with those
    from Erlang.</p><p>Elixir is mainly used for web development, and career options
    are typically well-paid but limited. The popularity of the language has been increasing
    year after year, so if your city has various IT companies around, Elixir developers
    may be highly sought after.</p><p>Salary-wise, Elixir is typically well-paid standing
    at <a href="https://insights.stackoverflow.com/survey/2017#technology-top-paying-technologies-by-region">third
    place worldwide</a> in StackOverflow’s 2017 survey.</p><p>Elixir tendency in popularity
    for the past 5 years: <strong>Rising</strong></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*0jZsGU_CGnW9idMPFw-jrQ.jpeg"
    alt=""></p><p>Elixir example code snippet:</p><iframe src="https://medium.com/media/53ec57db58c6f68b839ef0727fa0a668"
    frameborder=0></iframe><h2>9. Scala</h2><p>Scala stands for Scalable Language,
    and is one of the many attempts to “rewrite Java” while improving its drawbacks.
    Scala code is compiled to run on the Java Virtual Machine (JVM).</p><p>We can
    safely agree that Scala is already a success given the fact that big companies
    like LinkedIn, Twitter, and The Guardian <a href="http://www.scala-lang.org/old/node/1658">use
    it</a> in their codebases.</p><p>Scala has the reputation of being <a href="https://stackoverflow.com/questions/2573899/why-is-scala-very-complex">a
    complex language</a> to learn for a junior developer. But those who make it past
    the learning curve probably enjoy a great career as open positions for Scala developers
    are definitely popping up more and more.</p><p>Scala ranks high in salary surveys,
    making the <a href="https://insights.stackoverflow.com/survey/2017#technology-top-paying-technologies-by-region">top
    ten</a> worldwide and sharing first place in the US according to StackOverflow’s
    2017 report.</p><p>Scala tendency in popularity for the past 5 years: <strong>Rising</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*cNgrIi0hlnqXc1EWSsaxCw.jpeg" alt=""></p><p>Scala
    example code snippet:</p><iframe src="https://medium.com/media/0641ad0c62556270e0591a99036fd830"
    frameborder=0></iframe><h2>10. R</h2><p>R is a programming language and environment
    used for statistics, graphic representation and data analysis. This is the #1
    choice for data scientists. If you find yourself interested in this field, then
    R is a stable and profitable career choice for you.</p><p>R tendency in popularity
    for the past 5 years: <strong>Steady rise</strong></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*srefCZ__5SmFWerQiXGIAg.jpeg"
    alt=""></p><p>R example code snippet:</p><iframe src="https://medium.com/media/8583a2b10ca97e48cb2ac22c21b060f8"
    frameborder=0></iframe><p>That concludes the list of the top ten programming languages
    you should consider learning in 2018.</p><p>If you are looking for free courses
    to try out any of the above-mentioned languages, you can check out our advice
    on <a href="https://www.myfirstitjob.com/free-tutorial-giants-comparison/">choosing
    from the best tutorials</a> or even having a <a href="https://www.myfirstitjob.com/4-websites-finding-courses/">dedicated
    website</a> browse tutorials for you.</p><p>If you have any questions about a
    future career as a software developer, make use of our free <a href="https://www.myfirstitjob.com/">featured
    material</a> or <a href="https://www.myfirstitjob.com/about/">contact us</a> further
    for a professional opinion.</p><h2>What’s next?</h2><p>Choosing the right language
    career path is great — but usually problems start when trying to get “good enough”
    and get hired.</p><p>Next, I’ll focus on the results of my research on why many
    developers give up before ever getting a job. The main reason is actually quite
    simple.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*Te0ns_500lXKSNAy3ELWmA.png"
    alt="Did you like the read? Medium doesn’t offer partner program in my country―so
    I ask people to buy me coffee instead."><em>Did you like the read? Medium doesn’t
    offer partner program in my country―so I ask people to buy me coffee instead.</em></p>'
  :author: freeCodeCamp.org
  :topic: programming
- :url: https://towardsdatascience.com/why-python-is-not-the-programming-language-of-the-future-30ddc5339b66?source=search_post---------6
  :title: Why Python is not the programming language of the future
  :content: '<p>Why Python is not the programming language of the future</p><h3>Even
    though it will be in high demand for a few more years</h3><p><img src="https://cdn-images-1.medium.com/max/7910/1*RsAiqSHJHYNJvrfTKebFPA.jpeg"
    alt="Python has served us well — but will it last? Photo by [David Clode](https://unsplash.com/@davidclode?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/python?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Python
    has served us well — but will it last? Photo by <a href="https://unsplash.com/@davidclode?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">David
    Clode</a> on <a href="https://unsplash.com/s/photos/python?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>It
    took the programming community a couple of decades to appreciate Python. But since
    the early 2010’s, it has been booming — and eventually surpassing C, C#, Java
    and JavaScript in popularity.</p><p>But until when will that trend continue? When
    will Python eventually be replaced by other languages, and why?</p><p>Putting
    an exact expiry date on Python would be so much speculation, it might as well
    pass as Science-Fiction. Instead, I will assess the virtues that are boosting
    Python’s popularity right now, and the weak points that will break it in the future.</p><h2>What
    makes Python popular right now</h2><p>Python’s success is reflected in the <a
    href="https://insights.stackoverflow.com/trends?tags=r%2Cpython%2Cjavascript%2Cjava%2Cc%2B%2B%2Cc%23">Stack
    Overflow trends</a>, which measure the count of tags in posts on the platform.
    Given the size of StackOverflow, this is quite a good indicator for language popularity.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*itIT95KvtxA1H2bcPcXtlA.png" alt="Snapshot
    of tags on various programming languages on StackOverflow."><em>Snapshot of tags
    on various programming languages on StackOverflow.</em></p><p>While R has been
    plateauing over the last few years, and many other languages are on a steady decline,
    Python’s growth seems unstoppable. Almost 14% of all StackOverflow questions are
    tagged “python”, and the trend is going up. And there are several reasons for
    that.</p><h3>It’s old</h3><p>Python has been around since the nineties. That doesn’t
    only mean that it has had plenty of time to grow. It has also acquired a large
    and supportive community.</p><p>So if you have any issue while you’re coding in
    Python, the odds are high that you’ll be able to solve it with a single Google
    search. Simply because somebody will have already encountered your problem and
    written something helpful about it.</p><h3>It’s beginner-friendly</h3><p>It’s
    not only the fact that it has been around for decades, giving programmers the
    time to make brilliant tutorials. More than that, the syntax of Python is very
    human-readable.</p><p>For a start, there’s no need to specify the data type. You
    just declare a variable; Python will understand from the context whether it’s
    an integer, a float value, a boolean or something else. This is a huge edge for
    beginners. If you’ve ever had to program in C++, you know how frustrating it is
    your program won’t compile because you swapped a float for an integer.</p><p>And
    if you’ve ever had to read Python and C++ code side-by-side, you’ll know how understandable
    Python is. Even though C++ was designed with English in mind, it’s a rather bumpy
    read compared to Python code.<a href="https://medium.com/the-renaissance-developer/learning-python-from-zero-to-hero-8ceed48486d5"><strong>Learning
    Python: From Zero to Hero</strong><em>A quick and comprehensive guide for your
    first steps in Python.</em>medium.com</a></p><h3>It’s versatile</h3><p>Since Python
    has been around for so long, developers have made a package for every purpose.
    These days, you can find a package for almost everything.</p><p>Want to crunch
    numbers, vectors and matrices? <strong>NumPy</strong> is your guy. Want to do
    calculations for tech and engineering? Use <strong>SciPy</strong>. Want to go
    big in data manipulation and analysis? Give <strong>Pandas</strong> a go.Want
    to start out with Artificial Intelligence? Why not use <strong>Scikit-Learn</strong>.</p><p>Whichever
    computational task you’re trying to manage, chances are that there is a Python
    package for it out there. This makes Python stay on top of recent developments,
    can be seen from the surge in Machine Learning over the past few years.</p><h2>Downsides
    of Python — and whether they’ll be fatal</h2><p>Based on the previous elaborations,
    you could imagine that Python will stay on top of sh*t for ages to come. But like
    every technology, Python has its weaknesses. I will go through the most important
    flaws, one by one, and assess whether these are fatal or not.</p><h3>Speed</h3><p>Python
    is slow. Like, really slow. On average, you’ll need about 2–10 times longer to
    complete a task with Python than with any other language.</p><p>There are <a href="https://hackernoon.com/why-is-python-so-slow-e5074b6fe55b">various
    reasons</a> for that. One of them is that it’s dynamically typed — remember that
    you don’t need to specify data types like in other languages. This means that
    a lot of memory needs to be used, because the program needs to reserve enough
    space for each variable that it works in any case. And lots of memory usage translates
    to lots of computing time.</p><p>Another reason is that Python can only execute
    one task at a time. This is a consequence of flexible datatypes — Python needs
    to make sure each variable has only one datatype, and parallel processes could
    mess that up.</p><p>In comparison, your average web browser can run a dozen different
    threads at once. And there are some other theories around, too.</p><p>But at the
    end of the day, none of the speed issues matter. Computers and servers have gotten
    so cheap that we’re talking about fractions of seconds. And the end user doesn’t
    really care whether their app loads in 0.001 or 0.01 seconds.<a href="https://medium.com/@trungluongquang/why-python-is-popular-despite-being-super-slow-83a8320412a9"><strong>Why
    Python is Popular Despite Being (Super) Slow</strong>*A beautiful explanation
    of the irrelevance of speed issues in Python by Bobby. *medium.com</a></p><h3>Scope</h3><p>Originally,
    Python was <a href="https://www.geeksforgeeks.org/static-and-dynamic-scoping/">dynamically
    scoped</a>. This basically means that, to evaluate an expression, a compiler first
    searches the current block and then successively all the calling functions.</p><p>The
    problem with dynamic scoping is that every expression needs to be tested in every
    possible context — which is tedious. That’s why most modern programming languages
    use static scoping.</p><p>Python tried to transition to static scoping, but <a
    href="https://www.quora.com/What-are-the-main-weaknesses-of-Python-as-a-programming-language">messed
    it up</a>. Usually, inner scopes — for example functions within functions — would
    be able to see <em>and</em> change outer scopes. In Python, inner scopes can only
    see outer scopes, but not change them. This leads to a lot of confusion.</p><h3>Lambdas</h3><p>Despite
    all of the flexibility within Python, the usage of Lambdas is rather restrictive.
    Lambdas can only be expressions in Python, and not be statements.</p><p>On the
    other hand, variable declarations and statements are always statements. This means
    that Lambdas cannot be used for them.</p><p>This distinction between expressions
    and statements is rather arbitrary, and doesn’t occur in other languages.</p><p><img
    src="https://cdn-images-1.medium.com/max/8192/1*Dly4IjQNFOMRdEzLRb0mjg.jpeg" alt="Whitespaces
    make code more readable, but less maintainable. Photo by [Irvan Smith](https://unsplash.com/@mr_vero?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/programmer?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Whitespaces
    make code more readable, but less maintainable. Photo by <a href="https://unsplash.com/@mr_vero?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Irvan
    Smith</a> on <a href="https://unsplash.com/s/photos/programmer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><h3>Whitespaces</h3><p>In
    Python, you use whitespaces and indentations to indicate different levels of code.
    This makes it optically appealing and intuitive to understand.</p><p>Other languages,
    for example C++, rely more on braces and semicolons. While this might not be visually
    appealing and beginner-friendly, it makes the code a lot more maintainable. For
    bigger projects, this is a lot more useful.</p><p>Newer languages like Haskell
    solve this problem: They rely on whitespaces, but offer an alternative syntax
    for those who wish to go without.</p><h3>Mobile Development</h3><p>As we’re witnessing
    the shift from desktop to smartphone, it’s clear that we need robust languages
    to build mobile software.</p><p>But not many mobile apps are being developed with
    Python. That doesn’t mean that it can’t be done — there is a Python package called
    Kivy for this purpose.</p><p>But Python wasn’t made with mobile in mind. So even
    though it might produce passable results for basic tasks, your best bet is to
    use a language that was created for mobile app development. Some widely used programming
    frameworks for mobile include React Native, Flutter, Iconic, and Cordova.</p><p>To
    be clear, laptops and desktop computers should be around for many years to come.
    But since mobile has long surpassed desktop traffic, it’s safe to say that learning
    Python is not enough to become a seasoned all-round developer.</p><h3>Runtime
    Errors</h3><p>A Python script isn’t compiled first and then executed. Instead,
    it compiles every time you execute it, so any coding error manifests itself at
    runtime. This leads to poor performance, time consumption, and the need for a
    lot of tests. Like, <em>a lot</em> of tests.</p><p>This is great for beginners
    since testing teaches them a lot. But for seasoned developers, having to debug
    a complex program in Python makes them go awry. This lack of performance is the
    biggest factor that sets a timestamp on Python.<a href="https://towardsdatascience.com/top-7-modern-programming-language-to-learn-now-156863bd1eec"><strong>Top
    7 Modern programming languages to learn now</strong><em>How Rust, Go, Kotlin,
    TypeScript, Swift, Dart, Julia can boost your career and improve your software
    development skills</em>towardsdatascience.com</a></p><h2>What could replace Python
    in the future — and when</h2><p>There are a few new competitors on the market
    of programming languages:</p><ul><li><p><strong>Rust</strong> offers the same
    kind of safety that Python has — no variable can accidentally be overwritten.
    But it solves the performance issue with the concept of ownership and borrowing.
    It is also the most-loved programming language of the last few years, according
    to <a href="https://insights.stackoverflow.com/survey/2019#technology">StackOverflow
    Insights</a>.</p></li><li><p><strong>Go</strong> is great for beginners like Python.
    And it is so simple that it’s even easier to maintain the code. Fun point: Go
    developers are among the <a href="https://insights.dice.com/2019/10/30/top-programming-languages-that-will-get-you-paid/">highest-paid
    programmers</a> on the market.</p></li><li><p><strong>Julia</strong> is a very
    new language that competes head-on with Python. It fills the gap of large-scale
    technical computations: Usually, one would have used Python or Matlab, and patched
    the whole thing up with C++ libraries, which are necessary at a large scale. Now,
    one can use Julia instead of juggling with two languages.</p></li></ul><p>While
    there are other languages on the market, Rust, Go, and Julia are the ones that
    fix weak patches of Python. All of these languages excel in yet-to-come technologies,
    most notably in Artificial Intelligence. While their market share is still small,
    as reflected in the number of StackOverflow tags, the trend for all of them is
    clear: upwards.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*ectt9Nl3dlnhGXKpHBmLuA.png"
    alt="Snapshot of tags on various programming languages on StackOverflow."><em>Snapshot
    of tags on various programming languages on StackOverflow.</em></p><p>Given the
    ubiquitous popularity of Python at the moment, it will surely take half a decade,
    maybe even a whole, for any of these new languages to replace it.</p><p>Which
    of the languages it will be — Rust, Go, Julia, or a new language of the future
    — is hard to say at this point. But given the performance issues that are fundamental
    in the architecture of Python, one will inevitably take its spot.</p>'
  :author: Towards Data Science
  :topic: programming
- :url: https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0?source=search_post---------7
  :title: 'Master the JavaScript Interview: What is Functional Programming?'
  :content: '<p>Structure Synth — Orihaus (CC BY 2.0)</p><blockquote><p>“Master the
    JavaScript Interview” is a series of posts designed to prepare candidates for
    common questions they are likely to encounter when applying for a mid to senior-level
    JavaScript position. These are questions I frequently use in real interviews.</p></blockquote><p>Functional
    programming has become a really hot topic in the JavaScript world. Just a few
    years ago, few JavaScript programmers even knew what functional programming is,
    but every large application codebase I’ve seen in the past 3 years makes heavy
    use of functional programming ideas.</p><p><strong>Functional programming</strong>
    (often abbreviated FP) is the process of building software by composing <strong>pure
    functions</strong>, avoiding <strong>shared state,</strong> <strong>mutable data,
    *<em>and *</em>side-effects</strong>. Functional programming is <strong>declarative</strong>
    rather than <strong>imperative</strong>, and application state flows through pure
    functions. Contrast with object oriented programming, where application state
    is usually shared and colocated with methods in objects.</p><p>Functional programming
    is a <strong>programming paradigm</strong>, meaning that it is a way of thinking
    about software construction based on some fundamental, defining principles (listed
    above). Other examples of programming paradigms include object oriented programming
    and procedural programming.</p><p>Functional code tends to be more concise, more
    predictable, and easier to test than imperative or object oriented code — but
    if you’re unfamiliar with it and the common patterns associated with it, functional
    code can also seem a lot more dense, and the related literature can be impenetrable
    to newcomers.</p><p>If you start googling functional programming terms, you’re
    going to quickly hit a brick wall of academic lingo that can be very intimidating
    for beginners. To say it has a learning curve is a serious understatement. But
    if you’ve been programming in JavaScript for a while, chances are good that you’ve
    used a lot of functional programming concepts &amp; utilities in your real software.</p><blockquote><h1>Don’t
    let all the new words scare you away. It’s a lot easier than it sounds.</h1></blockquote><p>The
    hardest part is wrapping your head around all the unfamiliar vocabulary. There
    are a lot of ideas in the innocent looking definition above which all need to
    be understood before you can begin to grasp the meaning of functional programming:</p><ul><li><p>Pure
    functions</p></li><li><p>Function composition</p></li><li><p>Avoid shared state</p></li><li><p>Avoid
    mutating state</p></li><li><p>Avoid side effects</p></li></ul><p>In other words,
    if you want to know what functional programming means in practice, you have to
    start with an understanding of those core concepts.</p><p>A <strong>pure function</strong>
    is a function which:</p><ul><li><p>Given the same inputs, always returns the same
    output, and</p></li><li><p>Has no side-effects</p></li></ul><p>Pure functions
    have lots of properties that are important in functional programming, including
    <strong>referential transparency</strong> (you can replace a function call with
    its resulting value without changing the meaning of the program). Read <a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976">“What
    is a Pure Function?”</a> for more details.</p><p>*<em>Function composition *</em>is
    the process of combining two or more functions in order to produce a new function
    or perform some computation. For example, the composition f . g (the dot means
    “composed with”) is equivalent to f(g(x)) in JavaScript. Understanding function
    composition is an important step towards understanding how software is constructed
    using the functional programming. Read <a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-function-composition-20dfb109a1a0">“What
    is Function Composition?”</a> for more.</p><h2>Shared State</h2><p><strong>Shared
    state</strong> is any variable, object, or memory space that exists in a shared
    scope, or as the property of an object being passed between scopes. A shared scope
    can include global scope or closure scopes. Often, in object oriented programming,
    objects are shared between scopes by adding properties to other objects.</p><p>For
    example, a computer game might have a master game object, with characters and
    game items stored as properties owned by that object. Functional programming avoids
    shared state — instead relying on immutable data structures and pure calculations
    to derive new data from existing data. For more details on how functional software
    might handle application state, see <a href="https://medium.com/javascript-scene/10-tips-for-better-redux-architecture-69250425af44">“10
    Tips for Better Redux Architecture”</a>.</p><p>The problem with shared state is
    that in order to understand the effects of a function, you have to know the entire
    history of every shared variable that the function uses or affects.</p><p>Imagine
    you have a user object which needs saving. Your saveUser() function makes a request
    to an API on the server. While that’s happening, the user changes their profile
    picture with updateAvatar() and triggers another saveUser() request. On save,
    the server sends back a canonical user object that should replace whatever is
    in memory in order to sync up with changes that happen on the server or in response
    to other API calls.</p><p>Unfortunately, the second response gets received before
    the first response, so when the first (now outdated) response gets returned, the
    new profile pic gets wiped out in memory and replaced with the old one. This is
    an example of a race condition — a very common bug associated with shared state.</p><p>Another
    common problem associated with shared state is that changing the order in which
    functions are called can cause a cascade of failures because functions which act
    on shared state are timing dependent:</p><iframe src="https://medium.com/media/44eda3fa070f0177287ce13a6999350e"
    frameborder=0></iframe><p>When you avoid shared state, the timing and order of
    function calls don’t change the result of calling the function. With pure functions,
    given the same input, you’ll always get the same output. This makes function calls
    completely independent of other function calls, which can radically simplify changes
    and refactoring. A change in one function, or the timing of a function call won’t
    ripple out and break other parts of the program.</p><iframe src="https://medium.com/media/2f764b00e9c364e6e3fbf2b20460819b"
    frameborder=0></iframe><p>In the example above, we use Object.assign() and pass
    in an empty object as the first parameter to copy the properties of x instead
    of mutating it in place. In this case, it would have been equivalent to simply
    create a new object from scratch, without Object.assign(), but this is a common
    pattern in JavaScript to create copies of existing state instead of using mutations,
    which we demonstrated in the first example.</p><p>If you look closely at the console.log()
    statements in this example, you should notice something I’ve mentioned already:
    function composition. Recall from earlier, function composition looks like this:
    f(g(x)). In this case, we replace f() and g() with x1() and x2() for the composition:
    x1 . x2.</p><p>Of course, if you change the order of the composition, the output
    will change. Order of operations still matters. f(g(x)) is not always equal to
    g(f(x)), but what doesn’t matter anymore is what happens to variables outside
    the function — and that’s a big deal. With impure functions, it’s impossible to
    fully understand what a function does unless you know the entire history of every
    variable that the function uses or affects.</p><p>Remove function call timing
    dependency, and you eliminate an entire class of potential bugs.</p><h2>Immutability</h2><p>An
    <strong>immutable</strong> object is an object that can’t be modified after it’s
    created. Conversely, a <strong>mutable</strong> object is any object which can
    be modified after it’s created.</p><p>Immutability is a central concept of functional
    programming because without it, the data flow in your program is lossy. State
    history is abandoned, and strange bugs can creep into your software. For more
    on the significance of immutability, see <a href="https://medium.com/javascript-scene/the-dao-of-immutability-9f91a70c88cd">“The
    Dao of Immutability.”</a></p><p>In JavaScript, it’s important not to confuse const,
    with immutability. const creates a variable name binding which can’t be reassigned
    after creation. const does not create immutable objects. You can’t change the
    object that the binding refers to, but you can still change the properties of
    the object, which means that bindings created with const are mutable, not immutable.</p><p>Immutable
    objects can’t be changed at all. You can make a value truly immutable by deep
    freezing the object. JavaScript has a method that freezes an object one-level
    deep:</p><iframe src="https://medium.com/media/e16c2f595099b8998995285f687464aa"
    frameborder=0></iframe><p>But frozen objects are only superficially immutable.
    For example, the following object is mutable:</p><iframe src="https://medium.com/media/dfefaeedf84262edb46cf1304f920d52"
    frameborder=0></iframe><p>As you can see, the top level primitive properties of
    a frozen object can’t change, but any property which is also an object (including
    arrays, etc…) can still be mutated — so even frozen objects are not immutable
    unless you walk the whole object tree and freeze every object property.</p><p>In
    many functional programming languages, there are special immutable data structures
    called <strong>trie data structures</strong> (pronounced “tree”) which are effectively
    deep frozen — meaning that no property can change, regardless of the level of
    the property in the object hierarchy.</p><p>Tries use <strong>structural sharing</strong>
    to share reference memory locations for all the parts of the object which are
    unchanged after an object has been copied by an operator, which uses less memory,
    and enables significant performance improvements for some kinds of operations.</p><p>For
    example, you can use identity comparisons at the root of an object tree for comparisons.
    If the identity is the same, you don’t have to walk the whole tree checking for
    differences.</p><p>There are several libraries in JavaScript which take advantage
    of tries, including <a href="https://github.com/facebook/immutable-js">Immutable.js</a>
    and <a href="https://github.com/swannodette/mori">Mori</a>.</p><p>I have experimented
    with both, and tend to use Immutable.js in large projects that require significant
    amounts of immutable state. For more on that, see <a href="https://medium.com/javascript-scene/10-tips-for-better-redux-architecture-69250425af44">“10
    Tips for Better Redux Architecture”</a>.</p><h2>Side Effects</h2><p>A side effect
    is any application state change that is observable outside the called function
    other than its return value. Side effects include:</p><ul><li><p>Modifying any
    external variable or object property (e.g., a global variable, or a variable in
    the parent function scope chain)</p></li><li><p>Logging to the console</p></li><li><p>Writing
    to the screen</p></li><li><p>Writing to a file</p></li><li><p>Writing to the network</p></li><li><p>Triggering
    any external process</p></li><li><p>Calling any other functions with side-effects</p></li></ul><p>Side
    effects are mostly avoided in functional programming, which makes the effects
    of a program much easier to understand, and much easier to test.</p><p>Haskell
    and other functional languages frequently isolate and encapsulate side effects
    from pure functions using <a href="https://en.wikipedia.org/wiki/Monad_(functional_programming)">**monads</a>**.
    The topic of monads is deep enough to write a book on, so we’ll save that for
    later.</p><p>What you do need to know right now is that side-effect actions need
    to be isolated from the rest of your software. If you keep your side effects separate
    from the rest of your program logic, your software will be much easier to extend,
    refactor, debug, test, and maintain.</p><p>This is the reason that most front-end
    frameworks encourage users to manage state and component rendering in separate,
    loosely coupled modules.</p><h2>Reusability Through Higher Order Functions</h2><p>Functional
    programming tends to reuse a common set of functional utilities to process data.
    Object oriented programming tends to colocate methods and data in objects. Those
    colocated methods can only operate on the type of data they were designed to operate
    on, and often only the data contained in that specific object instance.</p><p>In
    functional programming, any type of data is fair game. The same map() utility
    can map over objects, strings, numbers, or any other data type because it takes
    a function as an argument which appropriately handles the given data type. FP
    pulls off its generic utility trickery using <strong>higher order functions</strong>.</p><p>JavaScript
    has <strong>first class functions</strong>, which allows us to treat functions
    as data — assign them to variables, pass them to other functions, return them
    from functions, etc…</p><p>A <strong>higher order function</strong> is any function
    which takes a function as an argument, returns a function, or both. Higher order
    functions are often used to:</p><ul><li><p>Abstract or isolate actions, effects,
    or async flow control using callback functions, promises, monads, etc…</p></li><li><p>Create
    utilities which can act on a wide variety of data types</p></li><li><p>Partially
    apply a function to its arguments or create a curried function for the purpose
    of reuse or function composition</p></li><li><p>Take a list of functions and return
    some composition of those input functions</p></li></ul><h3>Containers, Functors,
    Lists, and Streams</h3><p>A functor is something that can be mapped over. In other
    words, it’s a container which has an interface which can be used to apply a function
    to the values inside it. When you see the word functor, you should think “mappable”.</p><p>Earlier
    we learned that the same map() utility can act on a variety of data types. It
    does that by lifting the mapping operation to work with a functor API. The important
    flow control operations used by map() take advantage of that interface. In the
    case of Array.prototype.map(), the container is an array, but other data structures
    can be functors, too — as long as they supply the mapping API.</p><p>Let’s look
    at how Array.prototype.map() allows you to abstract the data type from the mapping
    utility to make map() usable with any data type. We’ll create a simple double()
    mapping that simply multiplies any passed in values by 2:</p><iframe src="https://medium.com/media/a3824f6547f5d0152b46bd00928dc4a9"
    frameborder=0></iframe><p>What if we want to operate on targets in a game to double
    the number of points they award? All we have to do is make a subtle change to
    the double() function that we pass into map(), and everything still works:</p><iframe
    src="https://medium.com/media/16f1dd07395f81108a65ada6058d2067" frameborder=0></iframe><p>The
    concept of using abstractions like functors &amp; higher order functions in order
    to use generic utility functions to manipulate any number of different data types
    is important in functional programming. You’ll see a similar concept applied in
    <a href="https://github.com/fantasyland/fantasy-land">all sorts of different ways</a>.</p><blockquote><h1>“A
    list expressed over time is a stream.”</h1></blockquote><p>All you need to understand
    for now is that arrays and functors are not the only way this concept of containers
    and values in containers applies. For example, an array is just a list of things.
    A list expressed over time is a stream — so you can apply the same kinds of utilities
    to process streams of incoming events — something that you’ll see a lot when you
    start building real software with FP.</p><h2>Declarative vs Imperative</h2><p>Functional
    programming is a declarative paradigm, meaning that the program logic is expressed
    without explicitly describing the flow control.</p><p><strong>Imperative</strong>
    programs spend lines of code describing the specific steps used to achieve the
    desired results — the <strong>flow control: How</strong> to do things.</p><p><strong>Declarative</strong>
    programs abstract the flow control process, and instead spend lines of code describing
    the <strong>data flow: What</strong> to do. The <em>how</em> gets abstracted away.</p><p>For
    example, this <strong>imperative</strong> mapping takes an array of numbers and
    returns a new array with each number multiplied by 2:</p><iframe src="https://medium.com/media/9299c4163d3588fad5c377bb3fa098ad"
    frameborder=0></iframe><p>This <strong>declarative</strong> mapping does the same
    thing, but abstracts the flow control away using the functional Array.prototype.map()
    utility, which allows you to more clearly express the flow of data:</p><iframe
    src="https://medium.com/media/04b319f431432d8cb20805628854e978" frameborder=0></iframe><p><strong>Imperative</strong>
    code frequently utilizes statements. A <strong>statement</strong> is a piece of
    code which performs some action. Examples of commonly used statements include
    for, if, switch, throw, etc…</p><p><strong>Declarative</strong> code relies more
    on expressions. An <strong>expression</strong> is a piece of code which evaluates
    to some value. Expressions are usually some combination of function calls, values,
    and operators which are evaluated to produce the resulting value.</p><p>These
    are all examples of expressions:</p><pre><code>2 * 2doubleMap([2, 3, 4])Math.max(4,
    3, 2)</code></pre><p>Usually in code, you’ll see expressions being assigned to
    an identifier, returned from functions, or passed into a function. Before being
    assigned, returned, or passed, the expression is first evaluated, and the resulting
    value is used.</p><h2>Conclusion</h2><p>Functional programming favors:</p><ul><li><p>Pure
    functions instead of shared state &amp; side effects</p></li><li><p>Immutability
    over mutable data</p></li><li><p>Function composition over imperative flow control</p></li><li><p>Lots
    of generic, reusable utilities that use higher order functions to act on many
    data types instead of methods that only operate on their colocated data</p></li><li><p>Declarative
    rather than imperative code (what to do, rather than how to do it)</p></li><li><p>Expressions
    over statements</p></li><li><p>Containers &amp; higher order functions over ad-hoc
    polymorphism</p></li></ul><h2>Homework</h2><p>Learn &amp; practice this core group
    of functional array extras:</p><ul><li><p>.map()</p></li><li><p>.filter()</p></li><li><p>.reduce()</p></li></ul><p>Use
    map to transform the following array of values into an array of item names:</p><iframe
    src="https://medium.com/media/ce4582a6cee39b52061549dc1cf6abb4" frameborder=0></iframe><p>Use
    filter to select the items where points are greater than or equal to 3:</p><iframe
    src="https://medium.com/media/4a927c43b140786d3687e36c8245e5a7" frameborder=0></iframe><p>Use
    reduce to sum the points:</p><iframe src="https://medium.com/media/e1d6d3f5b3e9ccd900d148bcf384c2aa"
    frameborder=0></iframe><h3>Explore the Series</h3><ul><li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36#.ecfskj935">What
    is a Closure?</a></p></li><li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-s-the-difference-between-class-prototypal-inheritance-e4cd0a7562e9#.h96dymht1">What
    is the Difference Between Class and Prototypal Inheritance?</a></p></li><li><p><a
    href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976#.4256pjcfq">What
    is a Pure Function?</a></p></li><li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-function-composition-20dfb109a1a0#.i84zm53fb">What
    is Function Composition?</a></p></li><li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0#.jddz30xy3">What
    is Functional Programming?</a></p></li><li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261#.aa7ubggsy">What
    is a Promise?</a></p></li><li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-soft-skills-a8a5fb02c466">Soft
    Skills</a></p><blockquote><p>This post was included in the book “Composing Software”.<a
    href="https://leanpub.com/composingsoftware">*Buy the Book</a> | <a href="https://medium.com/javascript-scene/composing-software-the-book-f31c77fc3ddc">Index</a>
    | <a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976">&lt;
    Previous</a> | <a href="https://medium.com/javascript-scene/a-functional-programmers-introduction-to-javascript-composing-software-d670d14ede30">Next
    &gt;</a>*</p></blockquote></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*rgRYDo68_u8KgIhnlZffcg.png"
    alt="[Start your free lesson on EricElliottJS.com](https://ericelliottjs.com/premium-content/lesson-pure-functions)"><em><a
    href="https://ericelliottjs.com/premium-content/lesson-pure-functions">Start your
    free lesson on EricElliottJS.com</a></em></p><p><em>**Eric Elliott</em>* is the
    author of the books, <a href="https://leanpub.com/composingsoftware">“Composing
    Software”</a> and <a href="http://pjabook.com">“Programming JavaScript Applications”</a>.
    As co-founder of <a href="https://ericelliottjs.com">EricElliottJS.com</a> and
    <a href="https://devanywhere.io">DevAnywhere.io</a>, he teaches developers essential
    software development skills. He builds and advises development teams for crypto
    projects, and has contributed to software experiences for <strong>Adobe Systems,
    Zumba Fitness,</strong> <strong>The Wall StreetJournal,</strong> <strong>ESPN,</strong>
    <strong>BBC,</strong> and top recording artists including <strong>Usher, Frank
    Ocean, Metallica,</strong> and many more.*</p><p><em>He enjoys a remote lifestyle
    with the most beautiful woman in the world.</em></p>'
  :author: JavaScript Scene
  :topic: programming
- :url: https://medium.com/@andreimargeloiu/how-to-prepare-for-competitive-programming-396d557e0c12?source=search_post---------8
  :title: How to prepare for competitive programming ?
  :content: '<p>This is how I won 3 out of 4 Gold medals in the Computing Olympiad.</p><p><strong>Later
    edit:</strong> I’ve qualified to the World Finals of Google HashCode 2017, the
    largest algorithmic competition organised by Google.</p><p>I started learning
    C++ from scratch during my first year of Highschool. I knew nothing about programming,
    algorithms or data structures. Seven months after I had written my first line
    of code, the Computing Olympiad was knocking at the door. And it was the perfect
    time to see if my learning style was worth 5 cents.</p><blockquote><p><em>After
    2 days of competition, the results came: I’ve won the Gold medal.</em></p></blockquote><p><img
    src="https://cdn-images-1.medium.com/max/6912/1*Bjq57vVCpcM3i3zVu56KlA.jpeg" alt=""></p><p>I
    was shocked because I had surpassed competitors with 5 years of experience. I
    knew I had worked hard, but this achievement exceeded my expectations. The programming
    contest matched me perfectly and I went all-in in this field.</p><h2>I know what
    brought me success and I want to share this with you.</h2><h3>What language should
    you choose?</h3><ol><li><p>C++ — Highly recommended! It’s very fast. Implementing
    different algorithms takes little time because of STL. C++ is accepted in all
    competitions. <em>I’ve been using it since my first line of code.</em></p></li><li><p>C
    — Go and learn C++ because of STL. If you have knowledge of C, you are ready to
    code in C++ as well.</p></li><li><p>JAVA — It’s slow. But it has Big Integer class,
    even if there are very few problems that require using it. If the time limit is
    tight, you will get Time limit exceeded. Java is not accepted in all competitions.</p></li></ol><h3>Where
    can you practice?</h3><p>I recommend <a href="http://www.spoj.com/">Sphere Online
    Judge (SPOJ)</a>. It’s effective in terms of quality and quantity. Editorials
    and solutions are available online if you get stuck while solving problems. Supporting
    websites <a href="http://spojtoolkit.com/">SPOJ Toolkit</a> and <a href="http://problemclassifier.appspot.com/">Problem
    classifier for SPOJ.pl</a>.</p><h2>Firstly, you have to master the basics.</h2><p>After
    you get used to the language’s syntax it’s time to solve some problems. Start
    with simple ones that require implementation skills. In this stage, your goal
    is to define your coding style. Maybe you like to write with lots of spaces, maybe
    not. Maybe you put the braces on the same line with the ‘if’ statement, maybe
    not.</p><blockquote><h1>You have to find your coding style because it’s yours.</h1></blockquote><p>And
    keep in mind these two principles while developing your coding style.</p><ul><li><p><strong>Easy
    to implement.</strong> You should feel comfortable implementing the solution you
    came up with. Why? Because during the competition, the last thing you want to
    happen is to get lost in your code. It’s always better to think 5 more minutes
    about implementation rather than spending 10 more minutes doing it.</p></li><li><p><strong>Easy
    to read.</strong> This means ‘Easy to debug’. Let’s face it, we both know that
    bugs appear all the time. Do you know that feeling when you have 10 minutes left
    and you don’t find that fucking bug? Yes, you do. To solve that you have to write
    legible code. So when you start debugging, the code would feel natural and simple
    to follow.</p></li></ul><p><a href="https://github.com/margiki/Just-to-share-code/blob/master/Biconnected%20components">Here</a>
    is my coding style.</p><h3>How to boost your implementation skills?</h3><p><em>Practice,
    practice and more practice.</em> I recommend you to work the first 250 most solved
    problem on <a href="http://www.spoj.com/problems/classical/sort=-6,start=0">SPOJ</a>.
    Solve them in that exact order. And think of the solution for at least one hour.</p><p>Don’t
    say ‘This problem is too hard for me, I will try the next one’. <strong>That’s
    the loser mentality.</strong></p><p>Take a piece of paper and a pencil and try
    to think. In this way, you will probably find the solution, but for sure you will
    develop algorithmic thinking. If you don’t find the solution in one hour, then
    you can take a look on the forum or editorials to see the solution.</p><p>The
    results of this approach? Fast implementation. And learning classic problems &amp;
    algorithms.</p><h2>Secondly, you have to master Algorithms and Data structures.</h2><p>*Follow
    a hierarchical approach. *Did you start running without knowing how to walk? No.
    Can you build a skyscraper without a strong foundation? Again, no.</p><blockquote><h1>This
    means that you can’t burn steps in your learning path. Or if you do, you’ll remain
    with knowledge gaps that will deepen as the time goes.</h1></blockquote><h3>Start
    with fundamental Algorithms and Data structures.</h3><p>It’s hard to start. Probably
    because you don’t know what to learn first. That’s why I’ve created an <a href="http://www.udemy.com/introduction-to-algorithms-and-data-structures-in-c/">Algorithms
    and Data structures video course</a>. *<em>I’ve made this course in the way I
    wish I had been taught. *</em>The response was incredible, 3000+ students from
    100+ countries had joined during the first month.</p><p><em>If you work easy problems,
    you will never become better.</em></p><p>The most effective way to find what you
    don’t know is to actually encounter it. It’s what happened to me. I’ve learned
    many new techniques, that I had never heard of before, by choosing a hard problem.</p><p>*From
    every 3 problems you solve, one should teach you something new. *If not, choose
    them more carefully. Choose harder problems!</p><p>After you finish those 250
    problems from SPOJ, you will have an overview of the main topics of competitive
    programming. By deeply understanding the logic behind basic algorithms, high-level
    algorithms will seem easy to understand. So you can rapidly leverage your knowledge.</p><h3>Now
    dig deeper into every major topic.</h3><p><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/#algo4">Here</a>
    is an tremendous resource with Top 10 Algorithms and Data structures in every
    topic. After those 250 problems from SPOJ, you will know many from that list.
    But there are still many that you have never heard about. So start learning them
    in ascending order.</p><blockquote><h1>If you don’t strengthen your knowledge
    after you learn something new, you will forget it.</h1></blockquote><p>I recommend
    that after you learn a new algorithm to practice 2–3 problems using it. Search
    the tag of the algorithm on SPOJ and you’ll find problems that require it. Work
    them before anything else.</p><blockquote><h1>Understand Dynamic programming because
    it will make you win.</h1></blockquote><p>From my experience, in every contest
    is at least one <a href="http://www.topcoder.com/community/data-science/data-science-tutorials/dynamic-programming-from-novice-to-advanced/">Dynamic
    programming</a> problem. Many people get a headache when they hear DP because
    they don’t understand it.</p><blockquote><p><em>And it’s a good thing. Because
    if you truly understand DP, you will win.</em></p></blockquote><p>I like DP, it’s
    my favourite topic. And here is DP’s secret: think globally optimal, not just
    locally. You have to break the problem into simpler subproblems, solving each
    of them just once, and building the solution combining these solved subproblems.
    The opposite of DP is a <a href="http://en.wikipedia.org/wiki/Greedy_algorithm">greedy
    algorithm</a> because the latter picks the locally optimal choice at each step.
    And locally optimal choices may result in a bad global solution.</p><p>When learning
    new concepts, check <a href="http://www.topcoder.com/community/data-science/data-science-tutorials/">TopCoder
    tutorials</a>. They are very detailed and easy-to-follow. I’ve truly understood
    <a href="http://www.topcoder.com/community/data-science/data-science-tutorials/binary-indexed-trees/">Binary
    Indexed Trees </a>from there.</p><h3>Work hard.</h3><p>Have you ever heard of
    athletes who win the Olympics without years of practice? I haven’t.</p><p>Every
    year, the preparation for the Computing Olympiad started in September and ended
    in April.</p><blockquote><h1>Every single day in these 8 months I was practicing
    5 hours.</h1></blockquote><p>And yes, I spent these 5 hours just solving Algorithmic
    problems. I remember days when I spent even 8 or 10 hours practising. Why? Because
    I was passionate about it. Every day after coming back home from school I went
    straight to my bedroom and started solving a new problem. Or learning a new algorithm
    requisite for that problem.</p><p>If you want to win, you must do the same. Take
    a problem and stick with it. Think about it during your daily routine. Like on
    your way to the supermarket, or while driving.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*ZM6yL02bMk710YKw.jpg"
    alt=""></p><p>Do you know that while sleeping, your brain is defragmenting the
    information gathered in that day? It’s like putting the books in alphabetical
    order on a bookshelf. Basically, your brain thinks at different problems that
    you have encountered.</p><p><em>Here is how you can take advantage of this.</em>
    Before you go to sleep read a hard problem and keep in mind what it requires.
    At this point, you don’t have to find the solution. Then you go to sleep and your
    brain mechanism starts to process that problem. When you wake up you will be surprised:
    you’ve found the solution while sleeping.</p><p>Try it by yourself. It feels like
    magic.</p><h2><strong>I started a Vlog</strong></h2><p><img src="https://cdn-images-1.medium.com/max/2038/1*4W7TLsTq6yu3occTpRjSsw.png"
    alt=""></p><p>This short paragraph is not related with Competitive Programming.
    I just wanted to let you know that if you are in your 20s and you find interesting
    how I see the world, I am doing a <a href="https://www.youtube.com/channel/UCPcssmsRLxVL1yFS2SZGKTA">Youtube
    vlog</a>. I talk about the world, life and Computer Science.</p><h3>Work smart.</h3><p><em>This
    is the secret to succeeding. You need targets.</em></p><p>We are humans and we
    like to <a href="http://waitbutwhy.com/2013/10/why-procrastinators-procrastinate.html">procrastinate</a>.
    This means postponing things that you need to do right now. It’s always handier
    to watch Netflix rather than working DP problems. You know that, and you need
    to fix that.</p><h3>How can you beat procrastination?</h3><p>*By assuming targets.
    *You will always find interesting problems, from where you can learn something
    new (check the resources I gave you above). But those problems must be solved,
    not just read.</p><p>So here’s how I overcame procrastination. I’ve made a paper
    calendar and I filled it with problems I wanted to solve each day. And I have
    always filled two days in advance with problems, so I knew how to manage my time
    in the following days.</p><p><img src="https://cdn-images-1.medium.com/max/3960/0*3ocTFmGITWVTJHgt.jpg"
    alt=""></p><p>In this way, I was always motivated to finish the problems and find
    new ones to fill the calendar in the following days. It’s a rewarding feeling
    to cut problems when you solve them. I know you like that too.</p><p>*Do your
    own paper calendar. *Don’t make another checklist on your phone, that you won’t
    care about tomorrow.</p><h3>How to debug effectively?</h3><p>Do you want to become
    a Pro? If so, you need to ‘debug in your mind’.</p><p>It’s by far the most efficient
    debugging technique I know because it doesn’t require a debugger at all. Your
    brain explores multiple code paths at the same time and gives you a much broader
    perspective of the code, compared with the <a href="http://www.youtube.com/watch?v=hTiI7wrce2Y">classic
    debugger</a>.</p><p>It’s similar to grandmasters’ ability to play chess and think
    3 moves in advance.</p><p>I use this technique exclusively as my initial line
    of defence, followed by using an actual debugger in the last instance.</p><p>To
    learn to ‘debug in your mind’ you need to practice. When you submit a problem
    and receive ‘Wrong answer’ don’t go straight to the debugger button. Instead,
    start to read the code and think ‘What happens on this line?’, ‘How does this
    ‘if’ statement affect the program?’, ‘When it exits the loop, what is the value
    of the iterator?’.</p><p>In this way you think on your own. Over time, you’ll
    start debugging in real-time as you write the code.</p><h3><strong>Found this
    post useful? Kindly tap the ❤ button below! :)</strong></h3><p><strong>About The
    Author</strong></p><p>Andrei Margeloiu is a passionate programmer interested in
    entrepreneurship, startups and nature. You can connect with him on <a href="https://www.linkedin.com/in/andreimargeloiu">LinkedIn</a>.</p>'
  :author: Andrei Margeloiu
  :topic: programming
- :url: https://medium.com/sololearn/warning-your-programming-career-b9579b3a878b?source=search_post---------9
  :title: 'Warning: Your programming career'
  :content: '<p>How not to get lost in the dark forests of programming</p><p><img
    src="https://cdn-images-1.medium.com/max/4000/1*SNOF9EOlDnAViwEZAoFwmg.jpeg" alt=""></p><p>The
    main thing that was bothering me while I was just starting my coding career was
    the language/technology choice. What should I learn, where should I start? What
    should I know to get my first job as a programmer? Back then (almost 10 years
    now) there wasn’t Coursera, or Udemy or <a href="https://www.sololearn.com/">SoloLearn</a>.
    I wasn’t able to figure out the exact direction, the complete path leading to
    a successful job myself. The highly paid, fully fed, kindly treated job of the
    astronaut of the 21st century: the programmer.</p><iframe src="https://medium.com/media/26ff2e1b2d0ffaee13dc48f64beb4aeb"
    frameborder=0></iframe><p>The very same problem still exists: beginners are stuck
    at the choice, there isn’t a straight path to become a good programmer and the
    community isn’t so warm in welcoming the newbie questions like “iz pythn a gut
    lang???”. The path to a successful programming career is even vaguer than before.
    You (supposing you are a beginner) should choose between <a href="https://www.amazon.com/Expert-proficient-programmer-learning-practices/dp/1838552650/">C++/C++11/C++14/C++17/C++20</a>,
    Java, C#, Kotlin, PHP (what?), Python, Node.js, JavaScript, (wait, with Angular,
    React or Vue?) and so on.</p><h2>The language, the technology, or the skills?</h2><p>To
    answer your main question, I have to ask you one first. <strong>What do you want?</strong>
    Are you excited to build mobile apps, a website, a website like Facebook or a
    website like Medium, or do you want to build a desktop application like Photoshop?
    Maybe you are fully into the game development? Mobile? Desktop?</p><p>The most
    intelligent way to answer “<strong>what should I know to get hired at a tech company
    as a software engineer</strong>?” is to find out the main skills you should master
    to successfully pass the technical interview. But first, we should put things
    in order, let’s dive into the programming world, its countries and cities, its
    cultures and wars, its wins and losses. For those who aren’t patient enough, scroll
    down to the “Preparing for Coding Interviews” section.</p><p>Exploring the world
    of programming brings us to 3 main platforms:</p><ol><li><p><strong>Web</strong>
    (Google Search, Facebook, Amazon, Twitter and others)</p></li><li><p><strong>Desktop</strong>
    (Dropbox, Photoshop, Visual Studio, Skype and others)</p></li><li><p><strong>Mobile</strong>
    (<a href="https://www.sololearn.com/">SoloLearn</a>, Instagram, Uber and others)</p></li></ol><p><em>Most
    of the services above exist in almost all of the platforms, for instance, Skype
    is a desktop, mobile and (although poorly done) web application, Twitter is a
    web and mobile application and so on.</em></p><h3>Web</h3><p>Web itself is a huge
    concept in this context, to shed light on it, we should separate it into so-called
    front-end and back-end, the latter being my personal favorite. Front-end is what
    you see, back-end is what you need in order to see what you see. Again, front-end
    is the look and feel, back-end is the servers running the application which processes
    user requests, handles database queries and so forth.</p><p><strong>Front-end.</strong>
    If you want to master the look and feel, i.e. build websites that are so beautiful
    that users fall in love, you should know HTML (the look), CSS (the look and feel),
    JavaScript (the feel). This isn’t just enough, using pure JavaScript is not enough
    nowadays, so you have to choose the right framework, currently popular Angular,
    React or Vue. Which one to choose is mostly based on the company you like the
    most, Google or Facebook? Go with Angular if you like Google, and with React if
    you like Facebook. If you don’t like any of them (weird), go with Vue. Simple!
    Besides these, you should master some fundamental concepts, like the inner workings
    of the HTTP Protocol, be familiar with web servers (at least you should not be
    scared of names like Apache or Nginx). Being a front-end developer means you get
    the data to render (beautify for users) from the back-end, so some minimum understanding
    of what an API is, what is JSON (and why it’s better than XML) is a must. (If
    anything sounds way too unfamiliar, check the References section at the end of
    this post).</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*mJ_4xsEgEizLg9xenU1yUw.jpeg"
    alt="One of many memes on the web describing the difference between front-end
    and back-end"><em>One of many memes on the web describing the difference between
    front-end and back-end</em></p><p>*<em>Back-end. *</em>The unseen truth, the untold
    story. In the old days, knowing PHP was enough to call yourself a back-end developer,
    then Microsoft introduced ASP.NET. They were fighting each other until Node.js
    came and put things in their best order. Some concepts of event-driven development
    are best applied at Node.js, so if you choose it, you are doing a good favor to
    your project.</p><p>The confusing part of the back-end is its language diversity,
    well, you can use any language you want at the back-end, the point is, “back-end”
    is a short name for “query database, process data, respond to client and do it
    as efficient as you can” and choosing the “right” language/technology/database
    is not an option. While some developers go with Relational Databases like MySQL
    or PostgreSQL, newcomers choose the dark side, NoSQL (like Cassandra or MongoDB).
    The choice is really yours, but I’ve got a simple formula. Do you have a strict
    schema for your data and it won’t change much in the near future? Choose Relational
    Database. Do you have more than million visits per minute? Change to NoSQL (painfully).
    Does your product change rapidly? Choose NoSQL. Let’s say you chose the side,
    now, what concrete technology should you choose? Do you like Microsoft and you
    have Windows Servers? Choose MsSQL. Do you like Oracle? Choose Oracle. Are you
    ok with Oracle, but you hate Microsoft at the same time? Choose MySQL. You just
    really don’t want to hurt anyone? Choose PostgreSQL.</p><p>NoSQL comes in tricky.
    It really depends on your service and data architecture. You’ve got just documents
    and some weak connections among them? Choose MongoDB. You need to store a huge
    bunch of key-value pairs? Choose Redis. You are working with a graph-like structure
    (Facebook friends graph, Google knowledge graph, etc.)? Choose Neo4j. Aren’t really
    sure what exactly you need, but you feel that you need all of them? Choose ArangoDB.</p><p>While
    database holds all the necessary data, you should define an API through which
    your clients can request and read/write to the database. The most useful option
    here is Node.js, though you can go with PHP or ASP.NET or Ruby or Python, my personal
    recommendation would be Node.js. Well, Facebook uses PHP at its backend, kind
    of. They rewrote a huge part of PHP in C++. Some use Python while others prefer
    Ruby. It’s true that you can use almost any language at the back-end, for instance,
    <a href="https://www.amazon.com/Expert-proficient-programmer-learning-practices/dp/1838552650/">Google
    uses C++</a>, Java and Python (along with Go). For low-level data processing,
    C++ fits the best, for background jobs like updating user’s friend recommendations,
    Java is a good option. For data analysis or natural language processing or for
    nowadays highly popular AI-related tasks you most probably will use Python.</p><p>Again,
    besides various languages, frameworks, databases at back-end, there are some core
    concepts that you have to master.</p><ul><li><p><strong>Caching</strong>. Starting
    from the CPU cache (with different levels) and ending with browser cache. Caching
    used everywhere, for high load services like Google Search or Facebook, caching
    is extremely necessary.</p></li><li><p><strong>Servers</strong>. While you might
    think this is related to the hardware (which will be great if you know how to
    setup several computers to work as one piece in storing and processing data),
    for the back-end developer server means the web server. Popular web server nowadays
    is Nginx and knowing how to setup and configure it will pay highly in your future
    endeavors.</p></li><li><p><strong>Sockets</strong>. Cornerstone of the network
    programming. Everything you send/receive via network is done by sockets. Knowing
    low-level details of socket programming is a good bonus in your skills inventory
    (knowing difference between TCP sockets, UDP sockets and what are WebSockets is
    a huge plus).</p></li><li><p><strong>Database Design</strong>. No matter what
    DBMS you choose or have to work with, operating with data will be one of your
    main tasks. Ability to see the complete picture, visualize data and connections
    between data units is a skill you will master during your whole programming career.</p></li><li><p><strong>Security</strong>.
    As other concepts mentioned above, this one is very broad, too. You can’t master
    any of them completely, so you should at least be familiar with some best practices
    such as storing password hashes rather than as plain texts. Checking requests
    via API token, verifying user permissions for each request and so on.</p></li></ul><h3>Desktop</h3><p>We
    will talk about the part of the desktop application that actually makes it a desktop
    application. There are tons of applications on Desktop platforms that need specific
    skill set, for instance, Photoshop is working with images, and knowing image processing
    algorithms and techniques is a must if you want to write something like Photoshop.
    Knowing socket programming is a must if you want to write something like Dropbox.
    Knowing how to engineer a compiler is a must of you want to build a compiler or
    IDE like Visual Studio. We won’t touch upon specifics, let’s just explore the
    languages you most probably will use if you want to work on desktop platform.</p><p>When
    it comes to languages for desktop applications programmers are having a hard time
    choosing among <a href="https://www.amazon.com/Mastering-Programming-programmer-learning-practices/dp/1838552650/">C++</a>,
    Java or C#. There is a simple formula to make the right choice: if you like Microsoft,
    use C#. If you like Oracle, use Java. If you think that a programming language
    should not be owned by a particular company, <a href="https://www.amazon.com/Expert-proficient-programmer-learning-practices/dp/1838552650/">use
    C++</a>. If this isn’t helping much, let’s discuss the actual sub-platforms. If
    you write software only for Windows users, C# is the best choice. It’s kind of
    obvious as both are products of Microsoft and they fit together the best. Though
    C# developers insist that after the release of .Net Core, C# can be used in Linux
    environment, too, <a href="https://www.amazon.com/Expert-proficient-programmer-learning-practices/dp/1838552650/">I
    personally suggest to go with C++</a> if you want to cover Linux. The point is,
    C++ was been created as a cross-platform programming language, which works great
    in all operating systems out there (yes, even MacOS). Well, cross-platform in
    this context supposes that you have to compile your C++ project in all operating
    systems separately to ship “different” executables of your application for each
    concrete OS. And, honestly, C++ lacks any GUI. The greatest excuse for that is
    the fact that “C++ is for hardcore developers, and hardcore developers use nothing
    but Terminal (command line interface)”. However, kind developers gathered together
    and created Qt, the very best cross-platform GUI library that fits perfectly with
    C++.</p><p>Finally, if you get angry with the <a href="https://www.amazon.com/Expert-proficient-programmer-learning-practices/dp/1838552650/">complexity
    of C++</a> and the fact that you should connect a separate library like Qt to
    have complete GUI experience for your users and you hate to compile and ship different
    executables of your product for different OS, go with Java. Java has its virtual
    machine which makes it easy to ship the executable. Your application works equally
    fine on any OS where JVM (Java Virtual Machine) is installed.</p><h3>Mobile</h3><p>When
    speaking of Java, first thing that comes to mind is Android. Long before Kotlin
    has been introduced to the world, Java was the de facto language in order to implement
    Android apps. Nowadays, Kotlin takes hearts of developers and allows even better
    experience of developing apps for Android platform. So, if you want to make Android
    apps, you should choose between Java and Kotlin. To make the correct choice, we
    should look behind the scenes. The point is, Google is not so cool with Oracle.
    Oracle owns Java and Java dominates in Google’s Android, so to have some flexibility
    here, Google had to introduce an option for the light side (or the dark side,
    up to you) and introduced <strong>Kotlin</strong> as “<em>wow, why use Java if
    there is such a great language we support</em>”. I personally suggest you start
    with Kotlin if you are just starting your Android developer career, though to
    be a competent developer in the market, you have to support previously implemented
    apps in Java, so, knowing Java will be a good bonus in your CV.</p><p>And finally,
    iOS. The iLand. An entirely different story. For a long time Objective-C was the
    dominant language for iOS and to be completely honest, mastering Objective-C required
    a serious approach, tough look and some good perseverance. That was the main issue
    of relatively small number of Objective-C developers out there and Apple finally
    made the right move by introducing <strong>Swift</strong>. Swift is much easier
    to master than Objective-C, which lead to increase in the number of iOS developers.
    So, to be an iOS developer, you need to go with Swift, but to be a really confident
    developer, it is suggested to master Objective-C to support apps (tons of apps)
    already written in Objective-C.</p><p>I should mention React Native here, as it
    allows to write apps for both Android and iOS platforms using just JavaScript,
    however, as a new and rapidly changing player in the market, let’s just consider
    that it exists and you already can write simple apps if you know only JavaScript.</p><h2><strong>Preparing
    for Coding Interviews</strong></h2><p><img src="https://cdn-images-1.medium.com/max/3840/1*-m_hxcxFCO0_-ND-FBFz6g.jpeg"
    alt=""></p><p>There are concepts that are fundamental in programming world. Most
    of the technical interviews are meant to discover your problem solving skills
    and knowing those concepts, so besides mastering a programming language, you should
    be familiar with the concepts that are somewhat required in programmer’s arsenal.
    Here’s an excerpt from my recent lesson post in <a href="https://www.sololearn.com/">SoloLearn</a>
    (below are the links to Android and iOS apps).<a href="http://bit.ly/sololearn-android"><strong>SoloLearn:
    Learn to Code for Free - Apps on Google Play</strong><em>SoloLearn has the largest
    collection of FREE code learning content, from beginner to pro! Choose from thousands
    of…</em>bit.ly</a><a href="http://bit.ly/sololearn-ios"><strong>SoloLearn: Learn
    to Code on the App Store</strong><em>Read reviews, compare customer ratings, see
    screenshots, and learn more about SoloLearn: Learn to Code. Download…</em>bit.ly</a></p><p>To
    successfully prepare for coding interviews you should be confident in the following
    areas:1. Algorithms &amp; Data Structures2. Computer Organization &amp; Operating
    Systems3. Coding4. System Design</p><p><strong>Algorithms &amp; Data Structures</strong>
    This is the most wanted skill set for programmers. Here are the subjects every
    programmer must be familiar with:</p><p><strong>Algorithm Complexity:</strong>
    Big-O notation and how to calculate algorithms complexity; knowing which algorithm
    is better based on their complexity, e.g. O(N) vs O(logN).</p><p><strong>Basic
    Data Structures &amp; adapters:</strong> Array, Linked List, Stack, Queue.</p><p><strong>Sorting
    &amp; Searching:</strong> Knowing various sorting algorithms helps you to identify
    the best possible implementation for your projects. For practice, try to implement
    insertion sort, selection sort or merge sort and spot the difference between linear
    search and binary search.</p><p><strong>Trees &amp; Graphs:</strong> Trees and
    Graphs are everywhere, starting from “friends graph” in Facebook to “knowledge
    graph” in Google Search.</p><p><strong>Hashtables:</strong> Being one of the most
    efficient data structures in the world, hashtables are always a good choice. You
    should be able to implement a Hashtable and be familiar with techniques to solve
    collisions.</p><p><strong>Computer Organization &amp; Operating Systems</strong>
    It is strongly advised to be familiar with topics like:</p><ul><li><p>Bitwise
    operations</p></li><li><p>How does the CPU execute machine code</p></li><li><p>What’s
    the difference between static RAM and dynamic RAM</p></li><li><p>What kind of
    OS kernel types exist</p></li><li><p>What’s the difference between “mutex” and
    “semaphore”</p></li><li><p>What is a deadlock and what is a livelock</p></li></ul><p><strong>Coding</strong>
    You should have really good knowledge of at least one programming language. Knowing
    all the pros and cons, best practices of your favorite language will always help
    you write efficient, elegant and readable code.It is highly recommended to practice
    by solving challenging problems, such as (all the problems below could be found
    on <a href="https://www.sololearn.com/">SoloLearn</a>):</p><ul><li><p>The Josephus
    Problem</p></li><li><p>Tower of Hanoi</p></li><li><p>String Compression</p></li><li><p>Balanced
    Parenthesis</p></li><li><p>Twin Prime Numbers</p></li></ul><p><strong>System Design</strong>
    Knowing Object-Oriented Programming is a must for a modern programmer. System
    Design means thinking about the whole system, being able to design its architecture,
    dissect it into classes, define object interactions. To be prepared try to answer
    the questions below:- How would you design Google Search? What if there are millions
    of simultaneous requests per second?- How would you implement Facebook’s friend
    search?- Why would you use a Relational Database Management System?- Why would
    you use a NoSQL DB?</p><p>It is highly recommended to know and use the correct
    design patterns. For example, you should know the difference between a Composite
    and a Decorator.</p><p>While junior developers are mostly required to have good
    problem solving skills and your first job won’t require knowing all the points
    listed above, this list will be a good help to plan your career.</p><p>For a good
    reference to learn C++ and understand how the program works under the hood, <a
    href="https://www.amazon.com/Expert-proficient-programmer-learning-practices/dp/1838552650/">**see
    this book</a>**.</p>'
  :author: SoloLearn
  :topic: programming
- :url: https://medium.com/better-programming/2020-programming-trend-predictions-a5d6b70bec26?source=search_post
  :title: 2020 Programming Trend Predictions
  :content: '<p>Predicting what programming technologies will emerge in 2020</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*eHc3cNEAM9kro06WSPQG3w.jpeg" alt="Photo
    by [Safar Safarov](https://unsplash.com/@codestorm) on [Unsplash](https://unsplash.com/@codestorm)"><em>Photo
    by <a href="https://unsplash.com/@codestorm">Safar Safarov</a> on <a href="https://unsplash.com/@codestorm">Unsplash</a></em></p><p>2020
    is almost here, as crazy as that sounds. The year 2020 sounds like it’s derived
    from science fiction, yet here we are — about to knock on its front door.</p><p>If
    you’re curious about what the future might bring to the programming world, you’re
    in the right place. I might be completely wrong — don’t quote me on this— but
    here’s what I think will happen. I can’t predict the future, but I can make educated
    guesses.</p><blockquote><h1>“The best way to predict your future is to create
    it.”</h1><h1>― <strong>Abraham Lincoln</strong></h1></blockquote><h2>Rust Will
    Become Mainstream</h2><p><img src="https://cdn-images-1.medium.com/max/2652/1*URxLxrhx6uW2I9iy-KWNZw.png"
    alt="Rust- [https://www.rust-lang.org/](https://www.rust-lang.org/)"><em>Rust-
    <a href="https://www.rust-lang.org/">https://www.rust-lang.org/</a></em></p><p><a
    href="https://en.wikipedia.org/wiki/Rust_(programming_language)"><strong>Rust</strong>
    </a>is a multi-paradigm system programming language focused on safety — especially
    safe concurrency. Rust is syntactically similar to C++, but it’s designed to provide
    better memory safety while maintaining high performance.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*MlmBiU91g7RWBirNd6IBJQ.png"
    alt="Source: [Leftover Salad](http://leftoversalad.com/c/015_programmingpeople/)"><em>Source:
    <a href="http://leftoversalad.com/c/015_programmingpeople/">Leftover Salad</a></em></p><p>We’ve
    seen four years of strong growth of the Rust programming language. I believe 2020
    is the year Rust will officially become mainstream. What is mainstream is up for
    self-interpretation, but I believe schools will start introducing Rust to their
    curriculum. This will create a new wave of Rust engineers.</p><p><img src="https://cdn-images-1.medium.com/max/2916/1*URWiaCRe_gXFmjzIGCNx9Q.png"
    alt="Most loved programming languages from the [2019 StackOverflow Survey](https://insights.stackoverflow.com/survey/2019#most-loved-dreaded-and-wanted)."><em>Most
    loved programming languages from the <a href="https://insights.stackoverflow.com/survey/2019#most-loved-dreaded-and-wanted">2019
    StackOverflow Survey</a>.</em></p><p>Rust has proven itself to be a great language
    with a vibrant and active community. With Facebook building <a href="https://levelup.gitconnected.com/getting-started-with-the-facebook-libra-programming-language-a1d21aa837e0">Libra</a>
    on Rust — its the biggest project ever — we’re about to see what Rust is really
    made off.</p><p>If you’re looking to learn a new language, I would strongly recommend
    learning Rust. If you’re curious to learn more,<a href="https://www.amazon.com/Rust-Programming-Language-Covers-2018-ebook/dp/B07SRQ97RD/ref=as_li_ss_tl?_encoding=UTF8&qid=&sr=&linkCode=ll1&tag=thegeniusde07-20&linkId=ba7efc64f6dfd4d77cf6162ca6dfbe51&language=en_US">*
    I’d start learning Rust from this book</a><em>. *</em>Go Rust!**</p><h2>GraphQL
    Adoption Will Continue to Grow</h2><p><img src="https://cdn-images-1.medium.com/max/3920/1*rijcw7aVJwAqCJG5KT-nJg.png"
    alt="[GraphQL Google Trends](https://trends.google.com/trends/explore?cat=5&amp;date=today%205-y&amp;q=%2Fg%2F11cn3w0w9t)"><em><a
    href="https://trends.google.com/trends/explore?cat=5&date=today%205-y&q=%2Fg%2F11cn3w0w9t">GraphQL
    Google Trends</a></em></p><p>As our applications grow in complexity, so do our
    data consumption needs. I’m a big fan of GraphQL, and I’ve used it many times.
    I think it’s a far superior solution to fetching data compared with a traditional
    REST API.</p><p>While typical REST APIs require loading from multiple URLs, GraphQL
    APIs get all the data your app needs in a single request.</p><p><img src="https://cdn-images-1.medium.com/max/2376/1*M30Rcst8xnVhztTnRaqPQQ.gif"
    alt=""></p><p>GraphQL is used by teams of all sizes in many different environments
    and languages to power mobile apps, websites, and APIs.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*KK-aZkIdUBUwLqwRujgjTw.gif"
    alt="[Who’s using GraphQL](https://graphql.org/users/)"><em><a href="https://graphql.org/users/">Who’s
    using GraphQL</a></em></p><p>If you’re interested in learning GraphQL, <a href="https://medium.com/better-programming/how-to-setup-a-powerful-api-with-graphql-koa-and-mongodb-339cfae832a1">check
    out this tutorial I wrote</a>.</p><h2>Progressive Web Apps Are a Force to Reckon
    With</h2><p>Progressive Web Apps (PWA) is a new approach to building applications
    by combining the best features of the web with the top qualities of mobile apps.</p><p><img
    src="https://cdn-images-1.medium.com/max/10368/0*N7sOM6uwum3BE8ST" alt="Photo
    by [Rami Al-zayat](https://unsplash.com/@rami_alzayat?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@rami_alzayat?utm_source=medium&utm_medium=referral">Rami
    Al-zayat</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>There
    are way more web developers in the wild than native platform-specific developers.
    Once big companies realize that they can repurpose their web devs to make progressive
    web applications, I suspect that we’ll be seeing a huge wave of PWAs.</p><p>It
    will take a while for bigger companies to adapt, though, which is pretty normal
    for technology. The progressive part would generally fall towards the front end
    development since it’s mostly all about interacting with the Web Workers API <em>(Native
    Browser API)</em>.</p><p>Web apps aren’t going anywhere. More people are catching
    onto the idea that writing a single cross-compatible PWA is less work and more
    money for your time.</p><p><img src="https://cdn-images-1.medium.com/max/3968/1*m0Ket0hpSafvVGc4wu40mQ.png"
    alt="[PWA Google Trends](https://trends.google.com/trends/explore?cat=5&amp;date=today%205-y&amp;q=%2Fg%2F11bzxympx6)"><em><a
    href="https://trends.google.com/trends/explore?cat=5&date=today%205-y&q=%2Fg%2F11bzxympx6">PWA
    Google Trends</a></em></p><p>Today is a perfect day to start learning more about
    PWAs, <a href="https://medium.com/better-programming/everything-you-need-to-know-about-pwas-8e41a7e745aa">**start
    here.</a>**</p><h2>Web Assembly Will See More Light</h2><p><img src="https://cdn-images-1.medium.com/max/3276/1*Q-f6AiF2KGPE4-OetKl9-A.png"
    alt="[Web Assembly](https://webassembly.org)"><em><a href="https://webassembly.org">Web
    Assembly</a></em></p><p>WebAssembly (abbreviated <em>Wasm</em>) is a binary instruction
    format for a stack-based virtual machine. Wasm is designed as a portable target
    for compilation of high-level languages like C, C++, and Rust. Wasm also enables
    deployment on the web for client and server applications. PWAs can use wasm too.</p><p>In
    other words, Web Assembly is a way to bridge JavaScript technologies with more
    level technologies. Think of using a Rust image processing library in your React
    app. Web assembly allows you to do that.</p><p><center><iframe width="560" height="315"
    src="https://www.youtube.com/embed/qDTpLKJ6e4M" frameborder="0" allowfullscreen></iframe></center></p><p>Performance
    is key, and as the amount of data grows, it will be even harder to keep a good
    performance. That’s when low-level libraries from C++ or Rust come into play.
    We’ll see bigger companies adopting Web Assembly and snowball from there.</p><h2>React
    Will Continue to Reign</h2><p><img src="https://cdn-images-1.medium.com/max/3960/1*wAsLkgM260veEKhBRtBnYw.png"
    alt="[Frontend JavaScript frontend libraries](https://trends.google.com/trends/explore?cat=5&amp;date=today%205-y&amp;q=%2Fm%2F012l1vxv,%2Fg%2F11c6w0ddw9,%2Fg%2F11c0vmgx5d)"><em><a
    href="https://trends.google.com/trends/explore?cat=5&date=today%205-y&q=%2Fm%2F012l1vxv,%2Fg%2F11c6w0ddw9,%2Fg%2F11c0vmgx5d">Frontend
    JavaScript frontend libraries</a></em></p><p>React is by far the most popular
    JavaScript library for front end development, and for a good reason too. It’s
    fun and easy to build React apps. The React team and community have done a splendid
    job as far as the experience goes for building applications.</p><p><img src="https://cdn-images-1.medium.com/max/2932/1*V-LKk4qxBMyM7-NKNir0xg.png"
    alt="React — [https://reactjs.org](https://reactjs.org)"><em>React — <a href="https://reactjs.org">https://reactjs.org</a></em></p><p>I’ve
    worked with Vue, Angular, and React, and I think they’re all fantastic frameworks
    to work with. Remember, the goal of a library is to get stuff done, so focus less
    on the flavor, and more on the getting stuff done. It’s utterly unproductive to
    argue about what framework is the “best.” Pick a framework and channel all your
    energy into building stuff instead.</p><p>If you’re feeling inspired, <a href="https://medium.com/better-programming/the-secret-to-being-a-top-developer-is-building-things-heres-a-list-of-fun-apps-to-build-aac61ac0736c">pick
    something from this list and start building today!</a></p><h2>Always Bet on JavaScript</h2><p>We
    can say with confidence that 2010s was the decade of JavaScript. We’ve seen a
    massive spike of JavaScript growth, and it doesn’t seem to be slowing down.</p><p><center><iframe
    width="560" height="315" src="https://www.youtube.com/embed/51QNMy9MlZY" frameborder="0"
    allowfullscreen></iframe></center></p><p>JavaScript developers have been taking
    some abuse by being called “not real developers.” JavaScript is the heart of any
    big tech company, such as Netflix, Facebook, Google, and many more. Therefore,
    JavaScript as a language is as legitimate as any other programming language. Take
    pride in being a JavaScript developer. After all, some of the coolest and most
    innovative stuff has been built by the JavaScript community.</p><p>Almost all
    websites are leveraging JavaScript to some degree. How many websites are out there?
    Millions!<a href="https://medium.com/@indreklasn/new-upcoming-javascript-features-2019-2020-and-beyond-5c426f31ec97"><strong>New
    Upcoming JavaScript Features — 2019, 2020 and Beyond</strong><em>A peek into the
    future on what’s coming to the JavaScript language</em>medium.com</a></p><p>It
    has never been a better time to be a JavaScript developer. Salaries are on the
    rise, the community is as alive as ever, and the job market is huge. If you’re
    curious to learn JavaScript, the “<a href="https://amzn.to/2YzFmcq">*You Don’t
    Know JS</a>*” book series was a fantastic read.</p><p><img src="https://cdn-images-1.medium.com/max/3200/1*7KOaqMNoiGjHwCwkpk3zIA.png"
    alt="[Top languages over time](https://octoverse.github.com/projects)"><em><a
    href="https://octoverse.github.com/projects">Top languages over time</a></em></p><p>I
    wrote earlier on the subject of <a href="https://medium.com/better-programming/what-makes-javascript-javascript-b9ab51ad983a">what
    makes JavaScript popular</a> — you should probably read that too.</p><p><img src="https://cdn-images-1.medium.com/max/5212/1*zMTuN_HBTVzqNtffHZWvYg.png"
    alt="[Top open source projects](https://octoverse.github.com/projects)"><em><a
    href="https://octoverse.github.com/projects">Top open source projects</a></em></p><p>Did
    I miss a cool project? <strong>Let us know which projects or languages deserve
    more love and attention!</strong><a href="https://medium.com/@indreklasn/10-books-every-programmer-should-read-6e5b7547e8b5"><strong>10
    Books Every Programmer Should Read</strong><em>Reading is a vital skill in finding
    a desirable programming job</em>medium.com</a></p><p>Thanks for reading! Stay
    awesome.</p>'
  :author: Better Programming
  :topic: programming
- :url: https://medium.com/free-code-camp/370-free-online-programming-computer-science-courses-you-can-start-this-month-fc5b9867769e?source=search_post
  :title: 370 Free Online Programming & Computer Science Courses You Can Start This
    Month
  :content: '<p>Five years ago, universities like MIT and Stanford first opened up
    free online courses to the public. Today, more than 700 schools around the world
    have created <a href="https://medium.freecodecamp.com/ivy-league-free-online-courses-a0d7ae675869">thousands
    of free online courses</a>.<a href="https://medium.freecodecamp.com/ivy-league-free-online-courses-a0d7ae675869"><strong>Here
    are 250 Ivy League courses you can take online right now for free</strong><em>250
    MOOCs from Brown, Columbia, Cornell, Dartmouth, Harvard, Penn, Princeton, and
    Yale.</em>medium.freecodecamp.com</a></p><p>Some of the most popular courses have
    been those focused on technology — topics like programming, computer science,
    data science, and artificial intelligence.</p><p>I’ve compiled this list of over
    370 such free <a href="https://www.classcentral.com/">online courses</a> that
    you can start this month. For this, I leveraged <a href="https://www.classcentral.com/">Class
    Central</a>’s database of over 7,000 courses. I’ve also included each course’s
    average rating.</p><p><img src="https://cdn-images-1.medium.com/max/4996/1*KUkIbxhAt3qY01EMaECITA.png"
    alt="[Class Central](https://www.classcentral.com/)’s landing page."><em><a href="https://www.classcentral.com/">Class
    Central</a>’s landing page.</em></p><p>I’ve sorted all 370 of these courses into
    the following categories based on their difficulty level:</p><ul><li><p>Beginner</p></li><li><p>Intermediate</p></li><li><p>Advanced</p></li></ul><p>Many
    of these courses are completely self-paced. The rest will start at various times
    later this month. You can find complete lists of the technology-related courses
    starting later in 2017 on our <a href="https://www.classcentral.com/subject/cs">Computer
    Science</a> and <a href="https://www.classcentral.com/subject/programming-and-software-development">Programming</a>
    subject pages.</p><h2>BEGINNER (67)</h2><p><a href="https://www.classcentral.com/mooc/442/edx-introduction-to-computer-science">**Introduction
    to Computer Science</a>**<em>Harvard University via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/442/edx-introduction-to-computer-science#reviews">59
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/408/coursera-an-introduction-to-interactive-programming-in-python-part-1">**An
    Introduction to Interactive Programming in Python (Part 1)</a>**<em>Rice University
    via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/408/coursera-an-introduction-to-interactive-programming-in-python-part-1#reviews">2919
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3196/coursera-an-introduction-to-interactive-programming-in-python-part-2">**An
    Introduction to Interactive Programming in Python (Part 2)</a>**<em>Rice University
    via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/3196/coursera-an-introduction-to-interactive-programming-in-python-part-2#reviews">47
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/390/coursera-learn-to-program-crafting-quality-code">**Learn
    to Program: Crafting Quality Code</a>**<em>University of Toronto via Coursera</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/390/coursera-learn-to-program-crafting-quality-code#reviews">6
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4256/coursera-programming-foundations-with-javascript-html-and-css">**Programming
    Foundations with JavaScript, HTML and CSS</a>**<em>Duke University via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/4256/coursera-programming-foundations-with-javascript-html-and-css#reviews">9
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1727/coursera-usable-security">**Usable
    Security</a>**<em>University of Maryland, College Park via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/1727/coursera-usable-security#reviews">8
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7027/coursera-introduction-to-web-development">**Introduction
    to Web Development</a>**<em>University of California, Davis via Coursera</em>6th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7315/edx-android-app-development-for-beginners">**Android
    App Development for Beginners</a>**<em>Galileo University via edX</em>6th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/529/coursera-creative-programming-for-digital-media-mobile-apps">**Creative
    Programming for Digital Media &amp; Mobile Apps</a>**<em>University of London
    International Programmes via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/529/coursera-creative-programming-for-digital-media-mobile-apps#reviews">10
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/385/coursera-learn-to-program-the-fundamentals">**Learn
    to Program: The Fundamentals</a>**<em>University of Toronto via Coursera</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/385/coursera-learn-to-program-the-fundamentals#reviews">88
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7849/edx-cyber-security-basics-a-hands-on-approach">**Cyber
    Security Basics: A Hands-on Approach</a>**<em>Universidad Carlos iii de Madrid
    via edX</em>14th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/335/coursera-internet-history-technology-and-security">**Internet
    History, Technology, and Security</a>**<em>University of Michigan via Coursera</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/335/coursera-internet-history-technology-and-security#reviews">34
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6265/futurelearn-cyber-security-safety-at-home-online-in-life">**Cyber
    Security: Safety at Home, Online, in Life</a>**<em>Newcastle University via FutureLearn</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/6265/futurelearn-cyber-security-safety-at-home-online-in-life#reviews">1
    rating</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4239/coursera-html-css-and-javascript">**HTML,
    CSS and JavaScript</a>**<em>The Hong Kong University of Science and Technology
    via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4239/coursera-html-css-and-javascript#reviews">19
    ratings</a>) | 24th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/2129/futurelearn-data-to-insight-an-introduction-to-data-analysis">**Data
    to Insight: an Introduction to Data Analysis</a>**<em>University Of Auckland via
    FutureLearn</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2129/futurelearn-data-to-insight-an-introduction-to-data-analysis#reviews">2
    ratings</a>) | 27th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1578/stanford-openedx-networking-introduction-to-computer-networking">**Networking:
    Introduction to Computer Networking</a>**<em>Stanford University via Stanford
    OpenEdx</em>★★★★★ (<a href="https://www.classcentral.com/mooc/1578/stanford-openedx-networking-introduction-to-computer-networking#reviews">8
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1580/stanford-openedx-db-introduction-to-databases">**DB:
    Introduction to Databases</a>**<em>Stanford University via Stanford OpenEdx</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/1580/stanford-openedx-db-introduction-to-databases#reviews">10
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2954/edx-programming-in-scratch">**Programming
    in Scratch</a>**<em>Harvey Mudd College via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/2954/edx-programming-in-scratch#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3483/edx-cs-for-all-introduction-to-computer-science-and-python-programming">**CS
    For All: Introduction to Computer Science and Python Programming</a>**<em>Harvey
    Mudd College via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/3483/edx-cs-for-all-introduction-to-computer-science-and-python-programming#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2809/edx-the-computing-technology-inside-your-smartphone">**The
    Computing Technology Inside Your Smartphone</a>**<em>Cornell University via edX</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/2809/edx-the-computing-technology-inside-your-smartphone#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7631/datacamp-intro-to-python-for-data-science">**Intro
    to Python for Data Science</a>**<em>via Datacamp</em>★★★★★ (<a href="https://www.classcentral.com/mooc/7631/datacamp-intro-to-python-for-data-science#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5923/edx-introduction-to-html-and-javascript">**Introduction
    to HTML and Javascript</a>**<em>Microsoft via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/5923/edx-introduction-to-html-and-javascript#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/8059/udacity-intro-to-javascript">**Intro
    to JavaScript</a>**<em>via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/8059/udacity-intro-to-javascript#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7622/edx-introduction-to-computing-using-python">**Introduction
    to Computing using Python</a>**<em>Georgia Institute of Technology via edX</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/7622/edx-introduction-to-computing-using-python#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2661/udacity-how-to-use-git-and-github">**How
    to Use Git and GitHub</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2661/udacity-how-to-use-git-and-github#reviews">34
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/320/udacity-intro-to-computer-science">**Intro
    to Computer Science</a>**<em>University of Virginia via Udacity</em>★★★★☆ (<a
    href="https://www.classcentral.com/mooc/320/udacity-intro-to-computer-science#reviews">63
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2013/udacity-programming-foundations-with-python">**Programming
    Foundations with Python</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2013/udacity-programming-foundations-with-python#reviews">9
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2659/udacity-intro-to-html-and-css">**Intro
    to HTML and CSS</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2659/udacity-intro-to-html-and-css#reviews">24
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2660/udacity-javascript-basics">**JavaScript
    Basics</a>**<em>via Udacity</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/2660/udacity-javascript-basics#reviews">16
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/831/udacity-intro-to-java-programming">**Intro
    to Java Programming</a>**<em>San Jose State University via Udacity</em>★★★☆☆ (<a
    href="https://www.classcentral.com/mooc/831/udacity-intro-to-java-programming#reviews">19
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2175/stanford-openedx-cs101-computer-science-101">**CS101:
    Computer Science 101</a>**<em>Stanford University via Stanford OpenEdx</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/2175/stanford-openedx-cs101-computer-science-101#reviews">11
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2957/edx-mycs-computer-science-for-beginners">**MyCS:
    Computer Science for Beginners</a>**<em>Harvey Mudd College via edX</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/2957/edx-mycs-computer-science-for-beginners#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7630/datacamp-introduction-to-r">**Introduction
    to R</a>**<em>via Datacamp</em>★☆☆☆☆ (<a href="https://www.classcentral.com/mooc/7630/datacamp-introduction-to-r#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3338/edx-introduction-to-bootstrap-a-tutorial">**Introduction
    to Bootstrap — A Tutorial</a>**<em>Microsoft via edX</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/3338/edx-introduction-to-bootstrap-a-tutorial#reviews">8
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7313/edx-java-fundamentals-for-android-development">**Java
    Fundamentals for Android Development</a>**<em>Galileo University via edX</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/1651/edx-object-oriented-programming">**Object-Oriented
    Programming</a>**<em>Indian Institute of Technology Bombay via edX</em>★★★★☆ (<a
    href="https://www.classcentral.com/mooc/1651/edx-object-oriented-programming#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1650/edx-programming-basics">**Programming
    Basics</a>**<em>Indian Institute of Technology Bombay via edX</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/1650/edx-programming-basics#reviews">13
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5764/edx-html5-introduction">**HTML5
    Introduction</a>**<em>World Wide Web Consortium (W3C) via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/5764/edx-html5-introduction#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3444/edx-html5-part-1-html5-coding-essentials-and-best-practices">**HTML5
    Part 1: HTML5 Coding Essentials and Best Practices</a>**<em>World Wide Web Consortium
    (W3C) via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3444/edx-html5-part-1-html5-coding-essentials-and-best-practices#reviews">9
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1857/edx-introduction-to-linux">**Introduction
    to Linux</a>**<em>Linux Foundation via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/1857/edx-introduction-to-linux#reviews">34
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2630/edx-paradigms-of-computer-programming-abstraction-and-concurrency">**Paradigms
    of Computer Programming — Abstraction and Concurrency</a>**<em>Université catholique
    de Louvain via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2630/edx-paradigms-of-computer-programming-abstraction-and-concurrency#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3253/udacity-intro-to-relational-databases">**Intro
    to Relational Databases</a>**<em>via Udacity</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/3253/udacity-intro-to-relational-databases#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4049/udacity-linux-command-line-basics">**Linux
    Command Line Basics</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4049/udacity-linux-command-line-basics#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2195/edx-computing-art-magic-science">**Computing:
    Art, Magic, Science</a>**<em>ETH Zurich via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2195/edx-computing-art-magic-science#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3695/edx-learn-to-program-using-python">**Learn
    to Program Using Python</a>**<em>University of Texas Arlington via edX</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/3695/edx-learn-to-program-using-python#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4062/edx-introduction-to-jquery">**Introduction
    to jQuery</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4062/edx-introduction-to-jquery#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3231/edx-think-create-code">**Think.
    Create. Code</a>**<em>University of Adelaide via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/3231/edx-think-create-code#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1651/edx-object-oriented-programming">**Object-Oriented
    Programming</a>**<em>Indian Institute of Technology Bombay via edX</em>★★★★☆ (<a
    href="https://www.classcentral.com/mooc/1651/edx-object-oriented-programming#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3353/edx-introduction-to-cloud-computing">**Introduction
    to Cloud Computing</a>**<em>IEEE via edX</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/3353/edx-introduction-to-cloud-computing#reviews">6
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1650/edx-programming-basics">**Programming
    Basics</a>**<em>Indian Institute of Technology Bombay via edX</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/1650/edx-programming-basics#reviews">13
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7278/udacity-android-basics-make-your-first-app">**Android
    Basics: Make Your First App</a>**<em>Google via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/7278/udacity-android-basics-make-your-first-app#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2298/edx-paradigms-of-computer-programming-fundamentals">**Paradigms
    of Computer Programming — Fundamentals</a>**<em>Université catholique de Louvain
    via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/2298/edx-paradigms-of-computer-programming-fundamentals#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2813/edx-introduction-to-programming-with-java-1-starting-to-code-with-java">**Introduction
    to Programming with Java 1: Starting to Code with Java</a>**<em>Universidad Carlos
    iii de Madrid via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2813/edx-introduction-to-programming-with-java-1-starting-to-code-with-java#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7363/python-for-everybody-exploring-information">**Python
    for Everybody — Exploring Information</a>**<em>via Independent</em>★★★★★ (<a href="https://www.classcentral.com/mooc/7363/python-for-everybody-exploring-information#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1046/udacity-mobile-web-development">**Mobile
    Web Development</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3925/udacity-learn-swift-programming-syntax">**Learn
    Swift Programming Syntax</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/4084/edx-computing-art-magic-science-part-ii">**Computing:
    Art, Magic, Science — Part II</a>**<em>ETH Zurich via edX</em>Self Paced</p><p><a
    href="https://www.classcentral.com/mooc/6531/udacity-web-accessibility">**Web
    Accessibility</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6686/udacity-java-programming-basics">**Java
    Programming Basics</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7017/edx-ap-computer-science-principles">**AP®
    Computer Science Principles</a>**<em>Harvard University via edX</em>Self Paced</p><p><a
    href="https://www.classcentral.com/mooc/7362/web-applications-for-everybody">**Web
    Applications for Everybody</a>**<em>via Independent</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7212/edx-ap-computer-science-a-java-programming-data-structures-and-loops">**AP
    Computer Science A: Java Programming Data Structures and Loops</a>**<em>Purdue
    University via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7336/canvas-network-java-programming-for-gcse-and-a-level">**Java
    Programming for GCSE and A-Level</a>**<em>University of Wolverhampton via Canvas
    Network</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/5735/edx-introduction-to-programming-with-java-2-writing-good-code">**Introduction
    to Programming with Java 2: Writing Good Code</a>**<em>Universidad Carlos iii
    de Madrid via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7199/edx-css-introduction">**CSS
    Introduction</a>**<em>Microsoft via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7494/udacity-swift-for-beginners">**Swift
    for Beginners</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7623/udacity-android-for-beginners">**Android
    for Beginners</a>**<em>via Udacity</em>Self Paced</p><h2>INTERMEDIATE(243)</h2><p><a
    href="https://www.classcentral.com/mooc/3080/coursera-programming-cloud-services-for-android-handheld-systems-security">**Programming
    Cloud Services for Android Handheld Systems: Security</a>**<em>Vanderbilt University
    via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3080/coursera-programming-cloud-services-for-android-handheld-systems-security#reviews">4
    ratings</a>) | 1st Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/835/coursera-machine-learning">**Machine
    Learning</a>**<em>Stanford University via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/835/coursera-machine-learning#reviews">279
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1728/coursera-software-security">**Software
    Security </a>**<em>University of Maryland, College Park via Coursera</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/1728/coursera-software-security#reviews">22
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1724/coursera-principles-of-computing-part-1">**Principles
    of Computing (Part 1)</a>**<em>Rice University via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/1724/coursera-principles-of-computing-part-1#reviews">27
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4362/coursera-java-programming-arrays-lists-and-structured-data">**Java
    Programming: Arrays, Lists, and Structured Data</a>**<em>Duke University via Coursera</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/4362/coursera-java-programming-arrays-lists-and-structured-data#reviews">4
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6467/coursera-big-data-integration-and-processing">**Big
    Data Integration and Processing</a>**<em>University of California, San Diego via
    Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/6467/coursera-big-data-integration-and-processing#reviews">2
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4356/coursera-responsive-website-tutorial-and-examples">**Responsive
    Website Tutorial and Examples</a>**<em>University of London International Programmes
    via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/4356/coursera-responsive-website-tutorial-and-examples#reviews">1
    rating</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1725/coursera-algorithmic-thinking-part-1">**Algorithmic
    Thinking (Part 1)</a>**<em>Rice University via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/1725/coursera-algorithmic-thinking-part-1#reviews">14
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7784/coursera-google-cloud-platform-fundamentals">**Google
    Cloud Platform Fundamentals</a>**<em>Google via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/7784/coursera-google-cloud-platform-fundamentals#reviews">1
    rating</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4164/coursera-introduction-to-big-data">**Introduction
    to Big Data</a>**<em>University of California, San Diego via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/4164/coursera-introduction-to-big-data#reviews">31
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4391/coursera-building-a-data-science-team">**Building
    a Data Science Team</a>**<em>Johns Hopkins University via Coursera</em>★★★☆☆ (<a
    href="https://www.classcentral.com/mooc/4391/coursera-building-a-data-science-team#reviews">11
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3198/coursera-principles-of-computing-part-2">**Principles
    of Computing (Part 2)</a>**<em>Rice University via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3198/coursera-principles-of-computing-part-2#reviews">16
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/2942/coursera-cloud-computing-concepts-part-2">**Cloud
    Computing Concepts: Part 2</a>**<em>University of Illinois at Urbana-Champaign
    via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/2942/coursera-cloud-computing-concepts-part-2#reviews">5
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1779/edx-introduction-to-computational-thinking-and-data-science">**Introduction
    to Computational Thinking and Data Science</a>**<em>Massachusetts Institute of
    Technology via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/1779/edx-introduction-to-computational-thinking-and-data-science#reviews">30
    ratings</a>) | 7th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4328/coursera-introduction-to-meteor-js-development">**Introduction
    to Meteor.js Development </a>**<em>University of London International Programmes
    via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4328/coursera-introduction-to-meteor-js-development#reviews">6
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3200/coursera-algorithmic-thinking-part-2">**Algorithmic
    Thinking (Part 2)</a>**<em>Rice University via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3200/coursera-algorithmic-thinking-part-2#reviews">9
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/462/coursera-image-and-video-processing-from-mars-to-hollywood-with-a-stop-at-the-hospital">**Image
    and Video Processing: From Mars to Hollywood with a Stop at the Hospital</a>**<em>Duke
    University via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/462/coursera-image-and-video-processing-from-mars-to-hollywood-with-a-stop-at-the-hospital#reviews">8
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4297/coursera-data-visualization-and-communication-with-tableau">**Data
    Visualization and Communication with Tableau</a>**<em>Duke University via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/4297/coursera-data-visualization-and-communication-with-tableau#reviews">8
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6040/coursera-a-developer-s-guide-to-the-internet-of-things-iot">**A
    developer’s guide to the Internet of Things (IoT)</a>**<em>IBM via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/6040/coursera-a-developer-s-guide-to-the-internet-of-things-iot#reviews">1
    rating</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4348/coursera-ios-app-development-basics">**iOS
    App Development Basics</a>**<em>University of Toronto via Coursera</em>★★★★☆ (<a
    href="https://www.classcentral.com/mooc/4348/coursera-ios-app-development-basics#reviews">2
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4337/coursera-database-management-essentials">**Database
    Management Essentials</a>**<em>University of Colorado System via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/4337/coursera-database-management-essentials#reviews">4
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6808/coursera-fundamentals-of-visualization-with-tableau">**Fundamentals
    of Visualization with Tableau</a>**<em>University of California, Davis via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/6808/coursera-fundamentals-of-visualization-with-tableau#reviews">1
    rating</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4173/coursera-internet-of-things-communication-technologies">**Internet
    of Things: Communication Technologies</a>**<em>University of California, San Diego
    via Coursera</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/4173/coursera-internet-of-things-communication-technologies#reviews">3
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4392/coursera-a-crash-course-in-data-science">**A
    Crash Course in Data Science</a>**<em>Johns Hopkins University via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/4392/coursera-a-crash-course-in-data-science#reviews">19
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4200/coursera-responsive-web-design">**Responsive
    Web Design</a>**<em>University of London International Programmes via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/4200/coursera-responsive-web-design#reviews">11
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4305/coursera-java-programming-solving-problems-with-software">**Java
    Programming: Solving Problems with Software</a>**<em>Duke University via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/4305/coursera-java-programming-solving-problems-with-software#reviews">10
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4389/coursera-data-science-in-real-life">**Data
    Science in Real Life</a>**<em>Johns Hopkins University via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/4389/coursera-data-science-in-real-life#reviews">10
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/2738/coursera-cloud-computing-applications-part-1-cloud-systems-and-infrastructure">**Cloud
    Computing Applications, Part 1: Cloud Systems and Infrastructure</a>**<em>University
    of Illinois at Urbana-Champaign via Coursera</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/2738/coursera-cloud-computing-applications-part-1-cloud-systems-and-infrastructure#reviews">7
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4169/coursera-data-analysis-tools">**Data
    Analysis Tools</a>**<em>Wesleyan University via Coursera</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/4169/coursera-data-analysis-tools#reviews">4
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7170/coursera-the-r-programming-environment">**The
    R Programming Environment</a>**<em>Johns Hopkins University via Coursera</em>★★☆☆☆
    (<a href="https://www.classcentral.com/mooc/7170/coursera-the-r-programming-environment#reviews">3
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4184/coursera-data-management-and-visualization">**Data
    Management and Visualization</a>**<em>Wesleyan University via Coursera</em>★★☆☆☆
    (<a href="https://www.classcentral.com/mooc/4184/coursera-data-management-and-visualization#reviews">5
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4269/coursera-hadoop-platform-and-application-framework">**Hadoop
    Platform and Application Framework</a>**<em>University of California, San Diego
    via Coursera</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/4269/coursera-hadoop-platform-and-application-framework#reviews">21
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/5704/coursera-global-warming-ii-create-your-own-models-in-python">**Global
    Warming II: Create Your Own Models in Python</a>**<em>The University of Chicago
    via Coursera</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/5704/coursera-global-warming-ii-create-your-own-models-in-python#reviews">1
    rating</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4388/coursera-managing-data-analysis">**Managing
    Data Analysis</a>**<em>Johns Hopkins University via Coursera</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/4388/coursera-managing-data-analysis#reviews">7
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7501/coursera-fundamentals-of-computer-architecture">**Fundamentals
    of Computer Architecture</a>**<em>EIT Digital via Coursera</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/7501/coursera-fundamentals-of-computer-architecture#reviews">1
    rating</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/2067/coursera-interactive-computer-graphics">**Interactive
    Computer Graphics</a>**<em>The University of Tokyo via Coursera</em>★★☆☆☆ (<a
    href="https://www.classcentral.com/mooc/2067/coursera-interactive-computer-graphics#reviews">4
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4248/coursera-introduction-to-swift-programming">**Introduction
    To Swift Programming</a>**<em>University of Toronto via Coursera</em>★☆☆☆☆ (<a
    href="https://www.classcentral.com/mooc/4248/coursera-introduction-to-swift-programming#reviews">6
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6584/coursera-cybersecurity-and-mobility">**Cybersecurity
    and Mobility</a>**<em>University System of Georgia via Coursera</em>★☆☆☆☆ (<a
    href="https://www.classcentral.com/mooc/6584/coursera-cybersecurity-and-mobility#reviews">1
    rating</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6300/edx-how-to-win-coding-competitions-secrets-of-champions">**How
    to Win Coding Competitions: Secrets of Champions</a>**<em>ITMO University via
    edX</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6748/coursera-introduction-to-architecting-smart-iot-devices">**Introduction
    to Architecting Smart IoT Devices</a>**<em>EIT Digital via Coursera</em>6th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/6585/coursera-cybersecurity-and-the-x-factor">**Cybersecurity
    and the X-Factor</a>**<em>University System of Georgia via Coursera</em>6th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/8022/coursera-a-developer-s-guide-to-exploring-and-visualizing-iot-data">**A
    developer’s guide to Exploring and Visualizing IoT Data</a>**<em>IBM via Coursera</em>6th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/5500/coursera-android-app-components-intents-activities-and-broadcast-receivers">**Android
    App Components — Intents, Activities, and Broadcast Receivers</a>**<em>Vanderbilt
    University via Coursera</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7785/coursera-building-arduino-robots-and-devices">**Building
    Arduino robots and devices</a>**<em>Moscow Institute of Physics and Technology
    via Coursera</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6809/coursera-essential-design-principles-for-tableau">**Essential
    Design Principles for Tableau</a>**<em>University of California, Davis via Coursera</em>6th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7660/futurelearn-supercomputing">**Supercomputing</a>**<em>Partnership
    for Advanced Computing in Europe via FutureLearn</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6523/coursera-testing-with-agile">**Testing
    with Agile</a>**<em>University of Virginia via Coursera</em>6th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/7805/futurelearn-data-mining-with-weka">**Data
    Mining with Weka</a>**<em>University of Waikato via FutureLearn</em>6th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/6931/coursera-c-for-c-programmers-part-b">**C++
    For C Programmers, Part B</a>**<em>University of California, Santa Cruz via Coursera</em>6th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7763/coursera-android-app-components-services-local-ipc-and-content-providers">**Android
    App Components — Services, Local IPC, and Content Providers</a>**<em>Vanderbilt
    University via Coursera</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7176/coursera-building-data-visualization-tools">**Building
    Data Visualization Tools</a>**<em>Johns Hopkins University via Coursera</em>6th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7175/coursera-building-r-packages">**Building
    R Packages</a>**<em>Johns Hopkins University via Coursera</em>6th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/5592/coursera-running-product-design-sprints">**Running
    Product Design Sprints</a>**<em>University of Virginia via Coursera</em>6th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/6420/coursera-introduction-to-neurohacking-in-r">**Introduction
    to Neurohacking In R</a>**<em>Johns Hopkins University via Coursera</em>6th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/7837/edx-uml-class-diagrams-for-software-engineering">**UML
    Class Diagrams for Software Engineering</a>**<em>KU Leuven University via edX</em>6th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7174/coursera-advanced-r-programming">**Advanced
    R Programming</a>**<em>Johns Hopkins University via Coursera</em>6th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/7351/coursera-shortest-paths-revisited-np-complete-problems-and-what-to-do-about-them">**Shortest
    Paths Revisited, NP-Complete Problems and What To Do About Them</a>**<em>Stanford
    University via Coursera</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7745/coursera-data-science-math-skills">**Data
    Science Math Skills</a>**<em>Duke University via Coursera</em>6th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/6086/coursera-dealing-with-missing-data">**Dealing
    With Missing Data</a>**<em>University of Maryland, College Park via Coursera</em>6th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/5446/coursera-java-for-android">**Java
    for Android</a>**<em>Vanderbilt University via Coursera</em>7th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/7840/edx-mobile-application-experiences">**Mobile
    Application Experiences</a>**<em>Massachusetts Institute of Technology via edX</em>7th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1737/coursera--the-advanced-object-oriented-technology">**面向对象技术高级课程（The
    Advanced Object-Oriented Technology）</a>**<em>Peking University via Coursera</em>13th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7092/coursera-julia-scientific-programming">**Julia
    Scientific Programming</a>**<em>University of Cape Town via Coursera</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/7092/coursera-julia-scientific-programming#reviews">6
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3473/coursera-genomic-data-science-with-galaxy">**Genomic
    Data Science with Galaxy</a>**<em>Johns Hopkins University via Coursera</em>★★☆☆☆
    (<a href="https://www.classcentral.com/mooc/3473/coursera-genomic-data-science-with-galaxy#reviews">11
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7415/coursera-web-connectivity-and-security-in-embedded-systems">**Web
    Connectivity and Security in Embedded Systems</a>**<em>EIT Digital via Coursera</em>13th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/487/coursera-discrete-optimization">**Discrete
    Optimization</a>**<em>University of Melbourne via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/487/coursera-discrete-optimization#reviews">12
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1209/coursera-bioinformatics-introduction-and-methods--">**Bioinformatics:
    Introduction and Methods 生物信息学: 导论与方法</a>**<em>Peking University via Coursera</em>13th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/5497/coursera-web-application-development-basic-concepts">**Web
    Application Development: Basic Concepts</a>**<em>University of New Mexico via
    Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/5497/coursera-web-application-development-basic-concepts#reviews">1
    rating</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6235/coursera-build-your-own-ios-app">**Build
    Your Own iOS App</a>**<em>University of Toronto via Coursera</em>13th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/3472/coursera-introduction-to-genomic-technologies">**Introduction
    to Genomic Technologies</a>**<em>Johns Hopkins University via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/3472/coursera-introduction-to-genomic-technologies#reviews">11
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6920/coursera-programming-languages-part-b">**Programming
    Languages, Part B</a>**<em>University of Washington via Coursera</em>13th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/8025/coursera-build-a-modern-computer-from-first-principles-nand-to-tetris-part-ii-project-centered-course">**Build
    a Modern Computer from First Principles: Nand to Tetris Part II (project-centered
    course)</a>**<em>Hebrew University of Jerusalem via Coursera</em>13th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/3476/coursera-python-for-genomic-data-science">**Python
    for Genomic Data Science</a>**<em>Johns Hopkins University via Coursera</em>★★☆☆☆
    (<a href="https://www.classcentral.com/mooc/3476/coursera-python-for-genomic-data-science#reviews">12
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3230/coursera--design-and-analysis-of-algorithms">**算法设计与分析
    Design and Analysis of Algorithms</a>**<em>Peking University via Coursera</em>13th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3478/coursera-statistics-for-genomic-data-science">**Statistics
    for Genomic Data Science</a>**<em>Johns Hopkins University via Coursera</em>★★☆☆☆
    (<a href="https://www.classcentral.com/mooc/3478/coursera-statistics-for-genomic-data-science#reviews">3
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/342/coursera-computer-architecture">**Computer
    Architecture</a>**<em>Princeton University via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/342/coursera-computer-architecture#reviews">4
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/671/coursera-c-for-c-programmers-part-a">**C++
    For C Programmers, Part A</a>**<em>University of California, Santa Cruz via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/671/coursera-c-for-c-programmers-part-a#reviews">16
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1176/open2study-concepts-in-game-development">**Concepts
    in Game Development</a>**<em>Swinburne University of Technology via Open2Study</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/1176/open2study-concepts-in-game-development#reviews">15
    ratings</a>) | 19th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3933/coursera-internet-emerging-technologies">**Internet
    Emerging Technologies</a>**<em>Yonsei University via Coursera</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/3933/coursera-internet-emerging-technologies#reviews">2
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1730/coursera-cryptography">**Cryptography</a>**<em>University
    of Maryland, College Park via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/1730/coursera-cryptography#reviews">8
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3931/coursera-big-data-cloud-computing-cdn-emerging-technologies">**Big
    Data, Cloud Computing, &amp; CDN Emerging Technologies</a>**<em>Yonsei University
    via Coursera</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/3931/coursera-big-data-cloud-computing-cdn-emerging-technologies#reviews">4
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7751/coursera-data-processing-using-python">**Data
    Processing Using Python</a>**<em>Nanjing University via Coursera</em>20th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/891/coursera-networks-illustrated-principles-without-calculus">**Networks
    Illustrated: Principles without Calculus</a>**<em>Princeton University via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/891/coursera-networks-illustrated-principles-without-calculus#reviews">3
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/339/coursera-algorithms-part-i">**Algorithms,
    Part I</a>**<em>Princeton University via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/339/coursera-algorithms-part-i#reviews">49
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/616/coursera-cryptography-i">**Cryptography
    I</a>**<em>Stanford University via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/616/coursera-cryptography-i#reviews">46
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1377/coursera-----latex-introduction-to-latex">**Документы
    и презентации в LaTeX (Introduction to LaTeX)</a>**<em>Higher School of Economics
    via Coursera</em>20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3936/coursera-wireless-communication-emerging-technologies">**Wireless
    Communication Emerging Technologies</a>**<em>Yonsei University via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/3936/coursera-wireless-communication-emerging-technologies#reviews">3
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4276/coursera-internet-of-things-how-did-we-get-here">**Internet
    of Things: How did we get here?</a>**<em>University of California, San Diego via
    Coursera</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/4276/coursera-internet-of-things-how-did-we-get-here#reviews">6
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7187/coursera-programming-languages-part-c">**Programming
    Languages, Part C</a>**<em>University of Washington via Coursera</em>20th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/6839/coursera-architecting-smart-iot-devices">**Architecting
    Smart IoT Devices</a>**<em>EIT Digital via Coursera</em>20th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/3934/coursera-internet-of-things-augmented-reality-emerging-technologies">**Internet
    of Things &amp; Augmented Reality Emerging Technologies</a>**<em>Yonsei University
    via Coursera</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/3934/coursera-internet-of-things-augmented-reality-emerging-technologies#reviews">4
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/8056/futurelearn-managing-big-data-with-r-and-hadoop">**Managing
    Big Data with R and Hadoop</a>**<em>Partnership for Advanced Computing in Europe
    via FutureLearn</em>20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4240/coursera-front-end-web-ui-frameworks-and-tools">**Front-End
    Web UI Frameworks and Tools</a>**<em>The Hong Kong University of Science and Technology
    via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4240/coursera-front-end-web-ui-frameworks-and-tools#reviews">9
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6607/coursera-moving-to-the-cloud">**Moving
    to the Cloud</a>**<em>University of Melbourne via Coursera</em>20th Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/2445/coursera-process-mining-data-science-in-action">**Process
    Mining: Data science in Action</a>**<em>Eindhoven University of Technology via
    Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2445/coursera-process-mining-data-science-in-action#reviews">16
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4182/coursera-internet-of-things-sensing-and-actuation-from-devices">**Internet
    of Things: Sensing and Actuation From Devices</a>**<em>University of California,
    San Diego via Coursera</em>20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4224/coursera-multiplatform-mobile-app-development-with-web-technologies">**Multiplatform
    Mobile App Development with Web Technologies</a>**<em>The Hong Kong University
    of Science and Technology via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/4224/coursera-multiplatform-mobile-app-development-with-web-technologies#reviews">2
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4260/coursera-internet-of-things-setting-up-your-dragonboard-development-platform">**Internet
    of Things: Setting Up Your DragonBoard™ Development Platform</a>**<em>University
    of California, San Diego via Coursera</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/4260/coursera-internet-of-things-setting-up-your-dragonboard-development-platform#reviews">3
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7391/edx-introduction-to-data-structures">**Introduction
    to Data Structures</a>**<em>University of Adelaide via edX</em>21st Mar, 2017</p><p><a
    href="https://www.classcentral.com/mooc/7844/edx-cybersecurity-fundamentals">**Cybersecurity
    Fundamentals</a>**<em>Rochester Institute of Technology via edX</em>21st Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/8071/futurelearn-learn-to-code-electronic-music-tools-with-javascript">**Learn
    to Code Electronic Music Tools with Javascript</a>**<em>Goldsmiths, University
    of London via FutureLearn</em>27th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/8093/futurelearn-network-security-for-industry-professionals">**Network
    Security for Industry Professionals</a>**<em>Queen’s University Belfast via FutureLearn</em>27th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/323/udacity-design-of-computer-programs">**Design
    of Computer Programs</a>**<em>Stanford University via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/323/udacity-design-of-computer-programs#reviews">13
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/324/udacity-web-development">**Web
    Development</a>**<em>via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/324/udacity-web-development#reviews">17
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/325/udacity-programming-languages">**Programming
    Languages</a>**<em>University of Virginia via Udacity</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/325/udacity-programming-languages#reviews">10
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/364/udacity-intro-to-algorithms">**Intro
    to Algorithms</a>**<em>via Udacity</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/364/udacity-intro-to-algorithms#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/365/udacity-software-testing">**Software
    Testing</a>**<em>University of Utah via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/365/udacity-software-testing#reviews">7
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/457/udacity-software-debugging">**Software
    Debugging</a>**<em>Saarland University via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/457/udacity-software-debugging#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/455/udacity-intro-to-theoretical-computer-science">**Intro
    to Theoretical Computer Science</a>**<em>via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/455/udacity-intro-to-theoretical-computer-science#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/592/udacity-intro-to-artificial-intelligence">**Intro
    to Artificial Intelligence</a>**<em>Stanford University via Udacity</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/592/udacity-intro-to-artificial-intelligence#reviews">12
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/551/udacity-html5-game-development">**HTML5
    Game Development</a>**<em>Google via Udacity</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/551/udacity-html5-game-development#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/366/learning-from-data-introductory-machine-learning-course">**Learning
    from Data (Introductory Machine Learning course)</a>**<em>California Institute
    of Technology via Independent</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/366/learning-from-data-introductory-machine-learning-course#reviews">7
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1470/udacity-intro-to-hadoop-and-mapreduce">**Intro
    to Hadoop and MapReduce</a>**<em>Cloudera via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/1470/udacity-intro-to-hadoop-and-mapreduce#reviews">19
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1021/udacity-cs-8802-artificial-intelligence-for-robotics-programming-a-robotic-car">**CS
    8802, Artificial Intelligence for Robotics: Programming a Robotic Car</a>**<em>Stanford
    University via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/1021/udacity-cs-8802-artificial-intelligence-for-robotics-programming-a-robotic-car#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1480/udacity-intro-to-data-science">**Intro
    to Data Science</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/1480/udacity-intro-to-data-science#reviews">11
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1479/udacity-data-wrangling-with-mongodb">**Data
    Wrangling with MongoDB</a>**<em>MongoDB University via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/1479/udacity-data-wrangling-with-mongodb#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1478/udacity-data-analysis-with-r">**Data
    Analysis with R</a>**<em>Facebook via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/1478/udacity-data-analysis-with-r#reviews">16
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1701/openhpi-parallel-programming-concepts">**Parallel
    Programming Concepts</a>**<em>via openHPI</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/1701/openhpi-parallel-programming-concepts#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1848/udacity-machine-learning-unsupervised-learning">**Machine
    Learning: Unsupervised Learning</a>**<em>Brown University via Udacity</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/1848/udacity-machine-learning-unsupervised-learning#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2189/udacity-website-performance-optimization">**Website
    Performance Optimization</a>**<em>Google via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2189/udacity-website-performance-optimization#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2212/udacity-ux-design-for-mobile-developers">**UX
    Design for Mobile Developers</a>**<em>Google via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/2212/udacity-ux-design-for-mobile-developers#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2215/udacity-developing-scalable-apps-in-java">**Developing
    Scalable Apps in Java</a>**<em>Google via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2215/udacity-developing-scalable-apps-in-java#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2211/udacity-developing-android-apps">**Developing
    Android Apps</a>**<em>Google via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2211/udacity-developing-android-apps#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2335/udacity-software-development-process">**Software
    Development Process</a>**<em>Georgia Institute of Technology via Udacity</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/2335/udacity-software-development-process#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2336/udacity-computer-networking">**Computer
    Networking</a>**<em>Georgia Institute of Technology via Udacity</em>★★★★☆ (<a
    href="https://www.classcentral.com/mooc/2336/udacity-computer-networking#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2339/practical-numerical-methods-with-python">**Practical
    Numerical Methods with Python</a>**<em>George Washington University via Independent</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/2339/practical-numerical-methods-with-python#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2658/udacity-object-oriented-javascript">**Object-Oriented
    JavaScript</a>**<em>Hack Reactor via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/2658/udacity-object-oriented-javascript#reviews">11
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2144/edx-data-analytics-and-learning">**Data,
    Analytics and Learning</a>**<em>University of Texas Arlington via edX</em>★★☆☆☆
    (<a href="https://www.classcentral.com/mooc/2144/edx-data-analytics-and-learning#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2716/stanford-openedx-compilers">**Compilers</a>**<em>Stanford
    University via Stanford OpenEdx</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2716/stanford-openedx-compilers#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2997/udacity-intro-to-ajax">**Intro
    to AJAX</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2997/udacity-intro-to-ajax#reviews">6
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2898/udacity-data-visualization-and-d3-js">**Data
    Visualization and D3.js</a>**<em>via Udacity</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/2898/udacity-data-visualization-and-d3-js#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2861/udacity-intro-to-ios-app-development-with-swift">**Intro
    to iOS App Development with Swift</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2861/udacity-intro-to-ios-app-development-with-swift#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2998/udacity-intro-to-jquery">**Intro
    to jQuery</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2998/udacity-intro-to-jquery#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2996/udacity-intro-to-machine-learning">**Intro
    to Machine Learning</a>**<em>Stanford University via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2996/udacity-intro-to-machine-learning#reviews">13
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3254/udacity-full-stack-foundations">**Full
    Stack Foundations</a>**<em>via Udacity</em>★☆☆☆☆ (<a href="https://www.classcentral.com/mooc/3254/udacity-full-stack-foundations#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3255/udacity-responsive-web-design-fundamentals">**Responsive
    Web Design Fundamentals</a>**<em>Google via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3255/udacity-responsive-web-design-fundamentals#reviews">6
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3288/udacity-health-informatics-in-the-cloud">**Health
    Informatics in the Cloud</a>**<em>Georgia Institute of Technology via Udacity</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/3351/udacity-javascript-testing">**JavaScript
    Testing</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3351/udacity-javascript-testing#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3350/udacity-uikit-fundamentals">**UIKit
    Fundamentals</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/2340/stanford-openedx-lpl-language-proof-and-logic">**LPL:
    Language, Proof and Logic</a>**<em>Stanford University via Stanford OpenEdx</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/3393/udacity-ios-networking-with-swift">**iOS
    Networking with Swift</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3524/udacity-browser-rendering-optimization">**Browser
    Rendering Optimization</a>**<em>Google via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3524/udacity-browser-rendering-optimization#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3525/udacity-developing-scalable-apps-in-python">**Developing
    Scalable Apps in Python</a>**<em>Google via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3525/udacity-developing-scalable-apps-in-python#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3526/udacity-ios-persistence-and-core-data">**iOS
    Persistence and Core Data</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3527/udacity-how-to-make-an-ios-app">**How
    to Make an iOS App</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3455/udacity-android-performance">**Android
    Performance</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3579/udacity-android-development-for-beginners">**Android
    Development for Beginners</a>**<em>Google via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3579/udacity-android-development-for-beginners#reviews">11
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3580/udacity-advanced-android-app-development">**Advanced
    Android App Development</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3581/udacity-material-design-for-android-developers">**Material
    Design for Android Developers</a>**<em>Google via Udacity</em>Self Paced</p><p><a
    href="https://www.classcentral.com/mooc/3582/udacity-android-ubiquitous-computing">**Android
    Ubiquitous Computing</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3584/udacity-gradle-for-android-and-java">**Gradle
    for Android and Java</a>**<em>Google via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/3584/udacity-gradle-for-android-and-java#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1836/edx-explore-statistics-with-r">**Explore
    Statistics with R</a>**<em>Karolinska Institutet via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/1836/edx-explore-statistics-with-r#reviews">13
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1837/edx-sabermetrics-101-introduction-to-baseball-analytics">**Sabermetrics
    101: Introduction to Baseball Analytics</a>**<em>Boston University via edX</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/1837/edx-sabermetrics-101-introduction-to-baseball-analytics#reviews">7
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4013/udacity-intro-to-devops">**Intro
    to DevOps</a>**<em>Nutanix via Udacity</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/4013/udacity-intro-to-devops#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4050/udacity-configuring-linux-web-servers">**Configuring
    Linux Web Servers</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4050/udacity-configuring-linux-web-servers#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4071/udacity-learn-backbone-js">**Learn
    Backbone.js</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3996/edx-developing-international-software-part-1">**Developing
    International Software, Part 1</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3996/edx-developing-international-software-part-1#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4419/udacity-how-to-create-anything-in-android">**How
    to create in Android</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3418/udacity-software-architecture-design">**Software
    Architecture &amp; Design</a>**<em>Georgia Institute of Technology via Udacity</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/3418/udacity-software-architecture-design#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2147/edx-introduction-to-functional-programming">**Introduction
    to Functional Programming</a>**<em>Delft University of Technology via edX</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/2147/edx-introduction-to-functional-programming#reviews">11
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4856/udacity-2d-game-development-with-libgdx">**2D
    Game Development with libGDX</a>**<em>Amazon via Udacity</em>Self Paced</p><p><a
    href="https://www.classcentral.com/mooc/4887/udacity-designing-restful-apis">**Designing
    RESTful APIs</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/4937/udacity-intro-to-data-analysis">**Intro
    to Data Analysis</a>**<em>via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/4937/udacity-intro-to-data-analysis#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5055/udacity-firebase-essentials-for-android">**Firebase
    Essentials For Android</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3082/udacity-javascript-design-patterns">**JavaScript
    Design Patterns</a>**<em>via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3082/udacity-javascript-design-patterns#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5679/udacity-offline-web-applications">**Offline
    Web Applications</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/5680/udacity-javascript-promises">**JavaScript
    Promises</a>**<em>Google via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/5680/udacity-javascript-promises#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1523/edx-mobile-application-experiences-part-1-from-a-domain-to-an-app-idea">**Mobile
    Application Experiences Part 1: From a Domain to an App Idea</a>**<em>Massachusetts
    Institute of Technology via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/1523/edx-mobile-application-experiences-part-1-from-a-domain-to-an-app-idea#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4812/edx-the-software-architect-code-building-the-digital-world">**The
    Software Architect Code: Building the Digital World</a>**<em>Universidad Carlos
    iii de Madrid via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/1152/data-mining-with-weka">**Data
    Mining with Weka</a>**<em>University of Waikato via Independent</em>★★★★★ (<a
    href="https://www.classcentral.com/mooc/1152/data-mining-with-weka#reviews">18
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1748/more-data-mining-with-weka">**More
    Data Mining with Weka</a>**<em>University of Waikato via Independent</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/1748/more-data-mining-with-weka#reviews">9
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4758/edx-introduction-to-c">**Introduction
    to C++</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4758/edx-introduction-to-c#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3466/edx-how-to-code-systematic-program-design-part-2">**How
    to Code: Systematic Program Design — Part 2</a>**<em>The University of British
    Columbia via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/5965/udacity-networking-for-web-developers">**Networking
    for Web Developers</a>**<em>via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/5965/udacity-networking-for-web-developers#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3464/edx-how-to-code-systematic-program-design-part-3">**How
    to Code: Systematic Program Design — Part 3</a>**<em>The University of British
    Columbia via edX</em>Oct, 2015</p><p><a href="https://www.classcentral.com/mooc/3465/edx-how-to-code-systematic-program-design-part-1">**How
    to Code: Systematic Program Design — Part 1</a>**<em>The University of British
    Columbia via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3465/edx-how-to-code-systematic-program-design-part-1#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2976/edx-case-studies-in-functional-genomics">**Case
    Studies in Functional Genomics</a>**<em>Harvard University via edX</em>★★★☆☆ (<a
    href="https://www.classcentral.com/mooc/2976/edx-case-studies-in-functional-genomics#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5633/edx-mobile-application-experiences-part-3-building-mobile-apps">**Mobile
    Application Experiences Part 3: Building Mobile Apps</a>**<em>Massachusetts Institute
    of Technology via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/2964/edx-android-introduccion-a-la-programacion">**Android:
    Introducción a la Programación</a>**<em>Universitat Politècnica de València via
    edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/2964/edx-android-introduccion-a-la-programacion#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4990/edx-introduction-to-real-time-systems">**Introduction
    to Real-Time Systems</a>**<em>IEEE via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4990/edx-introduction-to-real-time-systems#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6143/udacity-technical-interview">**Technical
    Interview</a>**<em>Pramp via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/6143/udacity-technical-interview#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/548/edx-computer-graphics">**Computer
    Graphics</a>**<em>University of California, Berkeley via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/548/edx-computer-graphics#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6274/udacity-deploying-a-hadoop-cluster">**Deploying
    a Hadoop Cluster</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6837/mongodb-university-m233-getting-started-with-spark-and-mongodb">**M233:
    Getting Started with Spark and MongoDB</a>**<em>via MongoDB University</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/5755/edx-foundations-of-data-structures">**Foundations
    of Data Structures</a>**<em>Indian Institute of Technology Bombay via edX</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/6000/edx-introduction-to-cloud-infrastructure-technologies">**Introduction
    to Cloud Infrastructure Technologies</a>**<em>Linux Foundation via edX</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/4949/edx-introduction-to-mongodb-using-the-mean-stack">**Introduction
    to MongoDB using the MEAN Stack</a>**<em>MongoDB University via edX</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/4949/edx-introduction-to-mongodb-using-the-mean-stack#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6477/udacity-google-maps-apis">**Google
    Maps APIs</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6493/concurrency">**Concurrency</a>**<em>AdaCore
    University via Independent</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/1564/edx-autonomous-mobile-robots">**Autonomous
    Mobile Robots</a>**<em>ETH Zurich via edX</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/1564/edx-autonomous-mobile-robots#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6304/edx-enterprise-software-lifecycle-management">**Enterprise
    Software Lifecycle Management</a>**<em>National Research Nuclear University MEPhI
    via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6527/udacity-client-server-communication">**Client-Server
    Communication</a>**<em>Google via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/6527/udacity-client-server-communication#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6548/udacity-intro-to-progressive-web-apps">**Intro
    to Progressive Web Apps</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6549/udacity-android-basics-multi-screen-apps">**Android
    Basics: Multi-screen Apps</a>**<em>Google via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/6549/udacity-android-basics-multi-screen-apps#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6728/udacity-android-basics-networking">**Android
    Basics: Networking</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6796/udacity-dynamic-web-applications-with-sinatra">**Dynamic
    Web Applications with Sinatra</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6797/udacity-the-mvc-pattern-in-ruby">**The
    MVC Pattern in Ruby</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6798/udacity-deploying-applications-with-heroku">**Deploying
    Applications with Heroku</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6956/udacity-android-basics-data-storage">**Android
    Basics: Data Storage</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6878/edx-agile-software-development">**Agile
    Software Development</a>**<em>ETH Zurich via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/6878/edx-agile-software-development#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4805/edx-foundations-of-data-analysis-part-1-statistics-using-r">**Foundations
    of Data Analysis — Part 1: Statistics Using R</a>**<em>The University of Texas
    at Austin via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4805/edx-foundations-of-data-analysis-part-1-statistics-using-r#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4671/edx-html5-part-2-advanced-techniques-for-designing-html5-apps">**HTML5
    Part 2: Advanced Techniques for Designing HTML5 Apps</a>**<em>World Wide Web Consortium
    (W3C) via edX</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/4671/edx-html5-part-2-advanced-techniques-for-designing-html5-apps#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5752/edx-algorithms">**Algorithms</a>**<em>Indian
    Institute of Technology Bombay via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/5752/edx-algorithms#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7279/udacity-android-basics-button-clicks">**Android
    Basics: Button Clicks</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6469/edx-software-construction-in-java">**Software
    Construction in Java</a>**<em>Massachusetts Institute of Technology via edX</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/6469/edx-software-construction-in-java#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7342/udacity-android-basics-user-interface">**Android
    Basics: User Interface</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7343/udacity-android-basics-user-input">**Android
    Basics: User Input</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6991/edx-cyber-security-economics">**Cyber
    Security Economics</a>**<em>Delft University of Technology via edX</em>★★☆☆☆ (<a
    href="https://www.classcentral.com/mooc/6991/edx-cyber-security-economics#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7480/edx-minecraft-coding-and-teaching">**Minecraft,
    Coding and Teaching</a>**<em>University of California, San Diego via edX</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/7463/udacity-vr-software-development">**VR
    Software Development</a>**<em>Google via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7495/udacity-swift-for-developers">**Swift
    for Developers</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7506/edx-introduction-to-devops-transforming-and-improving-operations">**Introduction
    to DevOps: Transforming and Improving Operations</a>**<em>Linux Foundation via
    edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/2916/edx-data-analysis-take-it-to-the-max">**Data
    Analysis: Take It to the MAX()</a>**<em>Delft University of Technology via edX</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/2916/edx-data-analysis-take-it-to-the-max#reviews">11
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7204/edx-using-python-for-research">**Using
    Python for Research</a>**<em>Harvard University via edX</em>Self Paced</p><p><a
    href="https://www.classcentral.com/mooc/4810/edx-computation-structures-2-computer-architecture">**Computation
    Structures 2: Computer Architecture</a>**<em>Massachusetts Institute of Technology
    via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6333/edx-introduction-to-devops">**Introduction
    to DevOps</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/6333/edx-introduction-to-devops#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/7753/udacity-building-ios-interfaces">**Building
    iOS Interfaces</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7754/udacity-ios-design-patterns">**iOS
    Design Patterns</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7755/udacity-new-android-fundamentals">**New
    Android Fundamentals</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/7376/edx-matlab-and-octave-for-beginners">**MATLAB
    and Octave for Beginners</a>**<em>École Polytechnique Fédérale de Lausanne via
    edX</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/7376/edx-matlab-and-octave-for-beginners#reviews">3
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6357/edx-developing-intelligent-apps-and-bots">**Developing
    Intelligent Apps and Bots</a>**<em>Microsoft via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6511/edx-principles-of-machine-learning">**Principles
    of Machine Learning</a>**<em>Microsoft via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/6511/edx-principles-of-machine-learning#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4480/edx-analyzing-and-visualizing-data-with-excel">**Analyzing
    and Visualizing Data with Excel</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4480/edx-analyzing-and-visualizing-data-with-excel#reviews">11
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3341/edx-querying-with-transact-sql">**Querying
    with Transact-SQL</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3341/edx-querying-with-transact-sql#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5156/edx-analyzing-and-visualizing-data-with-power-bi">**Analyzing
    and Visualizing Data with Power BI</a>**<em>Microsoft via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/5156/edx-analyzing-and-visualizing-data-with-power-bi#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5683/edx-introduction-to-python-for-data-science">**Introduction
    to Python for Data Science</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/5683/edx-introduction-to-python-for-data-science#reviews">12
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6406/edx-applied-machine-learning">**Applied
    Machine Learning</a>**<em>Microsoft via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/3928/edx-introduction-to-r-for-data-science">**Introduction
    to R for Data Science</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3928/edx-introduction-to-r-for-data-science#reviews">26
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6038/edx-programming-with-r-for-data-science">**Programming
    with R for Data Science</a>**<em>Microsoft via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6471/edx-programming-with-python-for-data-science">**Programming
    with Python for Data Science</a>**<em>Microsoft via edX</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/6471/edx-programming-with-python-for-data-science#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6512/edx-data-science-essentials">**Data
    Science Essentials</a>**<em>Microsoft via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/6512/edx-data-science-essentials#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6405/edx-data-science-orientation">**Data
    Science Orientation</a>**<em>Microsoft via edX</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/6405/edx-data-science-orientation#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4152/edx-implementing-real-time-analytics-with-hadoop-in-azure-hdinsight">**Implementing
    Real-Time Analytics with Hadoop in Azure HDInsight</a>**<em>Microsoft via edX</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/8002/edx-asynchronous-programming-with-javascript">**Asynchronous
    Programming with JavaScript</a>**<em>Microsoft via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/8002/edx-asynchronous-programming-with-javascript#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3642/edx-knowledge-management-and-big-data-in-business">**Knowledge
    Management and Big Data in Business</a>**<em>Hong Kong Polytechnic University
    via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3642/edx-knowledge-management-and-big-data-in-business#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4758/edx-introduction-to-c">**Introduction
    to C++</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4758/edx-introduction-to-c#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3339/edx-programming-with-c">**Programming
    with C#</a>**<em>Microsoft via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3339/edx-programming-with-c#reviews">10
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/376/stanford-openedx-automata-theory">**Automata
    Theory</a>**<em>Stanford University via Stanford OpenEdx</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/376/stanford-openedx-automata-theory#reviews">17
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2406/stanford-openedx-mining-massive-datasets">**Mining
    Massive Datasets</a>**<em>Stanford University via Stanford OpenEdx</em>★★★★★ (<a
    href="https://www.classcentral.com/mooc/2406/stanford-openedx-mining-massive-datasets#reviews">21
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5387/edx-data-analysis-building-your-own-business-dashboard">**Data
    Analysis: Building Your Own Business Dashboard</a>**<em>Delft University of Technology
    via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/5755/edx-foundations-of-data-structures">**Foundations
    of Data Structures</a>**<em>Indian Institute of Technology Bombay via edX</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/5752/edx-algorithms">**Algorithms</a>**<em>Indian
    Institute of Technology Bombay via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/5752/edx-algorithms#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5753/edx-implementation-of-data-structures">**Implementation
    of Data Structures</a>**<em>Indian Institute of Technology Bombay via edX</em>Self
    Paced</p><h2>ADVANCED(68)</h2><p><a href="https://www.classcentral.com/mooc/6933/coursera-matrix-factorization-and-advanced-techniques">**Matrix
    Factorization and Advanced Techniques</a>**<em>University of Minnesota via Coursera</em>1st
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/2736/coursera-text-mining-and-analytics">**Text
    Mining and Analytics</a>**<em>University of Illinois at Urbana-Champaign via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/2736/coursera-text-mining-and-analytics#reviews">8
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4351/coursera-regression-modeling-in-practice">**Regression
    Modeling in Practice</a>**<em>Wesleyan University via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4351/coursera-regression-modeling-in-practice#reviews">3
    ratings</a>) | 10th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/2735/coursera-cluster-analysis-in-data-mining">**Cluster
    Analysis in Data Mining</a>**<em>University of Illinois at Urbana-Champaign via
    Coursera</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/2735/coursera-cluster-analysis-in-data-mining#reviews">6
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6927/coursera-nearest-neighbor-collaborative-filtering">**Nearest
    Neighbor Collaborative Filtering</a>**<em>University of Minnesota via Coursera</em>★★☆☆☆
    (<a href="https://www.classcentral.com/mooc/6927/coursera-nearest-neighbor-collaborative-filtering#reviews">2
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7025/coursera-basic-data-descriptors-statistical-distributions-and-application-to-business-decisions">**Basic
    Data Descriptors, Statistical Distributions, and Application to Business Decisions</a>**<em>Rice
    University via Coursera</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6288/coursera-big-data-analysis-with-scala-and-spark">**Big
    Data Analysis with Scala and Spark</a>**<em>École Polytechnique Fédérale de Lausanne
    via Coursera</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6670/coursera-applied-plotting-charting-data-representation-in-python">**Applied
    Plotting, Charting &amp; Data Representation in Python</a>**<em>University of
    Michigan via Coursera</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/4354/coursera-machine-learning-for-data-analysis">**Machine
    Learning for Data Analysis</a>**<em>Wesleyan University via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/4354/coursera-machine-learning-for-data-analysis#reviews">3
    ratings</a>) | 6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/8123/coursera-information-security-context-and-introduction">**Information
    Security: Context and Introduction</a>**<em>University of London International
    Programmes via Coursera</em>6th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3290/coursera-genome-sequencing-bioinformatics-ii">**Genome
    Sequencing (Bioinformatics II)</a>**<em>University of California, San Diego via
    Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/3290/coursera-genome-sequencing-bioinformatics-ii#reviews">3
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7759/coursera-basic-modeling-for-discrete-optimization">**Basic
    Modeling for Discrete Optimization</a>**<em>University of Melbourne via Coursera</em>13th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3474/coursera-command-line-tools-for-genomic-data-science">**Command
    Line Tools for Genomic Data Science</a>**<em>Johns Hopkins University via Coursera</em>★★☆☆☆
    (<a href="https://www.classcentral.com/mooc/3474/coursera-command-line-tools-for-genomic-data-science#reviews">7
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3475/coursera-bioconductor-for-genomic-data-science">**Bioconductor
    for Genomic Data Science</a>**<em>Johns Hopkins University via Coursera</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/3475/coursera-bioconductor-for-genomic-data-science#reviews">4
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7757/coursera-advanced-modeling-for-discrete-optimization">**Advanced
    Modeling for Discrete Optimization</a>**<em>University of Melbourne via Coursera</em>13th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3291/coursera-comparing-genes-proteins-and-genomes-bioinformatics-iii">**Comparing
    Genes, Proteins, and Genomes (Bioinformatics III)</a>**<em>University of California,
    San Diego via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/3291/coursera-comparing-genes-proteins-and-genomes-bioinformatics-iii#reviews">2
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7292/coursera-probabilistic-graphical-models-2-inference">**Probabilistic
    Graphical Models 2: Inference</a>**<em>Stanford University via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/7292/coursera-probabilistic-graphical-models-2-inference#reviews">3
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3555/coursera-molecular-evolution-bioinformatics-iv">**Molecular
    Evolution (Bioinformatics IV)</a>**<em>University of California, San Diego via
    Coursera</em>13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/5661/futurelearn-clinical-bioinformatics-unlocking-genomics-in-healthcare">**Clinical
    Bioinformatics: Unlocking Genomics in Healthcare</a>**<em>Manchester University
    via FutureLearn</em>★★★★★ (<a href="https://www.classcentral.com/mooc/5661/futurelearn-clinical-bioinformatics-unlocking-genomics-in-healthcare#reviews">1
    rating</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/3433/coursera-algorithms-for-dna-sequencing">**Algorithms
    for DNA Sequencing</a>**<em>Johns Hopkins University via Coursera</em>★★★★★ (<a
    href="https://www.classcentral.com/mooc/3433/coursera-algorithms-for-dna-sequencing#reviews">17
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/449/coursera-computational-neuroscience">**Computational
    Neuroscience</a>**<em>University of Washington via Coursera</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/449/coursera-computational-neuroscience#reviews">8
    ratings</a>) | 13th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/398/coursera-neural-networks-for-machine-learning">**Neural
    Networks for Machine Learning</a>**<em>University of Toronto via Coursera</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/398/coursera-neural-networks-for-machine-learning#reviews">15
    ratings</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6825/coursera-system-validation-automata-and-behavioural-equivalences">**System
    Validation: Automata and behavioural equivalences</a>**<em>EIT Digital via Coursera</em>20th
    Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/6180/coursera-advanced-linear-models-for-data-science-1-least-squares">**Advanced
    Linear Models for Data Science 1: Least Squares</a>**<em>Johns Hopkins University
    via Coursera</em>★★★★★ (<a href="https://www.classcentral.com/mooc/6180/coursera-advanced-linear-models-for-data-science-1-least-squares#reviews">1
    rating</a>) | 20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/7338/coursera-hands-on-text-mining-and-analytics">**Hands-on
    Text Mining and Analytics</a>**<em>Yonsei University via Coursera</em>20th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/6826/coursera-embedded-hardware-and-operating-systems">**Embedded
    Hardware and Operating Systems</a>**<em>EIT Digital via Coursera</em>20th Mar,
    2017</p><p><a href="https://www.classcentral.com/mooc/8130/edx-data-mining-theories-and-algorithms-for-tackling-big-data">**Data
    Mining: Theories and Algorithms for Tackling Big Data</a>**<em>Tsinghua University
    via edX</em>20th Mar, 2017</p><p><a href="https://www.classcentral.com/mooc/1016/udacity-advanced-operating-systems">**Advanced
    Operating Systems</a>**<em>Georgia Institute of Technology via Udacity</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/1016/udacity-advanced-operating-systems#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/319/udacity-artificial-intelligence-for-robotics">**Artificial
    Intelligence for Robotics</a>**<em>Stanford University via Udacity</em>★★★★★ (<a
    href="https://www.classcentral.com/mooc/319/udacity-artificial-intelligence-for-robotics#reviews">19
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/326/udacity-applied-cryptography">**Applied
    Cryptography</a>**<em>University of Virginia via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/326/udacity-applied-cryptography#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/549/udacity-intro-to-parallel-programming">**Intro
    to Parallel Programming</a>**<em>Nvidia via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/549/udacity-intro-to-parallel-programming#reviews">6
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/552/udacity-interactive-3d-graphics">**Interactive
    3D Graphics</a>**<em>Autodesk via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/552/udacity-interactive-3d-graphics#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1847/udacity-machine-learning-1-supervised-learning">**Machine
    Learning 1 — Supervised Learning</a>**<em>Brown University via Udacity</em>★★★★☆
    (<a href="https://www.classcentral.com/mooc/1847/udacity-machine-learning-1-supervised-learning#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1849/udacity-reinforcement-learning">**Reinforcement
    Learning</a>**<em>Brown University via Udacity</em>★★★☆☆ (<a href="https://www.classcentral.com/mooc/1849/udacity-reinforcement-learning#reviews">7
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3000/udacity-real-time-analytics-with-apache-storm">**Real-Time
    Analytics with Apache Storm</a>**<em>Twitter via Udacity</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/3000/udacity-real-time-analytics-with-apache-storm#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3256/udacity-model-building-and-validation">**Model
    Building and Validation</a>**<em>AT&amp;T via Udacity</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/3256/udacity-model-building-and-validation#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3917/edx-processing-big-data-with-hadoop-in-azure-hdinsight">**Processing
    Big Data with Hadoop in Azure HDInsight</a>**<em>Microsoft via edX</em>★★★★★ (<a
    href="https://www.classcentral.com/mooc/3917/edx-processing-big-data-with-hadoop-in-azure-hdinsight#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1018/udacity-high-performance-computer-architecture">**High
    Performance Computer Architecture</a>**<em>Georgia Institute of Technology via
    Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/1018/udacity-high-performance-computer-architecture#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1024/udacity-computability-complexity-algorithms">**Computability,
    Complexity &amp; Algorithms</a>**<em>Georgia Institute of Technology via Udacity</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/1024/udacity-computability-complexity-algorithms#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1025/udacity-knowledge-based-ai-cognitive-systems">**Knowledge-Based
    AI: Cognitive Systems</a>**<em>Georgia Institute of Technology via Udacity</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/3531/udacity-machine-learning">**Machine
    Learning</a>**<em>Brown University via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/3531/udacity-machine-learning#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1911/edx-autonomous-navigation-for-flying-robots">**Autonomous
    Navigation for Flying Robots</a>**<em>Technische Universität München (Technical
    University of Munich) via edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/1911/edx-autonomous-navigation-for-flying-robots#reviews">9
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1023/udacity-computational-photography">**Computational
    Photography</a>**<em>Georgia Institute of Technology via Udacity</em>★★★★☆ (<a
    href="https://www.classcentral.com/mooc/1023/udacity-computational-photography#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1022/udacity-introduction-to-computer-vision">**Introduction
    to Computer Vision</a>**<em>Georgia Institute of Technology via Udacity</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/1022/udacity-introduction-to-computer-vision#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4734/udacity-gt-refresher-advanced-os">**GT
    — Refresher — Advanced OS</a>**<em>Georgia Institute of Technology via Udacity</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/3419/udacity-introduction-to-operating-systems">**Introduction
    to Operating Systems</a>**<em>Georgia Institute of Technology via Udacity</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/3419/udacity-introduction-to-operating-systems#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1028/udacity-high-performance-computing">**High
    Performance Computing</a>**<em>Georgia Institute of Technology via Udacity</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/1026/udacity-machine-learning-for-trading">**Machine
    Learning for Trading</a>**<em>Georgia Institute of Technology via Udacity</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/1026/udacity-machine-learning-for-trading#reviews">13
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/3420/udacity-intro-to-information-security">**Intro
    to Information Security</a>**<em>Georgia Institute of Technology via Udacity</em>★☆☆☆☆
    (<a href="https://www.classcentral.com/mooc/3420/udacity-intro-to-information-security#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/1020/udacity-machine-learning">**Machine
    Learning</a>**<em>Georgia Institute of Technology via Udacity</em>★★★★★ (<a href="https://www.classcentral.com/mooc/1020/udacity-machine-learning#reviews">4
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/5681/udacity-deep-learning">**Deep
    Learning</a>**<em>Google via Udacity</em>★★☆☆☆ (<a href="https://www.classcentral.com/mooc/5681/udacity-deep-learning#reviews">15
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4913/edx-statistical-thinking-for-data-science-and-analytics">**Statistical
    Thinking for Data Science and Analytics</a>**<em>Columbia University via edX</em>★★☆☆☆
    (<a href="https://www.classcentral.com/mooc/4913/edx-statistical-thinking-for-data-science-and-analytics#reviews">16
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/2973/edx-high-performance-computing-for-reproducible-genomics">**High-performance
    Computing for Reproducible Genomics</a>**<em>Harvard University via edX</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/5425/edx-introduction-to-statistical-methods-for-gene-mapping">**Introduction
    to Statistical Methods for Gene Mapping</a>**<em>Kyoto University via edX</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/1623/edx-the-analytics-edge">**The
    Analytics Edge</a>**<em>Massachusetts Institute of Technology via edX</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/1623/edx-the-analytics-edge#reviews">68
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4912/edx-machine-learning-for-data-science-and-analytics">**Machine
    Learning for Data Science and Analytics</a>**<em>Columbia University via edX</em>★★★☆☆
    (<a href="https://www.classcentral.com/mooc/4912/edx-machine-learning-for-data-science-and-analytics#reviews">15
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6146/advanced-data-mining-with-weka">**Advanced
    Data Mining with Weka</a>**<em>University of Waikato via Independent</em>★★★★★
    (<a href="https://www.classcentral.com/mooc/6146/advanced-data-mining-with-weka#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/4911/edx-enabling-technologies-for-data-science-and-analytics-the-internet-of-things">**Enabling
    Technologies for Data Science and Analytics: The Internet of Things</a>**<em>Columbia
    University via edX</em>★☆☆☆☆ (<a href="https://www.classcentral.com/mooc/4911/edx-enabling-technologies-for-data-science-and-analytics-the-internet-of-things#reviews">5
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6604/edx-reliable-distributed-algorithms-part-1">**Reliable
    Distributed Algorithms, Part 1</a>**<em>KTH Royal Institute of Technology via
    edX</em>★★★★★ (<a href="https://www.classcentral.com/mooc/6604/edx-reliable-distributed-algorithms-part-1#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6334/edx-quantum-cryptography">**Quantum
    Cryptography</a>**<em>California Institute of Technology via edX</em>Self Paced</p><p><a
    href="https://www.classcentral.com/mooc/7202/edx-introduction-to-openstack">**Introduction
    to OpenStack</a>**<em>Linux Foundation via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/4804/edx-foundations-of-data-analysis-part-2-inferential-statistics">**Foundations
    of Data Analysis — Part 2: Inferential Statistics</a>**<em>The University of Texas
    at Austin via edX</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/4804/edx-foundations-of-data-analysis-part-2-inferential-statistics#reviews">2
    ratings</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/6843/edx-biostatistics-for-big-data-applications">**Biostatistics
    for Big Data Applications</a>**<em>via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/6881/edx-nature-in-code-biology-in-javascript">**Nature,
    in Code: Biology in JavaScript</a>**<em>École Polytechnique Fédérale de Lausanne
    via edX</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/8021/udacity-continuous-integration-and-deployment">**Continuous
    Integration and Deployment</a>**<em>via Udacity</em>Self Paced</p><p><a href="https://www.classcentral.com/mooc/8083/6-s191-introduction-to-deep-learning">**6.S191:
    Introduction to Deep Learning</a>**<em>Massachusetts Institute of Technology via
    Independent</em>★★★★☆ (<a href="https://www.classcentral.com/mooc/8083/6-s191-introduction-to-deep-learning#reviews">1
    rating</a>) | Self Paced</p><p><a href="https://www.classcentral.com/mooc/8097/deep-learning-for-natural-language-processing">**Deep
    Learning for Natural Language Processing</a>**<em>University of Oxford via Independent</em>Self
    Paced</p><p><a href="https://www.classcentral.com/mooc/8132/6-s094-deep-learning-for-self-driving-cars">**6.S094:
    Deep Learning for Self-Driving Cars</a>**<em>Massachusetts Institute of Technology
    via Independent</em>Self Paced</p>'
  :author: freeCodeCamp.org
  :topic: programming
- :url: https://medium.com/better-programming/object-oriented-programming-the-trillion-dollar-disaster-92a4b666c7c7?source=search_post
  :title: Object-Oriented Programming  —  The Trillion Dollar Disaster
  :content: '<p>Why it’s time to move on from OOP</p><p><img src="https://cdn-images-1.medium.com/max/9216/1*yX-lpOM2F9cQYJqBl2dBSg.jpeg"
    alt="Photo by [Jungwoo Hong](https://unsplash.com/@oowgnuj?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/search/photos/improvement?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@oowgnuj?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Jungwoo
    Hong</a> on <a href="https://unsplash.com/search/photos/improvement?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>OOP
    is considered by many to be the crown jewel of computer science. The ultimate
    solution to code organization. The end to all our problems. The only true way
    to write our programs. Bestowed upon us by the one true God of programming himself…</p><p>Until…it’s
    not, and people start succumbing under the weight of abstractions, and the complex
    graph of promiscuously shared mutable objects. Precious time and brainpower are
    being spent thinking about “abstractions” and “design patterns” instead of solving
    real-world problems.</p><p>Many people have criticized Object-Oriented Programming,
    including very prominent software engineers. Heck, even the inventor of OOP himself
    is a well-known critic of modern OOP!</p><p>The ultimate goal of every software
    developer should be to write <em>reliable *code. Nothing else matters if the code
    is buggy and unreliable. And what is the best way to write code that is reliable?
    *Simplicity</em>. Simplicity is the opposite of <em>complexity</em>. Therefore
    our first and foremost responsibility as software developers should be to <em>reduce
    code complexity.</em></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*eSgw4TrT3_5kUU3QFFW4qA.jpeg"
    alt=""></p><h2>Disclaimer</h2><p>I’ll be honest, I’m not a raving fan of object-orientation.
    Of course, this article is going to be biased. However, I have good reasons to
    dislike OOP.</p><p>I also understand that criticism of OOP is a very sensitive
    topic — I will probably offend many readers. However, I’m doing what I think is
    right. My goal is not to offend, but to raise awareness of the issues that OOP
    introduces.</p><p>I’m not criticizing Alan Kay’s OOP — he is a genius. I wish
    OOP was implemented the way he designed it. I’m criticizing the modern Java/C#
    approach to OOP.</p><p>I think that it is not right that OOP is considered the
    de-facto standard for code organization by many people, including those in very
    senior technical positions. It is also unacceptable that many mainstream languages
    don’t offer any other alternatives to code organization other than OOP.</p><p>Hell,
    I used to struggle a lot myself while working on OOP projects. And I had no single
    clue why I was struggling this much. Maybe I wasn’t good enough? I had to learn
    a couple more design patterns (I thought)! Eventually, I got completely burned
    out.</p><p>This post sums up my first-hand decade-long journey from Object-Oriented
    to Functional programming. Unfortunately, no matter how hard I try, I can no longer
    find use cases for OOP. I have personally seen OOP projects fail because they
    become too complex to maintain.</p><h2>TLDR</h2><blockquote><p>Object oriented
    programs are offered as alternatives to correct ones…— <a href="https://en.wikipedia.org/wiki/Edsger_W._Dijkstra">**Edsger
    W. Dijkstra</a>, pioneer of computer science**</p></blockquote><p><img src="https://cdn-images-1.medium.com/max/10368/1*MTb-Xx5D0H6LUJu_cQ9fMQ.jpeg"
    alt="Photo by [Sebastian Herrmann](https://unsplash.com/@officestock?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@officestock?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Sebastian
    Herrmann</a> on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>Object-Oriented
    Programming has been created with one goal in mind — to <em>manage the complexity</em>
    of procedural codebases. In other words, it was supposed to <em>improve code organization.</em>
    There’s no objective and open evidence that OOP is better than plain procedural
    programming.</p><p>The bitter truth is that OOP <em>fails *at the only task it
    was intended to address. It looks good on paper — we have clean hierarchies of
    animals, dogs, humans, etc. However, it falls flat once the complexity of the
    application starts increasing. Instead of reducing complexity, it encourages promiscuous</em>*
    <strong><em>sharing of mutable state</em></strong> *<em>and introduces additional
    complexity with its numerous *design patterns</em>. OOP makes common development
    practices, like refactoring and testing, needlessly hard.</p><p>Some might disagree
    with me, but the truth is that modern Java/C# OOP has never been properly designed.
    It never came out of a proper research institution (in contrast with Haskell/FP).
    Lambda calculus offers a complete theoretical foundation for Functional Programming.
    OOP has nothing to match that.</p><p>Using OOP is seemingly innocent in the short-term,
    especially on greenfield projects. But what are the* long-term* consequences of
    using OOP? OOP is a time bomb, set to explode sometime in the future when the
    codebase gets big enough.</p><p>Projects get delayed, deadlines get missed, developers
    get burned-out, adding in new features becomes next to <em>impossible.</em> The
    organization labels the codebase as the <em>“legacy codebase”</em>, and the development
    team plans a <em>rewrite</em>.</p><p>OOP is not natural for the human brain, our
    thought process is centered around “doing” things — go for a walk, talk to a friend,
    eat pizza. Our brains have evolved to do things, not to organize the world into
    complex hierarchies of abstract objects.</p><p>OOP code is non-deterministic —
    unlike with functional programming, we’re not guaranteed to get the same output
    given the same inputs. This makes reasoning about the program very hard. As an
    oversimplified example, the output of 2+2 or calculator.Add(2, 2) mostly is equal
    to four, but sometimes it might become equal to three, five, and maybe even 1004.
    The dependencies of the Calculator object might change the result of the computation
    in subtle, but profound ways. OOPs…</p><h2>The Need for a Resilient Framework</h2><p>Good
    programmers write good code, bad programmers write bad code, no matter the programming
    paradigm. However, the programming paradigm should constrain bad programmers from
    doing too much damage. Of course, this is not you, since you already are reading
    this article and putting in the effort to learn. Bad programmers never have the
    time to learn, they only press random buttons on the keyboard like crazy. Whether
    you like it or not, you will be working with bad programmers, some of them will
    be really really bad. And, unfortunately, OOP does not have enough constraints
    in place that would prevent bad programmers from doing too much damage. OOPs…</p><p>I
    don’t consider myself a bad programmer, but even I am unable to write good code
    without a strong framework to base my work on. Yes, there are frameworks that
    concern themselves with some very particular problems (e.g. Angular or ASP.Net).</p><p>I’m
    not talking about the software frameworks. I’m talking about the more abstract
    <em>dictionary definition</em> of a framework: “an essential <em>supporting structure</em>”
    — frameworks that concern themselves with the more abstract things like code organization
    and tackling code complexity. Even though Object-Oriented and Functional Programming
    are both programming paradigms, they’re also both very high-level frameworks.</p><h3>Limiting
    our choices</h3><blockquote><p>C++ is a horrible [object-oriented] language… And
    limiting your project to C means that people don’t screw things up with any idiotic
    “object model” c&amp;@p. — Linus Torvalds, the creator of Linux</p></blockquote><p>Linus
    Torvalds is widely known for his open criticism of C++ and OOP. One thing he was
    100% right about is <strong>limiting</strong> programmers in the choices they
    can make. In fact, the <strong>fewer choices</strong> programmers have, the more
    <strong>resilient</strong> their code becomes. In the quote above, Linus Torvalds
    <strong>highly recommends</strong> having a good framework to base our code upon.</p><p><img
    src="https://cdn-images-1.medium.com/max/8576/1*ujt2PMrbhCZuGhufoxfr5w.jpeg" alt="Photo
    by [specphotops](https://unsplash.com/@specphotops?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@specphotops?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">specphotops</a>
    on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>Many
    dislike speed limits on the roads, but they’re essential to help prevent people
    from crashing to death. Similarly, a good programming framework should provide
    mechanisms that prevent us from doing *stupid *things.</p><p>A good programming
    framework helps us to write reliable code. First and foremost, it should help
    reduce complexity by providing the following things:</p><ol><li><p>Modularity
    and reusability</p></li><li><p>Proper state isolation</p></li><li><p>High signal-to-noise
    ratio</p></li></ol><p>Unfortunately, OOP provides developers too many tools and
    choices, without imposing the right kinds of limitations. Even though OOP promises
    to address modularity and improve reusability, it fails to deliver on its promises
    (more on this later). OOP code encourages the use of shared mutable state, which
    has been proven to be unsafe time and time again. OOP typically requires a lot
    of boilerplate code (low signal-to-noise ratio).</p><h3>Functional programming</h3><p>What
    exactly is Functional Programming? Some people consider it to be a highly complicated
    programming paradigm that is only applicable in academia and is not suitable for
    the “real-world”. This couldn’t be further from the truth!</p><p>Yes, Functional
    Programming has a strong mathematical foundation and takes its roots in <a href="https://en.wikipedia.org/wiki/Lambda_calculus">lambda
    calculus</a>. However, most of its ideas emerged as a response to the *weaknesses
    *in the more mainstream programming languages. *Functions *are the core abstraction
    of Functional Programming. When used properly, functions provide a level of code
    modularity and reusability never seen in OOP. It even features design patterns
    that address the issues of nullability and provides a superior way of error handling.</p><p>The
    one thing that Functional Programming does really well is it helps us write *reliable
    *software. The need for a debugger almost disappears completely. Yep, no need
    to step through your code and watch variables. I personally haven’t touched a
    debugger in a very long time.</p><p>The best part? If you already know how to
    use functions, then you’re already a functional programmer. You just need to learn
    how to make the best use of those functions!</p><p>I’m not preaching Functional
    Programming, I don’t really care what programming paradigm you use writing your
    code. I’m simply trying to convey the mechanisms that Functional Programming provides
    to address the problems inherent with OOP/imperative programming.</p><h2>We Got
    OOP All Wrong</h2><blockquote><p><em>I’m sorry that I long ago coined the term
    “objects” for this topic because it gets many people to focus on the lesser idea.
    The big idea is messaging.- Alan Kay, the inventor of OOP</em></p></blockquote><p>Erlang
    is not usually thought of as an Object-Oriented language. But probably Erlang
    is the <a href="https://stackoverflow.com/questions/3431509/is-erlang-object-oriented/3433808#3433808">***only</a>**
    <em>mainstream Object-Oriented language out there. Yes, of course Smalltalk is
    a proper OOP language — however, it is not in wide use. Both Smalltalk and Erlang
    make use of OOP the way it was *originally intended</em> by its inventor, Alan
    Kay.</p><h3>Messaging</h3><p>Alan Kay coined the term “Object Oriented Programming”
    in the 1960s. He had a background in biology and was attempting to make computer
    programs communicate the same way living cells do.</p><p><img src="https://cdn-images-1.medium.com/max/11014/1*bzRsnzakR7O4RMbDfEZ1sA.jpeg"
    alt="Photo by [Muukii](https://unsplash.com/@muukii?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@muukii?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Muukii</a>
    on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>Alan
    Kay’s big idea was to have independent programs (cells) communicate by sending
    *messages *to each other. The state of the independent programs would *never be
    shared *with the outside world (encapsulation).</p><p>That’s it. OOP was** **<em>never
    intended</em> to have things like inheritance, polymorphism, the “new” keyword,
    and the myriad of design patterns.</p><h3>OOP in its purest form</h3><p>Erlang
    is OOP in its *purest *form. Unlike more mainstream languages, it focuses on the
    core idea of OOP — messaging. In Erlang, objects communicate by passing immutable
    messages between objects.</p><p>Is there proof that immutable messages are a superior
    approach compared to method calls?</p><p><em>**Hell yes! *</em>*Erlang is probably
    the most *reliable *language in the world. It powers most of the world’s telecom
    (and hence the internet) infrastructure. Some of the systems written in Erlang
    have reliability of 99.9999999% (you read that right — nine nines).</p><h2>Code
    Complexity</h2><blockquote><p>With OOP-inflected programming languages, computer
    software becomes more verbose, less readable, less descriptive, and harder to
    modify and maintain.— <a href="http://www.4js.com/files/documents/products/genero/WhitePaperHasOOPFailed.pdf">Richard
    Mansfield</a></p></blockquote><p>The <em>most important *aspect of software development
    is keeping the code complexity down. Period. None of the fancy features matter
    if the codebase becomes impossible to maintain. Even 100% test coverage is worth
    nothing if the codebase becomes too *complex *and *unmaintainable</em>.</p><p>What
    makes the codebase complex? There are many things to consider, but in my opinion,
    the top offenders are: shared mutable state, erroneous abstractions, and low signal-to-noise
    ratio (often caused by boilerplate code). All of them are prevalent in OOP.</p><h2>The
    Problems of State</h2><p><img src="https://cdn-images-1.medium.com/max/5536/1*1WeuR9OoKyD5EvtT9KjXOA.jpeg"
    alt="Photo by [Mika Baumeister](https://unsplash.com/@mbaumi?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@mbaumi?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Mika
    Baumeister</a> on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>What
    is state? Simply put, state is any temporary data stored in memory. Think variables
    or fields/properties in OOP. Imperative programming (including OOP) describes
    computation in terms of the program state and <em>changes to that state</em>.
    Declarative (functional) programming describes the <em>desired results</em> instead,
    and don’t specify changes to the state explicitly.</p><h3>Mutable State — the
    act of mental juggling</h3><blockquote><p>I think that large objected-oriented
    programs struggle with increasing complexity as you build this large object graph
    of mutable objects. You know, trying to understand and keep in your mind what
    will happen when you call a method and what will the side effects be.— <a href="http://www.se-radio.net/2010/03/episode-158-rich-hickey-on-clojure/">Rich
    Hickey</a>, creator of Clojure</p></blockquote><p><img src="https://cdn-images-1.medium.com/max/4096/1*n1piNNED9MaIjNPSLRj-8w.jpeg"
    alt="Image source: [https://www.flickr.com/photos/48137825@N05/8707342427](https://www.flickr.com/photos/48137825@N05/8707342427)"><em>Image
    source: <a href="https://www.flickr.com/photos/48137825@N05/8707342427">https://www.flickr.com/photos/48137825@N05/8707342427</a></em></p><p>State
    by itself is quite harmless. However, mutable state is the big offender. Especially
    if it is shared. What exactly is mutable state? Any state that can change. Think
    variables or fields in OOP.</p><p><strong><em>Real-world example, please!</em></strong></p><p>You
    have a blank piece of paper, you write a note on it, and you end up with the same
    piece of paper in a different state (text). You, effectively, have mutated the
    state of that piece of paper.</p><p>That is completely fine in the real world
    since <em>nobody</em> else probably cares about that piece of paper. Unless this
    piece of paper is the original Mona Lisa painting.</p><p><strong>Limitations of
    the Human Brain</strong></p><p>Why is mutable state such a big problem? The human
    brain is the most powerful machine in the known universe. However, our brains
    are really bad at working with state since we can only hold about <em>5 items</em>
    at a time in our working memory. It is much easier to reason about a piece of
    code if you only think about *what *the code does, not what variables it changes
    around the codebase.</p><p>Programming with mutable state is an act of mental
    juggling️. I don’t know about you, but I could probably juggle two balls. Give
    me three or more balls and I will certainly drop all of them. Why are we then
    trying to perform this act of mental juggling every single day at work?</p><p>Unfortunately,
    the mental juggling of mutable state is at the very core of OOP . The sole purpose
    for the existence of methods on an object is to mutate that same object.</p><h3>Scattered
    state</h3><p><img src="https://cdn-images-1.medium.com/max/11520/1*G02W6-MM2CSCsa9DiA5NFg.jpeg"
    alt="Photo by [Markus Spiske](https://unsplash.com/@markusspiske?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@markusspiske?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Markus
    Spiske</a> on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>OOP
    makes the problem of code organization even worse by scattering state all over
    the program. The scattered state is then shared *promiscuously *between various
    objects.</p><p><strong>Real-world example, please!</strong></p><p>Let’s forget
    for a second that we’re all grown-ups, and pretend we’re trying to assemble a
    cool lego truck.</p><p>However, there’s a catch — all the truck parts are randomly
    mixed with parts from your other lego toys. And they have been put in 50 different
    boxes, randomly again. And you’re not allowed to group your truck parts together
    — you have to keep in your head where the various truck parts are, and can only
    take them out one by one.</p><p>Yes, you will *eventually *assemble that truck,
    but how long will it take you?</p><p>How does this relate to programming?</p><p>In
    Functional Programming, state typically is being <em>isolated. *You always know
    where some state is coming from. State is never scattered across your different
    functions. In OOP, every object has its own state, and when building a program
    , you have to keep in mind the state of *</em><em>all</em>** of the objects that
    you currently are working with.</p><p>To make our lives easier, it is best to
    have only a very small portion of the codebase deal with state. Let the core parts
    of your application be stateless and pure. This actually is the main reason for
    the huge success of the flux pattern on the frontend (aka <a href="https://en.wikipedia.org/wiki/Redux_(JavaScript_library)">Redux</a>).</p><h3>Promiscuously
    shared state</h3><p>As if our lives aren’t already hard enough because of having
    scattered mutable state, OOP goes one step further!</p><p><strong>Real-world Example,
    Please!</strong></p><p>Mutable state in the real world is almost never a problem,
    since things are kept private and never shared. This is “proper encapsulation”
    at work. Imagine a painter who is working on the next Mona Lisa painting. He is
    working on the painting alone, finishes up, and then sells his masterpiece for
    millions.</p><p>Now, he’s bored with all that money and decides to do things a
    little bit differently. He thinks that it would be a good idea to have a painting
    party. He invites his friends elf, Gandalf, policeman, and a zombie to help him
    out. Teamwork! They all start painting on the same canvas at the same time. Of
    course, nothing good comes out of it — the painting is a complete disaster!</p><p>Shared
    mutable state makes no sense in the real world. Yet this is exactly what happens
    in OOP programs — state is promiscuously shared between various objects, and they
    mutate it in any way they see fit. This, in turn, makes reasoning about the program
    harder and harder as the codebase keeps growing.</p><h3>Concurrency issues</h3><p>The
    promiscuous sharing of mutable state in OOP code makes parallelizing such code
    almost impossible. Complex mechanisms have been invented in order to address this
    problem. Thread locking, mutex, and many other mechanisms have been invented.
    Of course, such complex approaches have their own drawbacks — deadlocks, lack
    of composability, debugging multi-threaded code is very hard and time-consuming.
    I’m not even talking about the increased complexity caused by making use of such
    concurrency mechanisms.</p><h3>Not all state is evil</h3><p>Is all state evil?
    No, Alan Kay state probably is not evil! State mutation probably is fine if it
    is truly isolated (not the “OOP-way” isolated).</p><p>It is also completely fine
    to have immutable data-transfer-objects. The key here is “immutable”. Such objects
    are then used to pass data between functions.</p><p>However, such objects would
    also make OOP methods and properties completely redundant. What’s the use in having
    methods and properties on an object if it cannot be mutated?</p><h3>Mutability
    is Inherent to OOP</h3><p>Some might argue that mutable state is a design choice
    in OOP, not an obligation. There is a problem with that statement. It is not a
    design choice, but pretty much the only option. Yes, one can pass immutable objects
    to methods in Java/C#, but this is rarely done since most of the developers default
    to data mutation. Even if developers attempt to make proper use of immutability
    in their OOP programs, the languages provide no built-in mechanisms for immutability,
    and for working effectively with immutable data (i.e. persistent data structures).</p><p>Yes,
    we can ensure that objects communicate only by passing immutable messages and
    never pass any references (which is rarely done). Such programs would be more
    reliable than mainstream OOP. However, the objects still have to mutate their
    own state once a message has been received. A message is a side effect, and its
    single purpose is to cause changes. Messages would be useless if they couldn’t
    mutate the state of other objects.</p><p>It is impossible to make use of OOP without
    causing state mutations.</p><h2>The Trojan Horse of Encapsulation</h2><p><img
    src="https://cdn-images-1.medium.com/max/9856/1*tKw00xGqVz0df_dFntT_Zg.jpeg" alt="Photo
    by [Jamie McInall ](https://www.pexels.com/@jamie-mcinall-318866?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)from
    [Pexels](https://www.pexels.com/photo/grayscale-photography-of-the-kelpies-906797/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)"><em>Photo
    by <a href="https://www.pexels.com/@jamie-mcinall-318866?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">Jamie
    McInall </a>from <a href="https://www.pexels.com/photo/grayscale-photography-of-the-kelpies-906797/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">Pexels</a></em></p><p>We’ve
    been told that encapsulation is one of the greatest benefits of OOP. It is supposed
    to <em>protect</em>* ***the object’s internal state from outside access. There’s
    a small problem with this though. It doesn’t work.</p><p>Encapsulation is the
    *trojan horse *of OOP. It sells the idea of shared mutable state by making it
    *appear *safe. Encapsulation allows (and even encourages) unsafe code to sneak
    into our codebase, making the codebase rot from within.</p><h3>The global state
    problem</h3><p>We’ve been told that** **<em>global state</em> is the root of all
    evil. It should be avoided at all costs. What we have never been told is that
    encapsulation, in fact, is glorified global state.</p><p>To make the code more
    efficient, objects are passed not by their value, but by their <em>reference</em>.
    This is where “dependency injection” falls flat.</p><p>Let me explain. Whenever
    we create an object in OOP, we pass <em>references *to its dependencies to the
    *constructor</em>. Those dependencies also have their own *internal state. *The
    newly created object happily stores references to those dependencies in its internal
    state and is then happy to modify them in any way it pleases. And it also passes
    those references down to anything else it might end up using.</p><p>This creates
    a complex graph of promiscuously shared objects that all end up changing each
    other’s state. This, in turn, causes *huge *problems since it becomes almost impossible
    to see what caused the program state to change. Days might be wasted trying to
    debug such state changes. And you’re lucky if you don’t have to deal with concurrency
    (more on this later).</p><h3>Methods/Properties</h3><p>The methods or properties
    that provide access to particular fields are <em>no better *than changing the
    value of a field directly. It doesn’t matter whether you mutate an object’s state
    by using a fancy property or method — the *result is the same: mutated state.</em></p><h2>The
    Problem with Real World Modeling</h2><p><img src="https://cdn-images-1.medium.com/max/11520/1*Jom0iTH8tdFrCnb1Ah99TA.jpeg"
    alt="Photo by [Markus Spiske](https://unsplash.com/@markusspiske?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@markusspiske?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Markus
    Spiske</a> on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>Some
    people say that OOP tries to model the real world. This is simply not true — OOP
    has nothing to relate to in the real world. Trying to model programs as objects
    probably is one of the biggest OOP mistakes.</p><h3>The real world is not hierarchical</h3><p>OOP
    attempts to model everything as a hierarchy of objects. Unfortunately, that is
    not how things work in the real world. Objects in the real world interact with
    each other using messages, but they mostly are independent of each other.</p><h3>Inheritance
    in the real world</h3><p>OOP inheritance is not modeled after the real world.
    The parent object in the real world is unable to change the behavior of child
    objects at run-time. Even though you inherit your DNA from your parents, they’re
    unable to make changes to your DNA as they please. You do not inherit “behaviors”
    from your parents, you develop your own behaviors. And you’re unable to “override”
    your parents’ behaviors.</p><h3>The real world has no methods</h3><p>Does the
    piece of paper you’re writing on have a “write” <em>method</em>? No! You take
    an empty piece of paper, pick up a pen, and write some text. You, as a person,
    don’t have a “write” method either — you make the decision to write some text
    based on outside events or your internal thoughts.</p><h2>The Kingdom of Nouns</h2><blockquote><p>Objects
    bind functions and data structures together in indivisible units. I think this
    is a fundamental error since functions and data structures belong in totally different
    worlds.— <a href="http://harmful.cat-v.org/software/OO_programming/why_oo_sucks">Joe
    Armstrong</a>, creator of Erlang</p></blockquote><p><img src="https://cdn-images-1.medium.com/max/11870/1*GuXanDmlOQ1UVX_73Kkojw.jpeg"
    alt="Photo by [Cederic X](https://unsplash.com/@cedericx?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@cedericx?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Cederic
    X</a> on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>Objects
    (or nouns) are at the very core of OOP. A fundamental limitation of OOP is that
    it forces everything into nouns. And not everything should be modeled as nouns.
    Operations (functions) should not be modeled as objects. Why are we forced to
    create a Multiplierclass when all we need is a function that multiplies two numbers?
    Simply have a Multiply function, let data be data and let functions be functions!</p><p>In
    non-OOP languages, doing trivial things like saving data to a file is straightforward
    — very similar to how you would describe an action in plain English.</p><p><strong>Real-world
    example, please!</strong></p><p>Sure, going back to the painter example, the painter
    owns a PaintingFactory. He has hired a dedicated BrushManager , ColorManager,
    a CanvasManager and a MonaLisaProvider. His good friend zombie makes use of a
    BrainConsumingStrategy . Those objects, in turn, define the following methods:
    CreatePainting , FindBrush , PickColor , CallMonaLisa , and ConsumeBrainz.</p><p>Of
    course, this is plain stupidity, and could never have happened in the real world.
    How much unnecessary complexity has been created for the simple act of drawing
    a painting?</p><p>There’s no need to invent strange concepts to hold your functions
    when they’re allowed to exist separately from the objects.</p><h2>Unit Testing</h2><p><img
    src="https://cdn-images-1.medium.com/max/11440/1*xGn4uGgVyrRAXnqSwTF69w.jpeg"
    alt="Photo by [Ani Kolleshi](https://unsplash.com/@anikolleshi?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/search/photos/scientist?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@anikolleshi?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Ani
    Kolleshi</a> on <a href="https://unsplash.com/search/photos/scientist?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>Automated
    testing is an important part of the development process and helps tremendously
    in preventing regressions (i.e. bugs being introduced into existing code). <em>Unit
    Testing</em>** **plays a huge role in the process of automated testing.</p><p>Some
    might disagree, but OOP code is notoriously difficult to unit test. Unit Testing
    assumes testing things in isolation, and to make a method unit-testable:</p><ol><li><p>Its
    dependencies have to be extracted into a separate class.</p></li><li><p>Create
    an interface for the newly created class.</p></li><li><p>Declare fields to hold
    the instance of the newly created class.</p></li><li><p>Make use of a mocking
    framework to mock the dependencies.</p></li><li><p>Make use of a dependency-injection
    framework to inject the dependencies.</p></li></ol><p>How much more complexity
    has to be created just to make a piece of code testable? How much time was wasted
    just to make some code testable?</p><p><em>&gt; PS we’d also have to instantiate
    the entire class in order to test a single method. This will also bring in the
    code from all of its parent classes.</em></p><p>With OOP, writing tests for legacy
    code is even harder — almost impossible. Entire companies have been created (<a
    href="https://www.typemock.com/">TypeMock</a>) around the issue of testing legacy
    OOP code.</p><h3>Boilerplate code</h3><p>Boilerplate code is probably the biggest
    offender when it comes to the signal-to-noise ratio. Boilerplate code is “noise”
    that is required to get the program to compile. Boilerplate code takes time to
    write and makes the codebase less readable because of the added noise.</p><p>While
    “program to an interface, not to an implementation” is the recommended approach
    in OOP, not everything should become an interface. We’d have to resort to using
    interfaces in the entire codebase, for the sole purpose of testability. We’d also
    probably have to make use of dependency injection, which further introduced unnecessary
    complexity.</p><h3>Testing private methods</h3><p>Some people say that private
    methods shouldn’t be tested… I tend to disagree, unit testing is called “unit”
    for a reason — test small units of code in isolation. Yet testing of private methods
    in OOP is nearly impossible. We shouldn’t be making private methodsinternal just
    for the sake of testability.</p><p>In order to achieve testability of private
    methods, they usually have to be extracted into a separate object. This, in turn,
    introduces unnecessary complexity and boilerplate code.</p><h2>Refactoring</h2><p>Refactoring
    is an important part of a developer’s day-to-day job. Ironically, OOP code is
    notoriously hard to refactor. Refactoring is supposed to make the code less complex,
    and more maintainable. On the contrary, refactored OOP code becomes significantly
    more complex — to make the code testable, we’d have to make use of dependency
    injection, and create an interface for the refactored class. Even then, refactoring
    OOP code is really hard without dedicated tools like Resharper.</p><iframe src="https://medium.com/media/b557e5152569ad4569e250d2c2ba21b6"
    frameborder=0></iframe><p>In the simple example above, the line count has more
    than doubled just to extract a single method. Why does refactoring create even
    more complexity, when the code is being refactored in order to decrease complexity
    in the first place?</p><p>Contrast this to a similar refactor of non-OOP code
    in JavaScript:</p><iframe src="https://medium.com/media/36d6f2f2e78929c6bcd783f12c929f90"
    frameborder=0></iframe><p>The code has literally stayed the same — we simply moved
    the isValidInput function to a different file and added a single line to import
    that function. We’ve also added _isValidInput to the function signature for the
    sake of testability.</p><p>This is a simple example, but in practice the complexity
    grows exponentially as the codebase gets bigger.</p><p>And that’s not all. Refactoring
    OOP code is <em>extremely risky</em>. Complex dependency graphs and state scattered
    all over OOP codebase, make it impossible for the human brain to consider all
    of the potential issues.</p><h2>The Band-aids</h2><p><img src="https://cdn-images-1.medium.com/max/7652/1*JOtbVvacgu-nH3ZR4mY2Og.jpeg"
    alt="Image source: Photo by [Pixabay ](https://www.pexels.com/@pixabay?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)from
    [Pexels](https://www.pexels.com/photo/brown-and-white-bear-plush-toy-42230/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)"><em>Image
    source: Photo by <a href="https://www.pexels.com/@pixabay?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">Pixabay
    </a>from <a href="https://www.pexels.com/photo/brown-and-white-bear-plush-toy-42230/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">Pexels</a></em></p><p>What
    do we do when something is not working? It is simple, we only have two options
    — throw it away or try fixing it. OOP is something that can’t be thrown away easily,
    millions of developers are trained in OOP. And millions of organizations worldwide
    are using OOP.</p><p>You probably see now that OOP <em>doesn’t really work</em>,
    it makes our code complex and unreliable. And you’re not alone! People have been
    thinking hard for <em>decades *trying to address the issues prevalent in OOP code.
    They’ve come up with a myriad of *design patterns.</em></p><h3>Design patterns</h3><p>OOP
    provides a set of guidelines that should *theoretically *allow developers to incrementally
    build larger and larger systems: SOLID principle, dependency injection, design
    patterns, and others.</p><p>Unfortunately, the design patterns are nothing other
    than band-aids. They exist solely to address the *shortcomings *of OOP. A myriad
    of books has even been written on the topic. They wouldn’t have been so bad, had
    they not been responsible for the introduction of enormous complexity to our codebases.</p><h3>The
    problem factory</h3><p>In fact, it is impossible to write good and maintainable
    Object-Oriented code.</p><p>On one side of the spectrum we have an OOP codebase
    that is inconsistent and doesn’t seem to adhere to any standards. On the other
    side of the spectrum, we have a tower of over-engineered code, a bunch of erroneous
    abstractions built one on top of one another. Design patterns are very helpful
    in building such towers of abstractions.</p><p>Soon, adding in new functionality,
    and even making sense of all the complexity, gets harder and harder. The codebase
    will be full of things like SimpleBeanFactoryAwareAspectInstanceFactory, AbstractInterceptorDrivenBeanDefinitionDecorator,
    TransactionAwarePersistenceManagerFactoryProxyorRequestProcessorFactoryFactory
    .</p><p>Precious brainpower has to be wasted trying to understand the tower of
    abstractions that the developers themselves have created. The absence of structure
    is in many cases better than having bad structure (if you ask me).</p><p><img
    src="https://cdn-images-1.medium.com/max/3896/1*_xDSrTC0F2lke6OYtkRm8g.png" alt="Image
    source: [https://www.reddit.com/r/ProgrammerHumor/comments/418x95/theory_vs_reality/](https://www.reddit.com/r/ProgrammerHumor/comments/418x95/theory_vs_reality/)"><em>Image
    source: <a href="https://www.reddit.com/r/ProgrammerHumor/comments/418x95/theory_vs_reality/">https://www.reddit.com/r/ProgrammerHumor/comments/418x95/theory<em>vs</em>reality/</a></em></p><p>Further
    reading: <a href="https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition">FizzBuzzEnterpriseEdition</a></p><h2>The
    Fall of the Four OOP Pillars</h2><p>The four pillars of OOP are: Abstraction,
    Inheritance, Encapsulation, and Polymorphism.</p><p>Let’s see what they really
    are, one-by-one.</p><p><img src="https://cdn-images-1.medium.com/max/12000/1*CnBnNTvjfUGgUdXwogZdlA.jpeg"
    alt=""></p><h3>Inheritance</h3><blockquote><p>I think the lack of reusability
    comes in object-oriented languages, not in functional languages. Because the problem
    with object-oriented languages is they’ve got all this implicit environment that
    they carry around with them. You wanted a banana but what you got was a gorilla
    holding the banana and the entire jungle.— Joe Armstrong, creator of Erlang</p></blockquote><p>OOP
    inheritance has nothing to do with the real world. Inheritance, in fact, is an
    inferior way to achieve code reusability. The gang of four has explicitly recommended
    preferring composition over inheritance. Some <a href="https://en.wikipedia.org/wiki/Go_(programming_language)">modern
    programming languages</a> avoid inheritance altogether.</p><p>There are a few
    problems with inheritance:</p><ol><li><p>Bringing in a lot of code that your class
    doesn’t even need (banana and the jungle problem).</p></li><li><p>Having parts
    of your class defined somewhere else makes the code hard to reason about, especially
    with multiple levels of inheritance.</p></li><li><p>In most programming languages,
    multiple inheritance isn’t even possible. This mostly renders inheritance useless
    as a code-sharing mechanism.</p></li></ol><h3>OOP polymorphism</h3><p>Polymorphism
    is great, it allows us to change program behavior at runtime. However, it is a
    very basic concept in computer programming. I’m not too sure why OOP focuses so
    much on polymorphism. OOP polymorphism gets the job done but once again it results
    in the act of mental juggling. It makes the codebase significantly more complex,
    and reasoning about the concrete method that is being invoked becomes really hard.</p><p>Functional
    programming, on the other hand, allows us to achieve the same polymorphism in
    a much more elegant way…by simply passing in a function that defines the desired
    runtime behavior. What could be simpler than that? No need to define a bunch of
    overloaded abstract virtual methods in multiple files (and the interface).</p><h3>Encapsulation</h3><p>As
    we discussed earlier, encapsulation is the trojan horse of OOP. It is actually
    a glorified global mutable state and makes the *unsafe *code appear safe. An unsafe
    coding practice is a pillar that OOP programmers rely on in their day-to-day job…</p><h3>Abstraction</h3><p>Abstraction
    in OOP attempts to tackle complexity by hiding unnecessary details from the programmer.
    <em>Theoretically</em>, it should allow the developer to reason about the codebase
    without having to think about the hidden complexity.</p><p>I don’t even know what
    to say…a fancy word for a simple concept. In procedural/functional languages we
    can simply “hide” the implementation details in a neighboring file. No need to
    call this basic act an “abstraction”.</p><p><em>For more details on the fall of
    OOP pillars, please read <a href="https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53">Goodbye,
    Object Oriented Programming</a></em></p><h2>Why Does OOP Dominate the Industry?</h2><p>The
    answer is simple, the reptiloid alien race has conspired with the NSA (and the
    Russians) to torture us programmers to death…</p><p><img src="https://cdn-images-1.medium.com/max/8502/1*5XI0phuXVaXDD5hcVv6clA.jpeg"
    alt="Photo by [Gaetano Cessati](https://unsplash.com/@gaetanocessati?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@gaetanocessati?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Gaetano
    Cessati</a> on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>But
    seriously, Java is probably the answer.</p><blockquote><p>Java is the most distressing
    thing to happen to computing since MS-DOS.- Alan Kay, the <a href="http://www.cc.gatech.edu/fac/mark.guzdial/squeak/oopsla.html">inventor</a>
    of object-oriented programming</p></blockquote><h3>Java was Simple</h3><p>When
    it was first introduced in 1995, Java was a very simple programming language,
    compared to the alternatives. At that time, the barrier of entry for writing desktop
    applications was high. Developing desktop applications involved writing low-level
    win32 APIs in C, and developers also had to concern themselves with manual memory
    management. The other alternative was Visual Basic, but many probably didn’t want
    to lock themselves into the Microsoft ecosystem.</p><p>When Java was introduced,
    it was a no-brainer for many developers since it was free, and could be used across
    all platforms. Things like built-in garbage collection, friendly-named APIs (compared
    to the cryptic win32 APIs), proper namespaces, and familiar C-like syntax made
    Java even more approachable.</p><p>GUI programming was also becoming more popular,
    and it seemed that various UI components mapped well to classes. Method autocompletion
    in the IDEs also made people claim that OOP APIs are easier to use.</p><p>Perhaps
    Java wouldn’t have been so bad had it not forced OOP on developers. Everything
    else about Java seemed pretty good. Its garbage collection, portability, exception
    handling features, which other mainstream programming languages lacked, were really
    great in 1995,</p><h3>Then C# came along</h3><p>Initially, Microsoft had been
    relying heavily on Java. When things started getting awry (and after a long legal
    battle with Sun Microsystems over Java licensing), Microsoft decided to invest
    in its own version of Java. That is when C# 1.0 was born. C# as a language has
    always been thought of as “the better Java”. However, there’s one huge problem
    — it was the same OOP language with the same flaws, hidden under a slightly improved
    syntax.</p><p>Microsoft has been investing heavily in its .NET ecosystem, which
    also included good developer tooling. For years Visual Studio has probably been
    one of the best IDEs available. This, in turn, has led to wide-spread adoption
    of the .NET framework, especially in the enterprise.</p><p>More recently Microsoft
    has been investing heavily in the browser ecosystem, by pushing its TypeScript.
    TypeScript is great because it can compile pure JavaScript and adds in things
    like static type checking. What’s not so great about it is it has no proper support
    for functional constructs — no built-in immutable data structures, no function
    composition, no proper pattern matching. TypeScript is OOP-first, and mostly is
    C# for the browser. <a href="https://en.wikipedia.org/wiki/Anders_Hejlsberg">Anders
    Hejlsberg</a> was even responsible for the design of both C# and TypeScript.</p><h3>Functional
    languages</h3><p>Functional languages, on the other hand, have never been backed
    by someone as big as Microsoft. F# doesn’t count since the investment was minuscule.
    The development of functional languages is mostly community-driven. This probably
    explains the differences in popularity between OOP and FP languages.</p><h2>Time
    to Move On?</h2><blockquote><p>We now know that OOP is an experiment that failed.
    It is time to move on. It is time that we, as a community, admit that this idea
    has failed us, and we must give up on it.- <a href="http://www.smashcompany.com/technology/object-oriented-programming-is-an-expensive-disaster-which-must-end">Lawrence
    Krubner</a></p></blockquote><p><img src="https://cdn-images-1.medium.com/max/6000/1*jfFiJr4OxVaU882JZBp1Hg.jpeg"
    alt="Photo by [SpaceX](https://unsplash.com/@spacex?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@spacex?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">SpaceX</a>
    on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>Why
    are we stuck using something that fundamentally is a suboptimal way to organize
    programs? Is this plain ignorance? I doubt it, the people working in software
    engineering aren’t stupid. Are we perhaps more worried about “looking smart” in
    the face of our peers by making use of fancy OOP terms like “design patterns”,
    “abstraction”, “encapsulation”, “polymorphism” and “interface segregation”? Probably
    not.</p><p>I think that it’s really easy to continue using something that we’ve
    been using for decades. Most of the people have never really tried Functional
    Programming. Those who have (like myself) can never go back to writing OOP code.</p><p>Henry
    Ford once famously said — “If I had asked people what they wanted, they would
    have said <em>faster horses</em>”. In the world of software, most people would
    probably want a “better OOP language”. People can easily describe a problem they’re
    having (getting the codebase organized and less complex), but not the best solution.</p><h2>What
    Are the Alternatives?</h2><p><em>Spoiler alert: Functional Programming</em>.</p><p><img
    src="https://cdn-images-1.medium.com/max/15904/1*Ljy--Q00zpoRgQE1SJRReA.jpeg"
    alt="Photo by [Harley-Davidson](https://unsplash.com/@harleydavidson?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText)"><em>Photo
    by <a href="https://unsplash.com/@harleydavidson?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Harley-Davidson</a>
    on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></em></p><p>If
    terms like functors and monads make you a little uneasy, then you’re not alone!
    Functional Programming wouldn’t have been so scary had they given more intuitive
    names to some of its concepts. Functor? That’s simply something we can transform
    with a function, think list.map. Monad? Simply computations that can be chained!</p><p>Trying
    out Functional Programming will make you a better developer. You will finally
    have the time to write real code that solves real-world problems, rather than
    having to spend most of your time thinking about abstractions and design patterns.</p><p>You
    might not realize this, but you already are a functional programmer. Are you using
    functions in your day-to-day work? Yes? Then you’re already a functional programmer!
    You just have to learn how to make the best use of those functions.</p><p>Two
    great functional languages with a very gentle learning curve are <a href="https://elixir-lang.org/">Elixir
    </a>and <a href="https://elm-lang.org/">Elm</a>. They let the developer focus
    on what matters most — writing reliable software while removing all of the complexity
    that more traditional functional languages have.</p><p>What are the other options?
    Is your organization already is using C#? Give F# a try — it is an amazing functional
    language, and provides great interoperability with the existing .NET code. Using
    Java? Then using Scala or Clojure are both really good options. Using JavaScript?
    With the right guidance and linting, JavaScript can be a good functional language.</p><h2>The
    Defenders of OOP</h2><p><img src="https://cdn-images-1.medium.com/max/6912/1*P5vemKZMHHBFySM644aCzQ.jpeg"
    alt="Photo by [Ott Maidre ](https://www.pexels.com/@otutotu?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)from
    [Pexels](https://www.pexels.com/photo/medieval-armor-2046779/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)"><em>Photo
    by <a href="https://www.pexels.com/@otutotu?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">Ott
    Maidre </a>from <a href="https://www.pexels.com/photo/medieval-armor-2046779/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">Pexels</a></em></p><p>I
    expect some sort of reaction from the defenders of OOP. They will say that this
    article is full of inaccuracies. Some might even start calling names. They might
    even call me a “junior” developer with no real-world OOP experience. Some might
    say that my assumptions are erroneous, and examples are useless. Whatever.</p><p>They
    have the right to their opinion. However, their arguments in the defense of OOP
    are usually quite weak. It is ironic that most of them probably have never really
    programmed in a true functional language. How can someone draw comparisons between
    two things if you have never really tried both? Such comparisons aren’t very useful.</p><p>The
    Law of Demeter is not very useful — it does nothing to address the issue of non-determinism,
    shared mutable state is still shared mutable state, no matter how you access or
    mutate that state. a.total()is not much better than a.getB().getC().total(). It
    simply sweeps the problem under the rug.</p><p>Domain-Driven Design? That’s a
    useful design methodology, it helps a bit with the complexity. However, it still
    does nothing to address the fundamental issue of shared mutable state.</p><h3><strong>Just
    a tool in a toolbox…</strong></h3><p>I often hear people say that OOP is just
    another tool in a toolbox. Yes, it is as much a tool in a toolbox as horses and
    cars are both tools for transportation… After all, they all serve the same purpose,
    right? Why use cars when we can continue riding good old horses?</p><h3>History
    repeats itself</h3><p>This actually reminds me of <a href="https://99percentinvisible.org/article/cities-paved-dung-urban-design-great-horse-manure-crisis-1894/">something</a>.
    At the beginning of the 20th century, automobiles started replacing the horses.
    In the year 1900 New York had only a few cars on the roads, people have been using
    horses for transportation. In the year 1917, no more horses were left on the roads.
    A huge industry was centered around horse transportation. Entire businesses have
    been created around things like manure cleaning.</p><p>And people resisted change.
    They called automobiles another “fad” that eventually pass. After all, horses
    have been here for centuries! Some even asked the government to intervene.</p><p>How
    is this relevant? The software industry is centered around OOP. Millions of people
    are trained in OOP, and millions of companies make use of OOP in their code. Of
    course, they will try to discredit anything that threatens their bread-and-butter!
    It’s just common sense.</p><p>We clearly see the history repeating itself — in
    the 20th century it was the horses vs automobiles, in the 21st century it is Object-Oriented
    vs Functional Programming.</p><h2>What’s Next?</h2><ul><li><p><a href="https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53">Goodbye,
    Object Oriented Programming</a> by Charles Scalfani</p></li><li><p><a href="http://www.oocities.org/tablizer/oopbad.htm">Object-Oriented
    Programming Oversold</a></p></li><li><p><a href="https://medium.com/javascript-scene/the-forgotten-history-of-oop-88d71b9b2d9f">The
    Forgotten History of OOP</a> by Eric Elliott</p></li><li><p><a href="http://harmful.cat-v.org/software/OO_programming/why_oo_sucks">Why
    OO Sucks</a> by Joe Armstrong, creator of Erlang</p></li><li><p><a href="https://www.youtube.com/watch?v=QM1iUe6IofM">Object-Oriented
    Programming is Bad</a> by Brian Will</p></li><li><p><a href="http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html">Execution
    in the Kingdom of Nouns</a> by Steve Yegge</p></li><li><p><a href="https://qr.ae/TWtlXn">Was
    object-oriented programming a failure</a>?</p></li></ul>'
  :author: Better Programming
  :topic: programming
- :url: https://medium.com/free-code-camp/the-main-pillars-of-learning-programming-and-why-beginners-should-master-them-e04245c17c56?source=search_post
  :title: The main pillars of learning programming — and why beginners should master
    them.
  :content: '<p>I have been programming for more than 20 years. During that time,
    I’ve had the pleasure to work with many people, from whom I learned a lot. I’ve
    also worked with many students, coming fresh from university, with whom I had
    to take on the role of a teacher or mentor.</p><p>Lately, I have been involved
    as a trainer in a program that teaches coding to absolute beginners.</p><p>Learning
    how to program is hard. I often find that university courses and bootcamps miss
    important aspects of programming and take poor approaches to teaching rookies.</p><p>I
    want to share the five basic pillars I believe a successful programming course
    should build upon. As always, I am addressing the context of mainstream web applications.</p><p>A
    rookie’s goal is to master the fundamentals of programming and to understand the
    importance of libraries and frameworks.</p><p>Advanced topics such as the cloud,
    operations in general, or build tools should not be part of the curriculum. I
    am also skeptical when it comes to Design Patterns. They presume experience that
    beginners never have.</p><p>So let’s look at where new programmers should start.</p><h2>Test-Driven
    Development (TDD)</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*WBvfiwWXaQnH71UNWhH9xQ.png"
    alt=""></p><p>TDD brings a lot of <a href="https://www.rainerhahnekamp.com/en/why-we-test-do-things-faster-with-test-driven-development/">benefits</a>.
    Unfortunately, it is an advanced topic that beginners are not entirely ready for.</p><p>Beginners
    shouldn’t write tests. This would be too much for their basic skill levels. Instead,
    they should learn how to use and work with tests.</p><p>Each programming course
    should center around exercises. I extend my exercises with unit tests and provide
    the students an environment which is already setup for running those tests.</p><p>All
    the students have to do is write their code and then watch the lights of the testrunner
    turning from red to green. The resulting gamification is a nice side effect.</p><p>For
    example: If the selected technology is Spring, I provide the exercises and tests
    within a Spring project. The students don’t need to know anything about Spring.
    All they need to know is the location of the exercises and the button to trigger
    the tests.</p><p>Additionally, students must know how to use a debugger and have
    a Read-Eval-Print Loop (REPL) handy. The ability to analyse code during runtime
    and to have a playground for small experiments is essential in TDD.</p><p>The
    main point is to ensure students don’t have to learn basic TDD behaviours after
    they’ve acquired core programming skills. Changing habits later in the students’
    career will be much harder than learning those habits now. That’s why they should
    live and breath unit tests from the beginning.</p><p>Later in their professional
    life, they should have an antipathy for projects without unit tests. They should
    intuitively see the absence of unit tests as anti-pattern.</p><h2>Fundamentals
    First</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*b5fd_rpkFds5KVCSKy4ynQ.png"
    alt=""></p><p>I hear very often that rookies should immediately start with a framework.
    This is like teaching people how to drive by placing them in a rally car and asking
    them to avoid oversteering. This simply ignores the fact that they still mistake
    the brake for the throttle.</p><p>The same applies when we start students with
    a framework like Angular. Beginners need to understand the fundamentals of programming
    first. They need to be familiar with the basic elements and what it means to write
    code before they can use somebody else’s.</p><p>The concept of a function, a variable,
    a condition, and a loop are completely alien to novices. These four elements build
    the foundations of programming. Everything a program is made of relies on them.</p><p>Students
    are hearing these concepts for the very first time, but it is of the utmost importance
    that the students become proficient with them. If students do not master the fundamentals,
    everything that follows looks like magic and leads to confusion and frustration.</p><p>Teachers
    <strong>should</strong> spend more time on these fundamentals. But, sadly, many
    move on far too quickly. The problem is that some teachers struggle to put themselves
    into the role of a student. They have been programming for ages and have forgotten
    what types of problems a beginner has to deal with. It is quite similar to a professional
    rally driver. He can’t imagine that somebody needs to think before braking. He
    just does it automatically.</p><p>I design my exercises so that they are challenging
    but solvable in a reasonable amount of time by using a combination of the four
    main elements.</p><p>A good example is a converter for Roman and Arabic numbers.
    This challenge requires patience from the students. Once they successfully apply
    the four elements to solve the challenge, they also get a big boost in motivation.</p><p>Fundamentals
    are important. Don’t move on until they are settled.</p><h2>Libraries and Frameworks</h2><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*XMttDXt6a6sVveEL5F5jEQ.png" alt=""></p><p>After
    students spend a lot of time coding, they must learn that most code already exists
    in the form of a library or a framework. This is more a mindset than a pattern.</p><p>As
    I have written <a href="https://www.rainerhahnekamp.com/en/modern-software-development/">before</a>:
    Modern developers know and pick the right library. They don’t spend hours writing
    a buggy version on their own.</p><p>To make that mindset transition a success,
    the examples from the “fundamentals phase” should be solvable by using well-known
    libraries like Moment.js, Jackson, Lodash, or Apache Commons.</p><p>This way,
    students will immediately understand the value of libraries. They crunched their
    heads around those complicated problems. Now they discover that a library solves
    the exercise in no time.</p><p>Similar to TDD, students should become suspicious
    when colleagues brag about their self-made state management library that makes
    Redux unnecessary.</p><p>When it comes to frameworks, students will have no problem
    understanding the importance once they understand the usefulness of libraries.</p><p>Depending
    on the course’s timeframe, it may be hard to devote time to frameworks. But as
    I already pointed out, the most important aspect is shifting the mindset of the
    student away from programming everything from scratch to exploring and using libraries.</p><p>I
    did not add tools to this pillar, since they are only of use to experienced developers.
    At this early stage, students do not need to learn how to integrate and configure
    tools.</p><h2>Master &amp; Apprentice</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*091J2Fbfa0KcyjJW4m2Eag.png"
    alt=""></p><p>In my early 20s I wanted to learn to play the piano. I did not want
    a teacher, and thought I could learn it by myself. Five years later, I consulted
    a professional tutor. Well, what can I say? I’ve learned more in 1 month than
    during the five years before.</p><p>My piano teacher pointed out errors in my
    playing I couldn’t hear and made me aware of interpretational things I never would
    have imagined. After all, she instilled in me the mindset for music and art, both
    of which were out of reach for me as a technical person.</p><p>It is the same
    in programming. If somebody has no experience in programming, then self-study
    can be a bad idea. Although there are many success stories, I question the efficiency
    of doing it alone.</p><p>Instead, there should be a “master &amp; apprentice”
    relationship. In the beginning, the master gives rules the apprentice must follow
    — blindly! The master may explain the rules, but usually the reasoning is beyond
    the apprentice’s understanding.</p><p>These internalised rules form a kind of
    safety net. If one gets lost, one always has some safe ground to return to.</p><p>Teaching
    should not be a monologue. The master has to deal with each student individually.
    He should check how the students work, give advice, and adapt the speed of the
    course to their progress.</p><p>Once the apprentices reach a certain level of
    mastery, they should be encouraged to explore new territory. The master evolves
    into a mentor who shares “wisdom” and is open for discussions.</p><h2>Challenge
    and Motivation</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*OojopxgPcPc81Av2-lUnnQ.png"
    alt=""></p><p>“Let’s create a Facebook clone!” This doesn’t come from a CEO backed
    by a horde of senior software developers and a multi-million euro budget. It is
    an exercise from an introductory course for programmers. Such an undertaking is
    virtually impossible. Even worse, students are put into wonderland and deluded
    into believing they have skills that are truly beyond their reach.</p><p>No doubt
    the teacher is aware of that, but creates such exercises for motivational reasons.</p><p>The
    main goal of an exercise is not to entertain. It should be created around a particular
    technique and should help the students understand that technique.</p><p>Motivation
    is good, but not at the sacrifice of content. Programming is not easy. If the
    students don’t have an intrinsic motivation, coding might not be the way to go.</p><p>Newbies
    should experience what it means to be a professional developer. They should know
    what awaits them before they invest lots of hours.</p><p>For example, many business
    applications center around complex forms and grids. Creating these is an important
    skill that exercises can impart. Building an application similar to Facebook might
    not be the best lesson for students to learn right away.</p><p>Similarly, a non-programmer
    might be surprised at how few code lines a developer writes per day. There are
    even times where we remove code or achieve nothing.</p><p>Why? Because things
    go wrong all the time. We spend endless hours fixing some extremely strange bugs
    that turn out to be a simple typo. Some tool might not be working just because
    a library got a minor version upgrade. Or the system crashes because somebody
    forgot to add a file to git. The list can go on and on.</p><p>Students should
    enjoy these experiences. An exercise targeting an unknown library under time pressure
    might be exactly the right thing. ;)</p><p>The sun isn’t always shining in real
    life. Beginners should be well-prepared for the reality of programming.</p><h2>Final
    Advice</h2><p>Last but not least: One cannot become a professional programmer
    in two weeks, two months or even a year. It takes time and patience.</p><p>Trainers
    should not rush or make false promises. They should focus on whether students
    understand the concepts and not move on too fast.</p><p><em>Originally published
    at <a href="https://www.rainerhahnekamp.com/en/5-pillars-of-learning-programming/">www.rainerhahnekamp.com</a>
    on June 10, 2018.</em></p>'
  :author: freeCodeCamp.org
  :topic: programming
- :url: https://medium.com/better-programming/the-one-programming-language-to-rule-them-all-620366df2805?source=search_post
  :title: The One Programming Language to Rule Them All
  :content: '<p>There’s a language that sits a layer beneath code, and it yearns to
    be explored</p><p><img src="https://cdn-images-1.medium.com/max/16384/0*R1c-uLLQzlqqiA-b"
    alt="Photo by [David Calavera](https://unsplash.com/@calavera?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@calavera?utm_source=medium&utm_medium=referral">David
    Calavera</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>At
    the time of writing, “which programming language should I learn” yields 517 million
    search results. Each page will go on about the advantages one language has over
    the others, and 90% of them will end up recommending Python or JavaScript.</p><p>If
    I may be so bold, I would like to formally disagree with all 517 million of these
    results and suggest that the first programming language you should learn is <strong>logic</strong>.</p><p>Knowing
    how to code just doesn’t cut it anymore. The market is so saturated with bootcamp
    graduates that the “junior software developer” position has been wiped from existence.
    To succeed today, you need to know how to code and have a logical mindset to boot.</p><h2>My
    First Computer Science Lesson</h2><p>My first exposure to Computer Science was
    an elective I took in 10th grade. On day one, I was elated to see a wide spread
    of ice cream and a variety of sundae toppings before me. After we all took our
    seats, my teacher proclaimed:</p><p>“Today, we’re going to be making sundaes.
    Under one condition: you have to write a list of specific instructions on how
    to prepare your sundae — then I’ll follow them.”</p><p><em>No problem</em>, I
    thought, <em>this will be a breeze</em>. In under a minute, I jotted down the
    perfect set of sundae-making instructions:</p><pre><code>Scoop three scoops of
    black raspberry ice cream into a bowlPour two tablespoons of hot fudge into said
    bowlPut whipped cream into the bowlPlace sprinkles and a cherry on top of the
    sundae</code></pre><p>Then my teacher — the computer in this lovely metaphor —
    put on the most accurately sarcastic display I’ve ever seen. She started viciously
    stabbing the ice cream carton, lid intact, unable to penetrate its tough exterior.</p><p>“OK,
    remove the lid first,” I said, desperate for a treat.</p><p>“You failed to provide
    me with those instructions, so, unfortunately, I failed to make you a sundae,
    NEXT!”</p><h3>Fast-forward to attempt #2</h3><pre><code>Open the black raspberry
    ice cream by removing the lidScoop three scoops of black raspberry ice cream into
    a bowlOpen the hot fudge and pour two tablespoons into the bowlOpen the whipped
    cream and add some to the bowlPlace sprinkles and a cherry on top of the sundae</code></pre><p>This
    time I was sure I had it. I even went ahead and ensured each item was opened before
    adding it to my masterpiece.</p><p>She opened the lid, scooped three scoops, and
    put them into the bowl. <em>At last, my nascent sundae was finally coming into
    fruition</em>. Then she opened the hot fudge and placed two tablespoons into my
    bowl. Not two tablespoons of hot fudge, mind you — two actual spoons, and no hot
    fudge. I failed to be specific enough — again. When all was said and done, I was
    handed a bowl of ice cream laden with two metal spoons, a solid canister of whipped
    cream, and about 300 sprinkles.</p><p>I think by this point it finally clicked:
    the computer is a purely logical entity. It has no context and makes no assumptions.
    It responds to a very specific set of instructions and follows them to a T.</p><p>My
    final set of sundae-making instructions was a verbose, but necessary, disaster:</p><pre><code>If
    they are not already, open each of the following: Black Raspberry Ice Cream, Hot
    Fudge, Sprinkles, and Whipped CreamAquire a bowl from the stack and place it in
    front of youGrab the ice cream scoop and, one at a time, scoop three scoops of
    black raspberry ice cream into the bowl. Place the scoop down when doneAquire
    the hot fudge spoon if not already in your possession, then fetch two tablespoons
    of hot fudge and place them into the bowl, one at a time, and put down the hot
    fudge when doneTurn the whipped cream upside down, press your finger against the
    nozzle over the bowl for 3 seconds, and return the bottle to its resting positionSprinkle
    approximately 40 sprinkles over the bowl and return the shaker to its upright
    position when doneFetch a single cherry from the cherry jar and place it delicately
    on top of the sundaeHand the sundae to the student along with a spoon</code></pre><p><em>That
    last bullet was extremely important because she started eating my sundae without
    it.</em></p><p>This is the reality of computer programming. Providing intense
    sets of detailed instructions to a computer. In essence, this is what all programming
    languages decompose into — instructions.</p><h2>The Software Development Career
    Path</h2><p>Software development is now at a point where it’s too broad to discuss
    as a single industry, just as “software developer” is too broad a job title. Two
    developers can be equally marketable while having disjointed skill sets, implying
    there is more to a career in development than the mere ability to code. There’s
    an attribute skilled developers have that is universal and separate from programming**
    <strong>— **logic</strong>.</p><p>The best developers are experts in critical
    thinking. This is essential because the majority of software projects are undocumented,
    splintered disasters. They require a critical thinker to piece information together
    and fill in the gaps when needed. The developers who lag behind are those who
    cannot connect the dots.</p><p>All this culminates to another bold statement,
    this time in bold: <strong>The fundamentals of computer science are, and will
    always be, paramount to coding ability</strong>.</p><p>Popular languages come
    and go with the tide. Frameworks become deprecated, and companies <em>react</em>
    to shifting demands by mixing up their tech stack. The one thing that never changes?
    Fundamentals — that’s literally their definition!</p><h2>How to Improve Logical
    Thinking</h2><p><img src="https://cdn-images-1.medium.com/max/11074/0*8NdAAIAdVl2SCY9G"
    alt="Photo by [Cristofer Jeschke](https://unsplash.com/@cristofer?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@cristofer?utm_source=medium&utm_medium=referral">Cristofer
    Jeschke</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>For
    those who can’t quite trek a mountain for deep thought, consider these tools to
    improve your programmatic critical thinking:</p><h3>Know your run time complexities</h3><p>Also
    referred to as Big-O, the runtime complexity of a program can be expressed as
    the number of steps taken on any instance in relation to the size of the input
    (n). Keeping perpetual tabs on the runtime of your programs is step one.</p><h3>Know
    your data structures</h3><p>Data structures are at the heart of every complex
    program. Knowing which structure to use in what scenario is an art of its own.
    Data structures tie directly into runtime complexities, as picking the wrong structure
    can send your programs to a grinding halt. Searching an Array for a value is O(n),
    which means it gets more expensive to use Arrays as the size of your input increases.
    Hash lookups are O(1), so the lookup time for a Hash key will be constant, regardless
    of the number of keys in said Hash.</p><p>I’ve had candidates argue that an Array
    has a faster search time than a Hash. This was an immediate signal not to hire
    them — know your data structures.</p><h3>Read/watch/listen</h3><p>Sites like <a
    href="https://www.udemy.com/">Udemy</a>, <a href="https://www.pluralsight.com/">Pluralsight</a>,
    and <a href="https://www.codecademy.com/">Codecademy</a> are incredible resources
    for learning new programming languages. For fundamentals, turn to books on general
    engineering concepts, best practices, and coding styles. The most highly recommended
    books for engineers are <a href="https://www.amazon.com/Design-Patterns-Object-Oriented-Addison-Wesley-Professional-ebook/dp/B000SEIBB8">Design
    Patterns</a>, <a href="https://www.amazon.com/Refactoring-Improving-Existing-Addison-Wesley-Signature-ebook/dp/B07LCM8RG2/ref=pd_sim_351_6/142-0154859-5992466?_encoding=UTF8&pd_rd_i=B07LCM8RG2&pd_rd_r=a4e6cc69-7280-11e9-a650-71be33d71435&pd_rd_w=JhF76&pd_rd_wg=HQnCc&pf_rd_p=90485860-83e9-4fd9-b838-b28a9b7fda30&pf_rd_r=56JSHW3CQZ9DJ9QTKRDG&psc=1&refRID=56JSHW3CQZ9DJ9QTKRDG">Refactoring</a>,
    <a href="https://www.amazon.com/Code-Complete-Developer-Best-Practices-ebook/dp/B00JDMPOSY/ref=pd_sim_351_1/142-0154859-5992466?_encoding=UTF8&pd_rd_i=B00JDMPOSY&pd_rd_r=9d021387-7280-11e9-85e1-95851149a707&pd_rd_w=UqKo2&pd_rd_wg=Xcm3u&pf_rd_p=90485860-83e9-4fd9-b838-b28a9b7fda30&pf_rd_r=T3WPQN0PCFK4M3Y3P3GX&psc=1&refRID=T3WPQN0PCFK4M3Y3P3GX">Code
    Complete</a>, <a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship-ebook/dp/B001GSTOAM/ref=pd_sim_351_2/142-0154859-5992466?_encoding=UTF8&pd_rd_i=B001GSTOAM&pd_rd_r=9d021387-7280-11e9-85e1-95851149a707&pd_rd_w=UqKo2&pd_rd_wg=Xcm3u&pf_rd_p=90485860-83e9-4fd9-b838-b28a9b7fda30&pf_rd_r=T3WPQN0PCFK4M3Y3P3GX&psc=1&refRID=T3WPQN0PCFK4M3Y3P3GX">Clean
    Code</a>, and <a href="https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master-ebook/dp/B003GCTQAE/ref=sr_1_1?crid=PE5LI83Q6RWS&keywords=pragmatic+programmer&qid=1557423227&s=digital-text&sprefix=Prag%2Cdigital-text%2C333&sr=1-1">The
    Pragmatic Programmer</a>, to name a few. Lastly, every engineer should keep a
    copy of “<a href="https://www.amazon.com/Introduction-Algorithms-Press-Thomas-Cormen-ebook/dp/B007CNRCAO/ref=sr_1_1?crid=31HE3VQZ6I37W&keywords=intro+to+algorithms&qid=1557423306&s=digital-text&sprefix=Intro+to+algori%2Cdigital-text%2C240&sr=1-1">Introduction
    to Algorithms</a>” in their desk for safe keeping.</p><h3>Practice!</h3><p>You
    cannot become a master violinist without excessively playing the violin. Sites
    like <a href="https://www.hackerrank.com/">HackerRank</a>, <a href="https://www.codewars.com/">CodeWars</a>,
    <a href="https://coderbyte.com/">CoderByte</a>, <a href="https://www.topcoder.com/">TopCoder</a>,
    and<a href="https://leetcode.com/"> LeetCode</a> have thousands of challenge problems
    designed to test your knowledge of data structures and algorithms. The best approach
    I’ve found to using these sites is to take your own shot at solving the problem,
    host your solutions on Github, and then look at the top solutions for that problem
    to see how others approached it. Which brings me to my last point:</p><h3>View
    others’ code</h3><p>The greatest mistake you can make in your software development
    journey is to go it alone. Software development is a largely crowdsourced effort.
    We build standards together, make mistakes together, and learn what works over
    time (by failing a lot). Taking the time to read skilled developers’ code will
    always pay off. Just make sure it’s good code.</p><p>The best advice I can leave
    you with is to never feel ashamed of what you don’t (yet) know. As I mentioned,
    this industry is massive, its number of languages extreme, and the content dense.
    It takes a great deal of time and effort to build an understanding, even more
    to gain proficiency, and an immense amount more to gain mastery. I’ll let you
    know when I get there.</p>'
  :author: Better Programming
  :topic: programming
- :url: https://medium.com/free-code-camp/make-your-hobby-harder-programming-is-difficult-thats-why-you-should-learn-it-e4627aee41a1?source=search_post
  :title: Programming is hard. That’s precisely why you should learn it.
  :content: '<p>Why is it doing that when I want it to do not that? (image credit:
    Pixabay)</p><p>It was far past midnight. My wife and kids had long gone to bed.
    But sleep was not an option for me. I had to figure it out. So I tweaked the code
    again, for the googolth time, and hit run.</p><p><em>Hmm, looks promising.</em></p><p>If
    I click here, the program should call the “compute next move” function. Yes. And
    if I click here, that function should call itself. Good. Now, if I click here,
    I should get…not that.</p><p><em>Argh.</em></p><p>More tweaks. More errors. More
    hours tick by.</p><p>Learning programming is hard, I thought. My next thought?</p><p><em>Yes,
    and that’s why I like it.</em></p><p><img src="https://cdn-images-1.medium.com/max/2248/1*i7IdMq2z3uFFJKEthJCVlA.jpeg"
    alt="Also hard: rocks. (image credit: [pexels](https://www.pexels.com/photo/rocks-stones-99640/))"><em>Also
    hard: rocks. (image credit: <a href="https://www.pexels.com/photo/rocks-stones-99640/">pexels</a>)</em></p><h2>How
    programming became my hobby</h2><p>I began to learn how to code using JavaScript
    four months ago, starting with freeCodeCamp’s front-end curriculum. For me, programming
    became a hobby.</p><p>Over the past few years, I had become disappointed with
    my creation-to-consumption ratio. Too much of my free time was spent consuming.
    Netflix, podcasts, Twitter, magazines, televised sports, Facebook, blogs, Medium,
    newspapers, novels — the list goes on.</p><p>There is nothing wrong with any of
    these activities, but they are all pure input. Even reading a great book is an
    act of consumption.</p><p>Sure, I was generating plenty of output in my job as
    a journalist, but I could no longer accept the fact that hard work was something
    I did only when it would result in a paycheck.</p><p>With a family and a career
    and other obligations, I had only so much free time. I was spending far too much
    of it scarfing down media. And I felt like a pig.</p><p>So far, my programming
    hobby hasn’t result in all that much output. I made one <a href="http://www.first-and-last.com/">simple
    app</a>, which I wrote about in a <a href="https://medium.freecodecamp.com/write-better-sentences-and-do-javascript-crud-with-mean-while-mostly-avoiding-acronyms-fe17905bcec5">previous
    article</a>. I’ve completed all the front-end challenges and projects on freeCodeCamp.</p><p>But
    it’s a start. My goal is not to create amazing things to impress people. It is
    simply to immerse myself in the act of creation, to challenge myself, to attempt
    something difficult — if for no other reason than to finish it.</p><h2>Harder
    is better</h2><p>In my home province — Ontario, Canada — there is a movement to
    improve physical health called <a href="http://www.makeyourdayharder.com/">Make
    Your Day Harder</a>. The basic premise is that making small tweaks to daily routines
    to increase physical activity can add up and improve health.</p><p>Take the stairs
    instead of the elevator. Get off the bus one stop before your destination. Take
    the parking spot farthest away from the entrance at work.</p><p><center><iframe
    width="560" height="315" src="https://www.youtube.com/embed/whPuRLil4c0" frameborder="0"
    allowfullscreen></iframe></center></p><p>“Maybe easier isn’t really better…” is
    this group’s motto.</p><p>I couldn’t agree more. Those elevator-hating far-parkers
    are onto something.</p><p>Of course, sitting in front of a computer writing code
    isn’t going to improve your physical health. JavaScript is great for building
    apps, not abs.</p><p>I don’t think it’s too much of a stretch, though, to suggest
    that learning how to program is healthy for your brain. Healthier, at least, than
    bingeing <em>Iron Fist</em> or thumbing through celebrity Instagram accounts.</p><p>For
    me, even after I started coding, the default during downtime is still too often
    leisure. This month, for instance, I have already spent dozens of hours watching
    genetic outliers throw a ball at a metal ring. This is otherwise known as the
    NBA playoffs. Since I’m a Toronto Raptors fan, you could also call it self-induced
    torture.</p><p>Does watching so much basketball — alone, in my basement — benefit
    me in any way? Well, I drink more beer when I watch sports. I eat more nachos
    and wings and potato chips. Mike and Ikes have made several appearances. Oh, and
    I often stay up late to watch the West Coast games, so I’m getting less sleep.</p><p>In
    other words, watching sports, for me, is a vice. I enjoy it, but it’s actually
    bad for me. It provides me with entertainment, but nothing else. Except for love
    handles and the occasional mid-afternoon yawn attack.</p><p>But it’s easy. It’s
    oh so easy. Plop on couch. Crack open Corona. Kick up your feet. Sit there for
    three hours.</p><p>The easy path is more tempting. The difficult path is more
    rewarding.</p><h2>Embracing difficulty</h2><p>I was again reminded of the value
    of embracing difficulty while watching the movie Hidden Figures. The film featured
    an excerpt of John F Kennedy’s “We choose to go to the moon” speech. The United
    States pursued space travel not *despite *it being difficult, the president declared,
    but rather *because *it was difficult.</p><blockquote><h1>“We choose to go to
    the moon in this decade and do the other things, not because they are easy, but
    because they are hard, because that goal will serve to organize and measure the
    best of our energies and skills, because that challenge is one that we are willing
    to accept, one we are unwilling to postpone, and one which we intend to win, and
    the others, too.” — John F Kennedy</h1></blockquote><p><center><iframe width="560"
    height="315" src="https://www.youtube.com/embed/ouRbkBAOGEw" frameborder="0" allowfullscreen></iframe></center></p><p>The
    words “hard” and “difficult” are often used to describe something negative. In
    many cases, that’s appropriate. It is hard to watch a loved one fall ill and suffer.
    It is difficult when a relationship fails or a pet dies. Some situations are all
    pain, no profit.</p><p>Learning something difficult, however, is beneficial in
    and of itself. The process is the prize. Struggling with code, while frustrating,
    is medicine for the mind.</p><p>If you happen, along the way, to create something
    amazing and users flock to your app with open wallets, that’s great. If not, code
    anyway. If you master JavaScript and become a YouTube guru with more subscribers
    than the <em>New York Times</em>, that’s great. If not, code anyway.</p><p>Many
    people learn programming to attain a specific goal. Perhaps your job is boring
    and you want a more challenging one. Nothing wrong with that. Maybe you want to
    break into tech because you need a higher income to support your family. Hey,
    someone has to buy the bagels and flip flops, and keep the WiFi pumping.</p><p>But
    you don’t need an endgame in mind to start your coding journey. Just begin. And
    if that journey becomes difficult, don’t despair. It means you’re on the right
    path. The hard one.</p>'
  :author: freeCodeCamp.org
  :topic: programming
- :url: https://medium.com/edge-coders/software-engineering-is-different-from-programming-b108c135af26?source=search_post
  :title: Software Engineering is different from Programming
  :content: '<p>All software engineers can program, but not all programmers can engineer
    software</p><p><img src="https://cdn-images-1.medium.com/max/5656/1*ZJcE4D_FuHlKrn17uEFDfw.png"
    alt="[jsComplete.com/pro-programmer](https://jscomplete.com/learn/pro-programmer)"><em><a
    href="https://jscomplete.com/learn/pro-programmer">jsComplete.com/pro-programmer</a></em></p><blockquote><p><strong>Update:</strong>
    This article is now part of my book “The Professional Programmer”.Read the updated
    version of this content, and more programming advice at <a href="https://jscomplete.com/pro-programmer">**jscomplete.com/pro-programmer</a>**.</p></blockquote><p>Some
    people don’t like the term <em>Software Engineer</em> because of the <em>engineering</em>
    metaphor. This article is not about that term. If you don’t like it you can substitute
    it with Software Author, Software Craftsperson, or Software Artist!</p><p>By <em>Software
    Engineer</em>, I mean a person who looks at writing quality software as their
    <em>profession</em>. A person who applies science and statistics to that profession
    and does not look at it as just a job that earns money.</p><p>Knowing how to program
    does not make you a software engineer.</p><p>Anyone can learn to program. It’s
    easy. Anyone can create simple programs that work for <em>them</em> on *their
    machines *but that would not guarantee that the same programs will work for others.</p><p>My
    favorite analogy about this is that everyone can sing and entertain themselves
    in the shower, but when it’s party time you do not play recordings of yourself
    singing. You go with the pros.</p><p>More analogies? Sure:</p><ul><li><p>We learned
    Math and Writing in school but that did not make us Mathematicians and Authors.</p></li><li><p>Most
    of us can easily learn to cook but when it’s time to feed a lot of people we hire
    a Chef.</p></li><li><p>You do not call the neighborhood handyman to build a house
    from the ground up.</p></li></ul><p>The main message I want to share in this article
    is that <em>simple programs</em> are much different than <em>engineered programs</em>.</p><p>The
    act of programming, in its simplest definition, is <em>giving computers instructions
    *to do something with some *input</em> in order to produce some <em>output</em>.</p><p>The
    act of engineering software is about designing, writing, testing, and maintaining
    computer programs with the purpose of solving problems for many users. It is about
    creating robust and safe solutions that will withstand the test of time and will
    work for some of the unknown problems around the original obvious ones.</p><p>Software
    engineers understand everything about the problems they solve, the solutions they
    provide, the limitations of those solutions, their privacy implications, and their
    security implications.</p><blockquote><h1>If someone does not understand the problem,
    they should not be allowed to program a solution for it.</h1></blockquote><h2>The
    Solution Mentality</h2><p>Software engineers do not think of their career as just
    writing programs. They think in terms of satisfying needs and* solving problems*.
    This is important because not every problem needs a program. Some problems can
    be solved by existing programs or by putting together multiple programs. Some
    problems can be totally prevented by acting early. Designing good programs often
    involves planning to prevent future problems.</p><blockquote><h1>“Intellectuals
    solve problems, geniuses prevent them. “</h1><h1>— Albert Einstein</h1></blockquote><p>Complicated
    problems usually require writing multiple programs. Some problems need programs
    that run in parallel while others need the programs to run sequentially. Some
    problems can be solved by educating users.</p><p>Before writing a program, a software
    engineer asks the questions:</p><ul><li><p>What problems am I trying to solve?</p></li><li><p>What
    else besides writing code can be done to solve them?</p></li><li><p>What can I
    do to make these problems easier to solve with code?</p></li></ul><h2>Code Quality</h2><p>Great
    programs are clear and readable, they can be easily extended, they work great
    with other programs, and maintaining them is not a nightmare. The quality of the
    code is not a negotiable thing, using sloppy shortcuts because of a deadline or
    emotion is never acceptable.</p><p>One of the most important aspects of engineering
    software is to design anything from the ground up ready for extendibility. Modifying
    software is a fact of life. Users will demand more features and easier ways to
    use software.</p><p>A piece of software is usually not very useful on its own.
    Useful software features start when multiple pieces of software communicate with
    each other, exchange their data, and collaborate on the task of presenting data
    and interfaces to users.</p><p>Programs have to be designed with that in mind.
    What messages do they accept? What events are monitored? What messages are emitted?
    How do we authenticate and authorize communications?</p><p>Another important aspect
    of great programs is the clarity of the code, not how many tests there are or
    the number on the test coverage report. It is the simple question of <em>is this
    code readable to someone else?</em> Or better, <em>would I, the writer of code
    today, understand this code a few weeks from now?</em></p><blockquote><h1>“There
    are only two hard things in Computer Science: cache invalidation and <strong>naming
    things</strong>.”</h1><h1>— Phil Karlton</h1></blockquote><p>Code readability
    matters a lot more than you think. Unfortunately, there are no good metrics for
    code clarity. Memorizing good software patterns and practices might help but are
    often not enough. Good software engineers just develop an eye for code clarity
    with experience and intuition. The writing metaphor here is perfect: just knowing
    a big list of words will not help you write concise and clear content.</p><blockquote><h1>“I
    didn’t have time to write a short letter, so I wrote a long one instead.“</h1><h1>—
    Mark Twain</h1></blockquote><p>Things will go wrong with programs. Being able
    to easily fix them when they do is a key attribute of good software. Errors happening
    in programs should have clear messages and be logged centrally somewhere to be
    monitored. When a new error is reported, the person who needs to fix it should
    be able to debug that error. They should be able to hook into the system and read
    information about the execution context at any point in time. They should be able
    to easily verify expectations about any part of the system.</p><h2>Environments
    and Testing</h2><p>When software engineers write programs, they make sure their
    programs will work in many different environments, on differently-resourced machines,
    and at different time zones. The software needs to work on many different screen
    sizes and orientations. It also needs to handle being forced to use limited memory
    or processing power.</p><p>When creating software for a web browser, for example,
    it needs to work in all the different major browsers. When creating desktop software,
    it needs to work for Mac and Windows users in most cases. When creating applications
    that depend on data, the software needs to work for the case when the connection
    to retrieve that data is slow or completely off for a while.</p><p>To write a
    piece of software, software engineers try to think of every possible scenario
    they can imagine and they plan to test these scenarios. This starts with what
    they call the happy path where nothing unexpected happens but more importantly
    they document every issue that is likely to happen and plan a test for that. Some
    software engineers start by writing code, which they call test cases, that simulate
    these scenarios. They then write the desired code that passes all these test cases.</p><p>Software
    engineers understand software requirements which are usually ambiguous and incomplete.
    The unique skill of a talented software engineer is not about <em>how</em> to
    write the solution but rather about identifying <em>what</em> should go in the
    solution.</p><h2>Cost and Efficiency</h2><p>Software engineers can solve problems
    fast in most cases. If you think that hiring experienced programmers means higher
    costs, think again. The more experienced the programmer you hire is, the faster
    they can provide robust, accurate, reliable, and maintainable solutions. This
    means lower costs overall in the long term.</p><p>You need to also consider the
    cost of running the program. Every program will use computer resources and those
    do not come free. Software engineers will write efficient programs that do not
    use computer resources unnecessarily. For example, caching frequently-used data
    is one strategy that applies here, but it is only one of maybe thousands of tools
    and variations that can make a program faster and more efficient.</p><p>A beginner
    programmer might give you a cheap solution, but running that solution might end
    up costing you and your clients a lot more than if you had an experienced programmer
    create an efficient solution in the first place.</p><h2>Usability</h2><p>Good
    programs are designed with the User Experience (UX) in mind. Human-computer interaction
    is a big topic with countless research studies and findings. The more these findings
    are embraced, the better the software would be.</p><p>Let me give a few examples
    here just for you to get a taste of this big domain:</p><ul><li><p>When designing
    input forms where users are expected to enter data, such as, their email address,
    a good receiver program would ignore the letter case used for the email address.
    It would also trim any extra spaces around it. Do not give the user a hard time
    because their CAPSLOCK key is on, an email is unique in its lowercase format.
    If the program is accepting new email addresses, validate that early to give the
    user a clear message that they probably used the wrong address. This includes
    obvious validation problems like not having an @ sign but it should also include
    the not so obvious validation problems like using a misspelled “gmail.<strong>ocm</strong>.”</p></li><li><p>When
    redirecting a user to do something, a good program would remember their original
    location and redirect them back to that location when they are done. A good program
    would also remember any already-defined data and interactions that need to be
    associated with future steps the user is asked to do. For example, let’s say you
    have been searching for flights as a guest on Expedia. You then decided to create
    an account. All your previous search would be saved into the new account and you
    could access them from entirely different machines.</p></li><li><p>A good program
    is designed with user scenarios in mind. Put yourself in your users’ shoes. Don’t
    just add features! The other day I booked a United flight forgetting to include
    my frequent flyer number. After I got the confirmation, I went to the United website
    to add my FF# to the flight and it took me a good TEN minutes to figure that out.
    There was no obvious path so I had to explore all links that could lead to that
    feature. I visited the page where the feature was available and I could not see
    it the first time because it was buried deep in a big form. It turned out that
    I had to edit traveler information, scroll past about 20 input elements on that
    form, select the type of FF# I wanted to use, and also enter the required phone
    number to make the whole form submit. This is an example of a program that was
    not designed by thinking from the point of view of the user.</p></li></ul><h2>Reliability,
    Security, and Safety</h2><p>These are probably the most important points that
    set software professionals apart from the amateurs. They know they are responsible
    for writing safe and secure solutions.</p><p>A piece of software has to be resilient
    to bad input, bad states, and bad interactions. This is VERY hard to accomplish
    and it is the main reason why we hear stories about people dying because of software
    mistakes.</p><p>Users are going to use the software with bad or wrong input. Some
    will do that intentionally to try to break software and hack into resources represented
    by that software. The person who was allegedly responsible for the recent Equifax
    fiasco was accused of not doing their job, which is to engineer resiliency to
    bad and malicious input in all software that is publicly exposed.</p><p>The security
    story is also not only about bad and malicious input but sometimes normal input
    as well. If users forget their passwords, how many times can they be allowed to
    try? Do you lock them out after? What if someone else is trying to get them locked
    out? Do you allow your users to submit their password over a not-encrypted connection?
    What if an attempt to login to an account came from an unusual place? What do
    you do if the login seemed automated?</p><p>What do you do to protect your users
    from cross-site scripting and request forgery, man in the middle attacks, and
    simple social phishing? Do you have a backup strategy if you get a DDoS attack
    on your servers? These questions are just to name a few of the many concerns to
    be planned for.</p><p>Secure programs do not store sensitive information as clear
    text but rather as one-way encrypted data with very-hard-to-break algorithms.
    This is a backup strategy in case the program and data get compromised. Hackers
    would find encrypted data that is mostly useless to them.</p><p>The software will
    go into bad states and will need to be corrected. Unexpected problems will occur
    to the best of programs. If you are not aware of that and you are not planning
    for that, you are not a software professional, you are just a writer of unsafe
    programs.</p><p>Software defects are invisible. Our intellectual ability to predict
    and prevent known defects are limited. This is why software engineers understand
    the value of good tools that can help them write correct and safe software.</p><h2>Embracing
    Tools</h2><p>There is no doubt that we need more and better tools. Tools make
    a big difference and they are often under-appreciated.</p><p>Imagine if we still
    need to FTP files to deploy! Imagine debugging network and performance problems
    without Chrome DevTools! Imagine how inefficient it would be today to write JavaScript
    without ESLint and Prettier!</p><blockquote><h1>If you are a JavaScript developer
    and, for some reason, you are forced to pick only one plugin for your code editor,
    you should pick ESLint.</h1></blockquote><p>Any tool that shortens the feedback
    loop while you write code should be a welcomed addition. Bret Victor’s argument
    about <a href="https://vimeo.com/36579366">inventing immediate visual representations</a>
    to what we create was an eye-opener for me. Embracing and improving tools is one
    way to get us to that bright future. <em>Go watch Bret’s talk right now if you
    have not seen it before.</em></p><p>When I find a great new tool, my only regret
    is not using that tool earlier. Better tools will help you be a better programmer.
    Find them, use them, appreciate them and, if you can, improve them.</p><p>The
    choice of language matters. Type-safety matters. The best thing that has happened
    to JavaScript is TypeScript (and Flow). Code static analysis is a bigger deal
    than you think. If you are not doing it you are basically making yourself vulnerable
    to future unknowns. Do not code without a static typing system. If your language
    of choice does not have static typing, either change languages or find a transpiler
    for it. Transpilers today are smart enough to work by just reading comments in
    code, which I think is the future of type-checking for languages that do not support
    it natively.</p><h2>The Evolution of Software Engineering</h2><p>No one can learn
    software engineering in two months, or six, or even a year. You do not learn to
    be a software engineer in a bootcamp. I have been learning for the past 20+ years
    and I am still learning today. I became confident enough to call myself an experienced
    programmer only after about a decade of learning and after designing, building,
    and maintaining applications that are used by thousands of users.</p><p>Software
    engineering is not for everyone, but everyone should learn to solve their own
    problems with computers. If you can learn to write simple programs you should.
    If you can learn to use generic software services you should. If you can learn
    to use open-source software you will have a lot of power.</p><p>Problems evolve
    and so should software engineering. The future of this profession is to enable
    regular computer users to use their computers without needing to study five years
    to do so. Enable users to solve the easy problems on their own with easy-to-use
    tools. Software engineers would then move on to create better tools, solve bigger
    known problems, and do their best to prevent unknown ones.</p><p>Thanks for reading.</p><iframe
    src="https://medium.com/media/f3ce47a401ca3f07d855f345843443c7" frameborder=0></iframe><p><img
    src="https://cdn-images-1.medium.com/max/5668/1*-WZ8Twwz4S7R7VkTjBaJxQ.png" alt=""></p>'
  :author: EdgeCoders
  :topic: programming
- :url: https://medium.com/free-code-camp/if-you-want-to-learn-data-science-start-with-one-of-these-programming-classes-fb694ffe780c?source=search_post
  :title: If you want to learn Data Science, start with one of these programming classes
  :content: "<p>A year ago, I was a numbers geek with no coding background. After
    trying an online programming course, I was so inspired that I enrolled in one
    of the best computer science programs in Canada.</p><p>Two weeks later, I realized
    that I could learn everything I needed through edX, Coursera, and Udacity instead.
    So I dropped out.</p><p>The decision was not difficult. I could learn the content
    I wanted to faster, more efficiently, and for a fraction of the cost.</p><p>I
    already had a university degree and, perhaps more importantly, I already had the
    university experience. Paying $30K+ to go back to school seemed irresponsible.</p><p>I
    started creating my own <a href=\"https://medium.com/@venturidb/i-dropped-out-of-school-to-create-my-own-data-science-master-s-here-s-my-curriculum-1b400dcee412#.oeqy9lejt\">data
    science master’s degree</a> using online courses shortly afterwards, after realizing
    it was a better fit for me than computer science. I scoured the introduction to
    programming landscape. I’ve already taken several courses and audited portions
    of many others. I know the options, and what skills are needed if you’re targeting
    a data analyst or data scientist role.</p><p>For this guide, I spent 20+ hours
    trying to find every single online introduction to programming course offered
    as of August 2016, extracting key bits of information from their syllabi and reviews,
    and compiling their ratings. For this task, I turned to none other than the open
    source Class Central community and its database of thousands of course ratings
    and reviews.</p><p><img src=\"https://cdn-images-1.medium.com/max/2848/1*CkCap87IOBBmE5E2vnSQyg.png\"
    alt=\"Class Central’s [homepage](https://www.class-central.com/).\"><em>Class
    Central’s <a href=\"https://www.class-central.com/\">homepage</a>.</em></p><p>Since
    2011, <a href=\"https://www.class-central.com/\">Class Central</a> founder <a
    href=\"https://www.class-central.com/@dhawal\">Dhawal Shah</a> has kept a closer
    eye on online courses than arguably anyone else in the world. Dhawal personally
    helped me assemble this list of resources.</p><h2>How we picked courses to consider</h2><p>Each
    course had to fit four criteria:</p><ul><li><p><strong>It introduces programming
    and, optionally, computer science</strong>. See “A note on Programming vs. Computer
    Science” below.</p></li><li><p><strong>The language of instruction is Python or
    R.</strong> These are by far the two most popular programming languages used in
    data science.</p></li><li><p><strong>It must be an interactive online course,
    so no books or text-based tutorials.</strong> Regarding the latter, Codecademy’s
    video-less and text editor-based courses would qualify, but strict text tutorials
    like the ones from <a href=\"http://www.r-tutor.com/r-introduction\">R tutorial</a>
    would not. Though books are viable ways to learn programming, Python, and R, this
    guide focuses on courses.</p></li><li><p><strong>It must be a decent length: at
    least ten hours in total for estimated completion.</strong></p></li></ul><p><img
    src=\"https://cdn-images-1.medium.com/max/2174/1*IssktioBXpXFf_L4xBhFfw.png\"
    alt=\"Python and R are the two most popular programming languages used in data
    science.\"><em>Python and R are the two most popular programming languages used
    in data science.</em></p><h2>How we evaluated courses</h2><p>We believe we covered
    every notable course that exists and which fits the above criteria. Since there
    are seemingly hundreds of courses on Udemy in Python and R, we chose to consider
    the most reviewed and highest rated ones only. There is a chance we missed something,
    however. Please let us know if you think that is the case.</p><p>We compiled average
    rating and number of reviews from Class Central and other review sites. We calculated
    a weighted average rating for each course. If a series had multiple courses (like
    Rice University’s <a href=\"http://bit.ly/2cDAXSz\">Part 1</a> and <a href=\"http://bit.ly/2dFvMSl\">Part
    2</a>), we calculated the weighted average rating across all courses. We also
    read text reviews and used this feedback to supplement the numerical ratings.</p><p>We
    made subjective syllabus judgment calls based on three factors:</p><ol><li><p><strong>Coverage
    of the fundamentals of programming.</strong></p></li><li><p>*<em>Coverage of more
    advanced, but useful, topics in programming. *</em>(E.g. several courses choose
    to not cover object-oriented programming. We believe this is a key topic, though
    not a deal-breaker, hence these courses only being docked marks and not excluded
    from consideration.)</p></li><li><p><strong>How much of the syllabus is relevant
    to data science?</strong></p></li></ol><h2>A note on Programming vs. Computer
    Science</h2><p>Programming is not computer science and vice versa. There is a
    difference of which beginners may not be acutely aware. Borrowing <a href=\"http://programmers.stackexchange.com/questions/137103/whats-the-difference-between-computer-science-and-programming\">this
    answer</a> from Programmers Stack Exchange:</p><blockquote><h1>Computer science
    is the study of what computers [can] do; programming is the practice of making
    computers do things.</h1></blockquote><p>The course we are looking for introduces
    <strong>programming</strong> and optionally touches on relevant aspects of computer
    science that would benefit a new programmer in terms of awareness. Many of the
    courses considered, you’ll notice, do indeed have a computer science portion.</p><p>None
    of the courses, however, are strictly computer science courses, which is why something
    like <a href=\"https://www.class-central.com/mooc/442/edx-cs50x-introduction-to-computer-science\">Harvard’s
    CS50x</a> on edX is excluded.</p><h2>Our pick for the best programming course
    for data scientists is…</h2><p>University of Toronto’s “Learn to Program” series
    on Coursera. <a href=\"https://www.class-central.com/mooc/385/coursera-learn-to-program-the-fundamentals\">LTP1:
    The Fundamentals</a> and <a href=\"https://www.class-central.com/mooc/390/coursera-learn-to-program-crafting-quality-code\">LTP2:
    Crafting Quality Code</a> have a near-perfect weighted average rating of 4.71
    out of 5 stars over 284 reviews. They also have a great mix of content difficulty
    and scope for the beginner data scientist.</p><p>This free, Python-based introduction
    to programming sets itself apart from the other 20+ courses we considered.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2106/1*IcIM_M2Hxq5ShC4lXpowNg.png\"
    alt=\"[Part 2](https://www.coursera.org/learn/program-code) of the University
    of Toronto’s “Learn to Program” series.\"><em><a href=\"https://www.coursera.org/learn/program-code\">Part
    2</a> of the University of Toronto’s “Learn to Program” series.</em></p><p>Jennifer
    Campbell and Paul Gries, two associate professors in the University of Toronto’s
    department of computer science (which is regarded as <a href=\"http://www.topuniversities.com/university-rankings/university-subject-rankings/2016/computer-science-information-systems#sorting=rank+region=+country=+faculty=+stars=false+search=\">one
    of the best in the world</a>) teach the series. The self-paced, self-contained
    Coursera courses match the material in their book, “<a href=\"https://www.amazon.ca/Practical-Programming-Introduction-Computer-Science/dp/1937785459\">Practical
    Programming: An Introduction to Computer Science Using Python 3</a>.” LTP1 covers
    40–50% of the book and LTP2 covers another 40%. The 10–20% not covered is not
    particularly useful for data science, which helped their case for being our pick.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2384/1*EbuAqCfPE5IgGm3N_xPsFg.png\"
    alt=\"Your “Learn to Program” instructors: Jennifer Campbell and Paul Gries.\"><em>Your
    “Learn to Program” instructors: Jennifer Campbell and Paul Gries.</em></p><p>The
    professors kindly and promptly sent me detailed course syllabi upon request, which
    were difficult to find online prior to the course’s official restart in September
    2016.</p><p><a href=\"https://www.class-central.com/mooc/385/coursera-learn-to-program-the-fundamentals\">**Learn
    to Program: The Fundamentals (LTP1)</a>**</p><p>Timeline: 7 weeks</p><p>Estimated
    time commitment: 6–8 hours per week</p><p>This course provides an introduction
    to computer programming intended for people with no programming experience. It
    covers the basics of programming in Python including elementary data types (numeric
    types, strings, lists, dictionaries, and files), control flow, functions, objects,
    methods, fields, and mutability.</p><p><strong>Modules</strong></p><ol><li><p>Installing
    Python, IDLE, mathematical expressions, variables, assignment statement, calling
    and defining functions, syntax, and semantic errors.</p></li><li><p>Strings, input/output,
    function reuse, function design recipe, and docstrings.</p></li><li><p>Booleans,
    import, namespaces, and if statements.</p></li><li><p>For loops and fancy string
    manipulation.</p></li><li><p>While loops, lists, and mutability.</p></li><li><p>For
    loops over indices, parallel lists and strings, and files.</p></li><li><p>Tuples
    and dictionaries.</p></li></ol><p><a href=\"https://www.class-central.com/mooc/390/coursera-learn-to-program-crafting-quality-code\">**Learn
    to Program: Crafting Quality Code (LTP2)</a>**</p><p>Timeline: 5 weeks</p><p>Estimated
    time commitment: 6–8 hours per week</p><p>You know the basics of programming in
    Python: elementary data types (numeric types, strings, lists, dictionaries, and
    files), control flow, functions, objects, methods, fields, and mutability. <strong>You
    need to be good at these in order to succeed in this course.</strong></p><p><em>LTP:
    Crafting Quality Code</em> covers the next steps: designing larger programs, testing
    your code so that you know it works, reading code in order to understand how efficient
    it is, and creating your own types.</p><p><strong>Modules</strong></p><ol><li><p>Designing
    algorithms: how do you decide what to do in a function body? How do you figure
    out what functions to write in the first place?</p></li><li><p>Automated testing:
    doctest and unittest.</p></li><li><p>Analyzing code for speed — details of searching
    and sorting.</p></li><li><p>Creating new types: classes in Python.</p></li><li><p>Functions
    as arguments, default parameter values, and exceptions.</p></li></ol><p>Associate
    professor Gries also provided the following commentary on the course structure:
    “Each module has between about 45 minutes to a bit more than an hour of video.
    There are in-video quiz questions, which will bring the total time spent studying
    the videos to perhaps 2 hours.”</p><p>These videos are generally shorter than
    ten minutes each.</p><p>He continued: “In addition, we have one exercise (a dozen
    or two or so multiple choice and short-answer questions) per module, which should
    take an hour or two. There are three programming assignments in LTP1, each of
    which might take four to eight hours of work. There are two programming assignments
    in LTP2 of similar size.”</p><p>He emphasized that the estimate of 6–8 hours per
    week is a rough guess: “Estimating time spent is incredibly student-dependent,
    so please take my estimates in that context. For example, someone who knows a
    bit of programming, perhaps in another programming language, might take half the
    time of someone completely new to programming. Sometimes someone will get stuck
    on a concept for a couple of hours, while they might breeze through on other concepts
    … That’s one of the reasons the self-paced format is so appealing to us.”</p><p>In
    total, the University of Toronto’s <em>Learn to Program</em> series runs an estimated
    12 weeks at 6–8 hours per week, which is about standard for most online courses
    created by universities. If you prefer to binge-study your MOOCs, that’s 72–96
    hours, which could feasibly be completed in two to three weeks, especially if
    you have a bit of programming experience.</p><h2><strong>Another great Python
    option</strong></h2><p>If you already have some familiarity with programming,
    and don’t mind a syllabus that has a notable skew towards games and interactive
    applications, I would also recommend Rice University’s An Introduction to Interactive
    Programming in Python (<a href=\"https://www.class-central.com/mooc/408/coursera-an-introduction-to-interactive-programming-in-python-part-1\">Part
    1</a> and <a href=\"https://www.class-central.com/mooc/3196/coursera-an-introduction-to-interactive-programming-in-python-part-2\">Part
    2</a>) on Coursera.</p><p>With 6,000+ reviews and the highest weighted average
    rating of 4.93/5 stars, this popular course is noted for its engaging videos,
    challenging quizzes, and enjoyable mini projects. It’s slightly more difficult,
    and focuses less on the fundamentals and more on topics that aren’t applicable
    in data science than our #1 pick.</p><p>These courses are also part of the 7 course
    <a href=\"http://bit.ly/2dBALkb\">Principles in Computing Specialization</a> on
    Coursera.</p><p><img src=\"https://cdn-images-1.medium.com/max/2544/1*Npsg2vAROT48Zc30taFTOQ.png\"
    alt=\"*CodeSkulptor: Browser-based Python programming environment used for Rice
    University’s MOOCs.*\"><strong>CodeSkulptor: Browser-based Python programming
    environment used for Rice University’s MOOCs.</strong></p><p>The materials are
    self-paced and free, and a paid certificate is available. The course must be purchased
    for $79 (USD) for access to graded materials.</p><p><img src=\"https://cdn-images-1.medium.com/max/7350/1*1BqG_deCURHIJnZ8X6OOTg.png\"
    alt=\"Rice University’s [Coursera page](https://www.coursera.org/rice).\"><em>Rice
    University’s <a href=\"https://www.coursera.org/rice\">Coursera page</a>.</em></p><p>The
    condensed course description and full syllabus are as follows:</p><p>“This two-part
    course is designed to help students with very little or no computing background
    learn the basics of building simple interactive applications … To make learning
    Python easy, we have developed a new browser-based programming environment that
    makes developing interactive applications in Python simple. These applications
    will involve windows whose contents are graphical and respond to buttons, the
    keyboard, and the mouse.</p><p>Recommended background: A knowledge of high school
    mathematics is required. <strong>While the class is designed for students with
    no prior programming experience, some beginning programmers have viewed the class
    as being fast-paced</strong>. For students interested in some light preparation
    prior to the start of class, we recommend a self-paced Python learning site such
    as codecademy.com.”</p><h3>Part 1</h3><p>Timeline: 5 weeks</p><p>Estimated time
    commitment: 7–10 hours per week</p><p>*<em>Week 0 — statements, expressions, variables
    *</em> Understand the structure of this class, and explore Python as a calculator.</p><p><strong>Week
    1 — functions, logic, conditionals</strong> Learn the basic constructs of Python
    programming, and create a program that plays a variant of Rock-Paper-Scissors.</p><p><strong>Week
    2 — event-driven programming, local/global variables</strong> Learn the basics
    of event-driven programming, understand the difference between local and global
    variables, and create an interactive program that plays a simple guessing game.</p><p><strong>Week
    3 — canvas, drawing, timers</strong> Create a canvas in Python, learn how to draw
    on the canvas, and create a digital stopwatch.</p><p><strong>Week 4 — lists, keyboard
    input, the basics of modeling motion</strong> Learn the basics of lists in Python,
    model moving objects in Python, and recreate the classic arcade game “Pong.”</p><h3>Part
    2</h3><p>*<em>Week 5 — mouse input, list methods, dictionaries *</em>Read mouse
    input, learn about list methods and dictionaries, and draw images. **Week 6 —
    classes and object-oriented programming **Learn the basics of object-oriented
    programming in Python using classes, and work with tiled images.</p><p>*<em>Week
    7 — basic game physics, sprites *</em>Understand the math of acceleration and
    friction, work with sprites, and add sound to your game.</p><p>*<em>Week 8 — sets
    and animation *</em>Learn about sets in Python, compute collisions between sprites,
    and animate sprites.</p><h2><strong>If you are set on R</strong></h2><p>If you
    are set on an introduction to programming course in R, we recommend DataCamp’s
    series of R courses: <a href=\"https://www.datacamp.com/courses/free-introduction-to-r?tap_a=5644-dce66f&tap_s=93618-a68c98\">Introduction
    to R</a>, <a href=\"https://www.datacamp.com/courses/intermediate-r?tap_a=5644-dce66f&tap_s=93618-a68c98\">Intermediate
    R</a>, <a href=\"https://www.datacamp.com/courses/intermediate-r-practice?tap_a=5644-dce66f&tap_s=93618-a68c98\">Intermediate
    R — Practice</a>, and <a href=\"https://www.datacamp.com/courses/writing-functions-in-r?tap_a=5644-dce66f&tap_s=93618-a68c98\">Writing
    Functions in R</a>. Though the latter three come at a price point of $25/month,
    DataCamp is best in category for covering the programming fundamentals and R-specific
    topics, which is reflected in its average rating of 4.29/5 stars.</p><p><img src=\"https://cdn-images-1.medium.com/max/2400/1*9a8cRhSHSTRJWaTA7GoFIg.png\"
    alt=\"The first three courses in DataCamp’s series of R courses.\"><em>The first
    three courses in DataCamp’s series of R courses.</em></p><p>We believe the best
    approach to learning programming for data science using **<em>online courses</em>
    **is to do it first through Python. Why? There is a lack of MOOC options that
    teach core programming principles and use R as the language of instruction. We
    found six such R courses that fit our testing criteria, compared to twenty-two
    Python-based courses. Most of the R courses didn’t receive great ratings and failed
    to meet most of our subjective testing criteria.</p><p><img src=\"https://cdn-images-1.medium.com/max/2400/1*yBDuo3aUBAyVHuyRgrogIA.png\"
    alt=\"DataCamp’s [website](https://www.datacamp.com?tap_a=5644-dce66f&amp;tap_s=93618-a68c98).\"><em>DataCamp’s
    <a href=\"https://www.datacamp.com?tap_a=5644-dce66f&tap_s=93618-a68c98\">website</a>.</em></p><p>The
    series breakdown is as follows:</p><h3><a href=\"https://www.datacamp.com/courses/free-introduction-to-r?tap_a=5644-dce66f&tap_s=93618-a68c98\">Introduction
    to R</a></h3><p>Estimated time commitment: 4 hours</p><p>Chapters:</p><ol><li><p>Intro
    to basics</p></li><li><p>Vectors</p></li><li><p>Matrices</p></li><li><p>Factors</p></li><li><p>Data
    frames</p></li><li><p>Lists</p></li></ol><h3><a href=\"https://www.datacamp.com/courses/intermediate-r?tap_a=5644-dce66f&tap_s=93618-a68c98\">Intermediate
    R</a></h3><p>Estimated time commitment: 6 hours</p><p>Chapters:</p><ol><li><p>Conditionals
    and control flow</p></li><li><p>Loops</p></li><li><p>Functions</p></li><li><p>The
    apply family</p></li><li><p>Utilities</p></li></ol><h3><a href=\"https://www.datacamp.com/courses/intermediate-r-practice?tap_a=5644-dce66f&tap_s=93618-a68c98\">Intermediate
    R — Practice</a></h3><p>Estimated time commitment: 4 hours</p><p>This follow-up
    course on intermediate R does not cover new programming concepts. Instead, you
    will strengthen your knowledge of the topics in intermediate R with a bunch of
    new and fun exercises.</p><h3><a href=\"https://www.datacamp.com/courses/writing-functions-in-r?tap_a=5644-dce66f&tap_s=93618-a68c98\">Writing
    Functions in R</a></h3><p>Estimated time commitment: 4 hours</p><p>Chapters:</p><ol><li><p>A
    quick refresher</p></li><li><p>When and how you should write a function</p></li><li><p>Functional
    programming</p></li><li><p>Advanced inputs and output</p></li><li><p>Robust functions</p></li></ol><p>Another
    option for R would be to take a Python-based introduction to programming course
    to cover the fundamentals of programming, and then pick up R syntax with an R
    basics course. This is what I did, but I did it with Udacity’s <a href=\"https://www.class-central.com/mooc/1478/udacity-data-analysis-with-r\">Data
    Analysis with R</a>. It worked well for me.</p><p>You can also pick up R with
    our <a href=\"https://medium.freecodecamp.com/if-you-want-to-learn-data-science-take-a-few-of-these-statistics-classes-9bbabab098b9#.q6iqmij06\">top
    recommendation for a statistics class</a>, which teaches the basics of R through
    coding up stats problems.</p><h2>The Competition</h2><p>Our #1 and #2 picks had
    a 4.71 and 4.93 star weighted average rating over 284 and 6,069 reviews, respectively.
    Let’s look at the other alternatives.</p><h3><strong>Python courses (descending
    weighted average ratings)</strong></h3><ul><li><p><a href=\"http://bit.ly/2cDzX0G\">Programming
    for Everybody (Getting Started with Python)</a> and <a href=\"http://bit.ly/2dtcC3b\">Python
    Data Structures</a> (University of Michigan/Coursera): another great option. It
    has a great teacher (Dr. Charles “Chuck” Severance), as well. This series came
    close to usurping our #1 pick because it matched it in rating and in most of the
    subjective criteria. This course is more gentle, however, with reviewers noting
    that it might not prepare you as well as other options. Dr. Chuck himself noted
    that this course is a bridge to more advanced programming courses: “<em>I would
    suggest that after students complete my Python course, if they are interested
    in more programming, that they would take the Rice course.</em>” We also felt
    that the reviews for our #1 pick were more enthusiastic. It has a 4.8-star weighted
    average rating over 4,800+ reviews.</p></li><li><p><a href=\"http://bit.ly/2cRKq7A\">Python
    A-Z: Python For Data Science With Real Exercises</a> (Udemy): it costs money,
    and has a 4.7-star weighted average rating over 52 reviews.</p></li><li><p><a
    href=\"http://bit.ly/2cpD8ZU\">Automate the Boring Stuff with Python Programming</a>
    (Udemy): it costs money, and has a 4.6-star weighted average rating over 2,000+
    reviews.</p></li><li><p><a href=\"http://click.linksynergy.com/fs-bin/click?id=SAyYsTvLiGQ&subid=&offerid=323058.1&type=10&tmpid=14538&RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fthe-ultimate-python-programming-course-beginner-advanced%2F\">Python
    for Beginners: From Noob to Expert in 22+ Hours</a> (Udemy): it costs money, and
    has a 4.6-star weighted average rating over 240 reviews.</p></li><li><p><a href=\"https://www.class-central.com/mooc/1341/edx-6-00-1x-introduction-to-computer-science-and-programming-using-python\">Introduction
    to Computer Science and Programming Using Python</a> (MIT/edX): another good option.
    It has 4.5-star weighted average rating over 240 reviews.</p></li><li><p><a href=\"http://bit.ly/2cIisdK\">Complete
    Python Bootcamp</a> (Udemy): it costs money, and has a 4.5-star weighted average
    rating over 4,700+ reviews.</p></li><li><p>Treehouse’s Python series (9 courses):
    it costs money. It’s a popular option, but there are not enough reviews to make
    a value judgment. It has a 4.5-star weighted average rating over 5 reviews.</p></li><li><p><a
    href=\"https://www.codecademy.com/learn/python\">Python</a> (Codecademy): video-less,
    text editor-based, interactive course. It has a 4.5-star weighted average rating
    over 20 reviews.</p></li><li><p><a href=\"https://www.class-central.com/mooc/5683/edx-dat208x-introduction-to-python-for-data-science\">Introduction
    to Python for Data Science</a> (Microsoft/edX): it has a 4.47-star weighted average
    rating over 360 reviews.</p></li><li><p><a href=\"https://www.class-central.com/certificate/intro-to-programming-nanodegree--nd000\">Intro
    to Programming Nanodegree</a> (Udacity): it has a notable focus on web development.
    It’s a great option for someone who doesn’t know what type of programming they
    want to do. It has a 4.4-star weighted average rating over 730 reviews. Note that
    it contains the first half of Udacity’s popular “<a href=\"https://www.class-central.com/mooc/320/udacity-intro-to-computer-science\">Intro
    to Computer Science</a>” course, which <a href=\"https://medium.com/@venturidb/udacitys-intro-to-computer-science-is-a-great-course-one-fd216788ad63#.l1axkotfy\">doesn’t
    fit our inclusion criteria</a>.</p></li><li><p><a href=\"https://www.class-central.com/mooc/3483/edx-cs005x-cs-for-all-introduction-to-computer-science-and-python-programming\">CS
    For All: Introduction to Computer Science and Python Programming </a>(Harvey Mudd
    College/edX): it has very few reviews, and a 4.33-star weighted average rating
    over 6 reviews.</p></li><li><p><a href=\"https://www.class-central.com/mooc/2013/udacity-programming-foundations-with-python\">Programming
    Foundations with Python </a>(Udacity): doesn’t cover the fundamentals. It has
    a 4-star weighted average rating over 7 reviews.</p></li><li><p><a href=\"https://www.class-central.com/mooc/3695/edx-cse1309x-learn-to-program-using-python\">Learn
    to Program Using Python</a> (edX/University of Texas Arlington): it has a 4-star
    weighted average rating over 14 reviews.</p></li><li><p><a href=\"https://www.class-central.com/mooc/3997/futurelearn-learn-to-code-for-data-analysis\">Learn
    to Code for Data Analysis</a> (The Open University/FutureLearn): it has a 3.5-star
    weighted average rating over 2 reviews.</p></li><li><p><a href=\"https://www.datacamp.com/courses/intro-to-python-for-data-science?tap_a=5644-dce66f&tap_s=93618-a68c98\">DataCamp’s
    Python series</a> (3 courses): it has no reviews on the two major course review
    sites, but DataCamp is a popular option.</p></li><li><p><a href=\"https://www.sololearn.com/Course/Python/\">SoloLearn’s
    Python 3 Tutorial</a>: it has no reviews, but has a comprehensive curriculum and
    a dedicated fanbase.</p></li><li><p><a href=\"https://www.dataquest.io/subject/learning-python\">Dataquest’s
    Python series</a> (3 courses): it has no reviews, but has a comprehensive curriculum
    and an outspoken fanbase.</p></li></ul><h3><strong>R courses (descending weighted
    average ratings)</strong></h3><ul><li><p><a href=\"http://click.linksynergy.com/fs-bin/click?id=SAyYsTvLiGQ&subid=&offerid=323058.1&type=10&tmpid=14538&RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fr-programming%2F\">R
    Programming A-Z™: R For Data Science With Real Exercises! </a>(Udemy): costs money.
    It doesn’t offer as much bang for your buck as our #1 R offering. Ratings are
    similar, considering sample size. It has a 4.7-star weighted average rating over
    785 reviews.</p></li><li><p><a href=\"https://www.class-central.com/mooc/3928/edx-dat204x-introduction-to-r-for-data-science\">Introduction
    to R for Data Science</a> (Microsoft/edX): not as much depth as DataCamp’s offering.
    It has a 4.48-star weighted average rating over 500 reviews.</p></li><li><p><a
    href=\"https://www.class-central.com/mooc/1713/coursera-r-programming\">R Programming</a>
    (Johns Hopkins University/Coursera): doesn’t sufficiently cover the basics of
    programming. Reviewers note that it is difficult, and not in a good way. It has
    a 4.04-star weighted average rating over 900+ reviews, despite a 2.5-star rating
    over 212 reviews on Class Central.</p></li><li><p><a href=\"http://tryr.codeschool.com/\">TryR</a>
    (CodeSchool): it’s not long enough to fit testing criteria, and doesn’t sufficiently
    cover programming fundamentals. It has a 4-star weighted average rating over 260
    reviews.</p></li><li><p><a href=\"https://www.class-central.com/mooc/6038/edx-dat209x-programming-with-r-for-data-science\">Programming
    with R for Data Science</a> (Microsoft/edX): more of an introduction to the R
    language rather than programming. The course site states, “If you have some programming
    experience, and would like to learn more about R, then you’re at the right place.”
    It has a 3-star weighted average rating over 12 reviews.</p></li></ul><h2>Wrapping
    it Up</h2><p>This is the first of a six-piece series that covers the best MOOCs
    for launching yourself into the data science field. It will cover several other
    data science core competencies: <a href=\"https://medium.freecodecamp.com/if-you-want-to-learn-data-science-take-a-few-of-these-statistics-classes-9bbabab098b9#.iwufu4s7f\">statistics</a>,
    the <a href=\"https://medium.freecodecamp.com/i-ranked-all-the-best-data-science-intro-courses-based-on-thousands-of-data-points-db5dc7e3eb8e#.3gu0ybb8o\">data
    science process</a>, data visualization, and machine learning.<a href=\"https://medium.freecodecamp.com/if-you-want-to-learn-data-science-take-a-few-of-these-statistics-classes-9bbabab098b9\"><strong>If
    you want to learn Data Science, take a few of these statistics classes</strong><em>A
    comprehensive guide to online statistics and probability courses.</em>medium.freecodecamp.com</a><a
    href=\"https://medium.freecodecamp.com/i-ranked-all-the-best-data-science-intro-courses-based-on-thousands-of-data-points-db5dc7e3eb8e\"><strong>I
    ranked every Intro to Data Science course on the internet, based on thousands
    of data points</strong><em>A comprehensive guide to online intro to data science
    courses.</em>medium.freecodecamp.com</a></p><p>The final piece will be a summary
    of those courses, and the best MOOCs for other key topics such as data wrangling,
    databases, and even software engineering.</p><p>If you’re looking for a complete
    list of Data Science MOOCs, you can find them on Class Central’s <a href=\"https://www.class-central.com/subject/data-science\">Data
    Science and Big Data</a> subject page.</p><p>If you enjoyed reading this, check
    out some of <a href=\"https://www.class-central.com/\">Class Central</a>’s other
    pieces:<a href=\"https://medium.freecodecamp.com/ivy-league-free-online-courses-a0d7ae675869\"><strong>Here
    are 250 Ivy League courses you can take online right now for free</strong><em>250
    MOOCs from Brown, Columbia, Cornell, Dartmouth, Harvard, Penn, Princeton, and
    Yale.</em>medium.freecodecamp.com</a><a href=\"https://medium.freecodecamp.com/the-data-dont-lie-here-are-the-50-best-free-online-university-courses-of-all-time-b2d9a64edfac\"><strong>The
    50 best free online university courses according to data</strong><em>When I launched
    Class Central back in November 2011, there were around 18 or so free online courses,
    and almost all of…</em>medium.freecodecamp.com</a></p><p>If you have suggestions
    for courses I missed, let me know in the responses!</p><p>If you found this helpful,
    click the \U0001F49A so more people will see it here on Medium.</p><p><em>This
    is a condensed version of the <a href=\"https://www.class-central.com/report/best-programming-courses-data-science/\">original
    article published on Class Central</a>, where course descriptions, syllabi, and
    multiple reviews are included.</em></p>"
  :author: freeCodeCamp.org
  :topic: programming
- :url: https://medium.com/@FEhrsam/blockchain-governance-programming-our-future-c3bfe30f2d74?source=search_post
  :title: 'Blockchain Governance: Programming Our Future'
  :content: '<p>This post describes why blockchain governance design is one of the
    most important problems out there, its critical components, current approaches,
    potential future approaches, and concludes with suggestions for the community.</p><h3>Why
    Blockchain Governance Matters</h3><p>As with organisms, the most successful blockchains
    will be those that can best adapt to their environments. Assuming these systems
    need to evolve to survive, <a href="https://en.wikipedia.org/wiki/Butterfly_effect">initial
    design</a> is important, but** over a long enough timeline, the mechanisms for
    change are <a href="https://en.wikipedia.org/wiki/Natural_selection">most</a>
    <a href="https://briankeng.com/2015/07/a-little-bit-of-slope/">important</a>.**</p><p>As
    a result, I believe <strong>governance is the most vital problem in the space.
    **Other fundamental problems like scalability are <a href="https://medium.com/@FEhrsam/funding-the-evolution-of-blockchains-87d160988481">arguably
    best approached</a> by using governance to set the right incentives for people
    to solve them.</strong> **Yet little research has gone into governance and it
    feels poorly understood.</p><p><img src="https://cdn-images-1.medium.com/max/2724/1*N7VAEAH8-_Sqxmy8_0bgNQ.png"
    alt="Evolutionary tree of life, from [Leonard Eisenberg](https://www.evogeneao.com/explore/tree-of-life-explorer)."><em>Evolutionary
    tree of life, from <a href="https://www.evogeneao.com/explore/tree-of-life-explorer">Leonard
    Eisenberg</a>.</em></p><p>Satoshi showed us the immense power of releasing a blockchain-based
    incentive structure into the world. A 9 page <a href="https://bitcoin.org/bitcoin.pdf">whitepaper</a>
    spawned a $150bn cryptocurrency, a computer network <a href="https://www.reddit.com/r/Bitcoin/comments/5kfuxk/how_powerful_is_the_bitcoin_network/">bigger
    than the top 500 supercomputers by 10,000x</a>, and a diverse ecosystem of developers,
    users, and companies. This was arguably one of the highest leverage actions in
    human history. It showed the power of blockchains as networks that can connect
    everyone and bootstrap themselves into existence if well constructed.</p><p>We
    are increasingly living in digital networks, spending an average of <a href="http://www.kpcb.com/internet-trends">11
    hours a day on screens</a> in the US with over half of that on internet connected
    devices, growing 11% each year. However, these networks are highly centralized
    (Facebook, Google, Apple, Twitter) and <a href="http://fortune.com/2017/01/04/google-facebook-ad-industry/">continue
    to consolidate</a>. In the current model, all of the profit and power of a network
    is within one company, and you’re either inside or you’re outside. It’s important
    the networks we live in serve our best interests. With blockchains emerging as
    the new global infrastructure, <strong>we have the opportunity to create vastly
    different power structures and program the future we want for ourselves.</strong></p><p>For
    these reasons, I believe <strong>blockchain governance system design is one of
    the highest leverage activities known.</strong></p><h3>A Cambrian Explosion</h3><p>It’s
    rare a new government or central bank gets created, and even more rare to see
    experimentation with a new form of governance when it does.</p><p>Blockchains
    are unique because they 1) allow thousands of governance systems and monetary
    policies to be tried at the speed of software with 2) in some cases, much lower
    consequences of failure. As a result, *<em>there will be a <a href="https://en.wikipedia.org/wiki/Cambrian_explosion">Cambrian
    explosion</a> of economic and governance designs *</em>where many approaches will
    be tried in parallel at hyperspeed. To be clear, I am including economic design
    and monetary policy (said another way, incentive structure) in governance because,
    like other aspects of the system, they can be modified as time passes.</p><p><img
    src="https://cdn-images-1.medium.com/max/2374/1*SDRcq6gCVc4TcI5YUnrY3g.jpeg" alt=""></p><p>Many
    of these attempts will be spectacular failures. With millions of algorithmic central
    banks we will have millions of crypto <a href="https://en.wikipedia.org/wiki/Black_Wednesday">George
    Soroses trying to break the Bank of England</a>. Through this process, <strong>blockchains
    may teach us more about governance in the next 10 years than we have learned from
    the “real world” in the last 100 years.</strong></p><h3>Two Critical Components
    of Governance</h3><p><strong>1. Incentives</strong></p><p>Each group in the system
    has their own incentives.** **Those incentives are not always 100% aligned with
    all other groups in the system. Groups will propose changes over time which are
    <a href="https://www.monticello.org/site/jefferson/natural-progress-things-spurious-quotation">advantageous
    for them</a>. Organisms are biased towards their own survival. This commonly manifests
    in changes to the reward structure, monetary policy, or balances of power.</p><p><strong>2.
    Mechanisms for coordination</strong></p><p>Since it’s unlikely all groups have
    100% incentive alignment at all times, the ability for each group to coordinate
    around their common incentives is critical for them to affect change. If one group
    can coordinate better than another it creates power imbalances in their favor.</p><p>In
    practice, a major factor is how much coordination can be done on-chain vs. off-chain,
    where on-chain coordination makes coordinating easier. In some new blockchains,
    on-chain coordination allows the rules or even the ledger history itself to be
    changed.</p><h3>Current Approaches</h3><p>What follows is a dissection of the
    benefits and drawbacks of today’s two largest blockchains: Bitcoin and Ethereum.
    We are currently in the primordial ooze phase of blockchain governance. Systems
    are simple and little has been tried.</p><h3>Bitcoin</h3><p>Bitcoin was the first
    successful attempt to create a standalone blockchain. Let’s examine it as a base:</p><p><strong>1.
    Incentives</strong></p><ul><li><p>Developers: increase value of existing token
    holdings, social recognition, maintain power for control over future direction.</p></li><li><p>Miners:
    increase value of existing token holdings, expected future block rewards, and
    expected future transactions fees.</p></li><li><p>Users: increase value of existing
    token holdings, increase functional utility (e.g. store of value, uncensorable
    transactions, file storage).</p></li></ul><p><strong>2. Mechanisms for coordination</strong></p><p>Mostly
    off-chain. Developers coordinate through the Bitcoin Improvement Proposals (<a
    href="https://en.bitcoin.it/wiki/Bitcoin_Improvement_Proposals">BIPs</a>) process
    and a <a href="https://lists.ozlabs.org/pipermail/bitcoin-dev-moderation/">mailing
    list</a>. Miners can coordinate on-chain in the sense that they are creating the
    chain itself.</p><p><strong>Resulting system</strong></p><p>The <strong>checks
    and balances system created is somewhat analogous to the US government</strong>
    and has a number of benefits. Similar to the Senate submitting new bills, developers
    submit pull requests. Similar to the judiciary, miners decide whether or not to
    actually adopt the laws in practice. Similar to the executive branch, the nodes
    of the network can veto by not running a version which aligns with what the miners
    are running. And similar to citizens, the users can revolt. Finally, economic
    incentives dictate that it is in everyone’s best interest to maintain trust in
    the system. For example: if miners alienated all the users, the tokens would decrease
    in value and they would go out of business. <strong>As the first system of its
    kind, it’s incredible that Bitcoin is still going strong.</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2986/1*GM32YcRx7C_XgheMWld4RA.png" alt="Bitcoin
    as branches of US Government. Image from [Buck Perley](https://medium.com/@BuckPerley/crypto-governance-f1318affbbe0)."><em>Bitcoin
    as branches of US Government. Image from <a href="https://medium.com/@BuckPerley/crypto-governance-f1318affbbe0">Buck
    Perley</a>.</em></p><p>There are risks to the system caused by asymmetries in
    incentives. Miners push for changes which increase future cumulative transaction
    fees, while developers don’t care as long as the value of Bitcoin keeps going
    up. Developers’ direct economic incentives are weak. New developers have little
    incentive to work on Bitcoin because there is no direct way to earn money by doing
    it. As a result, they often work on new projects — either by creating Ethereum
    tokens, entirely new chains, or companies. No new blood entering increases the
    perception and reality of early developers as the most knowledgable and experienced.
    This <a href="https://medium.com/@BuckPerley/crypto-governance-f1318affbbe0">results</a>
    in <strong>a self-reinforcing cycle of more power becoming concentrated in a small
    group of early core developers, slower technological advancement, and conservatism</strong>.
    Developers are at risk of being bribed since they have a lot of power but weak
    economic incentives. Some <a href="http://chaincode.com/">early holders</a> and
    <a href="https://bitcoinmagazine.com/articles/gavin-andresen-core-developers-join-mits-digital-currency-initiative-1429743725/">universities</a>
    have sponsored developers, but with limited impact thus far.</p><p>Similarly,
    asymmetries in ability to coordinate give miners disproportionate power. Communication
    amongst miners is easier because they are a small and concentrated group. Since
    mining is a business with economies of scale, we’d expect <strong>a continued
    trend towards <a href="https://en.wikipedia.org/wiki/Natural_monopoly">natural
    monopoly</a> in mining</strong> and even greater coordination advantage. As a
    reference point, <a href="https://pbs.twimg.com/media/CVhkEhtUAAAl0LH.jpg">95%
    of mining power was able to sit on one small stage</a> 2 years ago. Miners can
    also gain disproportionate power by bribing developers or hiring their own. Finally,
    the checks and balances system of Bitcoin relies on some level of transparency:
    for example, users becoming aware of a single miner gaining more than 51% of the
    hashing power or developers having some level of independence. And a miner who
    was able to gain &gt;51% of hashing power would be incented to remain anonymous.
    Rather than sparking a specific catastrophic event, this would cause an unknowing
    descent into a centralized world of control through censorship and asset freezing.</p><h3>Ethereum</h3><p>The
    systemic incentives and mechanisms of coordination in Ethereum are similar to
    Bitcoin at the moment.</p><p>Dynamics will change as Ethereum <a href="https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/">moves
    to proof of stake</a>. The power of miners will be replaced by anyone who holds
    a sufficient amount of Ether to run a virtual miner (a “validator”). This is especially
    true as solutions like <a href="https://1protocol.com">1protocol</a> will allow
    even the smallest Ether holder to participate, <strong>flattening the distinction
    between a miner and a user, and potentially reducing the biggest centralization
    risk in Bitcoin.</strong></p><p>The incentives of core developers remain the same.
    Coordination around challenging issues has been swifter and smoother than in Bitcoin
    to date. This is due to 1) a culture more open to change because <a href="https://coinjournal.net/vitalik-buterin-early-versions-ethereum-supposed-launch-bitcoin/">Ethereum
    was created as a reaction to what could not be done in a rigid Bitcoin environment</a>
    and 2) direction from Vitalik who is widely trusted in the community.</p><p>Current
    weaknesses in the model include 1) over reliance on its creator (Vitalik) and
    2) like Bitcoin, limited ways to incentivize core development, forcing more projects
    to create tokens to support themselves. Vitalik is <a href="https://twitter.com/VitalikButerin/status/928172344631115776">making
    a conscious effort to step back</a>, which will be a delicate process.</p><h3>New
    Chains Experimenting with On-Chain Governance</h3><p>New blockchains are making
    it much easier to coordinate by enabling on-chain governance.</p><p><strong>Tezos</strong></p><p>In
    <a href="https://www.tezos.com/">Tezos</a>, <a href="https://www.quora.com/How-is-Tezos-different-from-Ethereum?share=d5c26090&srid=OAAh">anyone
    can submit a change to the governance structure</a> in the form of a code update.
    An on-chain vote occurs, and if passed, the update makes its way on to a test
    network. After a period of time on the test network, a confirmation vote occurs,
    at which point the change goes live on the main network. They call this concept
    a “self-amending ledger”.</p><p>Such a system is interesting because <strong>it
    shifts power towards users and away from the more centralized group of developers
    and miners.</strong> On the developer side, anyone can submit a change, and most
    importantly, everyone has an economic incentive to do it. Contributions are rewarded
    by the community with newly minted tokens through <a href="https://medium.com/@FEhrsam/funding-the-evolution-of-blockchains-87d160988481">inflation
    funding</a>. This shifts from the current Bitcoin and Ethereum dynamics where
    a new developer has little incentive to evolve the protocol, thus power tends
    to concentrate amongst the existing developers, to one where everyone has equal
    earning power.</p><p>This also enables users to directly coordinate on-chain,
    dramatically increasing their power and reducing the power of miners compared
    to a system like Bitcoin or Ethereum.</p><p><img src="https://cdn-images-1.medium.com/max/2130/1*sKjsh_IrxHvST_aZbaGk_g.png"
    alt=""></p><p><strong>DFINITY</strong></p><p>One step further would be a system
    which allows on-chain votes to the rules of the system like Tezos <em>and</em>
    <a href="https://medium.com/dfinity/the-dfinity-blockchain-nervous-system-a5dd1783288e">direct,
    retroactive changes to the ledger itself</a>. In other words, if something happens
    that tokenholders do not like (ex: a hack, a marketplace selling drugs), they
    can <strong>roll back or edit the ledger in addition to the rules of governance
    themselves</strong>. <a href="https://dfinity.org">DFINITY</a>, an in-development
    blockchain, is taking this approach. Proponents of this system point to events
    like hard fork caused by The DAO hack and the recent <a href="https://paritytech.io/blog/security-alert.html">$150m
    Parity multi-sig bug</a> and suggest such events would be much smoother if everyone
    could just vote to undo them. On the flip side, this system allows direct censorship
    and peoples’ tokens to be forcibly taken. As we saw with Ethereum’s hard fork
    to revert The DAO hack, this is possible with existing blockchains, but requires
    higher friction through off-chain coordination and hard forking instead of on-chain
    coordination with no forking.</p><p>DFINITY is maximally flexible. Depending on
    what parts of the protocol Tezos allows to be changed, it is possible protocol
    changes effectively let you re-write the ledger as in DFINITY. As a result, it’s
    likely these systems will have different voting thresholds for different changes,
    perhaps requiring a supermajority for some things and a simple majority for others.</p><h3>The
    Double-Edged Sword of On-Chain Governance</h3><p>On-chain governance is a double
    edged sword. On the upside it helps make sure a process is consistently followed
    which can increase coordination and fairness. It also allows for quicker decision
    making. On the downside it’s risky because the metasystem becomes harder to change
    once instituted. Like anything put directly into code, *<em>it can be exploited
    or <a href="https://en.wikipedia.org/wiki/Nomic">gamed</a> more quickly and easily
    if flawed. *</em>Vlad Zamfir, a principal architect of Ethereum’s proof of stake,
    <a href="https://www.youtube.com/watch?v=9RtSod8EXn4&feature=youtu.be&t=2h33m39s">feels</a>
    “the risks far outweigh the rewards” and “represent an extremely risky proposition”.</p><p>For
    some use cases, tending towards being static may be good. This may be especially
    true for store of value. <strong>Perhaps lower level protocols should lean toward
    stasis and conservatism — “measure twice and cut once” — while higher level protocols
    should be more flexible — “move fast and break things”.</strong> In the words
    of Calvin Coolidge: <a href="https://coolidgefoundation.org/blog/kill-bad-bills/">“it
    is much more important to kill bad bills than to pass good ones”</a>. Like established
    companies, some of the more established protocols may be able to watch what new
    protocols do and adopt techniques which seem to be working. This seems especially
    true of Ethereum which has shown a willingness to hard fork and the ability to
    maintain network value through them. Consequently, I’d expect to see the most
    innovation in the next few years from Ethereum tokens and entirely new chains.</p><p>It’s
    probable we haven’t found the best governance systems yet, which means a more
    general system which allows many different methods to be tried is valuable, if
    for nothing more than <a href="https://en.wikipedia.org/wiki/Nomic">learning</a>.
    <a href="https://en.m.wikipedia.org/wiki/Automata_theory">A more complex system
    can simulate less complex ones, but the reverse is generally hard.</a></p><p>The
    most interesting learnings will come from exploring the balance of mutability
    so systems can evolve and immutability for stability.</p><h3>Future Approaches</h3><p>Next
    we’ll talk about future governance strategies with potential which have yet to
    be tried.</p><p><strong>Futarchy</strong></p><p>In <a href="https://en.wikipedia.org/wiki/Futarchy">futarchy</a>,
    <strong>society defines its values and then prediction markets are used to decide
    what actions will maximize those values</strong>. Said another <a href="https://blog.ethereum.org/2014/08/21/introduction-futarchy/">way</a>:
    <a href="http://mason.gmu.edu/%7Erhanson/futarchy.html">“vote on values, bet on
    beliefs”</a>. It was <a href="http://mason.gmu.edu/%7Erhanson/futarchy2000.pdf">originally
    proposed</a> in 2000 by <a href="http://www.overcomingbias.com/bio">Robin Hanson</a>,
    an economics professor at George Mason University.</p><p><a href="https://en.wikipedia.org/wiki/Ralph_Merkle">Ralph
    Merkle</a> has a particularly eye-opening proposal for a blockchain implementation
    of futarchy in his paper called <a href="http://merkle.com/papers/DAOdemocracyDraft.pdf">DAOs,
    Democracy, and Governance</a>. In his proposal, every citizen is polled once a
    year and asked the question “how satisfied were you this year on a scale of 0
    to 1?”. Averaged together, these give an overall societal welfare score. A prediction
    market on this welfare score is developed for every year for the next 100 years,
    where traders can speculate on the welfare score for any year into the future.
    An overall future welfare score is then created by averaging the scores for the
    next 100 years, weighting earlier years more than future years. When a new bill
    is introduced, there is a 1 week period where markets speculate on whether the
    overall welfare score will go up or down if the bill is passed. If the bill is
    passed, the traders who bet on the overall welfare going up now own the overall
    welfare contracts they bet on. They will make money if they are right and lose
    money if they are wrong.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*ckQP_t0rBlgVJMIvK_jmtg.png"
    alt="Example of futarchy for deciding whether or not to fire a CEO where the value
    to maximize is revenue. Image from [ConsenSys](https://medium.com/@ConsenSys/markets-for-the-future-c73fa73fe35d)."><em>Example
    of futarchy for deciding whether or not to fire a CEO where the value to maximize
    is revenue. Image from <a href="https://medium.com/@ConsenSys/markets-for-the-future-c73fa73fe35d">ConsenSys</a>.</em></p><p>This
    system could be incredibly powerful for a few reasons. First, voting becomes extremely
    simple. People don’t need to vote, they are just asked about one thing once a
    year: their satisfaction. Second, people do not need to develop extensive knowledge
    of candidates or bills. This is important because candidates are often persuasive
    and bills are complex to the point where it is hard for a domain-specific researcher
    to understand their implications, let alone an elected official or an average
    citizen. Instead, we rely on the wisdom of the markets. Like trading in stocks,
    only people who are extremely well informed on a topic will bet on it — otherwise
    they are likely to lose money to others who are better informed. Finally, it is
    a system where <strong>market incentives are aligned with societal values.</strong></p><p>In
    futarchy the devil is in the implementation details. <a href="http://www.overcomingbias.com/2016/07/merkles-futarchy.html">Hard
    problems include</a> the governance metaproblem of how to decide on the societal
    value(s) to maximize in the first place and making sure people aren’t incented
    to <a href="https://en.wikipedia.org/wiki/Gibbard%E2%80%93Satterthwaite_theorem">tactically
    vote</a> an extreme satisfaction score of 0 or 1 to swing policy.</p><p><strong>Setting
    goal functions is both important and tricky, as there are always unforeseen consequences.</strong>
    For example, in the case of capitalism, this can manifest in rising wealth inequality
    and environmental externalities. In the case of artificial intelligence, this
    can manifest in <a href="https://wiki.lesswrong.com/wiki/Wireheading">wireheading</a>
    or rapidly maximizing something at the unexpected expense of other things, commonly
    illustrated through the example of a <a href="https://wiki.lesswrong.com/wiki/Paperclip_maximizer">paperclip
    maximizer</a> which destroys everything to build as many paperclips as possible.
    These are serious concerns, as I believe <a href="https://twitter.com/FEhrsam/status/912388216396824576">the
    most powerful AIs will be bootstrapped into existence on the blockchain</a> by
    using tokenized incentives for everyone to feed them the best data and algorithms.
    If this is true, blockchain governance is the largest determinant of our future
    trajectory as a species. More on this in a future post.</p><p><strong>Liquid Democracy</strong></p><p><a
    href="https://en.wikipedia.org/wiki/Delegative_democracy">Liquid democracy</a>
    is system where everyone has the ability to vote themselves, to delegate their
    vote to someone else, and to remove the delegation of their vote at any time.
    In the U.S. we do not have a liquid democracy because we cannot vote on many bills
    directly (our representatives do that for us) and once we elect a representative,
    they are typically in office for 4 years.</p><p>This seems like it will be used
    in proof of stake blockchains given its simplicity.</p><p><strong>Quadratic Voting</strong></p><p><a
    href="http://ericposner.com/quadratic-voting/">Quadratic voting</a> is a system
    of buying votes, where each additional vote costs twice as much as the one before
    it. In other words, money buys votes, but with strong diminishing returns. <a
    href="https://www.reddit.com/r/ethereum/comments/4rtpmm/on_coinlock_voting_futarchy_and_optimal/">Vitalik
    proposed</a> a variant on this he calls “quadratic coin lock voting” where N coins
    let you make N * k votes by locking up those coins for a time period of k². This
    is a nice modification because it aligns incentives over time: more voting power
    requires living with your decisions for longer. In a tokenized world with little
    friction of entering or leaving a community, this is especially important.</p><h3>Voting
    with People or Money?</h3><p>A major problem with one person = one vote systems
    on the blockchain is their susceptibility to sybil attacks. Near zero cost to
    create infinite accounts means it’s easy to generate infinite votes. This is why
    the default model in proof of stake and Ethereum-based token governance is one
    token = one vote.</p><p>Blockchain-based identity systems like <a href="https://www.civic.com/">Civic</a>
    can help enable one person = one vote systems. However, anonymity is likely to
    be preserved in most cryptocurrencies. Identity gives each coin its own unique
    history, which can be subjectively judged to be more or less clean than that of
    another coin, causing <a href="https://en.wikipedia.org/wiki/Fungibility">fungibility</a>
    to break down. One potential approach is a balance between identity and money:
    a fully verified identity gets 100% of the voting power of their money, a partially
    verified identity gets 50%, and an entirely anonymous identity gets 25%.</p><p>As
    mentioned in quadratic voting, other mechanisms which weight community members
    differently independent of real-world identity are likely to evolve. For example,
    a new token holder may have diminished voting power until they have been a member
    of the community for a while, similar to not being able to vote until you are
    a full citizen of a country.</p><p>In any case, <strong>today’s world would look
    a lot different if modern governments ran on voting with money, so this change
    in defaults is not to be taken lightly.</strong></p><p>Finally,** reputation within
    a token community will be critical.** This is already shown through indirect means,
    where Vitalik’s suggestions carry a lot of weight in the Ethereum community. In
    a liquid democracy system reputation manifests in the number of votes delegated
    to a particular person. Someone with high reputation and no money could have 10
    million Ether delegated to them and have tremendous governing power.</p><h3>Other
    Tools</h3><p>Simple <strong>off-chain futures markets have already shown themselves
    as a powerful tool</strong>. In the recently proposed and contentious Bitcoin
    <a href="https://www.coindesk.com/explainer-what-is-segwit2x-and-what-does-it-mean-for-bitcoin/">SegWit2x</a>
    fork, futures markets speculated on the expected value of SegWit2x vs. non-SegWit2x
    chains. The markets consistently valued a SegWit2x chain <a href="https://www.reddit.com/r/Bitcoin/comments/75xncv/2x_futures_prices_drops_below_02_btc/">at
    less than 20%</a> of a non-SegWit2x chain for 3 weeks. Supporters of SegWit2x
    then <a href="https://lists.linuxfoundation.org/pipermail/bitcoin-segwit2x/2017-November/000685.html">called
    off</a> their forking efforts because they felt they had “not built sufficient
    consensus”. While it’s hard to know exactly what caused them to reach this conclusion,
    it seems like futures markets were a strong indicator of lack of support.</p><p><img
    src="https://cdn-images-1.medium.com/max/4304/1*KSPwq45dIQJxAekdSwCakg.png" alt="Futures
    markets on Bitcoin’s SegWit2x"><em>Futures markets on Bitcoin’s SegWit2x</em></p><p>Other
    tools are being built for governance and standardization at different layers.
    <a href="https://zeppelinos.org/">ZeppelinOS</a> is <a href="https://github.com/OpenZeppelin/zeppelin-solidity">a
    series of basic libraries</a> which are commonly being used as the base of Ethereum
    token systems, covering things like token sale mechanics, token vesting, and access
    controls to the treasury of the project. <a href="http://aragon.one">Aragon</a>
    is trying to create standard implementations of these systems in the same way
    Delaware C corporations implement corporations in a standard way.</p><h3>Forking</h3><p>It’s
    worth noting that forking is always an option. Applying Albert Hirschman’s classic
    <a href="https://en.wikipedia.org/wiki/Exit,_Voice,_and_Loyalty">voice or exit</a>
    paradigm for affecting change in a system, <strong>voice is governance, weak exit
    is selling your coins, and strong exit is forking.</strong></p><p>We’ve seen many
    examples of forking so far, and this is great! In physical nations forking is
    nearly impossible. This was also the case in software until blockchains emerged.
    They make it easy to take all the code and state of a system and try a new path.
    In the Web 2.0 world,** forking is the equivalent of Facebook allowing any competitor
    to take their entire database and codebase to a competitor. **Don’t like how Facebook
    is operating it’s newsfeed? Create a fork with all the same code, social connections,
    and photos.</p><p><strong>The ability to fork significantly reduces lock-in and
    increases diversity</strong>, allowing many <a href="https://medium.com/@FEhrsam/accelerating-evolution-through-forking-6b0bba85a2ba">more
    paths</a> to be tried than we would ever see in modern governments, central banks,
    or Web 2.0 companies. As in <a href="https://www.investopedia.com/terms/s/spinoff.asp">corporate
    spinoffs</a>, forking is also beneficial when two niche chains can more effectively
    serve distinct needs than one chain ineffectively serving both sets of needs.</p><p>However,
    it is still valuable to avoid hard forks when possible. A <a href="https://bitcoin.stackexchange.com/questions/9173/what-is-a-hard-fork">hard
    fork</a> is a non-backwards compatible change. Downsides of hard forks include:</p><ol><li><p>Reducing
    network effects. Not everyone is speaking the same language anymore.</p></li><li><p>Creating
    work. Anyone who was using the forked protocol probably had their code broken.
    In a world that is increasingly interconnected through transparent and trustless
    code execution, these effects compound.</p></li><li><p>Reducing trust. Now that
    we’ve had a breaking change, those previously referencing the protocol must now
    go outside the blockchain and somehow figure out what the “right” new version
    is to use.</p></li></ol><p>Because of the dramatically reduced friction for exit,
    the need for effective voice (governance) is more critical than ever. It is trivial
    to fork a blockchain and copy all of its code and state. So <strong>the value
    isn’t in the chain of data, it’s in the community and social consensus around
    a chain</strong>. Governance is what keeps communities together and, in turn,
    gives a token value.</p><h3>Community Suggestions</h3><p><strong>For users:</strong>
    Spend more time looking at the governance system of your blockchain, less time
    on the issue of the day. <strong>Current events are just a manifestation of the
    larger system that caused them.</strong> So while it’s easy to get riled up by
    the news, the highest leverage point for change comes from designing or changing
    the system, not arguing about its current manifestations.</p><p><strong>For developers:</strong>
    Try <a href="https://medium.com/@FEhrsam/funding-the-evolution-of-blockchains-87d160988481">inflation
    funding</a>. And if you are creating a new token using a simple 1 token = 1 vote
    system, <strong>consider quadratic coin lock voting</strong> as a low risk/high
    return alternative.</p><p><strong>For everyone:</strong> Watch and learn from
    the experiments that will be run on the new on-chain governance systems.</p><h3>Conclusion</h3><p>Like
    organisms, the ability of a blockchain to succeed over time is based on its ability
    to evolve. This evolution will bring about many decisions on direction, and it
    is the governance around those decisions which most strongly determine the outcome
    of the system. <strong>If programming in the system is important, the <a href="https://en.wikipedia.org/wiki/Metaprogramming">metaprogramming</a>
    of the system itself is most important.</strong></p><p><strong>I believe governance
    should be the primary focus of investors in the space.</strong> The fundamentals
    of cryptoeconomics and overarching governance schemas of these networks are critical
    to survival, under-appreciated, and poorly understood. Investors can add significant
    value through the luxury of being able to observe and learn from multiple projects
    at one time.** **They should be active in the governance of the tokens they participate
    in and transparent with a community if they feel the design of the system can
    be improved.</p><p><strong>We are birthing into existence systems which transcend
    us.</strong> In the same way democracy and capitalism as systems determine so
    much of the emergent behavior around us, blockchains will do the same with even
    greater reach. These systems are organisms which take on <a href="http://slatestarcodex.com/2014/07/30/meditations-on-moloch/">lives
    of their own</a> and are more concerned with <a href="https://en.wikipedia.org/wiki/Instrumental_convergence">perpetuating
    themselves</a> than the individuals which comprise them. As technology stretches
    these systems to their limits, the implications become more pronounced. So we’d
    be wise to carefully consider the structure of these systems while we can. Like
    any new powerful technology, <strong>blockchains are a tool that can go in many
    different directions. Used well, we can create a world with greater prosperity
    and freedom. Used poorly, we can create systems which lead us to places we <a
    href="https://www.youtube.com/watch?v=ST86JM1RPl0">didn’t intend to go</a>.</strong></p><p><em>Thanks
    to <a href="https://twitter.com/VitalikButerin">Vitalik Buterin</a>, <a href="https://twitter.com/BuckPerley">Buck
    Perley</a>, <a href="https://medium.com/@simondlr/vlad-zamfirs-thoughts-around-softer-topics-around-blockchains-9fc354462a2d">Vlad
    Zamfir</a>, <a href="https://blog.aragon.one/team-interviews-luke-aragons-research-lead-5baf553d89bd">Luke
    Duncan</a>, <a href="https://twitter.com/brian_armstrong">Brian Armstrong</a>,
    <a href="http://www.merkle.com">Ralph Merkle</a>, <a href="https://epicenter.tv/episode/136/">Arthur
    Brietman</a>, <a href="https://twitter.com/juliagalef">Julia Galef</a>,</em> <a
    href="https://twitter.com/dominic_w">*Dominic Williams</a>, <a href="https://twitter.com/licuende">Luis
    Iván Cuende</a>, <a href="https://twitter.com/matthuang">Matt Huang</a>, <a href="https://twitter.com/demibrener">Demian
    Brenier</a>,* <a href="https://twitter.com/AndreaCoravos">*Andy Coravos</a>, <a
    href="https://twitter.com/cburniske">Chris Burniske</a>, <a href="https://engineering.coinbase.com/@jimpo">Jim
    Posen</a>, <a href="https://twitter.com/balajis">Balaji Srinivasan</a>, <a href="https://www.linkedin.com/in/scottpnolan/">Scott
    Nolan</a>, <a href="http://eladgil.com/">Elad Gil</a>, <a href="https://twitter.com/cdixon">Chris
    Dixon</a>, <a href="https://twitter.com/maksim_s">Maksim Stepanenko</a>, <a href="http://continuations.com/">Albert
    Wenger</a>, <a href="https://twitter.com/simondlr">Simon de la Rouviere</a>,*
    <a href="http://madeby.sophiacui.com/">*Sophia Cui</a>,* <a href="http://lucas.metastable.capital">*Lucas
    Ryan</a>, <a href="https://www.linkedin.com/in/jaygraber/">Jay Graber</a>, and
    <a href="https://twitter.com/whyrusleeping">Jeromy Johnson</a> for conversations
    and ideas which contributed to this post.*</p>'
  :author: Fred Ehrsam
  :topic: programming
- :url: https://medium.com/free-code-camp/how-to-choose-a-laptop-for-programming-a9e36f8b4cfe?source=search_post
  :title: How to choose a laptop for programming
  :content: '<p>Choosing the right laptop for programming can be a tough process.</p><p>It’s
    easy to get confused while researching the various options. There are many different
    laptop models out there, each with a different set of trade-offs.</p><p>You can
    write code on most laptops. Yet, your productivity will improve if you use a machine
    suited to the type of tasks that you perform.</p><p>There are different types
    of development, and various tools are required with each specialization. So, there
    is no one-size-fits-all approach to buying a development machine.</p><p>I made
    the following assumptions in this article:</p><ul><li><p>You are a web developer</p></li><li><p>Your
    laptop is your primary development machine</p></li></ul><p>Here are some considerations
    before purchasing your next laptop.</p><h2>Mobility</h2><p>Laptops come in all
    shapes and sizes. You need to figure out how portable you want your laptop to
    be.</p><p>If you do not need to carry your laptop around often, you might want
    to consider a 15-inch laptop. These will usually have better specs and more screen
    estate for multitasking.</p><p>If you work in different locations or travel a
    lot, a 13 or 14-inch laptop may be best for you. They are lighter and provide
    longer battery life.</p><p>Unless you’re buying a 2-in-1 laptop, a touchscreen
    does not provide enough benefits to justify the extra cost. I’d suggest you avoid
    the touchscreen.</p><p><img src="https://cdn-images-1.medium.com/max/10368/1*D0LFlfD-4K4eBiS5BiRU5g.jpeg"
    alt=""></p><h2>Display</h2><p>A laptop’s screen one of its most important features,
    especially for programmers. Developing applications involves staring at the screen
    for long periods. You need to pay close attention to the details.</p><p>Most budget
    laptops ship with a 1366 x 768 display, which I consider to be mediocre at best.
    The display doesn’t have enough screen estate for multitasking. Also, the text
    isn’t sharp enough for you to have a comfortable reading experience.</p><p>A 4k
    display is overkill for a laptop, especially when you consider the added costs
    and the battery drain that you will encounter.</p><p>Whatever you do, don’t buy
    a laptop with less than a Full HD 1920 x 1080 (1080p) display. If you have to
    pay a little extra to get 1080p, do it.</p><p>Also make sure the display has good
    viewing angles; your laptop’s screen should not double as a mirror!</p><h2>Processing
    Power (CPU)</h2><p>Your laptop’s CPU has a huge influence on performance so you
    can’t afford to skimp on this one. There are many different types of processors
    with different specifications. Make sure to consider these specs. Some of the
    most important are cache size, number of cores, frequency, and thermal design
    power.</p><p>In general, a nice Intel core i5 or i7 processor with a frequency
    of 3GHz or more should suffice for most people.</p><h2>Memory (RAM)</h2><p>I don’t
    think any serious programming can be done on a laptop with less than 4GB of RAM.
    My smallest RAM recommendation is 8GB. Even that is becoming barely enough with
    the advent of Electron apps, which love to consume large amounts of RAM. If you
    have extra cash lying around, invest in 16GB of RAM.</p><h2>Storage type and capacity</h2><p>Getting
    an SSD (Solid State Drive) should be near the top of your priorities. This will
    give you significant performance improvements over a standard hard drive. Every
    operation will be a lot faster with an SSD: including booting up the OS, compiling
    code, launching apps, and loading projects.</p><p>A 256GB SSD should be the baseline.
    If you have more money, a 512GB or 1TB SSD is better. If cost is a factor, opt
    for a smaller SSD, where your Operating System will live alongside your apps and
    frequently accessed documents (such as project files). Your remaining stuff, such
    as music or videos, can rest in a larger external hard drive.</p><h2>Keyboard</h2><p><img
    src="https://cdn-images-1.medium.com/max/2560/1*nSi0xeq1aBw1IPc--NqANw.jpeg" alt=""></p><p>You
    can’t afford to compromise on your laptop’s keyboard quality since it is what
    you’ll use to bang out code all day. I tend to go for laptops with a more compact
    keyboard layout.</p><p>The most important thing is to try out a laptop’s keyboard
    thoroughly before you buy. Make sure the keys are comfortable and easy to reach
    with good travel. A back-lit keyboard is useful if you intend to work in low-light
    conditions often.</p><h2>Juice</h2><p>Good battery life may not be all that important
    to you if you spend most of your time near a power outlet. Nonetheless, shoot
    for at least 6 hours of battery life.</p><p>Don’t rely on the expected battery
    life as stated by the manufacturer. Read third-party appraisals from reliable
    websites, and see what real users are saying about the product in forums and reviews.</p><h2>Operating
    System</h2><p>Your choice of operating system will determine which laptop to buy
    to a large extent. Windows users have lots of options but if you prefer macOS,
    you’re limited to one of the Macbook offerings.</p><p><img src="https://cdn-images-1.medium.com/max/5998/1*Wy8Y5MJXEqLJQoo2nSki0Q.jpeg"
    alt=""></p><p>Linux will run on most hardware but it is better to buy laptops
    which have official Linux support. Some vendors, such as Dell and <a href="https://system76.com/">System
    76</a>, provide top quality machines with Linux pre-installed. You might want
    to look into those first.</p><p>Otherwise, do your research to make sure the laptop
    you intend to buy plays well with your preferred Linux distributions.</p><h2>Dedicated
    or Integrated Graphics?</h2><p>A dedicated (also known as discrete) graphics card
    isn’t very important for coding purposes. Save money by going with an integrated
    graphics card. Invest the money you save in an SSD or a better processor which
    will provide more value for the money.</p><p>I’d love to know what factors you
    consider to be most important for a development machine and how it affects your
    work on a day to day basis.</p><p>If you enjoyed this article, please share with
    your developer friends and click the green “❤” heart below and so others can find
    it too. Thanks for reading</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*I4YmEwNKkCif1LYXWDQy9A.gif"
    alt=""></p>'
  :author: freeCodeCamp.org
  :topic: programming
- :url: https://medium.com/nextux/design-better-forms-96fadca0f49c?source=search_post---------0
  :title: Design Better Forms
  :content: <p>Common mistakes designers make and how to fix them</p><p><img src="https://cdn-images-1.medium.com/max/5760/1*VvQeOFsY57NJxtZmKyRnHA.jpeg"
    alt=""></p><p>Whether it is a signup flow, a multi-view stepper, or a monotonous
    data entry interface, forms are one of the most important components of digital
    product design. This article focuses on the common dos and don’ts of form design.
    Keep in mind these are general guidelines and there are exceptions to every rule.</p><h2>Forms
    should be one column</h2><p><img src="https://cdn-images-1.medium.com/max/6138/1*XhzxeTnAuWoaeJmlPBP0bw.jpeg"
    alt="Multiple columns disrupt a user&#39;s vertical momentum."><em>Multiple columns
    disrupt a user&#39;s vertical momentum.</em></p><h2>Top align labels</h2><p><img
    src="https://cdn-images-1.medium.com/max/5760/1*tnR_OXAKMJW8S9cqRy416A.jpeg" alt="Users
    complete top aligned labeled forms at a much higher rate than left-aligned labels.
    Top aligned labels also translate well on mobile. However, consider using left-aligned
    labels for large data-set entry with variable optionality because they are easier
    to scan together, they reduce height, and prompt more consideration than top-aligned
    labels."><em>Users complete top aligned labeled forms at a much higher rate than
    left-aligned labels. Top aligned labels also translate well on mobile. However,
    consider using left-aligned labels for large data-set entry with variable optionality
    because they are easier to scan together, they reduce height, and prompt more
    consideration than top-aligned labels.</em></p><h2>Group labels with their inputs</h2><p><img
    src="https://cdn-images-1.medium.com/max/5760/1*obwyjb54NCWy3sOPfm2WEg.jpeg" alt="Present
    the label and input close together, and make sure there is enough height between
    the fields so users don’t get confused."><em>Present the label and input close
    together, and make sure there is enough height between the fields so users don’t
    get confused.</em></p><h2>Avoid all caps</h2><p><img src="https://cdn-images-1.medium.com/max/5760/1*w6nZOf5pZSha6FoWu3YtRw.jpeg"
    alt="All caps are more difficult to read and scan."><em>All caps are more difficult
    to read and scan.</em></p><h2>Show all selection options if under 6</h2><p><img
    src="https://cdn-images-1.medium.com/max/5760/1*VvQeOFsY57NJxtZmKyRnHA.jpeg" alt="Placing
    options in a selector drop-down requires two clicks, and hides the options. Use
    an input selector if there are over 5 options. Incorporate contextual search within
    the drop-down if there are over 25 options."><em>Placing options in a selector
    drop-down requires two clicks, and hides the options. Use an input selector if
    there are over 5 options. Incorporate contextual search within the drop-down if
    there are over 25 options.</em></p><h2>Resist using placeholder text as labels</h2><p><img
    src="https://cdn-images-1.medium.com/max/5760/1*XvUnJwHtQhJ3Wl8Apj9lhQ.jpeg" alt="It
    is tempting to optimize space by using placeholder text as labels. This causes
    many usability issues that have been [summarized by Katie Sherwin](https://www.nngroup.com/articles/form-design-placeholders/)
    of Nielsen Norman Group."><em>It is tempting to optimize space by using placeholder
    text as labels. This causes many usability issues that have been <a href="https://www.nngroup.com/articles/form-design-placeholders/">summarized
    by Katie Sherwin</a> of Nielsen Norman Group.</em></p><h2>Place checkboxes (and
    radios) underneath each other for scannability</h2><p><img src="https://cdn-images-1.medium.com/max/5760/1*VLqTEZP8OrH24FooksePbQ.jpeg"
    alt="Placing checkboxes underneath each other allows easy scanning."><em>Placing
    checkboxes underneath each other allows easy scanning.</em></p><h2>Make CTAs descriptive</h2><p><img
    src="https://cdn-images-1.medium.com/max/5760/1*VzlN4tj2hQRUel2iNzM9dw.jpeg" alt="A
    call to action should state the intent."><em>A call to action should state the
    intent.</em></p><h2>Specify errors inline</h2><p><img src="https://cdn-images-1.medium.com/max/5760/1*-NXH_4cKK_ngIgrcqShTbg.jpeg"
    alt="Show the user where the error occurred and provide a reason."><em>Show the
    user where the error occurred and provide a reason.</em></p><h2>Use inline validation
    after the user fills out the field (unless it helps them while in the process)</h2><p><img
    src="https://cdn-images-1.medium.com/max/5760/1*aGO8yGo2jqu9XgntfFvlsQ.jpeg" alt="Don’t
    use inline validation while the user is typing — unless it helps them — like in
    the case of creating a password, username, or message with a character count."><em>Don’t
    use inline validation while the user is typing — unless it helps them — like in
    the case of creating a password, username, or message with a character count.</em></p><h2>Don’t
    hide basic helper text</h2><p><img src="https://cdn-images-1.medium.com/max/5760/1*D2A7FGZdYdtt9YC1q7IAUw.jpeg"
    alt="Expose basic helper text wherever possible. For complex helper text, consider
    placing it next to the input during its focused state."><em>Expose basic helper
    text wherever possible. For complex helper text, consider placing it next to the
    input during its focused state.</em></p><h2>Differentiate primary from secondary
    actions</h2><p><img src="https://cdn-images-1.medium.com/max/5760/1*STZ7rbj0wO5u2sn0bsR-KQ.jpeg"
    alt="There is a bigger philosophical debate regarding whether a secondary option
    should even be included."><em>There is a bigger philosophical debate regarding
    whether a secondary option should even be included.</em></p><h2>Use field length
    as an affordance</h2><p><img src="https://cdn-images-1.medium.com/max/5760/1*3rOjyzcj68Dm7badROWuxg.jpeg"
    alt="The length of the field affords the length of the answer. Employ this for
    fields that have a defined character count like phone numbers, zip codes, etc."><em>The
    length of the field affords the length of the answer. Employ this for fields that
    have a defined character count like phone numbers, zip codes, etc.</em></p><h2>Ditch
    the * and denote optional fields</h2><p><img src="https://cdn-images-1.medium.com/max/5760/1*riNfOVAxTChvaQ29n-6IPQ.jpeg"
    alt="Users don’t always know what is implied by the required field marker (*).
    Instead, it is better to denote optional fields."><em>Users don’t always know
    what is implied by the required field marker (</em>). Instead, it is better to
    denote optional fields.*</p><h2>Group related information</h2><p><img src="https://cdn-images-1.medium.com/max/5760/1*1mPIcYr9ZMmZ4g2Ayf5BPA.jpeg"
    alt="Users think in batches, and long forms can feel overwhelming. By creating
    logical groups the user will make sense of the form much faster."><em>Users think
    in batches, and long forms can feel overwhelming. By creating logical groups the
    user will make sense of the form much faster.</em></p><h2>Why ask?</h2><p>Omit
    optional fields and think of other ways to collect data. Always ask yourself if
    the question can be inferred, postponed, or completely excluded.</p><p>Data entry
    is increasingly automated. For example, mobile and wearable devices collect large
    amounts of data without the user’s conscious awareness. Think of ways you can
    leverage social, conversational UI, SMS, email, voice, OCR, location, fingerprint,
    biometric, etc.</p><h2>Make it fun</h2><p>Life is short. No one wants to fill
    out a form. Be conversational. Be funny. Gradually engage. Do the unexpected.
    It is the role of the designer to express their company’s brand to elicit an emotional
    reaction. If done correctly, it will increase completion rates. Just make sure
    you don’t violate the rules listed above.</p><blockquote><h1><em>It takes hours
    of research and attention to create content like this article. Please give it
    a few claps to motivate me to keep writing. It’s free for you but means a lot
    to me.</em></h1></blockquote><p><strong>For more:</strong></p><h2><a href="https://medium.com/nextux">Follow
    NextUX</a> | <a href="https://twitter.com/CoyleAndrew">Find me on Twitter</a></h2>
  :author: NextUX
  :topic: design
- :url: https://medium.com/refactoring-ui/7-practical-tips-for-cheating-at-design-40c736799886?source=search_post---------1
  :title: 7 Practical Tips for Cheating at Design
  :content: '<p>Improving your designs with tactics instead of talent.</p><p>Every
    web developer inevitably runs into situations where they need to make visual design
    decisions, whether they like it or not.</p><p>Maybe the company you work for doesn’t
    have a full-time designer and you need to implement the UI for a new feature on
    your own. Or maybe you’re hacking on a side-project and you want it to look better
    than <em>yet-another-Bootstrap-site.</em></p><p>It’s easy to throw your hands
    up and say,* “I’ll never be able to make this look good, I’m not an artist!”*
    but it turns out there are a ton of tricks you can use to level up your work that
    don’t require a background in graphic design.</p><p>Here are seven simple ideas
    you can use to improve your designs today<em>.</em></p><h2>1. Use color and weight
    to create hierarchy instead of size</h2><p><img src="https://cdn-images-1.medium.com/max/4590/1*KYZikUrx9F02cJU9kpn_gQ.png"
    alt=""></p><p>A common mistake when styling UI text is relying too much on font
    size to control your hierarchy.</p><p><em>“Is this text important? Let’s make
    it bigger.”</em></p><p><em>“Is this text secondary? Let’s make it smaller.”</em></p><p>Instead
    of leaving all of the heavy lifting to font size alone, <strong>try using color
    or font weight to do the same job</strong>.</p><p><em>“Is this text important?
    *</em>Let’s make it bolder.*<em>”</em></p><p><em>“Is this text secondary? *</em>Let’s
    use a lighter color.*<em>”</em></p><p>Try and stick to two or three colors:</p><ul><li><p>A
    dark (<a href="https://ianstormtaylor.com/design-tip-never-use-black/">but not
    black</a>) color for primary content <em>(like the headline of an article)</em></p></li><li><p>A
    grey for secondary content <em>(like the date an article was published)</em></p></li><li><p>A
    lighter grey for ancillary content <em>(maybe the copyright notice in a footer)</em></p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/3150/1*2YuCOOCjdMEJxg-Lb6G2FA.png" alt=""></p><p>Similarly,
    two font weights is usually enough for UI work:</p><ul><li><p>A normal font weight
    <em>(400 or 500 depending on the font)</em> for most text</p></li><li><p>A heavier
    font weight <em>(600 or 700)</em> for text you want to emphasize</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/3150/1*AHrVF0vTtj-yoyhmBNHNLA.png" alt=""></p><p><strong>Stay
    away from font weights under 400 for UI work</strong>; they can work for large
    headings but are too hard to read at smaller sizes. If you’re considering using
    a lighter weight to de-emphasize some text, use a lighter color or smaller font
    size instead.</p><h2>2. Don’t use grey text on colored backgrounds</h2><p><img
    src="https://cdn-images-1.medium.com/max/3150/1*ajjrhpp-l3GDG7ne7Am8fw.png" alt=""></p><p>Making
    text a lighter grey is a great way to de-emphasize it on white backgrounds, but
    it doesn’t look so great on colored backgrounds.</p><p>That’s because the effect
    we’re actually seeing with grey on white is <em>reduced contrast</em>.</p><p><strong>Making
    the text closer to the background color is what actually helps create hierarchy</strong>,
    not making it light grey.</p><p><img src="https://cdn-images-1.medium.com/max/3150/1*CNaej5BrPr9lWTMAfllfdw.png"
    alt=""></p><p>There are two ways you can reduce contrast when working with colorful
    backgrounds:</p><h3>1. Reduce the opacity of white text</h3><p>Use white text
    and lower the opacity. This lets the background color bleed through a bit, de-emphasizing
    the text in a way that doesn’t clash with the background.</p><p><img src="https://cdn-images-1.medium.com/max/3150/1*OMntEW2V5jPXrZR6CjrBFQ.png"
    alt=""></p><h3><strong>2. Hand-pick a color that’s based on the background color</strong></h3><p>This
    works better than reducing the opacity when your background is an image or pattern,
    or when reducing the opacity makes the text feel too dull or washed out.</p><p><img
    src="https://cdn-images-1.medium.com/max/3150/1*d5Ft9yND08hTdmXgFTLQJw.png" alt=""></p><p>Choose
    a color that’s the same hue as the background, adjusting saturation and lightness
    until it looks right to you.</p><h2>3. Offset your shadows</h2><p><img src="https://cdn-images-1.medium.com/max/4590/1*LisFGBtYOvR-3cwFTzTDUw.png"
    alt=""></p><p>Instead of using large blur and spread values to make box shadows
    more noticeable, add a vertical offset.</p><p>It looks a lot more natural because
    it simulates a light source shining down from above like we’re used to seeing
    in the real world.</p><p>This applies to inset shadows like you might use on wells
    or form inputs too:</p><p><img src="https://cdn-images-1.medium.com/max/3150/1*qWSsYovqBDKF87f1IVMHsQ.png"
    alt=""></p><p>If you’re interested in learning more about shadow design, the <a
    href="https://material.io/guidelines/material-design/elevation-shadows.html">Material
    Design Guidelines</a> are a fantastic primer.</p><h2>4. Use fewer borders</h2><p><img
    src="https://cdn-images-1.medium.com/max/4590/1*fNm6hXxnBvIcHGp9DQRdRQ.png" alt=""></p><p>When
    you need to create separation between two elements, try to resist immediately
    reaching for a border.</p><p>While borders are a great way to distinguish two
    elements from one another, they aren’t the <em>only</em> way, and using too many
    of them can make your design feel busy and cluttered.</p><p>The next time you
    find yourself reaching for a border, try one of these ideas instead:</p><h3>1.
    Use a box shadow</h3><p>Box shadows do a great job of outlining an element like
    a border would, but can be more subtle and accomplish the same goal without being
    as distracting.</p><p><img src="https://cdn-images-1.medium.com/max/3150/1*Pm5PyS0vZ65GuGu8erPRfA.png"
    alt=""></p><h3><strong>2. Use two different background colors</strong></h3><p>Giving
    adjacent elements slightly different background colors is usually all you need
    to create distinction between them. If you’re already using different background
    colors in addition to a border, try removing the border; you might not need it.</p><p><img
    src="https://cdn-images-1.medium.com/max/3150/1*9j89WYXMqsnb_A1v8heXaw.png" alt=""></p><h3>3.
    Add extra spacing</h3><p>What better way to create separation between elements
    than to simply increase the separation? Spacing things further apart is a great
    way to create distinction between groups of elements without introducing any new
    UI at all.</p><p><img src="https://cdn-images-1.medium.com/max/4200/1*7CEsoYdtFPjMBqpDB58HqQ.png"
    alt=""></p><h2>5. Don’t blow up icons that are meant to be small</h2><p><img src="https://cdn-images-1.medium.com/max/4590/1*57g05Gl-FjDtcCUtaPPOLw.png"
    alt=""></p><p>If you’re designing something that could use some large icons <em>(like
    maybe the “features” section of a landing page)</em>, you might instinctively
    grab a free icon set like <a href="https://fontawesome.com/">Font Awesome</a>
    or <a href="http://www.zondicons.com/">Zondicons</a> and bump up the size until
    they fit your needs.</p><p>They’re vector images after all, so the quality isn’t
    going to suffer if you increase the size right?</p><p>While it’s true that vector
    images won’t degrade in quality when you increase their size, <strong>icons that
    were drawn at 16–24px are never going to look very professional when you blow
    them up to 3x or 4x their intended size.</strong> They lack detail, and always
    feel disproportionately “chunky”.</p><p><img src="https://cdn-images-1.medium.com/max/4080/1*dJyk3SNvrxuTEuZa7fiY0g.png"
    alt=""></p><p>If small icons are all you’ve got, try enclosing them inside another
    shape and giving the shape a background color:</p><p><img src="https://cdn-images-1.medium.com/max/4080/1*Og6TmKmbZg7qauQymzhxBQ.png"
    alt=""></p><p>This lets you keep the actual icon closer to its intended size,
    while still filling the larger space.</p><p>If you have the budget, you could
    also use a premium icon set designed to be used at larger sizes, like <a href="http://www.heroicons.com/">Heroicons</a>
    or <a href="https://useiconic.com/">Iconic</a>.</p><h2>6. Use accent borders to
    add color to a bland design</h2><p><img src="https://cdn-images-1.medium.com/max/4590/1*uwsVo34TWzKM91Gyqsh88Q.png"
    alt=""></p><p>If you’re not a graphic designer, how do you add that dash of visual
    flair to your UI that other designs get from beautiful photography or colorful
    illustrations?</p><p>One simple trick that can make a big difference is to add
    colorful accent borders to parts of your interface that would otherwise feel a
    bit bland.</p><p>For example, along the side of an alert message:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*jEivJuYRI3PbrGYVccKkHA.png"
    alt=""></p><p>…or to highlight active navigation items:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*7Pf5gu0r3uPi7W5vR9dcWQ.png"
    alt=""></p><p>…or even across the top of your entire layout:</p><p><img src="https://cdn-images-1.medium.com/max/2800/1*YMrMBgjpbuTs_WqdbhymNg.png"
    alt=""></p><p>It doesn’t take any graphic design talent to add a colored rectangle
    to your UI, and it can go a long way towards making your site feel more “designed.”</p><p><em>Have
    a hard time picking colors? Try choosing from a constrained palette like <a href="https://dribbble.com/colors">Dribbble’s
    color search</a> to avoid feeling overwhelmed by the endless possibilities of
    a traditional color picker.</em></p><h2>7. Not every button needs a background
    color</h2><p><img src="https://cdn-images-1.medium.com/max/3060/1*SIfuJd-3ZFYyA_W1Nme1Yw.png"
    alt=""></p><p>When there are multiple actions a user can take on a page, it’s
    easy to fall into the trap of designing those actions based purely on semantics.</p><p>Frameworks
    like Bootstrap sort of encourage this by giving you a menu of semantic styles
    to choose from whenever you’re adding a new button:</p><p><img src="https://cdn-images-1.medium.com/max/3124/1*2xkDfSjvq7Xyb_ceInrMpw.png"
    alt=""></p><p><em>“Is this a positive action? Make the button green.”</em></p><p><em>“Does
    this delete data? Make the button red.”</em></p><p>Semantics are an important
    part of button design, but there’s a more important dimension that’s commonly
    forgotten: <strong><em>hierarchy.</em></strong></p><p>Every action on a page sits
    somewhere in a pyramid of importance. Most pages only have one true primary action,
    a couple of less important secondary actions, and a few seldom used tertiary actions.</p><p>When
    designing these actions,** it’s important to communicate their place in the hierarchy.**</p><ul><li><p><strong>Primary
    actions should be obvious.</strong> Solid, high contrast background colors work
    great here.</p></li><li><p>*<em>Secondary actions should be clear but not prominent.
    *</em>Outline styles or lower contrast background colors are great options.</p></li><li><p><strong>Tertiary
    actions should be discoverable but unobtrusive.</strong> Styling these actions
    like links is usually the best approach.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2800/1*_tq33tZkr3DZuZgP08Jcrw.png"
    alt=""></p><p><em>“What about destructive actions, shouldn’t they always be red?”</em></p><p>Not
    necessarily! If the destructive action isn’t the <em>primary</em> action on the
    page, it might be better to give it a secondary or tertiary button treatment.</p><p><img
    src="https://cdn-images-1.medium.com/max/2800/1*1CxYaUc6Bk-pTRXH5TQonw.png" alt=""></p><p>Save
    the big, red, and bold styling for when that negative action actually <em>is</em>
    the primary action in the interface, like in a confirmation dialog:</p><p><img
    src="https://cdn-images-1.medium.com/max/2800/1*cuYcwjOO26sKHImHaY6yFA.png" alt=""></p><h2>Enjoy
    this post? We just released a book!</h2><p><a href="https://refactoringui.com/book/">Refactoring
    UI</a> takes everything we know about design and bundles it into one comprehensive
    package, including a book, screencasts, a component gallery, custom designed assets,
    and more.</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*sU4xq5W_xPjKPvSvQvOOzw.png"
    alt=""></p><p><a href="https://refactoringui.com/book/kind-words/">Over 6000 people</a>
    have picked it up so far, and the feedback has been amazing.</p><iframe src="https://medium.com/media/b2b765efe10b94c18174e301d4f7ebaf"
    frameborder=0></iframe><p>If you’re interested, head over to <a href="https://refactoringui.com/book/">RefactoringUI.com/book</a>
    to learn more and download a sample.</p>'
  :author: Refactoring UI
  :topic: design
- :url: https://medium.com/nextux/design-better-data-tables-4ecc99d23356?source=search_post---------2
  :title: Design better data tables
  :content: <p>The ingredients of a successful data table UI</p><p>Data is useless
    without the ability to visualize and act on it. The success of future industries
    will combine advanced data collection with better user experience, and the data
    table comprises much of this user experience.</p><p>Good data tables allow users
    to scan, analyze, compare, filter, sort, and manipulate information to derive
    insights and commit actions. This article presents a list of design structures,
    interaction patterns, and techniques to help you design better data tables.</p><h2>Fixed
    Header</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*kXEEaxvKP_9xRT0HuqScTQ.gif"
    alt="Fixing the row header as a user scrolls provides context on what column the
    user is on."><em>Fixing the row header as a user scrolls provides context on what
    column the user is on.</em></p><h2>Horizontal Scroll</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*Mp9kJSIlLyn5qjX-vD56iA.gif"
    alt="Horizontal scrolling is inevitable when presenting large datasets. It is
    good practice to place identifier data in the first column. As an advanced feature,
    enable individual locking of columns so users can compare data with multiple anchoring
    identifiers."><em>Horizontal scrolling is inevitable when presenting large datasets.
    It is good practice to place identifier data in the first column. As an advanced
    feature, enable individual locking of columns so users can compare data with multiple
    anchoring identifiers.</em></p><h2>Resizable columns</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*3Mjvd1N9OlQC-aMWXEVtBQ.gif"
    alt="Resizing columns allows users to see abbreviated data in full."><em>Resizing
    columns allows users to see abbreviated data in full.</em></p><h2>Row Style</h2><p><strong>Zebra
    Stripes, Line Divisions, Free Form.</strong></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*yDwqntdUINCNJJTV7BXKzQ.gif"
    alt="The row style helps users scan data. Reducing visual noise by removing row
    lines or zebra stripes works well for small datasets. Users may lose their place
    when parsing larger datasets. Line divisions help users keep their place. Alternating
    rows (aka zebra stripes) help users keep their place when scanning long horizontal
    datasets. Although they cause usability problems when there is a small number
    of rows because users may ascribe meaning to the highlighted rows."><em>The row
    style helps users scan data. Reducing visual noise by removing row lines or zebra
    stripes works well for small datasets. Users may lose their place when parsing
    larger datasets. Line divisions help users keep their place. Alternating rows
    (aka zebra stripes) help users keep their place when scanning long horizontal
    datasets. Although they cause usability problems when there is a small number
    of rows because users may ascribe meaning to the highlighted rows.</em></p><h2>Display
    Density</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*68Gj3oI6z0ssNSqX3sSQbw.gif"
    alt="Smaller row height enables the user to view more data without the need for
    scrolling. However, it affects scannability leading to parsing errors. That is
    why many successful data table designs incorporate the ability to control display
    density."><em>Smaller row height enables the user to view more data without the
    need for scrolling. However, it affects scannability leading to parsing errors.
    That is why many successful data table designs incorporate the ability to control
    display density.</em></p><h2>Visual Table Summary</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*xhD2-Xa-jn1ve-jT0PLKTw.jpeg"
    alt="A visual data summary provides an overview of the accompanying table. It
    allows the user to spot patterns and issues in aggregate before actioning summary
    insights."><em>A visual data summary provides an overview of the accompanying
    table. It allows the user to spot patterns and issues in aggregate before actioning
    summary insights.</em></p><h2>Pagination</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*yLNoP3bNRc37jHn28Mqucg.jpeg"
    alt="Pagination works by presenting a set number of rows in a view, with the ability
    to navigate to another set. The above example provides the ability to customize
    the row count per view. Infinite scroll often replaces this pattern. Infinite
    scroll progressively loads results as a user scrolls. Infinite scroll works well
    for discovery websites but is usually disastrous for prioritization apps."><em>Pagination
    works by presenting a set number of rows in a view, with the ability to navigate
    to another set. The above example provides the ability to customize the row count
    per view. Infinite scroll often replaces this pattern. Infinite scroll progressively
    loads results as a user scrolls. Infinite scroll works well for discovery websites
    but is usually disastrous for prioritization apps.</em></p><h2>Hover Actions</h2><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*dCPE8gp5tbaVouGODN5bRQ.gif" alt="Presenting
    additional action when a user hovers reduces visual clutter. However, it can cause
    discoverability issues because the user needs to interact with the table to expose
    the presentation of actions."><em>Presenting additional action when a user hovers
    reduces visual clutter. However, it can cause discoverability issues because the
    user needs to interact with the table to expose the presentation of actions.</em></p><h2>Inline
    Editing</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*Sy9hS1AMycj5Uzo4VvckmQ.gif"
    alt="Inline editing allows the user to change data without navigating to a separate
    details view."><em>Inline editing allows the user to change data without navigating
    to a separate details view.</em></p><h2>Expandable Rows</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*0E1UPRzvK4gaV8sZEwOxLQ.gif"
    alt="Expandable rows allow the user to evaluate additional information without
    losing their context."><em>Expandable rows allow the user to evaluate additional
    information without losing their context.</em></p><h2>Quick View</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*Tt2x8SRugOlJQNsMdidF_g.gif"
    alt="Much like expandable rows, quick view enables a user to view additional information
    while staying in context."><em>Much like expandable rows, quick view enables a
    user to view additional information while staying in context.</em></p><h2>Modal</h2><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*NSGIPqQ5nnFhunR8Osiunw.gif" alt="Modals
    allow the user to stay within the table view but provides more focus on the additional
    information and actions."><em>Modals allow the user to stay within the table view
    but provides more focus on the additional information and actions.</em></p><h2>Multi-Modal</h2><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*Bu6hCcWjrXR0k_F5jEJO8g.gif" alt="A
    multi-modal feature is powerful for active use users to crank through many actions
    or compare details of different items."><em>A multi-modal feature is powerful
    for active use users to crank through many actions or compare details of different
    items.</em></p><h2>Row to Details</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*HAkPMgQhO-0kFgh-ITT5qA.gif"
    alt="Clicking on a row link transforms the table into a view with list items on
    the left and additional details on the right. It enables a user to parse large
    datasets, as well as reference many items without losing their place."><em>Clicking
    on a row link transforms the table into a view with list items on the left and
    additional details on the right. It enables a user to parse large datasets, as
    well as reference many items without losing their place.</em></p><h2>Sortable
    Columns</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*ViE5_uxbbU6LEfnV8GrQtA.jpeg"
    alt="Column sorting allows users to organize rows alphabetically and numerically."><em>Column
    sorting allows users to organize rows alphabetically and numerically.</em></p><h2>Basic
    Filtering</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*TJJAdrX7xwlhuyLBmD37pg.jpeg"
    alt="Basic filtering allows users to manipulate the data presented in the table."><em>Basic
    filtering allows users to manipulate the data presented in the table.</em></p><h2>Filter
    Columns</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*TKej8krSFjNDHoN43tOTkg.gif"
    alt="This design pattern allows users to assign filtering parameters to specific
    columns."><em>This design pattern allows users to assign filtering parameters
    to specific columns.</em></p><h2>Searchable Columns</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*jnENY_7hvq7iYlXayoQV3w.jpeg"
    alt="This design pattern allows a user to search specific values within each column."><em>This
    design pattern allows a user to search specific values within each column.</em></p><h2>Add
    Columns</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*mFs9KK1VADJbN4hAtjLX1w.jpeg"
    alt="This pattern allows users to add columns from a dataset. It is a way to keep
    the table’s data limited to essential information and enables the user to add
    additional columns based on their use case."><em>This pattern allows users to
    add columns from a dataset. It is a way to keep the table’s data limited to essential
    information and enables the user to add additional columns based on their use
    case.</em></p><h2>Customizable Columns</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*0NZs7HZtRrB_TukLjxInIQ.jpeg"
    alt="The customizable columns feature enables users to pick the columns they want
    to see and sort accordingly. The feature may include the ability to save presets
    for later use."><em>The customizable columns feature enables users to pick the
    columns they want to see and sort accordingly. The feature may include the ability
    to save presets for later use.</em></p><h2>Why Tables Matter</h2><p>Data is becoming
    the raw material of the global economy. The pursuit of data drives the reinvention
    of antiquated industries. Energy, media, manufacturing, logistics, healthcare,
    retail, finance, and even the government are undergoing a digital transformation.</p><p>However,
    data is meaningless without the ability to visualize and act upon it. The companies
    that survive the next decade will not only have superior data; they will have
    a superior user experience.</p><p>Good user interface design is based on human
    goals and behavior. The user interface in-turn affects behavior, which drives
    further design decisions. In subtle and unconscious ways, user experience alters
    how humans make decisions. What is seen, where it is presented, and how interactions
    are afforded, influence actions. It is important we make design decisions that
    lead to a better world, one data table design at a time.</p><blockquote><h1>It
    takes hours of research and attention to create content like this article. Please
    give it a few claps to motivate me to keep writing. It’s free for you but means
    a lot to me.</h1></blockquote><p><strong>For more:</strong></p><h3><a href="https://medium.com/nextux">Follow
    NextUX</a> | <a href="https://twitter.com/CoyleAndrew">Find me on Twitter</a></h3>
  :author: NextUX
  :topic: design
- :url: https://medium.com/@jaf_designer/why-product-thinking-is-the-next-big-thing-in-ux-design-ee7de959f3fe?source=search_post---------3
  :title: Why Product Thinking is the next big thing in UX Design
  :content: '<p>Life’s too short to build something nobody wants…</p><p>When thinking
    of User Experience, we often think of a simple, beautiful, and easy to use feature-set
    of a product, that makes the user’s life easier. But as a matter of fact, features
    are merely a small, fragile part of the product. They are only a few of many thinkable
    solutions for a user’s problem the product tries to solve. Thinking in products
    means thinking in specific user’s problems, in jobs to be done, in goals, and
    in revenues.</p><p><img src="https://cdn-images-1.medium.com/max/2060/1*4PXWHQnm3UbmuKp_StqmWg.png"
    alt=""></p><p>The core user experience is not a set of features; in fact, it is
    the job users hire the product for. Uber’s core user experience is to get a taxi
    easily at any time. The countdown, displaying when exactly the taxi will arrive,
    is a suitable feature that expands this experience. But Uber’s product works regardless
    of this feature. The countdown, on the other hand, cannot live without the product
    (the certainty to get a taxi easily at any time). There is a one-way interrelationship
    between feature and product: Features don’t work without the product. This is
    why designers should think in products first.</p><p><em>“Think in products, not
    in features”</em></p><h2>Uncover the jobs the product is hired for</h2><p>A product
    has a core user experience, which is basically the reason the product exists.
    It fulfills a need or solves a problem people have. By that, it becomes meaningful
    and provides a certain value. If the problem is non-existant, or the solution
    doesn’t fit to the problem, the product becomes meaningless and people won’t use
    the product; which in turn leads to the downfall of the product. Wrong solutions
    can be fixed, but non-existant problems aren’t adjustable at all. So, how can
    we be sure to tackle a real problem? Alas, we can‘t be 100% sure, but we can minimize
    the risk a lot by observing and talking to people. Hence, uncovering the problem
    and building solutions customers really want.</p><p><em>„It’s not the customer’s
    job to know what they want“</em> — Steve Jobs</p><p>Clay Christensen, for instance,
    once tried to improve the sales of milkshakes. He tried to make them sweeter,
    offered them in different tastes, and slightly increased the size of the cups.
    Nothing worked out, until he started observing the customers who bought milkshakes.
    He found out that the job the customers hired the milkshake for was in fact to
    make their morning car ride to work less boring. The big benefit a milkshake has
    is that it is a thick drink that lasts longer than any other drink and stuffs
    the stomach. This was the real problem; the customers had no idea about it. In
    the end Christensen came up with the solution to make the milkshake even thicker,
    which led to an increase in sales numbers. <a href="http://ipony.de/?p=3495%5D">http://ipony.de/?p=3495</a></p><p><em>„Fall
    in love with a problem, not a specific solution“</em> — Laura Javier</p><h2>Think
    in products and build the right features for the right people</h2><p>Thinking
    in products helps building successful features. By defining the problems the product
    tackles, it answers the question “why do we build this product?”. Defining the
    target audience “who has these problems?” and defining the solution “how are we
    doing this?” will give enough guidance to create a new feature. Setting up a goal
    will help to measure the success of this feature.</p><p><img src="https://cdn-images-1.medium.com/max/3480/1*iftlg0lnE417o6Q9l7CATg.png"
    alt=""></p><h3><strong>The Problem-Solution-Fit</strong></h3><p>Products become
    meaningful when the provided solution fits the uncovered problem. This solution
    describes the way how a problem will be solved. Thus, the problem-solution-fit
    defines the core user experience of a product. The concrete features are extending
    this experience and support the core experience, but they cannot replace it. Interaction
    Design and Visual Design can make a product beautiful, easy-to-use, delightful
    or make it stand out in the competition, though it can’t make the product meaningful.
    This is why a proper problem-solution-fit is so critical for the success of a
    product.</p><h3>The Product Definition</h3><p>When thinking in products, UX designers
    should be able to answer the following questions first: What problem do we solve?
    (User problem). For whom are we doing this? (Target audience). Why are we doing
    this? (Vision). How are we doing this (Strategy) and what do we want to achieve?
    (Goals). Only then it makes sense to think about what exactly we are doing (Features).</p><p><img
    src="https://cdn-images-1.medium.com/max/4120/1*b-JlzTz6Mti8n5-BWTEq2Q.png" alt=""></p><h2><strong>The
    power of Product Thinking</strong></h2><p>Thinking in products gives designers
    the advantage of building the right features for the right people. It helps understanding
    the user experience of a product as a whole; not purely as Interaction- and Visual-
    Design of features. It makes sure designers tackle real user problems and herewith
    reduce the risk of building something nobody wants. It gives the power to make
    the right decisions whenever it comes to building features.</p><p><em>“Building
    features is easy, building the right features for the right people is challenging”</em></p><p>Product
    Thinking enables UX designers to ask the right questions, to build the right features
    and to communicate with stakeholders more efficiently. It enables designers to
    say „no“ and to be hesitant before adding new features. Whenever a new feature
    is requested or someone has an idea for a new product, designers are able to ask
    the right questions, before drawing wireframes or crafting fancy layouts: “Does
    it fit into the product?”–“Does it serve a real user problem?” –“Do people want
    or need it?–Let’s find out first!” This will keep the product slim and effective.</p><h2><strong>Conclusion</strong></h2><p>Thinking
    in products makes sure designers build the right features for the right people
    and tackle real problems people have. It empowers to make the right decisions
    and is the foundation of building successful products users want. Product Thinking
    establishes a fruitful relationship between Product Management and UX Design and
    therefore leads to stronger products. This is why Product Thinking is going to
    be the next big thing in UX Design.</p><p><em>Nikkel <a href="https://twitter.com/JAF_Designer">@JAF_Designer</a>
    is a Product Designer from Hamburg. Founder of <a href="http://www.designmadeforyou.com">Design
    Made For You | Studio</a>—<a href="http://www.nikkel-blaase.com">www.nikkel-blaase.com</a></em></p>'
  :author: Nikkel Blaase
  :topic: design
- :url: https://medium.com/sketch-app-sources/design-cheatsheet-274384775da9?source=search_post---------4
  :title: 10 cheat codes for designing User Interfaces
  :content: "<p>I’d probably assume that most of us started in UI design with the
    littlest knowledge or nothing at all. But even though the odds were against us
    at the start, we managed our way through numerous design books and articles to
    understand how colors, typography, layout etc works. I remember how it is established
    in us at Make Technology, a UX driven company, that Design can’t be simply explained
    by colors, shapes, and text. It is a process that has a “Why” behind it, that
    whenever we create a text bigger, add a shadow, or change the color, there has
    to be a reason of why things have to be.</p><p>Thus in this article, I’ll be sharing
    a list of things I’ve learned from different companies, designers, things I’ve
    learned in designing user interfaces, and new discoveries I found along the way:</p><p>**Disclaimer:
    The following “Don’t” samples provided doesn’t necessarily mean they’re wrong.
    It’s our basis of how we can improve from a good design solution to a much better
    one *\U0001F600</p><h2><strong>1. This text is important, make it bigger!</strong></h2><p>When
    faced with content that needs font hierarchy, making the text bigger to give emphasis
    and importance usually doesn’t solve the problem, just like the one below:</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*zeL3V5_Xjr0R6EweICq1YQ.png\"
    alt=\"\"></p><p>Font hierarchy is just not about small to big font sizes. It is
    about the <strong>right</strong> <strong><em>mix of size, weights, and colors
    that creates contrast. Bigger contrast, the better.</em></strong></p><p><img src=\"https://cdn-images-1.medium.com/max/4096/1*yqVwmecQQmn6fB6yRjv94A.jpeg\"
    alt=\"Apologies if the photo comes in low res format ✌️\"><em>Apologies if the
    photo comes in low res format ✌️</em></p><h3>So how do I create better contrast?</h3><ul><li><p>Don’t
    use one kind of weight with different font sizes to create contrast and hierarchy.</p></li><li><p>Instead,
    use bolder and darker style for primary content, or smaller and lighter for secondary
    content (less important).</p></li><li><p>Create three kinds of text colors that
    varies from dark to light (see example below). Usually I use my base color as
    body text color.</p></li><li><p>Don’t be afraid to apply big font gaps to your
    items (i.e. 24px header, 16px body text, 10px meta etc). Bigger gap = better contrast.</p></li><li><p>Check
    out <a href=\"http://www.modularscale.com\">Modularscale</a> an online calculator
    you can use to create better font hierarchy.</p></li><li><p>Remember, contrast
    is = size + weight + color.</p></li><li><p>Lastly, make sure to check its contrast
    ratio. You can use this <a href=\"http://leaverou.github.io/contrast-ratio/\">calculator</a>
    to check its accessibility.</p></li></ul><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*J9cLqeIrNQ3j3FzQrMnxzg.png\"
    alt=\"from my base color, I move from darker for headlines to lighter for ancillary
    content.\"><em>from my base color, I move from darker for headlines to lighter
    for ancillary content.</em></p><h2>2. Don’t create multiple shades of black</h2><p>Don’t
    make your life difficult by moving your color picker up and down to produce different
    shades of black text over white background.</p><p>We all know that using black
    text color (#000) causes eye strains for readers, and so our solution is to create
    darker variants as an alternative. But instead of color picking 3 or more hex
    color values, we can use black with different opacity as a solution:</p><p><img
    src=\"https://cdn-images-1.medium.com/max/3444/1*l0W8gs5yDqzWGEH0lwsBtw.jpeg\"
    alt=\"\"></p><p>In my example above, I used black as my primary color (#000) and
    decreased its opacity depending to where it will be applied (i.e. primary content,
    secondary content, etc)</p><p>***<em>Update (July 2020): *</em>This kind of tweak
    works best on a white background, so I would suggest utilizing different shades
    of black instead for it is more scalable than opacity \U0001F4AA\U0001F3FD (yes
    this is me contradicting my thoughts, cuz why not? we learn!!)*</p><h2>3. Do the
    math for understanding colors</h2><p>Most of us suck at picking the right color
    combinations, and whenever we see a design with a well orchestrated color palette,
    we question ourselves <em>“How the F they did it?”</em> (just like the one below):</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*Wti5_ENOwQ0Vb6_YgKBmjw.png\"
    alt=\"[t](http://momoandsprits.com/selfservice-company-web-illustrations/)aken
    from momoandspirits\"><em><a href=\"http://momoandsprits.com/selfservice-company-web-illustrations/\">t</a>aken
    from momoandspirits</em></p><p>Until I learned that understanding colors is not
    just for those who have the gift of design since the beginning of time, that a
    simple addition and subtraction at Hue, Saturation, Brightness (HSB) will do the
    magic <em>(we will be using HSB for this formula instead of RGB)</em>. You can
    easily get rid of the boring white over colored backgrounds, and turn it into
    a Picasso work like the one below:</p><p><img src=\"https://cdn-images-1.medium.com/max/3016/1*0MEEXvT1nTVIxtFNDdXwlQ.png\"
    alt=\"\"></p><h3>So where does the addition and subtraction in HSB comes in?</h3><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*6mow0PlBFMP0iBnG4dB34Q.jpeg\"
    alt=\"Two approaches for understanding colors\"><em>Two approaches for understanding
    colors</em></p><p>There are actually two approaches we can do, and as we can see,
    both options has the same base color #B9F4BC (circle background) but differs when
    it comes to Folder and Strip color. As we start, always remember that the first
    number corresponds to Hue, followed by Saturation and lastly, Brightness.</p><h3>Option
    A</h3><p><img src=\"https://cdn-images-1.medium.com/max/5128/1*74tlybKnuD3QLq-GYOAYiA.png\"
    alt=\"Option A\"><em>Option A</em></p><p>In Option A, we can see that we kept
    the Hue value *<em>123 *</em>all through out the shapes (circle, folder, strip)
    while the Saturation and Brightness is where the change happens.</p><p>Now, as
    we focus on the Saturation of the base which is <strong>24 *<em>and its Brightness,
    *</em>96, *<em>both values changed when we created darker green for the Folder.
    From Saturation of *</em>24</strong> it became <strong>40 *<em>(increment of +16)
    and from Brightness of *</em>96</strong> it became <strong>82 *<em>(decrement
    of -14), which shows us that *</em>*a change in saturation whether incremental
    or decremental needs an inversely proportional adjustment to brightness, in order
    to create a good contrast (vice versa)</strong><em>. And the same thing happened
    in Strip, using the Folder’s Saturation and Brightness as base value, we moved
    from *</em>40** to <strong>44 *<em>(increment of +04), and decreased from *</em>82
    *<em>to *</em>75</strong> (decrement of -07) for Brightness.Thus, leads us to
    the formula:</p><blockquote><h1>Darker Value = Increment in Saturation is a decrement
    in Brightness</h1><h1>Lighter Value = Decrement in Saturation is an increment
    in Brightness</h1></blockquote><p>This formula helped me every time I’m in wonder
    of what right colors should I use on my designs. I learned that the best starting
    point is to have a base color, and from there, start the adjustments in Saturation
    and Brightnesswhile keeping the Hue value the same.</p><h3>Option B</h3><p><img
    src=\"https://cdn-images-1.medium.com/max/5128/1*7Nb4p-N2E24q1xCTNwDZ8Q.png\"
    alt=\"Option B\"><em>Option B</em></p><p>In Option B, the same principle is still
    applied (the formula we had above) but the Hue values change. And the terminologies
    RGB and CMY which we used to pass by in various design materials, will now make
    sense for us.</p><p>RGB stands for Red, Green, and Blue, while CMY is Cyan, Magenta,
    and Yellow. These terminologies haven’t made any importance for me when I first
    started, until I came across this discovery of using RGB and CMY for color combinations.</p><p>Now
    In Option B, if we want to have a darker variation of the base color, all we need
    to do is move our color picker to the direction where the nearest RGB is located
    in our color palette, or move it the direction of CMY for lighter variation. For
    example:</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*dEL58mn2oo546s3oCG-C3Q.png\"
    alt=\"Color Picker\"><em>Color Picker</em></p><p>Since we want to create a darker
    variation of our base color #B9F4BC (circle background) which is to be applied
    in our Folder icon, we need to move our color picker to the direction where the
    nearest RGB is located (which is Blue in this case). But if we want to have a
    lighter version of our Folder, we will be moving our picker to the left, near
    CMY (in this case Yellow).</p><p>*<em>More often RGB leads to darker variation
    and CMY for lighter one</em></p><p>After moving the color picker to our desired
    variation, we now apply the formula in Option A, which results us to having this
    color combination:</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*xFJji20nmU2k5NB1NjL05A.jpeg\"
    alt=\"\"></p><p><img src=\"https://cdn-images-1.medium.com/max/2488/1*QPP5vQxaP18yKlMDckyDqA.jpeg\"
    alt=\"\"></p><blockquote><h1>Red, Green, Blue (RGB) + Option A formula = Darker
    variation</h1><h1>Cyan, Magenta, Yellow (CMY) + Option A formula = Lighter variation</h1></blockquote><h2>4.
    Use spacing to separate groups</h2><p><img src=\"https://cdn-images-1.medium.com/max/2208/1*kpIkcNoPiyCVgPwVoZgq6g.jpeg\"
    alt=\"Be a generous space giver\"><em>Be a generous space giver</em></p><p>Aside
    from adding a line between two groups to show separation, using a generous space
    between is a better and easier solution.</p><p>As what the Law of Proximity states:</p><blockquote><h1>Objects
    that are near, or proximate to each other, tend to be grouped together.</h1></blockquote><p>From
    my example above, my goal is create a separation between my title and its writer
    by using a large space gap between them which is 24px.</p><h2>5. Use colors to
    separate rows</h2><p><img src=\"https://cdn-images-1.medium.com/max/2488/1*lvdKMx2DuwQ8E1U3v23Wig.jpeg\"
    alt=\"Colors as separators\"><em>Colors as separators</em></p><p>Doing row interfaces
    could be boring at times to design, since it only requires duplicating the component
    for n times. But on the user side, reading them can be difficult specially if
    there’s no great distinction between one row to the other. Thus aside from using
    lines, adding color background in rows can be a lot helpful for users in reading,
    and also will be more enjoying to do for us designers \U0001F44D</p><h2>6. Multiply
    instead of Drop shadow text</h2><p><img src=\"https://cdn-images-1.medium.com/max/2600/1*Iby-zWJwGxdR0PFRl467Dw.jpeg\"
    alt=\"Header design\"><em>Header design</em></p><p>It’s quite challenging designing
    header components or adding text over an image specially if the image background
    will be dynamic (or can be changed from time to time).</p><p>Usually the common
    solution for text with dynamic image background is adding drop shadow, but it
    doesn’t help user’s readability. It adds more visual clutter around the letters
    and words because they fill up the spaces in between them.</p><p>For some, black/white
    color overlay is the solution which is a helpful hack for these kinds of designs.
    But recently, I’ve discovered about using Multiply as blend tool for a gradient
    fill.</p><p><img src=\"https://cdn-images-1.medium.com/max/3024/1*FeILhUoIzi2xxe3iVpjAiw.png\"
    alt=\"Specs for Multiply blend options\"><em>Specs for Multiply blend options</em></p><p>Doing
    it is much easier than creating a black background over the image and lessen its
    opacity. Also, having it grayed scale makes the other part of the image retain
    its natural color, and makes the part where the text is located a little bit darker,
    for text readability.</p><h2>7. Line Length</h2><p><img src=\"https://cdn-images-1.medium.com/max/2876/1*vkoWZ1l8BuhVH5kapAEMJg.jpeg\"
    alt=\"\"></p><p>The common thing most designers do is making the line length longer
    so that it may fit its container. But doing so, creates eye strain for our users
    unlike having a 45–65 characters per line which is the ideal.</p><p>If you ever
    came across the dilemma of making the length shorter to make it ideal but will
    result to a big white space at the right side like the one below:</p><p><img src=\"https://cdn-images-1.medium.com/max/2124/1*keGR7l-EGER0p03SupmYKA.png\"
    alt=\"with big white space at the right\"><em>with big white space at the right</em></p><p>Don’t
    hesitate to do so, and make the whole text column center aligned to its container,
    so that you can remove the white space.</p><p><img src=\"https://cdn-images-1.medium.com/max/2100/1*x-Bzz3RlnSVFVfXca71hIg.png\"
    alt=\"centered content\"><em>centered content</em></p><h2>8. Don’t reinvent the
    wheel</h2><p><img src=\"https://cdn-images-1.medium.com/max/2996/1*bShhh5jnPP8b5xVViXNT_g.jpeg\"
    alt=\"\"></p><p>What makes a design inconsistent is when it is not component based.
    It is when you came to realize that you’ve made 5 kinds of card interface, 10
    buttons, 5 heading title styles etc.</p><p>Before you start creating an interface
    for a specific content, try to look around your previously created designs, for
    you might see a pattern which you can recycle and use.</p><p>Instead of reinventing
    the wheel and create another card for an Art Group (example above), we can use
    the Article card and replace it with the Art Group’s content. This will save time
    for designers and also make the interface consistent.</p><h2>9. Use brand colors
    as accents</h2><p><img src=\"https://cdn-images-1.medium.com/max/2796/1*m7dCpHin2HX9uN3LqlBVew.jpeg\"
    alt=\"\"></p><p>We usually think that branding colors must occupy a big chunk
    of our interface colors. We are having a hard time where to showcase our client’s
    shocking neon yellow, orange, and pink branding colors in our clean and minimalist
    layout. The answer? use them as accent colors.</p><h2>10. Hang the bullets</h2><p><img
    src=\"https://cdn-images-1.medium.com/max/2208/1*X0mKGU-XpzbTOrkLhChHBw.jpeg\"
    alt=\"\"></p><p>And lastly if you are creating a list design like the one above,
    make the bullets, glyphs, or number sit in the margin to highlight the list. This
    will make the user readability flow uninterrupted and more legible.</p><p>There’s
    still a long list of design cheatsheets I would like to add, but for now I hope
    these 10 design tips will help you in creating design interfaces. Also, feel free
    to add your cheat codes in the responses \U0001F603</p><p><em>This article is
    inspired by <a href=\"https://medium.com/refactoring-ui/7-practical-tips-for-cheating-at-design-40c736799886\">7
    practical tips for cheating at design </a>and by tons of design articles I’ve
    read :)</em></p><h2>Other stories by me</h2><p><a href=\"https://uxdesign.cc/psychology-design-4-gestalt-principles-to-use-as-your-next-design-solution-fcdec423a6bf\"><strong>Psychology
    + design: Gestalt principles you can use as design solutions</strong><em>I have
    always believed that Psychology and Design comprise User Experience. Our profession
    entails empathy whenever we…</em>uxdesign.cc</a><a href=\"https://blog.usejournal.com/design-states-weve-been-totally-forgetting-79fcf22c88a3\"><strong>Design
    states we’ve been totally forgetting</strong><em>As UI/UX Designers, crafting
    interfaces for products is one of the biggest bulk we do in our field. Crafting
    empathic…</em>blog.usejournal.com</a><a href=\"https://blog.prototypr.io/sketch-hack-responsive-padding-solution-using-animas-stack-feature-7f814e71d34c\"><strong>Sketch
    hack: Responsive padding solution using Anima’s stack feature</strong><em>We strive
    creating consistent interfaces by using Symbol as our go-to tool but oblivious
    of making it dynamic — the…</em>blog.prototypr.io</a></p><p>For any questions,
    ping me at mhariellmosqueriola@gmail.com</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*3UfAKAp1cvQA7SexLUhZwQ.gif\"
    alt=\"giphy\"><em>giphy</em></p>"
  :author: unknown
  :topic: design
- :url: https://blog.prototypr.io/the-most-important-rule-in-ux-design-that-everyone-breaks-1c1cb188931?source=search_post---------5
  :title: The Most Important Rule in UX Design that Everyone Breaks
  :content: '<p>In Product Design, and Possibly Life Management</p><p>There is one
    principle of organization that every human should adhere to, particularly people
    who design products. Day after day, I see companies break this rule, and it is
    100% of the time to their detriment. In this article I will explain what that
    rule is, and what it means to product and service design. I’ll also raise the
    possible implications of this phenomenon on organizational management, collaboration,
    and general performance. The psychological phenomenon I will be discussing in
    this article is known as Miller’s Law. Rather than just tell you what Miller’s
    Law is, I ask you to take part in this exercise for a more immersive learning
    lesson.</p><h2><strong>The Exercise…</strong></h2><h3><strong>Step 1</strong></h3><p><em>Read
    the italicized instructions before starting. Grab a pen and paper. This is an
    exercise where you will try to recall words you’ve just read, off memory.</em></p><p><em>Below
    is a list of 20 words. Read them to comprehension , and try to memorize as many
    as possible. Try to keep the words ‘</em><em>in your head</em><em>’. Do *</em>not**
    write the words. Spend about a minute. After you are done reading, scroll down
    until you see the word ‘STOP’. Then, read step 2.*</p><p><img src="https://cdn-images-1.medium.com/max/2912/1*7peyer3zYA0-CZcsAjyU9g@2x.png"
    alt=""></p><p><em>STOP &lt; ··············································</em></p><h3><strong>Step
    2</strong></h3><p><em>Now, use your pen and paper to write down as many words
    as you can remember from the list. Think hard, but *</em>do not scroll back up**
    to view the words. If you scroll up, the experiment is ruined. Give yourself about
    half a minute…Once you have finished writing the words you tried to recall, scroll
    back up and check how many you got right.*</p><p>If you are like the vast majority
    of human beings, you will have remembered 5–9 of the words. Hundreds of experiments
    prove universality of this limitation on memory. When I first discovered this
    phenomenon, I knew it had huge implications on product design, because of the
    degree to which this limitation affects day to day tasks. This capacity for keeping
    ~7 bits of information ‘in the head’ short term, is known as <em>Miller’s Law</em>.</p><h2><strong>Miller’s
    Law · The Magic Number</strong></h2><p>In 1956 there was a paper written that
    became one of the most highly cited papers in psychology. Titled, <em>The Magical
    Number Seven, Plus or Minus Two: Some Limits on Our Capacity for Processing Information,</em>
    it was published in 1956 by the cognitive psychologist George A. Miller of Princeton
    University’s Department of Psychology in <em>Psychological Review</em>. The crux
    of the paper suggests that the number of perceptual ‘chunks’ an average human
    can hold in working memory (a component of short-term memory) is 7 ± 2. This is
    frequently referred to as <em>Miller’s law</em>. Here is a summary of the article,
    sourced from wikipedia:</p><blockquote><p>In his article, Miller discussed a coincidence
    between the limits of one-dimensional absolute judgment and the limits of short-term
    memory. In a one-dimensional absolute-judgment task, a person is presented with
    a number of stimuli that vary on one dimension (e.g., 10 different tones varying
    only in pitch) and responds to each stimulus with a corresponding response (learned
    before). Performance is nearly perfect up to five or six different stimuli but
    declines as the number of different stimuli is increased. The task can be described
    as one of information transmission: The input consists of one out of n possible
    stimuli, and the output consists of one out of nresponses. The information contained
    in the input can be determined by the number of binary decisions that need to
    be made to arrive at the selected stimulus, and the same holds for the response.
    Therefore, people’s maximum performance on one-dimensional absolute judgement
    can be characterized as an information channel capacity with approximately 2 to
    3 <a href="https://en.wikipedia.org/wiki/Bit">bits</a> of <a href="https://en.wikipedia.org/wiki/Information">information</a>,
    which corresponds to the ability to distinguish between four and eight alternatives.</p></blockquote><p>Moreover,
    the human mind can remember ~7 bits of information when completing a task that
    requires cognitive effort. This is critical, because humans are constantly performing
    tasks, and trying to juggle various stimuli in the mind when doing so. One of
    the key concepts behind Miller’s Law is ‘chunking’, which basically means assembling
    various bits of information into a cohesive gestalt. For example, the word · <em>p
    e n c i l</em> · is actually a ‘chunk’ of letters, organized into a perceptual
    gestalt. If the letters were rearranged · *c n l i p e · *it would be six separate
    chunks of information. Chunking is a critical element of information organization,
    and is the basis for our UX and organizational rule.</p><p><img src="https://cdn-images-1.medium.com/max/3606/1*PgZGGwR8UkLPnog2NcyliA@2x.png"
    alt=""></p><h2><strong>The Rule</strong></h2><p><em>Always organize elements of
    information in categories no larger than 9, but preferably ~5 chunks.</em></p><p>The
    more chunks of information you add to an ‘interface’, the more difficult it becomes
    to ‘work’, using the information at hand. This is <strong>especially critical
    for first time users, because they haven’t had the ‘practice’ needed to encode
    the interface into long term memory, or, for the behaviour to become habitual</strong>.
    I constantly see this rule being broken by giants like Facebook, Google, and Wordpress.
    Don’t even get me started on automobile interface design. The ~5 bit chunk rule
    also compliments minimalism as a rigorous design philosophy. To expound, due to
    the limitations of working memory, as a product becomes more feature-full it inevitably
    becomes more difficult to use, because the user has to manage more information
    while operating the product. This makes <strong>good</strong> information design
    so critical.</p><p>Millers Law also highlights the importance of foresight and
    proper planning in the design process, because as you add more features to a product
    — your interface must be able to accommodate those new features without breaking
    the visual foundation of what you built. Rebuilding a foundation takes immense
    time and resources.</p><p>Another perceptual phenomenon observed in relation to
    Miller’s Law is known as the <em>primacy</em>, and <em>recency effect</em>. These
    terms are used respectively to describe how we remember items sensed at the beginning
    and end of an experience, more than ones in the middle. For example, if I were
    to show you a list of words, you would more likely remember the words at the beginning
    of the list, and the end. This is also known as the <em>serial position effect</em>.
    From wikipedia:</p><blockquote><p><strong>Serial position effect</strong> is the
    tendency of a person to recall the first and last items in a <a href="https://en.wiktionary.org/wiki/Special:Search/series">series</a>
    best, and the middle items worst.<a href="https://en.wikipedia.org/wiki/Serial_position_effect#cite_note-1">[1]</a>
    The term was coined by <a href="https://en.wikipedia.org/wiki/Hermann_Ebbinghaus">Hermann
    Ebbinghaus</a> through studies he performed on himself, and refers to the finding
    that <a href="https://en.wikipedia.org/wiki/Precision_and_recall">recall</a> accuracy
    varies as a function of an item’s position within a study list.<a href="https://en.wikipedia.org/wiki/Serial_position_effect#cite_note-Ebbinghaus-2">[2]</a>
    When asked to recall a list of items in any order (<a href="https://en.wikipedia.org/wiki/Free_recall">free
    recall</a>), people tend to begin recall with the end of the list, recalling those
    items best (the <strong>recency effect</strong>). Among earlier list items, the
    first few items are recalled more frequently than the middle items (the <strong>primacy
    effect</strong>).<a href="https://en.wikipedia.org/wiki/Serial_position_effect#cite_note-3">[3]</a><a
    href="https://en.wikipedia.org/wiki/Serial_position_effect#cite_note-Murdock-4">[4]</a></p></blockquote><p>This
    observation raises huge questions in business and design. If people remember more
    at the beginning and end of an experience, how do we enhance the positives, and
    mitigate the negatives at these respective times? When does an experience truly
    begin and end? Should we be organizing more important elements at the beginning
    and end of lists due to their increased retention? These are all valid questions
    that UX designers and executives should ask when inventing or developing their
    product.</p><p><img src="https://cdn-images-1.medium.com/max/3604/1*n5o78Gu9qEh4J2ui2GY4Ig@2x.png"
    alt=""></p><p>Millers Law can be applied to any aspect of your life that involves
    performing a mildly complex task. By reducing the amount of elements in your reach/access
    — and keeping them organized by relevant chunks not exceeding 9 bits, your brain
    will be able to remember exactly <em>where</em> things are so you can access its
    functionality. When lists of items grow too large, they become very difficult
    to mentally map them, requiring the user to do more cumbersome searching.</p><p>The
    adherence to Miller’s Law is especially relevant in the light of lean methodologies
    and recent trends in tech and UX. Users want and need a trial before they purchase
    something — it’s that simple. If they don’t experience the value within the first
    day or week of using it — they won’t buy. Since new users do not have lengthly
    time to learn <em>where</em> everything is — information design needs to be planned
    and well thought out before development happens.</p><h2><strong>Millers Law Beyond
    Information</strong></h2><p>We live in a world with an exponentially increasing
    amount of information. By not organizing it <em>properly,</em> or eliminating
    some completely, it ultimately degrades our ability to complete critical tasks
    for the purposes of survival (navigation/gaining income). That is why it’s so
    useful to omit items, products, and services from your life that aren’t giving
    a quality return on investment. This falls in line with the <em>Pareto principle</em>,
    the idea that 80% of your outcomes comes from 20% of your investments. Are you
    juggling too many tasks per day to be efficient? Is your team using too many tools
    to collaborate? Do you have too many members on your team? Are you overloading
    your new employees with information, leading to confusion?</p><p>Millers law teaches
    us that humans have a finite amount of information they can process, and that
    information overload will lead to distraction that negatively affects performance.
    Companies should look for ways to organize information in a way that is much more
    digestible for their customers and employees. This could be by eliminating tools
    or applications that are producing cognitive overload, reducing the amount of
    members on a team, or even organizing your departments based on our knowledge
    of working memory.</p><p><img src="https://cdn-images-1.medium.com/max/4810/1*fKydAaHAho7Rkfs2Us-pVA.png"
    alt=""></p><p>This is especially true in new science of the concept of <em>flow,</em>
    made famous by* <em>psychologist</em> *Mihaly Csikszentmihalyi. *Flow *is a word
    Mihaly coined to describe a state of concentration or ‘absorption’ with a specific
    task that humans ultimately find rewarding, pleasurable, and fulfilling. He describes
    it as an optimal state where we perform at our best and truly live ‘in the moment’.
    One sure way to kill flow is by increasing distractions in the workplace. So,
    do you think that by giving your employees more tools, that it actually enhances
    performance? Miller’s Law teaches us time and time again this is not the case.
    When it comes to completing tasks, less is more.</p><h3><strong>Actionable Insights</strong></h3><p>Turn
    off your desktop slack notifications. Get rid of the things you never use. Stop
    checking your various inboxes. Master one tool, not many. Now start focusing.</p><p>···</p><h2>I’m
    Jeff Davidson</h2><p><em>I help companies design profitable digital products.
    Contact jeffdavidsondesign@gmail.com for project inquiries. You can also get *</em>free**
    design lessons on <a href="http://jeffdavidsondesign.com/">my site</a>.*</p><p><a
    href="http://jeffdavidsondesign.com/">http://jeffdavidsondesign.com/</a></p><iframe
    src="https://medium.com/media/b85dfbb5286d8a25cf2e754b9462cf45" frameborder=0></iframe>'
  :author: Prototypr
  :topic: design
- :url: https://medium.com/the-100-day-project/100-days-of-motion-design-463526af852f?source=search_post---------6
  :title: 100 Days of Motion Design
  :content: "<p>How I taught myself to create 50 pieces of animation in 100 days</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2036/1*3_kKCF98Ili-FN1QyOu30w.gif\"
    alt=\"\"></p><p>It was a summer night in Seattle. I ate some ice-cream, watched
    a Youtube tutorial, and downloaded a free trial of Principle. Several months later,
    I completed my 5th 100-day-project — 100 Days of Motion.</p><p>I started my first
    100-day-project back in 2015. My past projects include 100 Days of Doodle, 100
    Days of Lettering, 100 Days of Watercolor, and 100 Days of Vector Illustration.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*Tw0bHzYV8NQ8FzJh0caoLg.png\"
    alt=\"My Past 100-Day-Projects\"><em>My Past 100-Day-Projects</em></p><p>For me,
    100-day-project is a creative outlet. It allows me to express myself through art.
    The joy of creation and the challenge of learning a new craft always keeps me
    coming back for more.</p><p>In 100 Days of Motion Design, I taught myself to animate
    and created 50 pieces of vector-based animation in 100 days. You can find all
    of them on <a href=\"https://www.instagram.com/explore/tags/100daysofmotionbytx/\">Instagram</a>
    and <a href=\"https://dribbble.com/tiantianxu/tags/100daysofmotion\">Dribbble</a>.</p><p>Here
    is my creative process, the tools I used, and a reflection on the project.</p><h2>Tools</h2><h3>Sketch
    + Principle</h3><p>During the first two weeks, I illustrated in Sketch and then
    imported it into Principle for animation.</p><ul><li><p><a href=\"https://www.sketchapp.com/\">**Sketch</a>:**
    A lightweight vector editing tool that is intuitive and affordable. I find it
    a handy tool to create simple illustrations.</p></li><li><p><a href=\"http://principleformac.com/\">**Principle</a>:**
    A lightweight prototyping tool that generates interactive animation. It works
    with Sketch seamlessly. I find it a good tool for beginners to learn animation
    properties and the timeline concept.</p></li></ul><h3>Illustrator + After Effects</h3><p>After
    the first two weeks, I switched to Illustrator and After Effects for more advanced
    control.</p><ul><li><p><a href=\"https://www.adobe.com/products/illustrator.html?sdid=KKQML&mv=search&s_kwcid=AL!3085!3!227016237331!e!!g!!illustrator&ef_id=WNC7nwAAAKHjtx@A:20180807020959:s\">**Illustrator</a>:**
    The most powerful vector editing tool. The illustration created in Illustrator
    can be imported into After Effects seamlessly.</p></li><li><p><a href=\"https://www.adobe.com/products/aftereffects.html\">**After
    Effects</a>:** The most powerful animation tool. It has a steep learning curve.
    Throughout the project, I have learned to use many of its advanced controls and
    built-in visual effects.</p></li></ul><h2>Creative Process</h2><p>Creating animation
    is time-consuming. I broke the creative process down into four steps and aimed
    to complete them in two days.</p><h3>Step 1: Look for inspiration (15 mins)</h3><p>I
    collect motion design inspiration from Dribbble, Behance, and Instagram on a daily
    basis. My <a href=\"https://www.pinterest.com/tiantianxu/ui-motion/\">growing
    Pinterest board</a> has been my go-to place for inspiration.</p><p>I also collect
    motion design tutorials on Youtube. <a href=\"https://www.youtube.com/playlist?list=PL2qWmlVFdcGNrUdd-agegZo-7GFBmgKOu\">Here
    is a list of tutorials</a> I have used throughout my 100-day-project.</p><h3>Step
    2: Sketch ideas (5 mins)</h3><p>Once I had an idea, I sketched its key movements
    on my notebook.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*Um8uWFp_Zzs43LaOH34E8w.png\"
    alt=\"Sketch Ideas\"><em>Sketch Ideas</em></p><h3>Step 3: Create illustration
    (40 mins)</h3><p>I created the illustration and imported it into Principle or
    After Effects. Keeping the design file well-organized can significantly speed
    up the importation.</p><p><a href=\"https://youtu.be/yPha_s7W-0M\">This tutorial</a>
    shows how to prepare and import an Illustrator file into After Effects. Alternatively,
    the <a href=\"https://google.github.io/sketch2ae/\">Sketch2AE</a> plugin can import
    Sketch layers into After Effects.</p><h3>Step 4: Create animation (60 mins)</h3><p>I
    animated the illustration and exported the final animation as a short video. I
    posted the video to Instagram with the hashtag #100daysofmotionbytx</p><p><a href=\"https://youtu.be/jHpk1JS44yE\">This
    tutorial</a> shows how to export a video to GIF if you want to post animations
    to Dribbble.</p><h2>Day 1–14: Start with the basics</h2><p>I created my first
    animation by watching <a href=\"https://youtu.be/qYCPoqwmQK4\">Principle—Simple
    Character Animation (Jumping Donut</a>).</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*qxVO9pb3XK8Ua7xW03zF3w.gif\"
    alt=\"100 Days of Motion—Jumping Donut\"><em>100 Days of Motion—Jumping Donut</em></p><p>I
    created an interactive prototype by following <a href=\"https://youtu.be/iS3B5VT7Ejc\">Principle
    — Avatar Animation Using Scroll Gestures</a>.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*SftV3wzCVX5Ot9XgjNJa4w.gif\"
    alt=\"100 Days of Motion — Jake and Pizza\"><em>100 Days of Motion — Jake and
    Pizza</em></p><p>Soon enough, I was able to create animation in Principle without
    following tutorials.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*Oy-wi4cAOp5s-8-SvhoQqw.gif\"
    alt=\"100 Days of Motion—Day/Night Toggle\"><em>100 Days of Motion—Day/Night Toggle</em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*liFYaveAeSToocbX9RxPLw.gif\"
    alt=\"100 Days of Motion—Solar Eclipse\"><em>100 Days of Motion—Solar Eclipse</em></p><h2>Day
    15–70: Climb the learning curve</h2><p>During day 15–70, I developed the following
    methods to climb the learning curve of After Effects.</p><h3>Method 1: Watch tutorial
    and create from memory</h3><p>I watched the video tutorial in 1.5x speed and tried
    to create the animation from memory.</p><p>When necessary I wrote down the key
    steps and only revisited the tutorial if I felt stuck. I also made an effort to
    memorize the common After Effects shortcuts to help speed up the process.</p><p>I
    created the smoke effect after watching <a href=\"https://youtu.be/mYf1wElfPn4\">Smoke
    Animation — After Effects Tutorial</a>.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*M91MIdQGKJ4-EnOjkqll6A.gif\"
    alt=\"100 Days of Motion—Epicurrence\"><em>100 Days of Motion—Epicurrence</em></p><p>I
    created the lava lamp after watching <a href=\"https://youtu.be/iC3mLtDVjlc\">After
    Effects Tutorial — Lava Lamp</a>.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*pXTxwo53f0w1sLufOOT6RA.gif\"
    alt=\"100 Days of Motion—Lava Lamp\"><em>100 Days of Motion—Lava Lamp</em></p><h3>Method
    2: Rebound other people’s work</h3><p>I studied other people’s work on Dribbble
    frame by frame and then came up with my own idea.</p><p>I rebounded <a href=\"https://dribbble.com/shots/2542570-Bouncy-Fruits\">Bouncy
    Fruits</a> by Deekay. I deconstructed his work to study the “Squash and Stretch”
    animation principle.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*smPzqyHsAoGBMU6YFpKlQQ.gif\"
    alt=\"100 Days of Motion — Bouncy Desserts\"><em>100 Days of Motion — Bouncy Desserts</em></p><p>I
    rebounded <a href=\"https://dribbble.com/shots/3631324-Walk-Cycle-Tutorial\">Ducky
    Walk Cycle</a> by Tony Babel. His tutorial <a href=\"https://youtu.be/PgBo-00_GWc\">After
    Effects—Walk Cycle Tutorial</a> taught me how to animate walk cycles. (The character
    was inspired by a doodle from <a href=\"https://www.flickr.com/photos/skinnyandy/\">Skinny
    Andy</a>.)</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*7RcOznQuK8dh8Nl0IFb0MA.gif\"
    alt=\"100 Days of Motion — Mr. Teacup\"><em>100 Days of Motion — Mr. Teacup</em></p><h3>Method
    3: Re-apply learned skills intentionally</h3><p>Repetition is the key to reinforce
    a newly learned skill. I intentionally re-applied the skills I learned to create
    new animation.</p><p>I created the bouncy pumpkin by re-applying the “Squash and
    Stretch” animation principle.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*IEZP_HYSBxuhzIeX9GGzaQ.gif\"
    alt=\"100 Days of Motion—Pumpkin\"><em>100 Days of Motion—Pumpkin</em></p><p>I
    re-applied what I learned from Tony’s walk cycle tutorial to a flamingo.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*bnS6RVSCdvPgoQQ-DPOCBw.gif\"
    alt=\"100 Days of Motion—Flamingo\"><em>100 Days of Motion—Flamingo</em></p><h3>Method
    4: Read book to connect the dots</h3><p>Halfway through the 100-day-project, I
    took a day to read <Adobe After Effects CC Classroom in a Book>. I was able to
    connect the dots by revisiting the learned skills in a more systematic way. I
    also discovered new techniques that I wanted to try.<a href=\"https://www.amazon.com/Adobe-After-Effects-Classroom-release/dp/0134853253/ref=pd_lpo_sbs_14_t_0?_encoding=UTF8&psc=1&refRID=BPGEAWD0RMT4VRVJS98N\"><strong>Adobe
    After Effects CC Classroom in a Book (2018 release)</strong><em>Creative professionals
    seeking the fastest, easiest, most comprehensive way to learn Adobe After Effects
    CC (2018…</em>www.amazon.com</a></p><h2>Day 71–100: Create from the heart</h2><p>Once
    I became comfortable with the tools, I created animation from my heart.</p><p>Some
    of my work was inspired by my favorite games and movies.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*Ua9x4_3mXmzs-dYsZAC9qg.gif\"
    alt=\"100 Days of Motion—Watchtower (Inspired by video game [Firewatch](http://www.firewatchgame.com/))\"><em>100
    Days of Motion—Watchtower (Inspired by video game <a href=\"http://www.firewatchgame.com/\">Firewatch</a>)</em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*yNhg9zxYS67B6-6uk9Qf-w.gif\"
    alt=\"100 Days of Motion—Crow People (Inspired by mobile game [Monument Valley](https://www.monumentvalleygame.com/mv1))\"><em>100
    Days of Motion—Crow People (Inspired by mobile game <a href=\"https://www.monumentvalleygame.com/mv1\">Monument
    Valley</a>)</em></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*flMp9MrA7AdR8CaXfkOd8A.gif\"
    alt=\"100 Days of Motion—Enchanted Rose (Inspired by movie Beauty and the Beast)\"><em>100
    Days of Motion—Enchanted Rose (Inspired by movie Beauty and the Beast)</em></p><p>Some
    of my work was inspired by other people’s illustrations.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*FKtUlAKHCBjTftUFUgsnew.gif\"
    alt=\"100 Days of Motion—Lighthouse (Rebound of [Paulius’ Lighthouse](https://dribbble.com/shots/2668179-Lighthouse))\"><em>100
    Days of Motion—Lighthouse (Rebound of <a href=\"https://dribbble.com/shots/2668179-Lighthouse\">Paulius’
    Lighthouse</a>)</em></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*8TBjfb5U9s8cs4DH8hptzA.gif\"
    alt=\"100 Days of Motion—Underwater (Rebound of [Dave Chenell’s Whale Migration](https://dribbble.com/shots/2128057-Whale-Migration))\"><em>100
    Days of Motion—Underwater (Rebound of <a href=\"https://dribbble.com/shots/2128057-Whale-Migration\">Dave
    Chenell’s Whale Migration</a>)</em></p><p>Below was my submission to the <a href=\"https://www.uplabs.com/posts/day-83-84-carousel-loader\">Uplab
    loader design challenge</a>. It pushed me out of my comfort zone and motivated
    me to learn new techniques.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*AEaPHQDq1i1UcXnPxUi3QQ.gif\"
    alt=\"100 Days of Motion—Carousel\"><em>100 Days of Motion—Carousel</em></p><p>I
    created artwork to promote <a href=\"https://www.typethursday.org/seattle/\">Type
    Thursday Seattle</a> — a monthly design meetup that discusses work-in-progress
    projects that focus on letterforms.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*xd6pAKWoP23E9JsTcPlt6g.gif\"
    alt=\"100 Days of Motion—Neon Light\"><em>100 Days of Motion—Neon Light</em></p><p>I
    created animation for places I have been and places I want to go.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*NFj2bEDfFiJRnwubuLLqkg.gif\"
    alt=\"100 Days of Motion—Hot Air Balloon\"><em>100 Days of Motion—Hot Air Balloon</em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*BPWZB7h4dsUVrzgwgVFkEg.gif\"
    alt=\"100 Days of Motion—Aurora\"><em>100 Days of Motion—Aurora</em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*v8fb77loy38VDxxzruo4BA.gif\"
    alt=\"100 Days of Motion — Sky Lantern\"><em>100 Days of Motion — Sky Lantern</em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*CDa_QnghSNvWuh_K2KhP6w.gif\"
    alt=\"100 Days of Motion — Forest (Rebound [Mikael Gustafsson’s Birds](https://dribbble.com/shots/2940050-Birds))\"><em>100
    Days of Motion — Forest (Rebound <a href=\"https://dribbble.com/shots/2940050-Birds\">Mikael
    Gustafsson’s Birds</a>)</em></p><p>At the end of the 100-day-project, I rebounded
    the <a href=\"https://www.instagram.com/p/BK-ZYPCB3Q-/?taken-by=tiantianxu\">Galaxy
    Girl</a> from my 100 Days of Watercolor.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*ivsGDiEXbF218KSsQQuYqw.gif\"
    alt=\"100 Days of Motion—Galaxy\"><em>100 Days of Motion—Galaxy</em></p><h2>Reflecting</h2><h3>1.
    Driven by ideas</h3><p>Once I had an idea, I was driven to bring it to life. It
    did not matter what techniques I needed to learn.</p><p>For example, I wanted
    to express my love for reading. To make my idea of flipping book come true, I
    found a tutorial <a href=\"https://youtu.be/yTOEM8bKx_Y\">Open Your Book</a> on
    Youtube and learned how to turn on 3D layer for a 2D object.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*5-v2vsThRNs9Zpbpx3cmuw.gif\"
    alt=\"100 Days of Motion—Book Flip\"><em>100 Days of Motion—Book Flip</em></p><p>Similarly,
    I wanted to create a cup of pumpkin spice latte. I found a tutorial <a href=\"https://youtu.be/tVP61zaCskI\">Flat
    2D Smoke Clouds</a> on Youtube and learned how to use slider control and wiggle
    expression.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*HXNJ5NJQq8UEdpDZTZ_Mig.gif\"
    alt=\"100 Days of Motion—Pumpkin Spice Latte\"><em>100 Days of Motion—Pumpkin
    Spice Latte</em></p><blockquote><h1>The idea-driven approach has kept me motivated
    and pushed me to discover new techniques.</h1></blockquote><h3>2. Stay humble</h3><p>I
    was optimistically confident about my motion design skill at the beginning of
    the project. My confidence dropped rapidly as I started exploring After Effects
    — the huge skill gap made me realize how limited my experience and knowledge in
    motion design actually was.</p><p>The <a href=\"https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect\">Dunning-Kruger
    effect</a> describes the cognitive bias in which people of low-ability have illusory
    superiority and mistakenly assess their ability as greater than it is.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*6lSqrkrj6ghgEdp_KTRexQ.png\"
    alt=\"Dunning-Kruger Effect\"><em>Dunning-Kruger Effect</em></p><p>The more I
    became aware of my own incompetence, the humbler I became.</p><blockquote><h1>In
    order to improve my own craft, I need to stay humble, regardless of how much I
    thought I already knew.</h1></blockquote><h3>3. Be the 1%</h3><p>Before I started
    the 100-day-project, I spent most of my spare time consuming content: social media,
    Netflix… Sometimes I might even take an online class or read a book. But all of
    these things were just input.</p><p>In Internet culture, there is a <a href=\"https://en.wikipedia.org/wiki/1%25_rule_(Internet_culture)\">“1%
    rule”</a> that describes the participation rate of an internet community: only
    1% of the participants of a community actively create new content, 9% of the participants
    edit content, and 90% of the participants only view content.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*IfWaNRUhCcOn1xhsyiI8VA.png\"
    alt=\"1% Rule (Internet Culture)\"><em>1% Rule (Internet Culture)</em></p><p>Since
    I started the 100-day-project, I became a creator. I started making things I like,
    learning a new craft, and influencing people around me in a positive way.</p><blockquote><h1>I
    want to belong to the 1% people who creates content — this thought has motivated
    me to show up every day, especially when it’s hard.</h1></blockquote><h2>End</h2><p>Looking
    back, I’m thankful for people who created tutorials and posted them on Youtube
    for free. I am deeply motivated by all the creatives out there who are making
    beautiful things in volume, consistently.</p><p>Here are 10 creatives who have
    kept me inspired throughout the project:</p><ul><li><p><a href=\"https://twitter.com/pablostanley\">Pablo
    Stanley</a></p></li><li><p><a href=\"https://dribbble.com/galshir\">Gal Shir</a></p></li><li><p><a
    href=\"https://dribbble.com/TonyBabel\">Tony Babel</a></p></li><li><p><a href=\"https://dribbble.com/slimjimstudios\">James
    Curran</a></p></li><li><p><a href=\"https://dribbble.com/eranmendel\">Eran Mendel</a></p></li><li><p><a
    href=\"https://dribbble.com/Jung_Hanna\">Hanna Jung</a></p></li><li><p><a href=\"https://dribbble.com/yupnguyen\">Yup
    Nguyen</a></p></li><li><p><a href=\"https://dribbble.com/MikaelGustafsson\">Mikael
    Gustafsson</a></p></li><li><p><a href=\"https://dribbble.com/dchen\">Dave Chenell</a></p></li><li><p><a
    href=\"https://www.instagram.com/beeple_crap/\">Beeple (Mike Winkelmann)</a></p></li></ul><p><em>Thanks
    for reading! Follow me on <a href=\"https://www.instagram.com/tiantianxu/\">**Instagram</a></em>*
    and <a href=\"https://twitter.com/tiantianxu\">**Twitter</a>** for my next 100
    day project* \U0001F60A</p><p><em>If you enjoyed this article, you might also
    enjoy the following articles on my past projects.</em><a href=\"https://medium.com/the-100-day-project/100-days-of-vector-illustration-6f2f10209b0b\"><strong>100
    Days of Vector Illustration</strong><em>My thought process on creating illustration
    using Sketch</em>medium.com</a><a href=\"https://medium.com/the-100-day-project/100-days-of-lettering-a2b01ade996f\"><strong>100
    Days of Lettering</strong><em>My thoughts and process</em>medium.com</a><a href=\"https://medium.com/the-100-day-project/100-days-of-doodle-982391750edd\"><strong>100
    Days of Doodle</strong><em>3 things I learned from the 100 day project</em>medium.com</a></p><p><em>Special
    thanks to <a href=\"undefined\">Nina Wei</a>, <a href=\"undefined\">Grace Fan</a>,
    <a href=\"https://www.instagram.com/maomao_niki/\">Niki Ni</a>, and <a href=\"https://www.instagram.com/jonathansmuda/\">Jonathan
    Smuda</a> for all their help writing this post.</em></p>"
  :author: The 100 Day Project
  :topic: design
- :url: https://medium.com/free-code-camp/before-you-can-master-design-you-must-first-master-the-fundamentals-1981a2af1fda?source=search_post---------7
  :title: Before you can master design, you must first master the fundamentals
  :content: "<p>Before you can master design, you must first master the fundamentals</p><p>Last
    week, one of my readers sent in a question: <strong>How do I become a better visual
    designer?</strong></p><p>As I was thinking about how to answer this question,
    my mind wandered to my experience with learning Mandarin Chinese. Recently, I
    decided to teach myself Mandarin. When it comes to learning a new language, you
    first have to start with the fundamentals. Nouns, pronouns, and verbs form the
    basis for conveying more complex ideas.</p><p>Language is a way that people communicate
    concepts to one another. <strong>Visual design is a visual language.</strong>
    And learning visual design is no different from learning a new language.</p><p>*<em>Good
    visual designs aren’t born. They are made. *</em>The key to becoming a better
    visual designer is rigor. You will only improve as a visual designer if you make
    a conscious effort.</p><p>Here are some fundamentals you should master so you
    can take your visual design to the next level.</p><h2>Fundamental #1: Go back
    to the basics with type</h2><p>You can tell a lot about a designer by looking
    at their typography. <strong>This is because type is a fundamental basis for design.</strong></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*JS9qoaHxjQDrOzMevwT64g.png\"
    alt=\"[Type as imagery](https://dribbble.com/shots/1829402-Discount-Logotype)\"><em><a
    href=\"https://dribbble.com/shots/1829402-Discount-Logotype\">Type as imagery</a></em></p><p>You
    can create entire designs with just type. You can also base designs on type, taking
    subtle queues from the fonts that you choose. In order to improve the typography
    in your designs, first start by learning the basics.</p><p>Develop a vocabulary
    for describing type. Learn about what terms like tracking, kerning, and leading
    mean. The article <a href=\"https://designschool.canva.com/blog/typography-terms/\">A
    Beautifully Illustrated Glossary Of Typographic Terms You Should Know</a> is a
    great visual resource for learning those terms.</p><p>Then, if you want a comprehensive
    understanding of how to apply typography to the web, read <a href=\"https://webtypography.net/toc/\">Web
    Typography: The Elements <em>of</em> Typographic Style Applied to the Web</a>.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2800/1*vpYtKQ-Dpf74I697FrWTZQ.png\"
    alt=\"[Font pairing can make or break a design](https://www.behance.net/gallery/35768979/Typography-Google-Fonts-Combinations)\"><em><a
    href=\"https://www.behance.net/gallery/35768979/Typography-Google-Fonts-Combinations\">Font
    pairing can make or break a design</a></em></p><p>Finally, learn how to pair fonts
    together. A great resource for this is <a href=\"https://www.typewolf.com/site-of-the-day/fonts/circular\">FontWolf</a>
    and <a href=\"http://fontpair.co/\">FontPair</a>. Being able to pair fonts together
    will dramatically change the dynamics of your design.</p><p>For a more in depth
    exploration of typography, you can read my article: <a href=\"https://medium.com/@JonathanZWhite/typography-can-make-your-design-or-break-it-7be710aadcfe\">Typography
    can make your design… Or break it.</a></p><h2>Fundamental #2: Use space to create
    balance</h2><p>Spacing helps establish vertical and horizontal motion in your
    designs. It’s pivotal for creating visual hierarchy and forming association between
    elements.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*Go7ZCGcIMD8t4W-XQ9M8fA.jpeg\"
    alt=\"[Create balance and visual harmony](https://dribbble.com/shots/3318361-Weekly-Mixtape-08-Margin)\"><em><a
    href=\"https://dribbble.com/shots/3318361-Weekly-Mixtape-08-Margin\">Create balance
    and visual harmony</a></em></p><p>You can always look at sites like <a href=\"https://www.behance.net/\">Behance</a>
    and <a href=\"https://dribbble.com/\">Dribbble</a> for inspiration on how to space
    elements. But <strong>it’s important to develop your own intuition for using space
    to create balance and visual harmony.</strong></p><p>When studying typography,
    you may have noticed the importance of spacing in type. Adjusting the kerning
    and leading for fonts is a great exercise for developing your eye for spacing.
    For this reason, I recommend you try <a href=\"http://type.method.ac/#\">KernType</a>,
    a game where you compare your kerning solution to a typographer’s solution.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2604/1*8BkonUnCDEgfhmwxESTI7g.png\"
    alt=\"[Simplification of award winning poster by Craig Welsh](http://www.howdesign.com/design-competition-galleries/poster-design-awards/poster-design-winners/)\"><em><a
    href=\"http://www.howdesign.com/design-competition-galleries/poster-design-awards/poster-design-winners/\">Simplification
    of award winning poster by Craig Welsh</a></em></p><p>Another exercise that will
    help develop your eye is the following: Take an existing design, draw an x and
    y axis, simplify the design into basic shapes, analyze how the design is balanced,
    and then rearrange the elements. Pay close attention to how negative space affects
    the balance of the elements.</p><h2>Fundamental #3: Use size to establish visual
    hierarchy</h2><p>When it comes to creating visual hierarchy, sizing is second
    to none. <strong>By using size to convey visual relationships between elements,
    you can establish flow.</strong></p><p><img src=\"https://cdn-images-1.medium.com/max/3488/1*vzUuGyuZAkjNL01dUxKj0Q.png\"
    alt=\"Sizing is one of the reasons why grids are useful\"><em>Sizing is one of
    the reasons why grids are useful</em></p><p>Sizing is one of the reasons why grids
    are useful. You can use grids to help you size elements using ratios to convey
    importance.</p><p>Once you have determined a size for an element, keep it the
    same across all instances of it. <strong>In design, consistency is king.</strong></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*De1u6HLHDzrq1Y_uosNguQ.png\"
    alt=\"[Use size to establish visual hierarchy](https://dribbble.com/shots/2475367-Intercom-s-Developer-Hub)\"><em><a
    href=\"https://dribbble.com/shots/2475367-Intercom-s-Developer-Hub\">Use size
    to establish visual hierarchy</a></em></p><h3><strong>Here’s an exercise that
    will help develop your eye for sizing.</strong></h3><p>The key is asking for feedback.</p><p>Sketch
    or wireframe a landing page. Then ask a friend to look at your design. Get them
    to circle the elements that stand out the most. Afterwards, have them number the
    circled elements based on visual weight. Are the results what you expected?</p><p>When
    doing this exercise, keep the following questions in mind:</p><ul><li><p>What
    is the conversion goal of the landing page? How can you optimize to meet your
    goal?</p></li><li><p>What is the relationship between different elements? What
    elements do you want to emphasize?</p></li><li><p>Does your layout successfully
    guide a user’s eye through the page?</p></li></ul><h2>Fundamental #4: Use color
    to convey meaning</h2><p>Color plays many roles. It conveys meaning, creates emotional
    resonance, and brings unity to designs.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*BzRqDemAU1GJnv-IZQ46jQ.png\"
    alt=\"[Color helps convey meaning in design](https://dribbble.com/shots/3302492-Desktop-Search-Results)\"><em><a
    href=\"https://dribbble.com/shots/3302492-Desktop-Search-Results\">Color helps
    convey meaning in design</a></em></p><p>For a deep dive into color, you can read
    my article <a href=\"https://medium.freecodecamp.com/designing-in-color-abd358660a7b\">Designing
    in Color</a>. Here are a few key points from the article.</p><ul><li><p>Identify
    the purpose of your design before choosing a color palette. <strong>Good design
    align its color palette with its purpose.</strong></p></li><li><p>Identify your
    audience. People perceive colors differently. Colors have different effects on
    people based on their personal preference, cultural upbringing, and experiences.</p></li><li><p><strong>When
    choosing a color palette, simplicity is key.</strong> Choose a neutral background
    color. Then choose a primary and secondary accent color. Finally based on your
    other colors, choose an error and success color for your different UI states.</p></li></ul><p>Once
    you have a good grasp on the basics of color theory, color comes down to experimentation
    and iteration. <strong>Actively try break out of your comfort zone and try new
    color palettes.</strong></p><p><img src=\"https://cdn-images-1.medium.com/max/13248/1*mNh06wbZh_pWx55ZHb0C7g.png\"
    alt=\"Movies and shows are a great source of color inspiration\"><em>Movies and
    shows are a great source of color inspiration</em></p><h3><strong>Here’s an exercise
    that will help develop your eye for color.</strong></h3><p>Spend time compiling
    color palettes for things around you like photographs, magazines, and your favorite
    shows. Then take an existing design and apply new color palettes to it.</p><p>Take
    note of how it changes the mood and tone of the design. Does it change the meaning
    as well?</p><p>Treat your work as a craft, in that there is always something that
    you can improve. <strong>Rely on yourself to be the motivation to become a better
    designer.</strong></p><p>What are you strategies for improving as a designer?
    Leave me a note or send me a <a href=\"https://twitter.com/jonathanzwhite\">tweet</a>
    on Twitter.</p><p>If you enjoyed this article, you might also enjoy <a href=\"https://medium.com/@JonathanZWhite/css-in-javascript-the-future-of-component-based-styling-70b161a79a32\">CSS
    in Javascript with Aphrodite, a library by Khan Academy</a>.<a href=\"https://medium.com/@JonathanZWhite/css-in-javascript-the-future-of-component-based-styling-70b161a79a32\"><strong>CSS
    in Javascript: The future of component based styling</strong><em>This week, I
    want to introduce you to the concept of CSS in Javascript with Aphrodite by Khan
    Academy. Aphrodite lets…</em>medium.com</a></p><p>You can find me on Medium where
    I publish every week. Or you can follow me on <a href=\"https://twitter.com/JonathanZWhite\">Twitter</a>,
    where I post non-sensical ramblings about design, front-end development, and virtual
    reality.</p><p><em>P.S. If you enjoyed this article, it would mean a lot if you
    click the \U0001F49A and share with friends.</em></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*mxQhZLqG7l5dMLvxYAklgw.png\"
    alt=\"\"></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*UOsjAdUZ9O0QSyfXOpQPbA.png\"
    alt=\"\"></p>"
  :author: freeCodeCamp.org
  :topic: design
- :url: https://medium.com/startup-grind/how-to-not-suck-at-design-a-5-minute-guide-for-the-non-designer-291efac43037?source=search_post---------8
  :title: How to Not Suck at Design, a 5 Minute Guide for the Non-Designer.
  :content: '<p>How to not suck at design, a 5 minute guide for the non-designer.</p><h3>Good
    design principles can be learned and exercised by anyone. This guide will give
    you a basic knowledge of practical design tips you can apply today (and impress
    your design friends).</h3><p><img src="https://cdn-images-1.medium.com/max/2130/1*od5MikudQbPX22xcTmJs9A.png"
    alt=""></p><h2>If you don’t believe you can learn design, just remember what our
    legendary friend David Eric Grohl said about learning new things:</h2><blockquote><p>I
    never took lessons to play the drums. I never took lessons to play the guitar.
    I just sort of figured it out. I think that if you’re passionate about something
    and you’re driven and you’re focused, you can do anything you want to do in life.—
    Dave Grohl, Foo Fighters</p></blockquote><p>With Mr. Grohls words in mind, are
    you ready for your crash course? Buckle up buttercup, here we go in no particular
    order:</p><h2>1. Use plenty of contrast</h2><p>The background and font color should
    be different enough to not cause eyestrain. Typically black text on white backgrounds
    tends to be the most legible. Stay away from the light gray, yellows and greens.
    If you have to squint to read then you know you have a problem.</p><p><img src="https://cdn-images-1.medium.com/max/2068/1*6GMYLFdIiNOGDzS7w1aetg.png"
    alt="From: [https://developer.apple.com/design/tips/](https://developer.apple.com/design/tips/)"><em>From:
    <a href="https://developer.apple.com/design/tips/">https://developer.apple.com/design/tips/</a></em></p><h2>2.
    Almost Black is easier to read than Black</h2><p>If you have the choice, try using
    the color #333333 RGB (51,51,51) instead of pure black for your text. Pure black
    on white jiggles for the eye and makes the letters hard to focus on.</p><p><img
    src="https://cdn-images-1.medium.com/max/3004/1*YMO-wtnsKjmOn31UFVZR-Q.png" alt=""></p><h2>3.
    Important Content First</h2><p>Layout the most important information first to
    clearly support the primary use case of your app or website. Important content
    should be visible without zooming or scrolling or tapping.</p><p><img src="https://cdn-images-1.medium.com/max/4284/1*4pP1yxz0D-uSp15vD8ogjA.png"
    alt="From: [https://developer.apple.com/design/tips/](https://developer.apple.com/design/tips/)"><em>From:
    <a href="https://developer.apple.com/design/tips/">https://developer.apple.com/design/tips/</a></em></p><p>Lets
    view some examples of good visual hierarchy in the wild.</p><p>Instagram (below,
    on the left) puts a clear focus on the photo/video posted by the user.</p><p>Pinterest
    (below, on the right), creates visual hierarchy by pinning their search bar to
    the top followed by their nice grid below. Pinterest is very intentional about
    having their search box as the first item on the page.</p><h2>Search is the core
    function of the app, folks use Pinterest to discover and browse.</h2><p><img src="https://cdn-images-1.medium.com/max/2000/1*hl6ONnEMZNYzbJtkToGBOg.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*mQxWsZbZG-pLZ1Gv4jqXBg.png"
    alt=""></p><h2>Lets look at two more examples</h2><p><strong>Spotify</strong>
    (below, on the left) clearly is celebrating the album artwork and song title first
    and player controls second. Even though the player controls are secondary, Spotify
    gives more weight to the play and pause button over fast forward and reverse.</p><p><strong>Facebook</strong>
    (below, on the right), looking very similar to Instagram, chooses to put the content
    of your friend front and center.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*80OnHwSFS3sq_aWLQP9e3A.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*FpK3AJtf1x_aFejQfANmWw.png"
    alt=""></p><h2>4. Align all the things</h2><p>The fastest way to fix something
    that feels off or janky is to make sure the alignment is not off. When designers
    talk about the need to use a “grid” they are trying to alert the team to the issue
    of mis-alignment.</p><h3>Fixing alignment is one of the easiest improvements we
    can make to any app or website and instantly makes an app or website look 10x
    better.</h3><p><img src="https://cdn-images-1.medium.com/max/2022/1*UYdH7fskXdO65YTqCUn5ZA.png"
    alt="From: [https://developer.apple.com/design/tips/](https://developer.apple.com/design/tips/)"><em>From:
    <a href="https://developer.apple.com/design/tips/">https://developer.apple.com/design/tips/</a></em></p><h3>Lets
    look at another alignment example, this time from medium.com</h3><p><img src="https://cdn-images-1.medium.com/max/2928/1*f1PMcpJ8tCoz_pMIa72sIQ.png"
    alt=""></p><p>Here is a web layout I tweaked from Medium.com — how does this look
    to you?</p><p>Does anything feel off about this layout?</p><p><strong>Hint:</strong>
    notice the alignment on the left edge. How does it look?</p><p>On the left I highlighted
    the visual river caused by mis-alignment, on the right I simply left aligned all
    the major content blocks.</p><p><img src="https://cdn-images-1.medium.com/max/2924/1*872yG5oiWgjh6vP9nBIA0g.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2844/1*nQ_Mw28W2cVmmxRexaP9_g.png"
    alt="Wonky alignment on the left creating a visual river, consistent alignment
    on the right"><em>Wonky alignment on the left creating a visual river, consistent
    alignment on the right</em></p><p><img src="https://cdn-images-1.medium.com/max/2928/1*f1PMcpJ8tCoz_pMIa72sIQ.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/2816/1*-bOzuHBxS0lKp0WE_w1e0w.png"
    alt="Bad alignment on the left, Fixed alignment on the right"><em>Bad alignment
    on the left, Fixed alignment on the right</em></p><h2>5. Text size with spacing</h2><h3>We
    are not designing for ants.</h3><p>Increasing font size will make your content
    much easier to read and digest coupled with some liberal line spacing.</p><p><img
    src="https://cdn-images-1.medium.com/max/5228/1*CXkhJJqwSiX8jsuEDKAojA.png" alt="Good
    text size vs bad text size from: [https://developer.apple.com/design/tips/](https://developer.apple.com/design/tips/)"><em>Good
    text size vs bad text size from: <a href="https://developer.apple.com/design/tips/">https://developer.apple.com/design/tips/</a></em></p><p><img
    src="https://cdn-images-1.medium.com/max/5416/1*lz4urlNYgmMZ3Jv5ctSRvQ.png" alt="Good
    spacing vs. bad spacing size from: [https://developer.apple.com/design/tips/](https://developer.apple.com/design/tips/)"><em>Good
    spacing vs. bad spacing size from: <a href="https://developer.apple.com/design/tips/">https://developer.apple.com/design/tips/</a></em></p><h2>6.
    Use a list view for results, if order is important</h2><p>Most mobile and web
    apps have some type of search and there can be some healthy design debates on
    how to display the results.</p><p><strong>If order is important then a list view
    is most effective.</strong></p><p>If order doesn’t matter and you would like to
    encourage discovery (like Pinterest or AirBnB) then a grid view will encourage
    a gaze pattern to support discovery.</p><p><img src="https://cdn-images-1.medium.com/max/5376/1*4D9S-FV_ZNbZd8ZVQ_r0RQ.png"
    alt="[How do Users View Search Results Presented in a Grid Layout](http://usabilitynews.org/how-do-users-view-search-results-presented-in-a-grid-layout/)?
    By [**C. Siu ](mailto:cxsiu@wichita.edu)**&amp; [**B. Chaparro](mailto:barbara.chaparro@wichita.edu)**"><em><a
    href="http://usabilitynews.org/how-do-users-view-search-results-presented-in-a-grid-layout/">How
    do Users View Search Results Presented in a Grid Layout</a>? By <a href="mailto:cxsiu@wichita.edu">**C.
    Siu </a></em><em>&amp; <a href="mailto:barbara.chaparro@wichita.edu">**B. Chaparro</a></em>**</p><h2>7.
    Design in black and white first, add color later</h2><p><strong>Designing</strong>
    in black and white will keep the focus on solving and designing the core experience
    of your app.</p><p>*<em>Color *</em>evokes strong emotional responses and often
    interrupts our ability to focus on the core design problem.</p><p><img src="https://cdn-images-1.medium.com/max/3980/1*dv0jkFB84Bbl8H3OzUZAVA.png"
    alt=""></p><h2>8. Create comfortable design</h2><p>Hand strain is a real issue,
    consider the graphic below from Luke Wroblewski’s amazing article: <a href="https://www.lukew.com/ff/entry.asp?1649">Responsive
    Navigation: Optimizing for Touch Across Devices</a>.</p><p>Luke lays out the areas
    of a phone that are easiest to reach and use (at least for right handers) — I’d
    love to see apps have a setting where you can switch the interface from right
    hand dominant to left hand dominant.</p><p>Many effective mobile apps keep navigation
    and core actions in the bottom third of the phone.</p><p><img src="https://cdn-images-1.medium.com/max/3568/1*i4pQ-uAVToCwpuvVcD1SxA.png"
    alt="Image Credit: Luke Wroblewski [Responsive Navigation: Optimizing for Touch
    Across Devices](https://www.lukew.com/ff/entry.asp?1649)"><em>Image Credit: Luke
    Wroblewski <a href="https://www.lukew.com/ff/entry.asp?1649">Responsive Navigation:
    Optimizing for Touch Across Devices</a></em></p><h2>9. Borrow Color Palettes</h2><p>Color
    is a bit of an elusive dark art. I highly recommend heading over to <a href="http://www.dribbble.com">Dribbble</a>
    and searching for “Color Palettes” or use a color palette generator like <a href="https://coolors.co/">Coolors</a>
    or <a href="http://www.vanschneider.com/colors/">Color Claim</a>.</p><h3>Save
    yourself the hours of endless debate and second guessing.</h3><p><img src="https://cdn-images-1.medium.com/max/5484/1*H6zFF-78LOcBYPO9Kktkdw.png"
    alt=""></p><h2>10. Use Apple and Google OS Conventions</h2><p>Apple and Google
    have created incredible resources for anyone building software for Android or
    iOS.</p><p>For example, <a href="https://material.io/">the Google Material spec</a>
    has guidelines, resources, colors, icons and components to help jump start the
    design of your app.</p><p><a href="https://developer.apple.com/ios/human-interface-guidelines/overview/design-principles/">Apple
    has the HIG — their Human Interface Guidelines</a>, which outline everything you
    need to know on how to design an iOS app.</p><p><img src="https://cdn-images-1.medium.com/max/5248/1*n2SzI7GZiS3DdyqfQZ2ezg.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/4168/1*LcRD49Dd-CwcXgN60HW3dg.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/4644/1*OULbjyb987Wy36M-mLD7uQ.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/4088/1*38QpPuXwKGwFzPyPHmcT6g.png"
    alt=""></p><p><img src="https://cdn-images-1.medium.com/max/4092/1*6nbu6L3Hz8nsLP6mitLbwA.png"
    alt="Various screenshots from [Google Material Design](https://material.io/) and
    [The Apple Human Interface Guidelines](https://developer.apple.com/ios/human-interface-guidelines/overview/design-principles/)"><em>Various
    screenshots from <a href="https://material.io/">Google Material Design</a> and
    <a href="https://developer.apple.com/ios/human-interface-guidelines/overview/design-principles/">The
    Apple Human Interface Guidelines</a></em></p><h2>Remember, design takes practice</h2><p>Training
    your eye to look for the design issues takes a bit of time and practice, but you
    will find the above tips will go a long way to making anything you create better
    designed.</p><p>If you found this article helpful please tap or click “♥︎” and
    recommend this and share this with a friend who needs design help :)</p><p><img
    src="https://cdn-images-1.medium.com/max/2208/1*xTGvpsG_lwJvGKaTlGc-yQ.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2208/1*evD8OQSj8LDRlbGsYTqWyA.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*sdKS9u5ciPkHD0tjQfMeTw.png" alt=""></p>'
  :author: Startup Grind
  :topic: design
- :url: https://uxplanet.org/10-small-design-mistakes-we-still-make-1cd5f60bc708?source=search_post---------9
  :title: 10 Small Design Mistakes We Still Make
  :content: '<p>Don’t Make Me Think by Steve Krug</p><p><img src="https://cdn-images-1.medium.com/max/4800/1*BxGQrGiTgBs8LFhrxW0UYg.png"
    alt=""></p><p>The saying that “good design is obvious” is pretty damn old, and
    I am sure it took different shapes in the previous centuries. It referred to good
    food, music, architecture, clothes, philosophy and everything else.</p><p>We forget
    that the human mind changes slowly, and the knowledge you have about human behaviour
    will not go old for at least 50 years or so. To make it easy for you, we need
    to keep consistent with a couple of principles that will remind us of how to design
    great products. We should be told at least once a month about these small principles
    until we live and breathe good design.</p><blockquote><h1>The human brain’s capacity
    doesn’t change from one year to the next, so the insights from studying human
    behaviour have a very long shelf life. What was difficult for user twenty years
    ago continues to be difficult today — J. Nielsen</h1></blockquote><h2>Revisiting:
    Don’t Make Me Think</h2><p>Steve Krug laid out some useful principles back in
    2000, after the dot-com boom which are still valuable and relevant nowadays. Even
    after his revised version, nothing changed. Yes, you will tell me that the looks
    are more modern and the websites are more organised and advanced (no more flash!).
    But what I mean about that is — nothing has changed in human behaviour. We will
    always want the principle “don’t make me think” applied to any type of product
    we interact (whether it is a microwave, tv, smartphone or car).</p><p><img src="https://cdn-images-1.medium.com/max/4800/1*xWVMBLS8gbe77duA6yjYbw.png"
    alt=""></p><h2>1. We don’t read, we scan</h2><p>The reason for that is — we are
    on a mission, and we only look for the thing that interests us. For example, I
    rarely remember myself going through all the text on the homepage of a product
    website. Why? Because most of the web users are trying to get something done,
    and done quickly. We do not have time to read more than necessary. And we still
    put a lot of text because we think people need to know that. Or as some designers
    say: “it adds to the experience”.</p><p><img src="https://cdn-images-1.medium.com/max/4800/1*maub7jjaZdLjYeCbAfRTQw.png"
    alt=""></p><ul><li><p>*<em>Use plenty of headings — *</em>they tell you what each
    section is about or if they are relevant to the person. Either way, they help
    you decide to scan further or leave the website</p></li><li><p>*<em>Keep paragraphs
    short — *</em>long paragraphs makes it harder for readers to keep their place,
    and they are harder to scan than a series of short paragraphs. There’s always
    a reasonable place in a paragraphs to break it in two.</p></li><li><p>*<em>Use
    bulleted lists — *</em>almost anything can be a bullet list. Do you have a sentence
    that separates many things with comma? Then it can be a bullet list. Also, don’t
    forget to leave space between bullet list rows for optimal reading. Take Medium
    as an example.</p></li><li><p>*<em>Highlight key terms — *</em>much of page scanning
    process consists of looking for keywords and phrases. Formatting the most important
    one in bold, makes them easier to find. Also, don’t highlight too many things
    because it will lose effectiveness.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/4800/1*XtLgJ54SiEmZ1juwczJERQ.png"
    alt=""></p><h2>2. Create effective visual hierarchies</h2><p>Another important
    aspect that will help scanning a page is offering a proper visual hierarchy. We
    have to make it clear that the appearance on a page portrays the relationship
    between elements. So there are a couple of principles for that:</p><ul><li><p><strong>The
    more important something is, the more prominent it is.</strong> The most important
    stuff are either larger or bolder in distinctive colour set.</p></li><li><p><strong>Things
    that are related logically, are related visually.</strong> For example things
    are similar by grouping them under the same visual style, or under the same heading.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/4800/1*vePi3S2_iyRU5MKdEbQ_iQ.png" alt=""></p><h2>3.
    Don’t reinvent the wheel</h2><p>We believe that people want something new and
    more. But we forget that there are so many applications on the market that each
    demands our time. Each of them has different interactions, and we need to learn
    each one of them. And our mind blows up when: “Oh man, another app to learn?!”.</p><h3>It
    is an important point to know before I am going to say this:</h3><p>We as designers,
    when asked to design something new, have a temptation to try and reinvent the
    wheel. Because doing something like everyone else seems somehow wrong. We have
    been hired to do something different. Not to mention that the industry rarely
    offers awards and praises for designing something that has “the best use of conventions”.</p><blockquote><h1>Before
    reinventing the wheel, you have to understand the value (time, effort, knowledge)
    that went into what you are trying to disrupt and innovate.</h1></blockquote><p><img
    src="https://cdn-images-1.medium.com/max/4800/1*TIujSjdfEJN1ZaW1kqxOPg.png" alt=""></p><h2>4.
    Product instructions must die</h2><p>Our job is to make stuff clear and obvious.
    If obvious is not an option, then at least self-explanatory. The main thing you
    need to know about instructions is that nobody is going to read them. We should
    aim for removing the instructions to make everything self-explanatory. But when
    they are necessary, cut as much as possible. (but, really, nobody is going to
    read them). We muddle through.</p><blockquote><h1>If it is not obvious then we
    should aim for self-explanatory.</h1></blockquote><p>Take IKEA as an example.
    If you gave an average person to assemble a wardrobe from IKEA, I am sure that
    he will assemble it right most of the times. Why? It is, most of the cases, apparent
    on how it should be assembled if we have a clear picture in front of us. But even
    in instances where they look at the instructions, there are no words — only images.</p><p><img
    src="https://cdn-images-1.medium.com/max/4800/1*8jnrHZclLHqmqYRRPrFX2g.png" alt=""></p><h2>5.
    We do not care how your product works</h2><p>For most of the people, it is not
    essential to know or understand how your product works. Not because they are not
    intelligent, but merely because they do not care. <strong>So once they nail down
    the use of your product, they will rarely switch to something else.</strong></p><p>Let’s
    take as an example the Apple AirPods. We can all admit that they are the worst
    sounding earbuds for the price you pay. But when I look at how people interact
    with it, I understand the real reason why they buy it. They do not make you think
    about why it is not working. You even don’t notice they have new technology.</p><p>I
    look at how my mom interacts with them, and she never asked me what technology
    is behind or how they work. She knows that whenever you open the case near your
    device, it is going to connect. It is that easy.</p><p><img src="https://cdn-images-1.medium.com/max/4800/1*l9C6irFunOYMa2cyKsiZBA.png"
    alt=""></p><h2>6. People don’t look for “subtle cues” — we are in a hurry</h2><p>My
    favourite one. We, designers, love giving the users subtle effects and add beautiful
    delights. Right? Well, what if I told you that your users don’t care about it?
    No matter how much they tell you they do, they don’t. First time? Yes. Second?
    Ok. Third? Really, how much do I have to see this until it’s enough?</p><p><strong>Why
    is this happening? Life is a much more stressful and demanding environment than
    an app’s delights and subtle effects.</strong> For example, you are a father,
    and your kid is screaming because he wants ice cream, the dog is barking because
    somebody is calling at the front door and you are trying to book a quick train
    ticket that should leave in 40 minutes. In that specific moment, people will not
    give a f* about your subtle cues. On the other side, we should use them, but not
    when it kills the user flow.</p><p><img src="https://cdn-images-1.medium.com/max/4800/1*OT00lN9EslrHNNTDa2S9fw.png"
    alt=""></p><h2>7. Focus groups are not usability tests</h2><p><strong>Focus group</strong>
    is a small group of people that sit around at the table and discuss things. They
    talk about their opinions about the product, past experiences, their feelings
    and reactions to new concepts. Focus groups are great for determining what your
    audience wants.</p><p><strong>A usability test</strong> is about watching one
    person at a time trying to use something (your product in this case). In this
    case, you ask them to perform specific actions to see if you need to fix something
    in your concepts. So focus groups is about listening and usability tests are about
    watching.</p><p><img src="https://cdn-images-1.medium.com/max/4800/1*25iBSF3Hraqc6Gq1zVmjzQ.png"
    alt=""></p><h2>8. We allow personal feelings take over the process</h2><p>All
    of us who design digital products have the moment when they say — “I am a user
    too, so I know what is good or bad.” And because of that, we tend to have strong
    feelings about what we like and don’t.</p><p><strong>We enjoy using products with
    ___<strong><em>, or we think that _</em></strong>_ is a big pain.</strong> And
    when we work on a team it tends to be hard to check those feelings at the door.
    The result is a room full of people with strong personal feelings on what it takes
    to design a great product. We tend to think that most of the users are like us.</p><p><img
    src="https://cdn-images-1.medium.com/max/4800/1*8h_P4l40NLn7NU4jV94Gxw.png" alt=""></p><h2>9.
    You ask the wrong questions</h2><p>It is not productive and will not add any value
    if you ask questions such as: “Do people like drop-down menus?”. The right question
    to ask is: “Does this drop-down menu, with these words, in this context, on this
    page create a good experience for people who are likely to use the site?”</p><blockquote><h1><strong>We
    should leave aside “do people like it?” and get deeper into the strategic context
    of design.</strong></h1></blockquote><p>The reason for that is if we focus on
    what people like, we will lose focus and energy. Usability testing will erase
    any “likes” and show you what needs to be done.</p><p><img src="https://cdn-images-1.medium.com/max/4800/1*efRKVxyPN1tG1Jijsnb98A.png"
    alt=""></p><h2>10. When a person uses your product, you forget that she shouldn’t
    spend time thinking about…</h2><ul><li><p>Where am I?</p></li><li><p>Where should
    I begin?</p></li><li><p>Where the f* did they put _____ ?</p></li><li><p>What
    are the most important things on this page?</p></li><li><p>Why did they call it
    that way?</p></li><li><p>Is that an ad or part of the site?</p></li></ul><p>The
    point is that every question that pops into our head, when using your product,
    only adds up to the cognitive workload. It distracts our attention from “why I
    am here” and “what I need to do”. And as a rule, people don’t enjoy solving puzzles
    when they merely want to know if that button is clickable or not.</p><p>And every
    time you make a user tap on something that does not work, or it looks like a button/link
    but it’s not, it also adds up to the pile of questions. And this happens because
    who built the product did not care too much about the product.</p><p>Make sure
    to share down in the comments small design mistakes we do on a daily basis for
    our products (whether apps or websites) so others can learn from them too. The
    article was written based on the revised version of the book <a href="https://www.amazon.com/Dont-Make-Think-Revisited-Usability/dp/0321965515/ref=sr_1_1?ie=UTF8&qid=1530186654&sr=8-1&keywords=don%27t+make+me+think">**Don’t
    Make Me Think</a> by Steve Krug and some of t<a href="https://shosho.co/">he experience
    of building my product — Shosho.</a>**</p><h3>Other stories by me</h3><p><a href="https://uxplanet.org/stop-asking-users-what-they-want-21e9ba646bce"><strong>Stop
    Asking Users What They Want</strong><em>Observe, listen, and have courage to take
    a leap</em>uxplanet.org</a><a href="https://uxplanet.org/the-problem-with-product-roadmaps-fd3a40090f7c"><strong>The
    Problem With Product Roadmaps</strong><em>And how to make them better.</em>uxplanet.org</a><a
    href="https://uxplanet.org/how-not-to-design-a-product-like-everyones-else-18b6c32b342"><strong>How
    Not to Design a Product Like Everyone Else’s</strong><em>Why all the products
    on the market look the same?</em>uxplanet.org</a></p>'
  :author: UX Planet
  :topic: design
- :url: https://uxplanet.org/7-basic-rules-for-button-design-63dcdf5676b4?source=search_post
  :title: 7 Basic Rules for Button Design
  :content: '<p>7 Basic Rules for Button Design</p><h3>by <a href="http://babich.biz">Nick
    Babich</a></h3><p>Buttons are an essential element of interaction design. They
    have a primary role in the conversation between a user and the system. In this
    article, I’ll review seven basic principles you need to know to create effective
    buttons.</p><h2>1. Make buttons look like buttons</h2><p>When it comes to interacting
    with user interface, users need to know instantly what is ‘clickable’ and what’s
    not. Every item in a design requires effort by the user to decode. Generally,
    the more time needed for users to decode the UI the less usable it becomes for
    them.</p><p>But how do users understand whether a certain element is interactive
    or not? They use previous experience and visual signifiers to clarify the meaning
    of the UI object. That’s why it so important to use appropriate visual signifiers
    (such as size, shape, color, shadow, etc.) to make the element look like a button.
    Visual signifiers hold an essential information value — they help to create *affordances
    *in the interface.</p><p>Unfortunately, in many interfaces the signifiers of interactivity
    are weak and require interaction effort; as a result, they effectively reduce
    discoverability.</p><p>If clear affordances of interaction are missing and users
    struggle with what is “clickable” and what is not, it won’t matter how cool we
    make the design. If they find it hard to use, they will find it frustrating and
    ultimately not very usable.</p><p>Weak signifiers is an even more significant
    problem for mobile users. In the attempt to understand whether an individual element
    is interactive or not, desktop users can move the cursor on the element and check
    whether the cursor changes its state. Mobile users don’t have such opportunity.
    To understand whether an element is interactive or not users have to tap on it
    — there’s no other way to check the interactivity.</p><h3>Don’t assume that something
    in your UI is obvious for your users</h3><p>In many cases, designers intentionally
    don’t identify buttons as interactive elements because they assume the interactive
    elements are obvious for users. When designing an interface, you should always
    keep in mind following rule:</p><blockquote><h1>Your ability to interpret clickability
    signifiers aren’t the same as your users’ because you know what each element in
    your own design is intended to do.</h1></blockquote><h3>Use familiar designs for
    your buttons</h3><p>Here are a few examples of buttons that are familiar to most
    users:</p><ul><li><p>Filled button with square borders</p></li><li><p>Filled button
    with rounded corners</p></li><li><p>Filled button with shadows</p></li><li><p>Ghost
    button</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*UZTsPglcLschWx2IUMt7dg.png"
    alt=""></p><p>Among all those examples, the “Filled button with shadows” design
    is the clearest for users. When users see a dimensionality of an object, they
    instantly know that it’s something they can press.</p><h3>Don’t forget about the
    whitespace</h3><p>Not only the visual properties of the button itself are important.
    The amount of whitespace near the button makes it easier (or harder) for users
    to understand whether it’s an interactive element or not. In the example, below
    some users might confuse the ghost button with an information box.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*AqsH5XIqUgL9v0_SWbwgKw.png" alt="As
    a user, you can’t tell whether it’s a box or a button."><em>As a user, you can’t
    tell whether it’s a box or a button.</em></p><h2>2. Put buttons where users expect
    to find them</h2><p>Buttons should be located in places where users can easily
    find them or expect to see. <em>Don’t make users hunt for buttons.</em> If users
    can’t find a button, they won’t know that it exists.</p><h3><strong>Use traditional
    layouts and standard UI patterns as much as possible</strong></h3><p>Conventional
    placement for buttons improves discoverability. With a standard layout, users
    will easily understand the purpose of each element — even it’s a button without
    strong signifiers. Combining a standard layout with clean visual design and ample
    whitespace makes the layout more understandable.</p><blockquote><h1>Don’t play
    hunt-the-button game with your users</h1></blockquote><p><strong>Tip:</strong>
    Test your design on discoverability. When users first navigate to a page that
    contains some actions that you want them to take, it should be easy to spot an
    appropriate button for the user.</p><h2>3. *Label buttons *with what they do</h2><p>Buttons
    with generic or misleading labels can be a huge source of frustrations for your
    users. *Write button labels that clearly explain what each button does. *Ideally,
    the button’s label should clearly describe its action.</p><p>Users should clearly
    understand what happens when they click on a button. Let me give you a simple
    example. Imagine that you accidentally triggered a delete action and now you see
    the following error message.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*r5O0A-xt1rn_WE3evCC8ww.png"
    alt="The vague label ‘OK’ doesn’t say too much about the action button does."><em>The
    vague label ‘OK’ doesn’t say too much about the action button does.</em></p><p>It’s
    not clear what does ‘OK’ and ‘Cancel’ represent in this dialog. Most users will
    ask themselves “What happens when I click on ‘Cancel’?”</p><blockquote><h1>Never
    designed a dialog box or form that consisted solely of the two buttons ‘OK’ and
    ‘Cancel’.</h1></blockquote><p>Instead of using ‘OK’ label it’s better to use ‘Remove.’
    This will make it clear what this button does for the user. Also, if ‘Delete’
    is a potentially dangerous operation, you can use red color to state this fact.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*gfo-E00mGVPVYc_H80lkmg.png" alt="‘Remove’
    makes it clear what button does for users."><em>‘Remove’ makes it clear what button
    does for users.</em></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*J6W62w8Pv2lzuUF7Dk9Y_A.png"
    alt="A potentially dangerous action ‘Disable card’ is colored in red in this interface.
    Image: [Ramotion](http://ramotion.com/)"><em>A potentially dangerous action ‘Disable
    card’ is colored in red in this interface. Image: <a href="http://ramotion.com/">Ramotion</a></em></p><h2>4.
    Properly size your buttons</h2><p>Button size should reflect the priority of this
    element on the screen. Large button means more important action.</p><h3>Prioritize
    buttons</h3><p>Make the most important button look like it’s the most important
    one. Always try to make the primary action button more prominent. Increase its
    size (by making a button bigger you make it look more important for users) and
    use a contrasting color to capture user attention.</p><p><img src="https://cdn-images-1.medium.com/max/2698/1*VZEHys1AKuFEuMNc67KGGQ.png"
    alt="Dropbox uses size and color contrast to focus user attention on ‘Try Dropbox
    Business free’ CTA button."><em>Dropbox uses size and color contrast to focus
    user attention on ‘Try Dropbox Business free’ CTA button.</em></p><h3>Make buttons
    finger-friendly for mobile users</h3><p>In many mobile apps, buttons are too small.
    This often leads to the situation when users mistype.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*Wk2xGGQgUB3fIerb.png"
    alt="Left: properly-sized button. Right: buttons are too small. Image: Apple"><em>Left:
    properly-sized button. Right: buttons are too small. Image: Apple</em></p><p><a
    href="http://touchlab.mit.edu/publications/2003_009.pdf">MIT Touch Lab </a>study
    found that averages for finger pads are between 10–14mm and fingertips are 8–10mm.
    This makes 10mm x 10mm a good minimum touch target size.</p><p><img src="https://cdn-images-1.medium.com/max/NaN/0*E5IKQ8_HH4rweDAu.jpg"
    alt="Image Source: uxmag"><em>Image Source: uxmag</em></p><h2>5. Mind the order</h2><p>The
    order for buttons should reflect the nature of a conversation between the user
    and the system. Ask yourself, what order users expect to have on this screen and
    design accordingly.</p><blockquote><h1>User interface is a conversation with your
    users</h1></blockquote><p>For example, how to order ‘Previous/Next’ buttons in
    pagination? It’s logical that a button that moves you forward should be on the
    right, and a button which moves you backward should be on the left.</p><h2>6.
    Avoid using too many buttons</h2><p>This is a common problem for many apps and
    websites. When you provide too many options, your <a href="https://www.ted.com/talks/barry_schwartz_on_the_paradox_of_choice">users
    end up doing nothing</a>. When designing pages in your app or website, think about
    the most important actions you want your users to take.</p><p><img src="https://cdn-images-1.medium.com/max/2296/0*TWNAmIkpR7SkXtIt.jpg"
    alt="Too many buttons."><em>Too many buttons.</em></p><h2>7. Provide visual or
    audio feedback on interaction</h2><p>When users click or tap on the button, they
    expect that the user interface will respond with appropriate feedback. Based on
    the type of operation, this might be either visual or audio feedback. When users
    don’t have any feedback, they might consider that the system didn’t receive their
    command and will repeat the action. Such behavior often causes multiple unnecessary
    operations.</p><p>Why is this happening? As humans, we expect some feedback after
    we interact with an object. It might be visual, audio or tactile feedback — anything
    that acknowledges the fact that interaction was registered.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*ZIZSTlUWe5Vog-jXBiH5og.gif"
    alt="User interface provides visual feedback that a press has registered. Image:
    [Vadim Gromov](https://dribbble.com/vadim_gromov)"><em>User interface provides
    visual feedback that a press has registered. Image: <a href="https://dribbble.com/vadim_gromov">Vadim
    Gromov</a></em></p><p>For some operations, such as downloading, it’s worth not
    only acknowledging user input but also show a current state of the process.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*6YGP-5TxLJSuDwBYsKzREg.gif" alt="This
    button translates into the progress indicator to demonstrate the current state
    of the operation. Image: [Colin Garven](https://dribbble.com/ColinGarven)"><em>This
    button translates into the progress indicator to demonstrate the current state
    of the operation. Image: <a href="https://dribbble.com/ColinGarven">Colin Garven</a></em></p><h2>Conclusion</h2><p>Despite
    the fact that buttons are an ordinary element of interaction design, it’s worth
    putting a lot of attention to make this element as good as possible. Button UX
    design should always be about recognition and clarity.</p><p>Thank you!</p><p><em>Follow
    UX Planet: <a href="https://twitter.com/uxplanetorg">Twitter </a>| <a href="https://www.facebook.com/uxplanet/">Facebook</a></em></p><p><em>Originally
    published at <a href="http://babich.biz/7-rules-of-buttons/">babich.biz</a></em><a
    href="https://www.interaction-design.org/why-join-idf?ep=ux-planet"><strong>7
    Reasons to Join IDF and Learn UX Design</strong><em>Learn how we can help you
    advance your design career through Ivy-League level UX courses at affordable prices.
    See what…</em>www.interaction-design.org</a></p><iframe src="https://medium.com/media/96d08ab34921bdd17986cb5c0396842f"
    frameborder=0></iframe>'
  :author: UX Planet
  :topic: design
- :url: https://medium.com/ux-power-tools/50-things-you-probably-forgot-to-design-7a288b0ef914?source=search_post
  :title: 50 Things You [Probably] Forgot To Design
  :content: "<p>Methodology</p><h2>50 Things You [Probably] Forgot To Design</h2><h3>Every
    PM: “I’m not mad, I’m just disappointed…”</h3><blockquote><p>*<em>Small Favors:
    *</em>If you love this article, <a href=\"https://twitter.com/intent/tweet?text=I%20totally%20forgot%20to%20design%20some%20of%20these.%20Thanks%20for%20the%20reminder%2C%20%40uxpowertools%21%20https%3A%2F%2Fmedium.com%2Fux-power-tools%2F50-things-you-probably-forgot-to-design-7a288b0ef914\">share
    it with your friends</a>. If you love puppies, rescue one. If you love mayonnaise,
    refrigerate it.</p></blockquote><p>Look, we all forget to design something on
    occasion. That’s totally cool!</p><p>Well, it’s not <em>cool</em>…but like…<strong>it’s
    okay</strong>. It happens. This list will make you better. Or at least more aware.
    Or maybe you just give it a couple claps because you recognize someone spent time
    curating this list and move on with your life. Nbd. I’m all about those claps,
    and <a href=\"https://www.youtube.com/watch?v=7PCkvCPvDXk\">that bass</a>. With
    a Meghan Trainor reference in the first paragraph, we’re off to a <strong>roaring
    start</strong>.</p><p>This is just a list of things that you might have forgotten
    to design. When you think about how simple an app like Instagram or Snapchat is,
    it’s easy to overlook just how many screens, states, and <em>stuff</em> goes in
    to making a really awesome user experience.</p><ul><li><p>Login &amp; Signup stuff</p></li><li><p>First
    Experience</p></li><li><p>All the Little Things</p></li><li><p>Launch Materials</p></li><li><p>Profile
    Stuff</p></li><li><p>Mad Flows</p></li></ul><p>So read these, reflect, and…like…don’t
    upset your PM.</p><h2>Login &amp; Signup</h2><h3><strong>1. The Splash Screen</strong></h3><p>The
    screen that shows up when you launch a mobile app, or when you login to a web
    app and everything is loading.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*sEM54vviUonmagIaPNnOdw.png\"
    alt=\"Here’s a beautiful one by [James Jackson](https://dribbble.com/jamesdarin)\"><em>Here’s
    a beautiful one by <a href=\"https://dribbble.com/jamesdarin\">James Jackson</a></em></p><h3><strong>2.
    The Forgot Password Flow</strong></h3><p>Was it “abcd1234” or “1234abcd”? This
    is important. Don’t forget it.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*8p1bV2jh4O6RMlYtfrI7Gg.gif\"
    alt=\"[Majo Puterka](https://dribbble.com/majoputerka) doesn’t leave his users
    locked out of the house in the rain.\"><em><a href=\"https://dribbble.com/majoputerka\">Majo
    Puterka</a> doesn’t leave his users locked out of the house in the rain.</em></p><h3><strong>3.
    The “Thanks for Signing Up” Page</strong></h3><p>This screen usually comes after
    a user creates an account and tells them to go confirm their email address.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*lNoVoN0_BhVtto2EEN2pvQ.png\"
    alt=\"What’s Next? Ask [Hayley Cattlin](https://dribbble.com/hayleycattlindesign).\"><em>What’s
    Next? Ask <a href=\"https://dribbble.com/hayleycattlindesign\">Hayley Cattlin</a>.</em></p><h3><strong>4.
    The Welcome Email</strong></h3><p>This straddles the line between product design
    and product marketing, but it’s literally THE FIRST impression you get to have
    on your users. Make it count. It’s a great time to introduce the quippy tone of
    your product.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*zhzAm22XWS6rEj5PiUBr-Q.png\"
    alt=\"iReally like this. By [Brian Golatka](https://dribbble.com/golatka).\"><em>iReally
    like this. By <a href=\"https://dribbble.com/golatka\">Brian Golatka</a>.</em></p><h3><strong>5.
    The Terms of Service &amp; Privacy Pages (ugh)</strong></h3><p>Just do it for
    the folks over in legal. They’re just trying to avoid getting sued.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*sW2GYv_71o7kFvVCRbZvOQ.png\"
    alt=\"I really appreciate how [Marko Prljic](https://dribbble.com/markoprljic)
    tried to make the Terms &amp; Conditions more approachable.\"><em>I really appreciate
    how <a href=\"https://dribbble.com/markoprljic\">Marko Prljic</a> tried to make
    the Terms &amp; Conditions more approachable.</em></p><h2>First Experience</h2><h3>6.
    The User Onboarding</h3><p>There are tons of different methods you can use. Here
    are five of my favs:<a href=\"https://medium.com/innovatemap-current/5-delightful-ways-to-onboard-new-users-4c0496b30b6a\"><strong>5
    Delightful Ways to Onboard New Users</strong><em>The Window Shopper, The New Concept,
    The First Date, Imitation Game, and The Upsell</em>medium.com</a></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*0EXUD3a7u9wu8QWnuMAu-Q.png\"
    alt=\"Delightfully helpful, by [MuNa](https://dribbble.com/munarun).\"><em>Delightfully
    helpful, by <a href=\"https://dribbble.com/munarun\">MuNa</a>.</em></p><h3>7.
    The Out-of-the-Box Empty State(s)</h3><p>It’s like moving into a house and you
    haven’t moved in any furniture. Looks pretty empty, huh? Help your users out by
    giving them a nudge in the right direction. <strong>“Place couch here.”</strong></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*MzlkgsTBqO_vYZaqrH1ooA.png\"
    alt=\"I get the feeling [Veli-Johan Veromann](https://dribbble.com/veli) likes
    superheroes.\"><em>I get the feeling <a href=\"https://dribbble.com/veli\">Veli-Johan
    Veromann</a> likes superheroes.</em><a href=\"https://www.toptal.com/designers/ux/empty-state-ux-design\"><strong>Empty
    States - The Most Overlooked Aspect of UX</strong><em>Empty states are important
    to the user experience but are often overlooked. Knowing what they are and how
    to use them…</em>www.toptal.com</a></p><h3>8. The Help Docs</h3><p>If you’re at
    a big company, there’s probably a whole team dedicated to this. But they’re still
    gonna bug you for illustrations and screenshots. This deserves as much (or more)
    effort as the login page or the activity feed.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*pIj8Gp5sgWa6PYYUDbkjnQ.png\"
    alt=\"[Maya Gao](https://dribbble.com/mayagao) is very helpful. Be more like Maya.\"><em><a
    href=\"https://dribbble.com/mayagao\">Maya Gao</a> is very helpful. Be more like
    Maya.</em></p><h3>9. The Default User Profile Image/Avatar</h3><p>Signing up with
    social accounts or services like Gravatar have really helped us show off our smiling
    faces, but you’re still gonna get <strong><em>that one guy</em></strong> who never
    gets around to uploading a profile photo. Give it a little flair and show off
    the brand.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*MHckthNbpOtgCtMw5NjTiw.png\"
    alt=\"[Hermes Strange](https://dribbble.com/Mercury_He) makes cute stuff. These
    are cute AF.\"><em><a href=\"https://dribbble.com/Mercury_He\">Hermes Strange</a>
    makes cute stuff. These are cute AF.</em></p><h3>10. The Logout Button</h3><p>Unfortunately,
    you DO have to allow users to leave. Just pretend they’re using your app in a
    public library and they need to logout so some stranger doesn’t change their account
    name to “Mr. Butts”. Inappropriate.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*ZxShodBUnhn7M5jdI6R8Ng.png\"
    alt=\"I’m guessing Kristofer probably stole [Henrik](https://dribbble.com/henrikdahlheim)’s
    lunch money. Let him log out and flee the scene.\"><em>I’m guessing Kristofer
    probably stole <a href=\"https://dribbble.com/henrikdahlheim\">Henrik</a>’s lunch
    money. Let him log out and flee the scene.</em></p><h2>All The…Small Things</h2><h3>11.
    The App Footer</h3><p>Most of the time I assume pages just go on forever, like
    when people believed the world was flat and just kind of kept going. Note: The
    Earth is not flat.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*XqAKqa0-ozKIZ3UhYKuzww.png\"
    alt=\"[Ash Schweitzer](https://dribbble.com/ashschweitzer) might be lost in the
    woods somewhere. Someone help her.\"><em><a href=\"https://dribbble.com/ashschweitzer\">Ash
    Schweitzer</a> might be lost in the woods somewhere. Someone help her.</em></p><h3>12.
    The Browser Favicon</h3><p>You know…that little icon that shows up on a browser
    tab. I keep losing my <a href=\"undefined\">Medium</a> tabs because it’s not green
    anymore. But it <strong>is</strong> pretty!</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*z5nSSBgY_U6yw-sEPEEOJA.png\"
    alt=\"[Michael Flarup](https://dribbble.com/flarup) made [an awesome favicon template
    you can download](https://dribbble.com/shots/3486969-Favicon-Template).\"><em><a
    href=\"https://dribbble.com/flarup\">Michael Flarup</a> made <a href=\"https://dribbble.com/shots/3486969-Favicon-Template\">an
    awesome favicon template you can download</a>.</em></p><h3>13. The 404 Page</h3><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*unWp6dw_wMOHP2Ri5j9FDQ.png\"
    alt=\"[Rizvan](https://dribbble.com/rizvanbagirli) is stuck in that hole. Go help
    her.\"><em><a href=\"https://dribbble.com/rizvanbagirli\">Rizvan</a> is stuck
    in that hole. Go help her.</em></p><h3>14. The Default/Hover/Focus/Pressed/Disabled/Etc.
    Input States</h3><p>Ugh, so many states. “Focus + Hover” might be my favorite/most
    obscure. The screenshot below comes from the <a href=\"http://uxpower.tools/\">UX
    Power Tools Design System</a>.</p><p><img src=\"https://cdn-images-1.medium.com/max/3412/1*IGYztTe-inWGqaqko6a-zg.png\"
    alt=\"\"></p><p><strong>Side note for my side project, you should definitely check
    it out:</strong><a href=\"http://uxpower.tools/\"><strong>UX Power Tools</strong><em>Does
    it really save me time? You know how TV chefs already have the ingredients pre-chopped
    for them, and all they have…</em>uxpower.tools</a></p><h3>15. The <a href=\"https://www.w3schools.com/tags/att_global_tabindex.asp\">Tab
    Order</a></h3><p>Tab Order is an accessibility feature that allows users to navigate
    a page using the Tab key. I couldn’t find an image to represent this, so I took
    a screenshot of a spec <a href=\"undefined\">Christian Beck</a> wrote from 2007
    where he defined tab order position in a table for each UI control in a table
    (I got tired even just writing that \U0001F634…<strong>SnoozeFest 2017™</strong>).
    You can actually define the order in which items are visited to ensure primary
    actions come before secondary ones. This is a neat design challenge.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/3360/1*jWQY30u4frlSyIe21cnzQw.png\"
    alt=\"Ahhh, the days of writing 80-page specs and waterfall development.\"><em>Ahhh,
    the days of writing 80-page specs and waterfall development.</em></p><h3>16. The
    Scrolling Behavior</h3><p>Not only just <em>where</em> and <em>how</em> it scrolls,
    but <strong>what</strong> actually scrolls. Is the header fixed? The footer?</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*dJtphaiq-ULPE5lYHtdJ-w.gif\"
    alt=\"Oh man, [Peter Blazej](https://dribbble.com/peterblazej), this feels smooth.
    Nice!\"><em>Oh man, <a href=\"https://dribbble.com/peterblazej\">Peter Blazej</a>,
    this feels smooth. Nice!</em></p><h3>17. The <a href=\"undefined\">Intercom</a>
    Button</h3><p>I mean the least you can do is make it match your app colors. Come
    on folks. It’s not rocket surgery.</p><p><img src=\"https://cdn-images-1.medium.com/max/3596/1*q70uY0MvGLyCQsFu7bIU_w.png\"
    alt=\"[This is easier than making a bowl of cereal.](https://docs.intercom.com/configure-intercom-for-your-product-or-site/customize-the-intercom-messenger/customize-the-intercom-messenger-basics)\"><em><a
    href=\"https://docs.intercom.com/configure-intercom-for-your-product-or-site/customize-the-intercom-messenger/customize-the-intercom-messenger-basics\">This
    is easier than making a bowl of cereal.</a></em></p><h3>18. The Pagination Buttons</h3><p>Assuming
    you didn’t opt for infinite scrolling, your users are gonna need a way to get
    to page 27. Let them!</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*LAMD49tocxQj6UiVWSlfYw.gif\"
    alt=\"[Borunda](https://dribbble.com/BorundaDesigns) did a nice job. Love that
    yellow, Borunda!\"><em><a href=\"https://dribbble.com/BorundaDesigns\">Borunda</a>
    did a nice job. Love that yellow, Borunda!</em></p><h3>19. The Cursors</h3><p>Buttons
    should have a pointer. Non-interactive stuff should have a default cursor. Text
    should have a text cursor. Developers don’t always know this. I just redlined
    an app screen the other day where a developer had a text cursor for the hover
    state of a button. <strong>Mercy</strong>.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*UR-BfhvP6gTJJOwNvgnbzQ.png\"
    alt=\"[Jeff Broderick](https://dribbble.com/brdrck) LOVES clicking on stuff. [He
    also made a freebie](https://dribbble.com/shots/2511698-Vector-Sketch-Cursor-Symbols).\"><em><a
    href=\"https://dribbble.com/brdrck\">Jeff Broderick</a> LOVES clicking on stuff.
    <a href=\"https://dribbble.com/shots/2511698-Vector-Sketch-Cursor-Symbols\">He
    also made a freebie</a>.</em></p><h3>20. The Table Sort/Filter/Search Mechanism(s)</h3><p>There’s
    gotta be a faster way to get to ZZ Top in that “Bands with Beards” data table…</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*b6OLhAmsVRlBIaignHYfuQ.png\"
    alt=\"[Eugen Esanu](https://dribbble.com/larocheco) has an exceptional eye for
    filtering mechanisms, and purple/yellow combos. Nice.\"><em><a href=\"https://dribbble.com/larocheco\">Eugen
    Esanu</a> has an exceptional eye for filtering mechanisms, and purple/yellow combos.
    Nice.</em></p><h3>21. The “No Results” Empty States</h3><p>Sometimes you’ll search
    for something or add too many filters, and there aren’t any results. How sad.
    Cheer up your users with a cheeky illustration. Or your bank account and routing
    numbers.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*erfx47qw2ort5rJEoeoLvw.gif\"
    alt=\"[Reiner Wendland](https://dribbble.com/ReinerW) pretty much covered everything
    for [Zendesk](undefined).\"><em><a href=\"https://dribbble.com/ReinerW\">Reiner
    Wendland</a> pretty much covered everything for <a href=\"undefined\">Zendesk</a>.</em></p><h3>22.
    The Error States</h3><p>Bad input. Incorrect password. Existing account. Too many
    things selected. There are all kinds of ways things can go wrong, particularly
    if you’re my Grandma and you got an iPad for Christmas. That was a mistake.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*jj1hAHdQ1rfOxtM14ByNow.gif\"
    alt=\"[Mike Stezycki](https://dribbble.com/Mr_Stezz) really had me thinking that
    email got sent. Then he was all: \U0001F626\"><em><a href=\"https://dribbble.com/Mr_Stezz\">Mike
    Stezycki</a> really had me thinking that email got sent. Then he was all: \U0001F626</em></p><h3>23.
    The System Notifications</h3><p>The system is always doing something behind the
    curtain, and sometimes it’s nice to know when things finish successfully (or don’t).
    You should definitely let the user know that.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*mI77IGADAWgC5hFHsV2k4A.gif\"
    alt=\"This is from Google Inbox. The “Undo” is really convenient when you “accidentally”
    delete an email from your mom.\"><em>This is from Google Inbox. The “Undo” is
    really convenient when you “accidentally” delete an email from your mom.</em></p><h3>24.
    The Empty Autocomplete Dropdown</h3><p>Autocomplete is awesome for helping you
    find objects in the system, but sometimes there aren’t any results. In this case,
    you don’t just want an empty box. Show a little message, or allow them to take
    some kind of action.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*qF9RIkyRvbgu8CQT__M1zg.gif\"
    alt=\"Apparently [Jurriaan van Drunen](https://dribbble.com/Jurriaanvd) didn’t
    have “Bra” in his contacts already. Probably for the best.\"><em>Apparently <a
    href=\"https://dribbble.com/Jurriaanvd\">Jurriaan van Drunen</a> didn’t have “Bra”
    in his contacts already. Probably for the best.</em></p><h3>25. The Loading State</h3><p>Sure,
    people will probably be Tindering on their phones while the page loads, but in
    the event they actually look up from their sexy swiping, there should probably
    be some visual indication that stuff is still loading.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*dysORLcBz1afIxuXlQ9eqA.gif\"
    alt=\"Not the best pan flip form, [XPLAI](https://dribbble.com/xplai). Keep practicing.
    But this is still painfully adorable.\"><em>Not the best pan flip form, <a href=\"https://dribbble.com/xplai\">XPLAI</a>.
    Keep practicing. But this is still painfully adorable.</em></p><h2>Launch Materials</h2><h3>26.
    The Friggin’ App Icon</h3><p>Yeah, it’s probably best you don’t forget about this.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*pW6BTsJ2UVKqdQJtlcRkbA.png\"
    alt=\"I’m willing to bet [Eddie Lobanovskiy](https://dribbble.com/lobanovskiy)
    changed all of his icons to breakfast foods. Delicious.\"><em>I’m willing to bet
    <a href=\"https://dribbble.com/lobanovskiy\">Eddie Lobanovskiy</a> changed all
    of his icons to breakfast foods. Delicious.</em></p><h3>27. The App Store Images</h3><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*n3g_sGmvxI-w1kLq9guatQ.png\"
    alt=\"[Daniel Beere](https://dribbble.com/danielbeere) didn’t forget the app store
    images for his app. High five, dude.\"><em><a href=\"https://dribbble.com/danielbeere\">Daniel
    Beere</a> didn’t forget the app store images for his app. High five, dude.</em></p><h3>28.
    The Open Graph/Social Images</h3><p>This is the image that shows up when you tweet
    a link on Twitter, make a post on Facebook, post a link on Medium, etc…</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2912/1*hheOSk1Qq6N3CkCZnbspHg.png\"
    alt=\"Kristy T is officially carless. SF will do that to ya.\"><em>Kristy T is
    officially carless. SF will do that to ya.</em></p><p>Here’s how it looks in Medium:<a
    href=\"http://uxpower.tools/\"><strong>UX Power Tools</strong><em>Does it really
    save me time? You know how TV chefs already have the ingredients pre-chopped for
    them, and all they have…</em>uxpower.tools</a></p><h3>29. The Website Marketing
    Images</h3><p>Also don’t forget, they’ll probably want to make the website look
    like Stripe so just copy this exactly:</p><p><img src=\"https://cdn-images-1.medium.com/max/4532/1*XwZWcO-QvdbJnXrjqjJPPA.png\"
    alt=\"And if you’re a designer at [Redkix](https://redkix.com/beta/), you’ll have
    to make sure that image works on crimson.\"><em>And if you’re a designer at <a
    href=\"https://redkix.com/beta/\">Redkix</a>, you’ll have to make sure that image
    works on crimson.</em></p><h3>30. The Sales Deck Images</h3><p>You’re probably
    good if you handle the one above. But in this case you’ll probably need to scrub
    content to match the brand of whatever 6-figure deal your brilliant sales team
    is working on.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*mJ5wwxjdCfizyfo-QofhZg.png\"
    alt=\"Oh and sales will probably cover up all your [mockups](https://dribbble.com/kolage)
    with other stuff, so prepare for that.\"><em>Oh and sales will probably cover
    up all your <a href=\"https://dribbble.com/kolage\">mockups</a> with other stuff,
    so prepare for that.</em></p><h3>31. The Pitch Deck Images</h3><p>Like a Sales
    Deck image but a little more <em>visionary</em>. I mean…you’re trying to raise
    money. You’ll figure how to make it possible <strong>later</strong>.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*7Kd3hd_PgFzjt9vAgEFUyw.png\"
    alt=\"Here’s a trade secret, always put [dashboards](https://dribbble.com/claudiucioba)
    in your pitch deck. \U0001F984 This is not a joke.\"><em>Here’s a trade secret,
    always put <a href=\"https://dribbble.com/claudiucioba\">dashboards</a> in your
    pitch deck. \U0001F984 This is not a joke.</em></p><h3>32. The <a href=\"undefined\">Product
    Hunt</a> Images</h3><p>Hey they just updated the profile pages too!</p><p><img
    src=\"https://cdn-images-1.medium.com/max/3000/1*83QQUnBjVtitUlJZvMnl0A.png\"
    alt=\"I still miss Medium 2.0 but every \U0001F44F I \U0001F44F get \U0001F44F
    helps \U0001F44F me\U0001F44F move \U0001F44F on.\"><em>I still miss Medium 2.0
    but every \U0001F44F I \U0001F44F get \U0001F44F helps \U0001F44F me\U0001F44F
    move \U0001F44F on.</em></p><h3>33. The Facebook/Twitter Ad Images</h3><p>“But
    we aren’t running Facebook ads!” Ha, <strong>until you are</strong>. And then
    nobody tells you. Just make them already and you’ll be safe.</p><p><img src=\"https://cdn-images-1.medium.com/max/2044/1*jznDzq4tcdkPKm4qyHCFLw.png\"
    alt=\"It took some digging to find an ad that WASN’T for a [Casper](undefined)
    Mattress. Y’all killin’ the game, Casper.\"><em>It took some digging to find an
    ad that WASN’T for a <a href=\"undefined\">Casper</a> Mattress. Y’all killin’
    the game, Casper.</em></p><h3>34. The Social Media Profile Images</h3><p>Yep,
    you have to make one for all 938 social networks. Thankfully we made a Sketch
    tool to speed that up for you. <strong>Y’welcome</strong>, kiddos.<a href=\"https://medium.com/ux-power-tools/using-nested-symbols-to-create-tons-of-social-assets-in-seconds-4ee935e36347\"><strong>Using
    Nested Symbols to Create Tons of Social Assets in Seconds.</strong><em>“Hey, can
    I get a profile photo for Facebook? And Twitter? And Google Plus? And Pinterest?
    And Tinder?”</em>medium.com</a></p><h3>35. The Launch Email Banner</h3><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*2LSlFZkoTAdZWQl_k8OTPg.png\"
    alt=\"Triple points if you make it an illustration. [**Current](https://current.innovatemap.com)**.\"><em>Triple
    points if you make it an illustration. <a href=\"https://current.innovatemap.com\">**Current</a></em><em>.</em></p><p>^
    by the way, this is my agency’s newsletter and my coworkers write some really
    outstanding content. We’d love it if you subscribed!</p><p><strong>Here are some
    recent favs:</strong><a href=\"https://current.innovatemap.com/wisdom/the-art-of-conducting-research-for-product-innovation/\"><strong>The
    Art of Conducting Research for Product Innovation</strong><em>The concept of &quot;get
    out of the building&quot; has been hammered home in entrepreneurship and product
    management circles so…</em>current.innovatemap.com</a><a href=\"https://current.innovatemap.com/wisdom/5-techniques-for-building-an-adaptive-brand-identity/\"><strong>5
    Techniques for Building an Adaptive Brand Identity</strong><em>Brand identities
    in the startup world can be fairly shallow, rarely venturing beyond a simple logo,
    website, and email…</em>current.innovatemap.com</a></p><h2>Profile Stuff</h2><h3>36.
    Notification Preferences</h3><p>It’s awesome when apps notify you when things
    happen, and even cooler when it plays a trumpet sound. But after the 19th time,
    you get <em>really tired of trumpets</em>. You should probably let the user decide
    when the trumpets sound.</p><p><img src=\"https://cdn-images-1.medium.com/max/4076/1*VJ1FjSsnhuZQ7sF7JYud3w.png\"
    alt=\"Slack didn’t become an $8 billion company by ***slacking*** on notification
    settings!! Nailed it.\"><em>Slack didn’t become an $8 billion company by *</em><em>slacking</em>**
    on notification settings!! Nailed it.*</p><h3>37. The Billing Page</h3><p>Don’t
    forget people need to get copies of their bills to expense the product they are
    paying you thousands of dollars for. And <a href=\"https://twitter.com/cmbeck_\">some
    people</a> make up the idiot IT department for their agency and can’t stand how
    hard it is to locate this. <strong>every. single. month.</strong> He’s not bitter.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/4368/1*a8w_qwhI5n1b5-CIq3oCyQ.png\"
    alt=\"I don’t know what any of this means, but it was easy to get here!\"><em>I
    don’t know what any of this means, but it was easy to get here!</em></p><h3>38.
    The “Delete My Account” Option</h3><p>Right, I know. Nobody will do this. But
    hey, maybe they’ll start a new account again someday! Just like the people who
    pass a kiosk in the mall and say “I’ll come back later and buy three!” <strong>Sure.</strong></p><p>There
    are legit reasons for this that <em>are</em> positive. I’ve deleted accounts as
    I merged into a larger team license. I’ve deleted old accounts that collected
    dust and I wanted to start fresh. In any case, it’s good customer service to make
    this a good experience as well.</p><p><img src=\"https://cdn-images-1.medium.com/max/2344/1*vLMznLG_Adlio9VSR02_Rg.png\"
    alt=\"Pssst, Mr. President, you can de-activate your account [here](https://twitter.com/settings/account).\"><em>Pssst,
    Mr. President, you can de-activate your account <a href=\"https://twitter.com/settings/account\">here</a>.</em></p><h3>39.
    The Profile Photo Cropping Tool</h3><p>Well this is a dumpster fire nightmare
    scenario for most apps and it doesn’t need to be. I had <a href=\"undefined\">Christian</a>
    send me a screenshot from earlier when he was changing his profile picture to
    Beyoncé.</p><p><img src=\"https://cdn-images-1.medium.com/max/2308/1*csKTcF_9i1AkZ-fIDAuDmQ.png\"
    alt=\"He couldn’t even get past this screen to show how it cropped a photo. 2
    out of 10 stars. Would not put a ring on it.\"><em>He couldn’t even get past this
    screen to show how it cropped a photo. 2 out of 10 stars. Would not put a ring
    on it.</em></p><h3>40. The “Upgrade My Account” Option/Flow</h3><p>It boggles
    my mind how difficult this is for many SaaS products. Shut up and take my money.
    Shouldn’t this be <strong>easy</strong>?! Like…THE EASIEST?!</p><p><img src=\"https://cdn-images-1.medium.com/max/2576/1*8uMz0241owLA_0sEn97JpQ.png\"
    alt=\"[Buffer](http://buffer.com) has a menu item to upgrade then a pretty simple
    form. Bam. You’ve got my money. Way to go, [Buffer](undefined).\"><em><a href=\"http://buffer.com\">Buffer</a>
    has a menu item to upgrade then a pretty simple form. Bam. You’ve got my money.
    Way to go, <a href=\"undefined\">Buffer</a>.</em></p><h2>Mad Flows</h2><p>Eventually,
    you’ll have finished all the previous things and think you’re home free — then
    you literally start to go home for the day proud of how on the ball you are.</p><p>Then
    halfway home on your fixie, sipping kombucha from your camelbak, you remember
    development hasn’t actually started yet! #$%@</p><p>Once development starts, you’ll
    start realizing that just mocking up one screen doesn’t really tell the story
    (it’s cool, we all try to be lazy). Developers need you to actually break down
    how a user experience flows from screen-to-screen.</p><h3>41. The “Change My Address”
    Flow</h3><p>You know when you get a snazzy new apartment downtown and you have
    to change your address on EVERY CREDIT CARD YOU’VE EVER OWNED?</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*xJ2VXYUcM2C5F0DTGqu1cw.png\"
    alt=\"[Dhaval S. Gandhi](https://dribbble.com/dhavalgandhiuxer) wants to make
    sure his Aloe Vera is shipped to the right place.\"><em><a href=\"https://dribbble.com/dhavalgandhiuxer\">Dhaval
    S. Gandhi</a> wants to make sure his Aloe Vera is shipped to the right place.</em></p><h3>42.
    The “Add A Credit Card” Flow</h3><p>Some people (ahem, me) like to keep like a
    hundred credit/debit cards on file so that thieves have lots of accounts to choose
    from. So make it easy to add cards. That’s really all I have to say about that.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*4mCsVF3R1HJgnFTVmMBQtQ.png\"
    alt=\"This looks way too real, [Carlos Medina](https://dribbble.com/medinnna).
    Unrelated, I just bought some new shoes and it didn’t cost a dime!\"><em>This
    looks way too real, <a href=\"https://dribbble.com/medinnna\">Carlos Medina</a>.
    Unrelated, I just bought some new shoes and it didn’t cost a dime!</em></p><h3>43.
    The “Bulk Add” Flow</h3><p>It’s one thing to make adding an object into the system
    quickly, but it’s an entirely <em>different thing</em> to make adding a BUNCH
    OF OBJECTS into the system quickly.</p><p><img src=\"https://cdn-images-1.medium.com/max/2084/1*KSjWO6BXpJMu0oPtThNBvg.png\"
    alt=\"Please sir, may I have some more?\"><em>Please sir, may I have some more?</em></p><h3>44.
    The “Create a Custom Filter” Flow</h3><p>If you allow for sophisticated filtering,
    it might be nice to add the ability to save this complicated filter for later.
    That way you don’t have to click a million times all over again.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*8AJ47Nu_FnTszjLso6vAbw.png\"
    alt=\"[Oykun Yilmaz](https://dribbble.com/oykun) could take this one step further
    by allowing the user to save this filter. Do it, Oykun!\"><em><a href=\"https://dribbble.com/oykun\">Oykun
    Yilmaz</a> could take this one step further by allowing the user to save this
    filter. Do it, Oykun!</em></p><h3>45. The “Add to Shopping Cart” Flow</h3><p>It’s
    kind of funny to think that people forget about this flow, but you know…I’m one
    of those people. <strong>Shut up.</strong></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*_COL-3Ja-hs14Y0bRnU2IA.gif\"
    alt=\"Apparently [Alberto Conti](https://dribbble.com/Alby_san) needed 4 chairs
    and 4 side tables. Must be a big house…\"><em>Apparently <a href=\"https://dribbble.com/Alby_san\">Alberto
    Conti</a> needed 4 chairs and 4 side tables. Must be a big house…</em></p><h3>46.
    The “Share This” Flow</h3><p>Sharing has become pretty ubiquitous online, but
    that doesn’t mean it’s already designed for you. All the more reason to spend
    some time on this one.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*2lUUICFNXopu8n0v_t9XbQ.png\"
    alt=\"[Tomek Kwiatkowski](https://dribbble.com/tomekwiatkowski) really knows how
    to get social.\"><em><a href=\"https://dribbble.com/tomekwiatkowski\">Tomek Kwiatkowski</a>
    really knows how to get social.</em></p><h3>47. The “Create from Existing” Flow</h3><p>This
    is kind of like “Duplicate + Edit” all in one action. Basically the user is able
    to start from an existing object and update it as needed.</p><p><img src=\"https://cdn-images-1.medium.com/max/2828/1*VKQLwRHbhu6OmQKHqcvd9g.png\"
    alt=\"Kyle Johnston is writing a LOT of scripts. Maybe secretly Christopher Nolan?\"><em>Kyle
    Johnston is writing a LOT of scripts. Maybe secretly Christopher Nolan?</em></p><h3>48.
    The “Invite Someone” Flow</h3><p>There’s no better way to add some “virality”
    to your product than through invitations and sharing. Looking at you <a href=\"undefined\">Dribbble</a>.
    Make sure it’s easy, quick, and fun!</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*ESPL-XmY0BbboVotGOfAXg.png\"
    alt=\"I think [Paula Pintaric](https://dribbble.com/ppintaric) and Christine are
    going on a flight. Or they’re working on a project and watching other people fly.
    That’s worse.\"><em>I think <a href=\"https://dribbble.com/ppintaric\">Paula Pintaric</a>
    and Christine are going on a flight. Or they’re working on a project and watching
    other people fly. That’s worse.</em></p><h3>49. The “Change User Permissions”
    Flow</h3><p>You know that guy Greg? You know how he kind of screws up everything
    he touches? Yeah, you might wanna revoke some of Greg’s privileges just so he
    doesn’t delete the entirety of the Internet. Silly Greg.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*UbQ3fgy9CFPYtZ03Dwuv-g.png\"
    alt=\"[Matt Shwery](https://dribbble.com/mshwery), on the other hand…much less
    of a knucklehead than Greg.\"><em><a href=\"https://dribbble.com/mshwery\">Matt
    Shwery</a>, on the other hand…much less of a knucklehead than Greg.</em></p><h3>50.
    The “Delete and Recover” Flow</h3><p>You know when you delete something SUPER
    important and need to get it back immediately? No? Alright.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*Q9wRWwqFFRTLHiSHIo7B-A.gif\"
    alt=\"[Eric Tsai](https://dribbble.com/Eetom) understands that we all make mistakes.\"><em><a
    href=\"https://dribbble.com/Eetom\">Eric Tsai</a> understands that we all make
    mistakes.</em></p><h3>BONUS #51. Animations</h3><p>Full disclosure, I actually
    forgot about these myself. Look, I love animations but I’m lucky if we have the
    luxury to build these when sales wants a prototype done <strong>yesterday</strong>,
    and development is pointing out something I completely missed in my 8th iteration
    of the landing page. And honestly if we get to animations at all, I just peruse
    Dribbble or CodePen and send something I like to dev and say, “Make it like that!”
    Kidding. Am I?</p><p>I’m not.</p><h2>Summary</h2><p>You’re probably furiously
    writing a list of everything I forgot for this article. Feel free to <strong><em>kindly</em></strong>
    remind me in the comments. Designers have about a million things to remember when
    designing MVP products, or large features for an enterprise software platform.
    Hopefully this can at least be a handy reference to help remind you on your next
    project.</p><p><em>When I’m not *</em>trying to remember every little thing (she
    does is magic)*<em>, I’m working on Sketch design tools at UX Power Tools to make
    you a better, more efficient designer. You can learn more here:</em><a href=\"https://www.uxpower.tools/\"><strong>UX
    Power Tools</strong><em>UX Power Tools is the most advanced Sketch design system
    ever made. It’s like Bootstrap for designers. All the hard…</em>www.uxpower.tools</a></p><p><a
    href=\"https://www.twitter.com/uxpowertools\">*Follow UX Power Tools on Twitter</a><a
    href=\"https://www.twitter.com/thejmoore\">Follow me on Twitter</a>*</p>"
  :author: UX Power Tools
  :topic: design
- :url: https://blog.prototypr.io/the-ideal-design-workflow-2c200b8e337d?source=search_post
  :title: The Ideal Design Workflow
  :content: <p>As designers, we are constantly experimenting with tools and processes
    in an attempt to find the one that works best. After a great deal of experimentation,
    I’ve discovered the perfect design workflow, and I’m going to share it with you
    now. Design is a process and the process I’m going to share is the one I’ve used
    on all my projects to build habit-forming products that people love.</p><p><strong>1.)</strong>
    Sketching (<a href="https://en.wikipedia.org/wiki/Paper">paper</a> and <a href="https://en.wikipedia.org/wiki/Pen">pen</a>)
    — every great design begins on paper. Get out that paper and pen and start drawing
    some shapes.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*KJ0HplGCIcUkzVJqWhujyg.jpeg"
    alt=".&gt;Flawless."><em>.&gt;Flawless.</em></p><p><strong>2.)</strong> Your next
    step is to take photos of your sketches on your smart phone and throw those babies
    into <a href="https://popapp.in/">POP</a> so you can test your prototype.</p><p><img
    src="https://cdn-images-1.medium.com/max/2150/1*K6rMhNwPzntbu7Vd0p9aMg.gif" alt=""></p><p><strong>3.)</strong>
    Your next step is to make wireframes. Having sketches is never enough. Wireframes
    are a must 100% of the time. There is simply no way around it. Go ahead and open
    <a href="https://www.omnigroup.com/omnigraffle">Omnigraffle</a> and make your
    wires.</p><p><img src="https://cdn-images-1.medium.com/max/2330/1*3v-HCiW7uZoej6s_F_q1Rw.png"
    alt=""></p><p><strong>4.)</strong> Now realize you need a dropdown menu so re-do
    those wires in <a href="https://balsamiq.com/">Balsamiq</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*xJRjDTyhxjVZeQ0PG_woeA.jpeg"
    alt="Good when designing for 3rd graders."><em>Good when designing for 3rd graders.</em></p><p><strong>5.)</strong>
    Next, realize you f***ing hate Balsamiq and redo them in <a href="http://www.axure.com/">Axure</a>.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*PNBMvQPZlt_fM0b0sN3DNg.gif" alt=""></p><p><strong>6.)</strong>
    Next, realize you f***ing hate Axure so switch over to <a href="http://www.adobe.com/products/illustrator.html?sdid=KKQML&mv=search&s_kwcid=AL!3085!3!81143510076!e!!g!!illustrator&ef_id=VhwgAgAABQ3p7PI3:20160601232231:s">Adobe
    Illustrator </a>and use that UI Wireframing kit you bought for $89.</p><p><img
    src="https://cdn-images-1.medium.com/max/2880/1*KYIUa-tO8Iei52_uix3NGg.png" alt=""></p><p><strong>7.)</strong>
    Now export those wires to PNGs and import them into <a href="https://www.invisionapp.com/">Invision</a>
    so you can share them with your team.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*X5THTg-vfFJUQy9v1okOZw.png"
    alt=""></p><p><strong>8.)</strong> Wake up the next morning and cry into your
    bowl of <a href="http://postfoods.com/our-brands/honey-bunches-of-oats">Honey
    Bunches of Oats </a>because of all the mean comments that Jonathan left on your
    Invision prototype.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*lxXx4IndAa23yi32Z-bEsA.jpeg"
    alt="This shit’s delicious."><em>This shit’s delicious.</em></p><p><strong>9.)</strong>
    Agree to never use Invision again ever. Because f**k Jonathan.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*d6VbGnkA_oldqOnS2B1x5Q.gif"
    alt=""></p><p><strong>10.)</strong> Redo your prototype in <a href="https://marvelapp.com/">Marvel</a>
    and hope that Jonathan can’t figure out how to leave comments on Marvel.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*Aqs5vREj0YFnwANdS0YrCA.png" alt=""></p><p><strong>11.)</strong>
    You succeeded. Wireframes are finally approved. No thanks to Jonathan. Time to
    start working on a higher fidelity prototype.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*w0T8CIBpQnSNdbkflPEb7w.gif"
    alt=""></p><p><strong>12.)</strong> Grab the same stock photos that everyone else
    uses and then use <a href="http://www.adobe.com/products/photoshop.html?sdid=KKQIN&mv=search&s_kwcid=AL!3085!3!111672144258!e!!g!!photoshop&ef_id=VhwgAgAABQ3p7PI3:20160601232342:s">Photoshop</a>
    to optimize them.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*12oS1uwG95V5Z3TBa5ifNg.jpeg"
    alt="Looks pretty optimized."><em>Looks pretty optimized.</em></p><p><strong>13.)</strong>
    Now, open up <a href="https://www.sketchapp.com/">Sketch</a> and start creating
    the UI for your app. It’s starting to look like a real product now!</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*7ZDSs6XqzXnHwJQnN8jRZw.jpeg" alt=""></p><p>*<em>14.)
    *</em>Now export these as PNGs and import screens into <a href="https://www.flinto.com/lite">Flinto
    Lite</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*uZAWXo_fb4KaVq1YLym74g.jpeg"
    alt=""></p><p><strong>15.)</strong> Realize you need gestures so pay $99 for <a
    href="https://www.flinto.com/mac">Flinto for Mac</a> so you can add Gestures.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*vH8AbklR0eHJlsNkZ8vS6A.jpeg" alt="These
    are different people! Very important!"><em>These are different people! Very important!</em></p><p><strong>16.)</strong>
    Your CEO/Stakeholder/Client “doesn’t need another app on his phone” and refuses
    to download the Flinto app for iphone.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*F38J8FP2n4wHckLwQdId0Q.gif"
    alt=""></p><p><strong>17.)</strong> Import your designs into <a href="http://principleformac.com/">Principle</a>
    and add the interactions.</p><p><img src="https://cdn-images-1.medium.com/max/2400/1*fvRO0mzSuOtVzAtyGTpvhQ.jpeg"
    alt=""></p><p><strong>18.)</strong> Realize Principle exports as a f***ing video?
    and give up for a brief moment. It’s going to be OK, right?</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*H2ods-ZJGxQf5mP25Rt8ng.gif"
    alt=""></p><p><strong>19.)</strong> Download <a href="http://www.pixate.com/">Pixate</a>
    because its free and why not?</p><p><img src="https://cdn-images-1.medium.com/max/2640/1*Dk7owAlIbAMHQMJHf98-lw.jpeg"
    alt=""></p><p><strong>20.)</strong> Try to learn how to use Pixate. (good luck
    with this one.)</p><p><strong>21.)</strong> What you’re going to want to do is
    bash your computer. I would say, if you can, resist the urge to do this. It’s
    all part of the creative process. You need to get knocked down before you get
    back up again. They’re never going to keep you down.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*iJFQBKDa1DKd3HTMbChHFA.gif"
    alt=""></p><p><strong>22.)</strong> Once Pixate has driven you to the brink of
    insanity, switch gears and download the free trial for <a href="http://framerjs.com/">Framer</a>.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*Rr3ZTyNUqrWYmK6CA2qLKw.jpeg" alt="Looks
    promising!"><em>Looks promising!</em></p><p><strong>23.)</strong> Now go get some
    lunch. You’ve earned it.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*p2usKUKSMPVt8CMHHwkfmA.jpeg"
    alt="Tacos sound good."><em>Tacos sound good.</em></p><p><strong>24.)</strong>
    Come back from lunch and realize your Framer trial has expired. (Seriously, they
    give you a 32 minute trial)</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*zB_2g9Sh57Qqqt1VHENUfQ.gif"
    alt=""></p><p><strong>25.)</strong> Rebuild your prototype in <a href="http://www.justinmind.com/">Justinmind</a>.</p><p><img
    src="https://cdn-images-1.medium.com/max/2430/1*NTHeYjej-UBZVBCblLugWg.png" alt=""></p><p><strong>26.)</strong>
    Get roasted by your teammates for sending them a Justinmind file that no one can
    open because no one knows what the f*** Justinmind is.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*tcUx7k8HmXuLVZn_ZKpNWw.gif"
    alt=""></p><p><strong>27.)</strong> Consider jumping off the building, but realize
    that it’s ok because your friend tells you about a brand new awesome prototyping
    tool they heard about at that <a href="http://www.meetup.com/">meetup</a>/conference/blog
    post/<a href="http://www.ted.com/">TED talk</a>/P<a href="https://www.producthunt.com/">roduct
    Hunt</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*_mzKLKMYTc1EIkIkaTI_fA.gif"
    alt="That’s you."><em>That’s you.</em></p><p>Thanks for reading. I hope this helps
    my fellow designers out there.</p><p>Shoutout to <a href="https://twitter.com/krishenkotecha?lang=en">Krishen
    Kotecha</a> for inspiring this post and putting up with my sarcasm in general.</p><iframe
    src="https://medium.com/media/ed6399974de6e1c6fa5f3851dd966fad" frameborder=0></iframe>
  :author: Prototypr
  :topic: design
- :url: https://uxplanet.org/2019-ui-and-ux-design-trends-92dfa8323225?source=search_post
  :title: 2019 UI and UX Design Trends
  :content: "<p>Scenery Illustration by J.HUA</p><p>Last year we put together a prediction
    of mobile UI design <a href=\"https://uxplanet.org/mobile-ui-design-trends-in-2018-ccd26031dfd8\">trends</a>.
    This year, we’re going deeper and beyond just mobile. Because the number one trend
    in modern design is context. There are no generalizations anymore. Everything
    is in context and connected.</p><blockquote><h1><em>It feels like we’re getting
    somewhere with all the tools, advancements in technology, and growth of our understanding
    of how user-facing products really have to work.</em></h1></blockquote><p>Sooner
    than later, we’ll develop the mindset for universal design that encompasses everything
    we produce, and not just sell. The way we do things for ourselves needs better
    design choices. The way we even sound as nations can be designed in a better way.
    Still, a far cry from where we could be in the future, let’s get into the interface
    and experience design trends of 2019.</p><p>Traditionally, we’ll put a fly in
    the ointment of every trend as a reminder to keep tabs on things to avoid abuse.</p><h2>Mighty
    browsers</h2><p>A browser is not only the internet’s vehicle, but it is also a
    means to deliver impact. Browsers are getting faster, more powerful, and attractive.</p><ul><li><p>Browser
    benchmarks and performance tests <a href=\"https://www.businessnewsdaily.com/10803-best-windows-10-browser.html\">prove</a>
    significant performance boosts for most popular browsers.</p></li><li><p>Increases
    in speed due to <a href=\"https://www.neowin.net/news/firefox-58-gets-speed-boost-with-streaming-compilation\">streaming
    compilation</a> impact design big time. Mozilla reports the new compiler to be
    10–15 times faster than the previous optimizing compiler.</p></li><li><p>All modern
    browsers support WebGL 2 which <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API\">allows</a>
    for a whole new level of 3D texture and object rendering, fragment depth, and
    vertex array objects.</p><blockquote><h1><em>Web and mobile browser capabilities
    are bridging the gap between conceptual design and reality.</em></h1></blockquote></li></ul><p><img
    src=\"https://cdn-images-1.medium.com/max/4000/0*hCnqWmo21cLCfHEO.jpg\" alt=\"Too
    bad [evolutionoftheweb.com](http://evolutionoftheweb.com/) stopped at 2012. This
    chart is gnarly\"><em>Too bad <a href=\"http://evolutionoftheweb.com/\">evolutionoftheweb.com</a>
    stopped at 2012. This chart is gnarly</em></p><h3>\U0001F611</h3><p>Yeah, but
    all the advancements in browsers still promote their separate value without impacting
    the industry on a higher level. Because so much is going on on the web it’s hard
    for browser developers to come up with universal solutions and clean up the internet.</p><p>Browsers
    might be awesome but if they access poor websites, they become contaminated with
    bad UX. We have to force better design choices to unfold the current potential
    of web browsers.</p><blockquote><h1><em>Most websites make browsers look like
    shitty software.</em></h1></blockquote><h2>Purposeful animation</h2><p>Among everything,
    new browser capabilities opened the door for animation. Not just as the motion
    of elements, but a legit design opportunity. The discipline known as <em>motion
    design</em> involves a lot of design aspects but intersects with psychology and
    biology.</p><p>We see this field of knowledge being explored even deeper in 2019.
    Complexity replaces fad as the main characteristic feature of animation in design.
    Motion and transitions convey a lot of information that otherwise would be lost.</p><blockquote><h1><em>The
    estate between screens used to be a no-man’s land. Now it’s your backyard.</em></h1></blockquote><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/0*Src2uyUU6zQFaGsB.gif\" alt=\"*Cocoladas
    Creative Blog Artist Preview Page by [Zhenya Rynzhuk](https://dribbble.com/Zhenya_Artem)*\"><strong>Cocoladas
    Creative Blog Artist Preview Page by <a href=\"https://dribbble.com/Zhenya_Artem\">Zhenya
    Rynzhuk</a></strong></p><p>Engaging a customer on a deeper level means staying
    with them every second of the interaction and making every second count. Designers
    are grasping this opportunity before it gets poisoned by blunt marketing.</p><p>Motion
    design also reaches beyond just presentation and gap filling. It is now an embedded
    part of branding. Still, logos are totems. It’s our imagination and experience
    that revive them. Why not tap into that imagination and ensure it steers the right
    way?</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*NxvShBIKsmyFVN-K.gif\"
    alt=\"Fuck by [Eduard Mykhailov](https://dribbble.com/eduard_ov)\"><em>Fuck by
    <a href=\"https://dribbble.com/eduard_ov\">Eduard Mykhailov</a></em></p><blockquote><h1><em>If
    you haven’t thought what your logo consists of, how it feels, tastes, smells,
    and sounds, it’s about time to do that.</em></h1></blockquote><p>Motion speaks
    better than lighting, positioning, and materials. Motion tells a story. If you
    can make your logomark part of your story by putting in some extra thought, I
    say go for it.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*_HtgB_7Akt-zj-Uu.gif\"
    alt=\"Lakko — Logo animation by [Zlatko Kelemenić](https://dribbble.com/StudioMagus)\"><em>Lakko
    — Logo animation by <a href=\"https://dribbble.com/StudioMagus\">Zlatko Kelemenić</a></em></p><h3>\U0001F611</h3><p>Yeah,
    but there is a context for everything including animation. What you see as a designer
    is not what a customer sees as a… customer. If the product we are designing for
    is an actionable one or is connected to dire scenarios, we can’t afford animations
    even if they are meaningful. If there is an emotional contradiction, always go
    neutral.</p><blockquote><h1><em>Don’t animate with reckless abandon.</em></h1></blockquote><h2>3D
    in interfaces and deep flat</h2><p>3D rendering and CG augmentation of real footage
    and imagery have been around for some time. For the sake of speed and performance,
    and also accessibility, designers have a history of avoiding complex 3D models
    in UIs. Better browsers turned this luxury into an affordable feature. Highly
    Complex VFX or Visual Effects take movie-like scenes into the realm of websites.</p><blockquote><h1><em>3D
    graphics in interfaces blend the edge of reality and digital animation.</em></h1></blockquote><p>This
    trend will be specifically useful for product companies with complex processes
    that are not very visual. By using the 3D visualization, you can tap into any
    technological process and create a deeper level of understanding.</p><p><img src=\"https://cdn-images-1.medium.com/max/4000/0*n1LpLE067hvNWlUY.jpg\"
    alt=\"Baker Hughes Digital by [Sanu Sagar](https://www.behance.net/Rockletdesign)\"><em>Baker
    Hughes Digital by <a href=\"https://www.behance.net/Rockletdesign\">Sanu Sagar</a></em></p><p>The
    reason this works in movies and video games is the short time these images are
    being displayed for. They call for a superficial impression, not diligent study.
    Combined with purposeful animation, 3D becomes a powerful design tool.</p><p>The
    mobile industry with new powerful chips made it possible to not only render 3D
    objects but use them within the interface. Smaller screens are perfect for that.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/0*VDhEiXi4tyvy7Im_.gif\" alt=\"Cards
    3D transition by [Gleb Kuznetsov](https://dribbble.com/glebich)\"><em>Cards 3D
    transition by <a href=\"https://dribbble.com/glebich\">Gleb Kuznetsov</a></em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/0*zYqRcXxFXgr-etir.gif\" alt=\"3D
    flip menu by [Minh Pham ✪](https://dribbble.com/phamduyminh)\"><em>3D flip menu
    by <a href=\"https://dribbble.com/phamduyminh\">Minh Pham ✪</a></em></p><p>Flat
    UI design has been a dominant trend for over 5 years and hasn’t really changed.
    Lately, we’ve witnessed a clear shift towards adding depth and dimension to flat
    design without changing its main idea. Why depth is necessary is also why flat
    design came to exist — we need symbolism to make sense of everything. Flat is
    symbolic to the core.</p><blockquote><h1><em>Deep flat is the new flat.</em></h1></blockquote><p>Real
    3D and CG combo revealed a customer response to life-like objects that they can
    interact with. Flat design is also capable of doing that in a unique and yet-to-be-explored
    way. They call it pseudo 3D. It’s flat layers stacking up to create a three-dimensional
    feel. The main asset adding dimension to flat design will be shadow and light
    positioning, and reflections.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*2UsEqZA92T2XmPvG.jpg\"
    alt=\"ARTA / Art Gallery by [Mike](https://dribbble.com/creativemints) | [Creative
    Mints](https://dribbble.com/creativemints)\"><em>ARTA / Art Gallery by <a href=\"https://dribbble.com/creativemints\">Mike</a>
    | <a href=\"https://dribbble.com/creativemints\">Creative Mints</a></em></p><p>There
    is also a fake 3D trend on the rise which uses conventional design tools like
    Principle and After Effects to create motion pattern emulating 3D.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/0*k9mDjIYTRYzKDOaB.gif\" alt=\"Astronaut
    by [Markus Magnusson](https://dribbble.com/MarkusM)\"><em>Astronaut by <a href=\"https://dribbble.com/MarkusM\">Markus
    Magnusson</a></em></p><p>In 2019 we might even see the return of skeuomorphism
    in a new fashion. If flat can be deep, it can be isometric as well. Retaining
    flat symbolism while tapping into a realistic view is a trend to explore.</p><h3>\U0001F611</h3><p>Yeah,
    but we will eventually run out of options. Already, there is no certain direction
    3D UIs are moving towards. It goes both ways — simplification and sophistication.
    While it takes more technological effort to impress us, it takes just as much
    courage to throw complexity out of the window and roll out a crazy concept. However,
    if the most complex interfaces lack meaning or the boldest ideas are nothing but
    a curtain wall, all the efforts will be useless.</p><blockquote><h1><em>We can
    do impressive imagery. It’s time to fill it with sense for humanity and address
    deeper issues. How can we make this happen?</em></h1></blockquote><h2>Surreal
    design</h2><p>All the 3D and motion design opportunities brought by better technologies
    don’t mean a thing if they fail to make an emotional impact. Ironically, you don’t
    need complexity to make the most impact. The reason why renegade attitude has
    always been a satellite of mainstream trends is its natural appeal.</p><blockquote><h1><em>We
    need something to balance out the common sense, we need a devil on our shoulder,
    and sometimes we are playful.</em></h1></blockquote><p>Some of the biggest redesign
    campaigns and associated illustrations came out as playful as it gets:</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/0*tRPfoZqtE_WqLCCO.gif\" alt=\"How
    to stay scrappy by [Justin Tran](https://dribbble.com/justintran) for [Dropbox
    Design](https://dribbble.com/dropbox)\"><em>How to stay scrappy by <a href=\"https://dribbble.com/justintran\">Justin
    Tran</a> for <a href=\"https://dribbble.com/dropbox\">Dropbox Design</a></em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/3200/0*uMpMVmAg_EXVewW2.png\" alt=\"Shop
    Small by [Joe Montefusco](https://dribbble.com/montefusco) for [Mailchimp](https://dribbble.com/Mailchimp)\"><em>Shop
    Small by <a href=\"https://dribbble.com/montefusco\">Joe Montefusco</a> for <a
    href=\"https://dribbble.com/Mailchimp\">Mailchimp</a></em></p><p>This cartoonish
    style of illustration and even UI has one purpose — maintain freshness of the
    look. When your brand name is a staple, you can surround it with a never-ending
    buzz. Doesn’t matter who this style speaks to, it has to be weird or even ugly.
    Expect to see more of that vanguard and surreal design in 2019.</p><h3>\U0001F611</h3><p>Yeah,
    but not all companies and products can afford this impudence. The wider the audience,
    the more neutral the design has to be. Even though this might work for established
    brands, smaller companies and the ones struggling with exposure will have to play
    it safe and stick to commonalities.</p><blockquote><h1><em>Build a following first,
    and then take them for a ride.</em></h1></blockquote><h2>Gradient 2.0, blazing
    colors, and darkness</h2><p>New screens have a fantastic rendition of colors.
    They even have to show this through default wallpapers. Designers explore the
    boundaries of accessibility and impressive gradients in UIs.</p><blockquote><h1><em>Gradients
    are no longer for attention, they are now bringing depth and dimension to the
    interface.</em></h1></blockquote><p><img src=\"https://cdn-images-1.medium.com/max/3200/0*JmhptHo0Lkx4MwjF.png\"
    alt=\"Grabient 2.0 by [Eddie Lobanovskiy](https://dribbble.com/lobanovskiy)\"><em>Grabient
    2.0 by <a href=\"https://dribbble.com/lobanovskiy\">Eddie Lobanovskiy</a></em></p><p>Gradient
    2.0 is subtle and simple. It uses no conflicting colors. It has a clear light
    source and it aligns with the shapes to bring depth.</p><p>Vibrant colors aren’t
    going anywhere. We will see more combined colors and layers. In fact, even the
    monochrome palette will present some sort of visual aesthetic through depth and
    dimensioning.</p><p><img src=\"https://cdn-images-1.medium.com/max/3200/0*LfKYmEypV6WTnHK2.png\"
    alt=\"Valley Illustration by [J.HUA](https://dribbble.com/weiming) for [Tunan](https://dribbble.com/Tunan_studio)\"><em>Valley
    Illustration by <a href=\"https://dribbble.com/weiming\">J.HUA</a> for <a href=\"https://dribbble.com/Tunan_studio\">Tunan</a></em></p><blockquote><h1><em>We
    lack trust and optimism. Blazing colors promote positivity. Would you trust a
    crypto app like this?</em></h1></blockquote><p><img src=\"https://cdn-images-1.medium.com/max/3200/0*IpaNCe7gfbcXVYqh.png\"
    alt=\"crypto app by [uixNinja](https://dribbble.com/uixninja)\"><em>crypto app
    by <a href=\"https://dribbble.com/uixninja\">uixNinja</a></em></p><p>Even cooler
    is the fact that vibrant colors and meaningful gradients stand out better in the
    dark background. Dark themes are here to stay and they will only get better. <a
    href=\"https://shakuro.com/blog/in-the-dead-of-night-why-we-are-drawn-to-dark-interfaces/\">Here</a>,
    we took an anthropological approach to figuring out dark themes and why they work.
    Those who can find the balance between the accessibility of dark UI and emotive
    response of glaring colors, will be on top next year.</p><blockquote><h1><em>Deep
    flat, colors, and 3D, in the dark.</em></h1></blockquote><p><img src=\"https://cdn-images-1.medium.com/max/3200/0*riCogphwxVp7etHO.png\"
    alt=\"Dashboard by [uixNinja](https://dribbble.com/uixninja)\"><em>Dashboard by
    <a href=\"https://dribbble.com/uixninja\">uixNinja</a></em></p><h3>\U0001F611</h3><p>Yeah,
    but accessibility is not the only problem with gradients, colors, and dark themes.
    Bright colors are traditionally used to enforce accents. When everything is color,
    how can you emphasize? Not all users have access to OLED screens. Some of the
    gradients can be lost. Too much contrast can impede user’s focus. Dark themes
    don’t work on a sunny day outside. That might actually be a good thing though.</p><h2>Variable
    fonts</h2><p>Traditionally, typefaces are perceived as static entities with a
    limited set of adjustable parameters. Designers and writers have to consider legibility
    in the context of x-height, stroke and letter width.</p><p>Whenever the design
    requires multiple typefaces, designers have to provide all the files for the font
    styles used. You can’t fully commit to rich typography in a product unless you
    cover all the bases. With variable fonts you just need one file because variable
    or generative fonts provide infinite number of letter weight and width adjustments.</p><blockquote><h1><em>Variable
    fonts can cover any portion of the design space left for the text.</em></h1></blockquote><p><img
    src=\"https://cdn-images-1.medium.com/max/2800/0*hF31HsCB-WnkxWQ6.png\" alt=\"[Marvin
    Visions](https://www.readvisions.com/marvin)\"><em><a href=\"https://www.readvisions.com/marvin\">Marvin
    Visions</a></em></p><p>Variable fonts thrive in responsive design and localization.
    In the places where designers had to rack their brains about fitting text into
    smaller screens without losing the zest or stretching it for a different language
    which utilizes less characters.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*HQffX5GgT1z93wj2.gif\"
    alt=\"VOTE by [Josh Rinard](https://dribbble.com/joshuarinard)\"><em>VOTE by <a
    href=\"https://dribbble.com/joshuarinard\">Josh Rinard</a></em></p><p>When web
    fonts were introduced, responsiveness was an aspect they were lacking. Not enough
    flexibility resulted in legibility issues and misalignment of the design itself.
    Variable fonts are fairly recent and they help deliver fonts for the web faster
    and help streamline design process in general.</p><blockquote><h1><em>And that’s
    just the beginning. The artistic options of variable fonts are yet to be explored
    in 2019.</em></h1></blockquote><p><img src=\"https://cdn-images-1.medium.com/max/2064/0*tipXZ3C4MNJVAixs.gif\"
    alt=\"[Typography.Guru](https://typography.guru/discover/6/)\"><em><a href=\"https://typography.guru/discover/6/\">Typography.Guru</a></em></p><h3>\U0001F611</h3><p>Yeah,
    but how long till a smart and adjustable font becomes a means of promoting a sell?
    If you can have your text replying to the subtleties of every digital context
    available, how does it protect a reader from manipulation? Parametric text has
    roots in book printing which is a context limited by objective physics. This prevented
    people from saving on paper and ink and also made <a href=\"https://shakuro.com/blog/from-seminal-writing-to-dark-patterns-and-back/\">reading</a>
    one of the most important reasons for our progress.</p><h2>Figma</h2><p>Today
    we ask the age-old question: “do designers need to code?” And then, “do developers
    need UX knowledge?” The point of these is simple — avoid pain and discrepancy
    implementing the design. So if it’s about the purpose, it should also be about
    ways to get there.</p><p>Learning to code is a logical option. If you are the
    one who executes your own design, you avoid a bunch of issues. However, the amount
    of knowledge you need to maintain to be a relevant designer and a potent developer
    is exceptional. Can you do it? Good for you. For those who can’t, there should
    be other options.</p><blockquote><h1><em>The purpose is not breeding a universal
    designer. It is about building better products, with delight.</em></h1></blockquote><p>Another
    way to achieve this goal is to use and promote better tools. Figma is one of those
    tools. Before, designers had to consider a lot of variables like operating systems,
    integrations, plugins, storages, synchronization, collaboration, and finally,
    ways to assemble them all in one place. Those who did develop a workflow, deserve
    all kinds of respect. But we want less stress.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*44tVvBVgOYQRSc2m.png\"
    alt=\"Totally switched to Figma by [Alexey Kolpikov](https://dribbble.com/despoth)\"><em>Totally
    switched to Figma by <a href=\"https://dribbble.com/despoth\">Alexey Kolpikov</a></em></p><p>Figma
    is a for-us-by-us design tool. It anticipated a lot of what-ifs and stuffed a
    lot of skepticism.</p><blockquote><h1><em>Figma destroyed Sketch.</em></h1></blockquote><p>It
    does everything Sketch and Adobe XD does but more and better. More importantly,
    Figma is aimed at building what will be implemented. Every Figma component can
    be turned into a React component via API and implemented on the front end. So
    far, Figma beats competition in cost, performance speed, collaboration, sharing,
    embedding, support, and so on. With that said, Figma is still developing and in
    2019, there’s more to come.</p><h3>\U0001F611</h3><p>Yeah, but whenever we develop
    better products and fail to establish ethical use of the above, we only contribute
    to our own demise. Look at Twitter that is <a href=\"https://medium.com/@monteiro/jack-dorseys-resignation-letter-to-twitter-b04e8a63b0a9\">struggling</a>
    to gain back its good name. 2018 was <a href=\"https://www.wsj.com/livecoverage/senate-judiciary-hearing-tech-executives-russia-campaign\">fruitful</a>
    in tech executives testifying in court. Turns out, it’s not enough to put tools
    out there, we also have to watch how people use them. Will Figma protect users
    from dark patterns in UX, bad design, and fake news?</p><h2>Voice UIs</h2><p>Design
    does not have to be visual or visible to work. Through bumps and bruises, we realized
    that tools don’t really matter if we are building experiences that are not tactile.
    Designing logic means operating psychology. Building voice controls means dealing
    with natural language processing.</p><blockquote><h1><em>Voice UI is as sensual
    as it is sophisticated.</em></h1></blockquote><p>Voice UI realizes the concept
    of no UI to its finest. The process is internal and has more to do with writing,
    building context, and synthesizing data, than with actual design. Even so, designers
    are obsessed with finding ways to represent voice UI. Mainly it comes through
    impressive minority-report-like interfaces and animations.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*PwvShj4BDS6k-q5D.gif\"
    alt=\"Organic Artificial Intelligence design by [Gleb Kuznetsov](https://dribbble.com/glebich)\"><em>Organic
    Artificial Intelligence design by <a href=\"https://dribbble.com/glebich\">Gleb
    Kuznetsov</a></em></p><p>Most of the times they have nothing in common with the
    reality of voice interfaces but they prepare a user for the absence of controls
    and teach them how to treat technology that does not need any.</p><p>In 2019,
    we can hope to witness the deepening of the voice UI knowledge as more designers
    transition to meaningful experience from plain visual aesthetic of design.</p><h3>\U0001F611</h3><p>Yeah,
    but the biggest challenge with voice UIs is, ironically, not the human-to-machine
    interaction, but the human-to-human one, mediated by technology that has to be
    smarter than the two. We live in a massively imbalanced global society. We are
    struggling with the understanding of one another on many terms, technology included.
    Voice-controlled phones, cars, and homes might just broaden the gap between us.</p><p>As
    designers, we should always consider well-being of humanity as our top priority.
    If technology, even the beautifully designed one, serves some at the expense of
    the others, it has to be tackled relentlessly. That’s not happening.</p><h2>UX
    Writing &amp; UX Editing</h2><p>Last year, designers started paying attention
    to the meaning of the words that bear typefaces. Fiction and tech writers, epistolary
    hobbyists, and journalists got an adjacent industry for their skills. One thing
    led to the other and we defined the role of writing in design:</p><blockquote><h1><em>You
    have to be in control of the way your business talks to your customers.</em></h1></blockquote><p>Before,
    there was a mix of pompous narcissistic bullshit and technical nomenclature. Things
    a business was doing was mistaken for the value it could give its customers. Even
    though businesses were great, they suffered from the lack of definitive, simple,
    and persuasive wording to use with their audience.</p><p>UX writing is based on
    two simple principles: be respectful and be useful. Everything else stems from
    them. Being concise means respecting people enough to value their time more than
    yours. It’s you who has to die over the text, not the user. Being clear means
    avoiding being twofold, protecting from bad experiences, thus, being useful. Being
    expressive means being truthful and hiding no flaws. Always focus on helping a
    user first, don’t show off your eloquence, don’t SEO it, and never use marketing
    cliches — enough is enough.</p><blockquote><h1><em>UX writing is easy once you
    embrace being respectful and useful.</em></h1></blockquote><p>People don’t want
    to see you flex and promote yourself. They want to know if you can help them.
    Make your service do the talking.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*YX4RGhWILRym65KQ.gif\"
    alt=\"\"></p><p>In 2018, we’ve witnessed a noticeable rise in voice and tone design
    in major companies. They stopped pursuing ingenuity and focused on customer value.
    In 2019 we are yet to see the development of UX editing is a design discipline.</p><p>The
    difference between UX writing and UX editing is the bandwidth. UX writers produce
    user-facing text. UX editors analyze, morph, bend, and twist any copy to turn
    it into a simple humane text. There is no crash course for UX editing. It is experience,
    observation, and kindness.</p><blockquote><h1><em>Every major redesign campaign
    in 2019 will require a UX editor.</em></h1></blockquote><h3>\U0001F611</h3><p>Yeah
    but every trend goes through a set of stages. The first one is skepticism, then
    fascination, and then, bore. Fascination is the most dangerous because it often
    gets out of hand. It can turn the idea into a caricature and distort the value.
    UX writing is no different. When being simple is mistaken for dumbing down. When
    being clear becomes impudence, and being persuasive turns into condescendence.</p><p>There
    is still a place for creative writing in product design. But not where the product
    meets a user. For example, Nike and Boeing are <a href=\"https://medium.com/s/thenewnew/nike-and-boeing-are-paying-sci-fi-writers-to-predict-their-futures-fdc4b6165fa4\">paying</a>
    sci-fi writers to predict their futures.</p><h2>Product designer as a job title</h2><p>UX
    design is a very broad term. It is a part of service design which is cross-industrial.
    As the result, designers and design firms gather extensive portfolios of projects
    ranging from simple utility apps to complex FinTech platforms.</p><blockquote><h1><em>Service
    design is a blanket. It can cover every industry and apply what works universally.</em></h1></blockquote><p>Service
    designers can have their own style which they can apply to any product. That’s
    what they get famous for and that’s what businesses are willing to pay for. It’s
    like buying parts from a respected supplier.</p><p>However, most companies are
    product companies and they might require a deeper level of understanding from
    a designer. These companies require a product designer who is integrated deeply
    into the team, has all the data available, and all the tools to influence the
    system as a whole.</p><blockquote><h1><em>Product design has a significant advantage
    over service design. That’s the access to the analytics and the ability to test
    design decisions live.</em></h1></blockquote><p>Product designers have the ability
    to focus on the specifics of the product they are associated with and let go of
    everything else. They are deeply informed about the user demographic they are
    designing for and have real data to operate on, as opposed to the assumptions
    most service designers have to work with.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*ibNtw3YhI32PTlQ3.png\"
    alt=\"Innovative Eye Pillow Landing Page Design by [Sasha Turischev](https://dribbble.com/turischev)\"><em>Innovative
    Eye Pillow Landing Page Design by <a href=\"https://dribbble.com/turischev\">Sasha
    Turischev</a></em></p><h3>\U0001F611</h3><p>Yeah, but transitioning to product
    design requires vigor. By risking to immerse yourself with a certain industry
    or a product, we are making a choice that we might never return from. In that
    case, the decision has to be factored. We have to consider the viability of the
    industry and the perspectives of the professional development within it.</p><p>Fortune
    favors the brave and in 2019, we’ll see even more dedicated designers taking a
    shot at becoming specialists and sacrificing their universal skills. Time will
    tell.</p><blockquote><h1><em>Finally, the greatest trend we are starting to notice
    is a gradual shift towards sincerity. There’s only so much trickery you can resort
    to. Nothing beats good intent and design has good intent in its core.</em></h1></blockquote><iframe
    src=\"https://medium.com/media/96d08ab34921bdd17986cb5c0396842f\" frameborder=0></iframe>"
  :author: UX Planet
  :topic: design
- :url: https://medium.com/amazing-stuff/complexion-reduction-a-new-trend-in-mobile-design-cef033a0b978?source=search_post
  :title: 'Complexion Reduction: A New Trend in Mobile Design'
  :content: '<p>Complexion Reduction: A New Trend In Mobile Design</p><p>by <a href="http://www.themikehorton.com">Michael
    Horton</a> | Co-Founder &amp; Head of Product at <a href="https://itunes.apple.com/us/app/fontmoji/id1298271603?mt=8">Fontmoji</a></p><blockquote><p><strong>NOTE:</strong>
    <em>Thanks for all the positive feedback on this article. This is now one of the
    most read design articles on Medium and has been reposted in <a href="https://www.fastcompany.com/3061616/app-uis-are-all-starting-to-look-the-same-thats-not-a-bad-thing">Fast
    Co Design</a>, <a href="https://www.huffingtonpost.com/entry/complexion-reduction-a-new-trend-in-mobile-design_us_577d828fe4b05b4c02fb8b07">the
    Huffington Post</a> and dozens of other awesome publications!</em></p></blockquote><iframe
    src="https://medium.com/media/23ce1875530ef377a2c45d771f32dfd2" frameborder=0></iframe><p><strong><em>We
    have been living in a world of ‘clean and minimal’ for quite some time, so what’s
    next?</em></strong></p><p>Over the last several months, some of the leaders of
    innovative design have taken ‘minimal design’ to the next level. Facebook, Airbnb
    and Apple have followed a similar blueprint to simplify prominent products in
    a way that reflects this new trend of ‘Complexion Reduction’ in mobile design.</p><h3>WHAT
    THE HELL IS COMPLEXION REDUCTION?</h3><p>You’ve never heard of ‘Complexion Reduction’
    you say? Well yea, that’s because I just made the term up. Recently I’ve noticed
    a new trend that is beyond flat design, beyond minimal design and independent
    of <a href="http://www.uxbooth.com/articles/progressive-content/">progressive
    reduction</a>. Some may claim that this is just the next step of minimal design
    being implemented into the mobile realm but I say it is something more distinct.
    There are specific similarities and characteristics that define this new trend.
    So I decided to name it. I’m allowed to do that, right?</p><p><strong>The defining
    characteristics of this <em>hot new trend</em> sweeping across Silicon Valley
    are:</strong></p><ol><li><p><strong>Bigger, bolder headlines</strong></p></li><li><p><strong>Simpler
    more universal icons</strong></p></li><li><p><strong>Extraction of color</strong></p></li></ol><p>The
    result? The user interfaces of some of our favorite apps are starting to look
    more and more like they could all be housed under the same brand.</p><h3>THE PROOF</h3><p>I
    first started taking notice of this trend back in early May when *<em>Instagram
    *</em>released their <a href="https://medium.com/@ianspalter/designing-a-new-look-for-instagram-inspired-by-the-community-84530eb355e3#.gmyokj9qa">redesigned
    UI</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*36N2-AkO-a6WLwh-5W0EmQ.png"
    alt=""></p><p>Some of the changes they introduced included removing much of the
    blue and dark grey color used throughout the app, making headlines bolder and
    simplifying the bottom navigation and icons. <strong>What was left was a black
    and white UI with bold headlines where the content shined and functionality was
    clear.</strong> I appreciated the less cluttered interface and was reminded a
    bit of a platform I have been an admirer of for quite some time; <a href="http://www.medium.com">**Medium</a>**.
    Medium has been rocking the black and white since launch in 2012, and has reduced
    clutter with each redesign since; effectively making Medium one of the originators
    of CR (Complexion Reduction) without even knowing it. Congratulations, Medium!</p><p>Shortly
    after the folks over at FB unveiled Instagram’s look, I opened up the Airbnb app
    and was struck by how familiar it looked. This was my first time browsing the
    app since they <a href="https://www.airbnb.com/livethere">released a redesign
    in Apri</a>l, yet I felt like I had seen this all before.</p><p><img src="https://cdn-images-1.medium.com/max/2046/1*gGaeeFFmkDSRZ8NipWWRMA.png"
    alt=""></p><p><strong>Airbnb’s</strong> redesigned UI didn’t get nearly the media
    coverage of Instagram’s redesign a month later (partly because it wasn’t accompanied
    by a shiny new app icon) but it followed many of the same CR tactics.</p><p>The
    mobile redesign introduced larger, bolder headlines, removed unnecessary imagery
    and color and simplified their icons to make them more universally recognizable.
    <strong>What was left was a very black and white UI where the content shined and
    functionality was clear.</strong></p><p><strong>Apple</strong> is the latest example
    of designers becoming enamored by the Complexion Reduction movement. Earlier this
    month, at <a href="http://www.wired.com/2016/06/heres-everything-apple-announced-wwdc-2016/">Apple’s
    WWDC</a> the tech giant announced a number of exciting things for consumers to
    look forward to, including the release of iOS 10, which they are dubbing, “The
    biggest iOS release ever!” (or at least since iOS 8 which was referred to as…
    “The biggest iOS release ever!”)</p><p><img src="https://cdn-images-1.medium.com/max/2046/1*SrA5FVya2uVIgIbp5stq3w.png"
    alt=""></p><p>One announcement in particular caught my eye. That was <strong>the
    redesign of Apple Music</strong>. While the most important aspects of the redesign
    are UX updates and additional features, the aesthetic was the first thing I noticed.
    Caitlin McGarry, a staff writer at Macworld, <a href="http://www.macworld.com/article/3082637/ios/every-change-coming-to-apple-music-in-ios-10.html">described
    the updated appearance</a> well, <strong><em>“It’s a totally new look, with giant
    cards, bigger and bolder fonts, and a clean white background that allows the album
    art to shine.”</em></strong></p><p>Sound familiar? The design differs slightly
    from the blueprint used by Instagram and Airbnb (they use solid icons! What the
    heck Apple?) but the key elements are there: large bold headlines, black and white
    UI.</p><h3>SO WHAT DOES IT ALL MEAN?</h3><p>As I mentioned earlier, this means
    more and more of your favorite apps are going to start looking like one another.
    Why? Much like the NFL, tech is a copycat league. These redesigns were met with
    generally positive reviews (some people are complaining about a ‘lack of personality’
    in these new black and white UIs but they’ll soon get over that. You open an app
    for it’s functionality, not it’s personality) so I expect apps both new and old
    to start jumping on the CR bandwagon.</p><blockquote><h1>This means your iPhone
    home screen will soon become nothing more than a colorful mosaic of bright portals
    transporting you to Pleasantville.</h1></blockquote><p><img src="https://cdn-images-1.medium.com/max/2160/1*6UkyLh-9qHuSIEW0NE2aAg.png"
    alt=""></p><p><strong>Now, whether you are for or against this monochromatic fad,
    it is undoubtedly a sign of progress.</strong> The product design process is advancing
    and evolving from the old segmented approach that encouraged superfluous design
    to a more holistic process that truly is focused on the user. In the old product
    design process a UI designer may be handed wireframes by a UX or product person
    with the instructions ‘make it pretty’. That designer would then spend hours or
    days adding color, removing color, changing color when the best solution may have
    been right there in front of them all along… the wireframes! As the lines between
    UX and UI designer blur in today’s more integrated design process, designers become
    less worried about their specific responsibilities (like making it pretty) and
    focus on the ultimate goal of creating the best product for their user.</p><h3>THE
    ULTIMATE GUIDE TO COMPLEXION REDUCTION</h3><p>So you’re sold on CR and ready to
    hop on the bandwagon? Good, follow these guidelines and you’ll have an award winning
    app in no time.</p><blockquote><p><strong>1. Remove Color.</strong> Well ok, you
    can have one color, but use it extremely sparingly to indicate action. Everything
    else better be black and white. Let the content of your app bring the color.<strong>2.
    Bigger, Bolder, Blacker Headlines.</strong> You see that headline there? Bump
    it up about 20 to 30 pixels and make it HEAVY.<strong>3. Simple, Thin, Recognizable
    Icons.</strong> Your icons better be universal and no color allowed here either.
    And if you want bonus points order them left to right in this way: home, search,
    primary action, secondary action, profile.<strong>4. Double, NO, Triple your White
    Space.</strong> Maybe even quadruple it. You really can’t go wrong here.<strong>5.
    Make your App Icon Brighter</strong>. If you are fiending to design something
    with flash and color, make it the app icon. This is where you put your personality
    and brand. And make it stand out!</p></blockquote><p><strong><em>Thanks for reading!
    Hit the heart if you enjoyed.</em></strong></p><p>If you’re designing a mobile
    or web app of your own or for a client and want my step by step guide on the process
    I follow to design new products enter you email below!</p><iframe src="https://medium.com/media/23ce1875530ef377a2c45d771f32dfd2"
    frameborder=0></iframe><p><a href="http://swarmnyc.com/whiteboard/complexion-reduction-a-new-trend-in-design-1">**Article
    originally published on SWARM.</a>**</p>'
  :author: HOT Apps
  :topic: design
- :url: https://medium.com/digital-experience-design/how-to-apply-a-design-thinking-hcd-ux-or-any-creative-process-from-scratch-b8786efbf812?source=search_post
  :title: How to apply a design thinking, HCD, UX or any creative process from scratch
  :content: '<p>This how-to article aims at providing designers, creative thinkers
    or even project managers with a tool to set up, frame, organise, structure, run
    or manage design challenges, and projects: The Double Diamond revamped.</p><h3>The
    Double Diamond revamped</h3><p>In order to do so, I have come up with an own and
    a revamped version of the Double Diamond process. In case, you are familiar with
    the <a href="http://www.designcouncil.org.uk">British Design Council</a>’s Double
    Diamond, <a href="undefined">IDEO</a>’s <a href="https://www.ideo.org">human centred
    design ideology</a> or @d.school’s <a href="https://dschool-old.stanford.edu/sandbox/groups/designresources/wiki/36873/attachments/74b3d/ModeGuideBOOTCAMP2010L.pdf?sessionID=1b6a96f1e2a50a3b1b7c3f09e58c40a062d7d553">Design
    Thinking process</a> you might be familiar with the majority of approaches, steps
    and tools in the following paragraphs of this article.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*VM2t4Y4TW4gDIbPQTOBCaw.png"
    alt="Design Council’s Double Diamond, img source: [http://static1.squarespace.com/static/55fa0341e4b06660c65bd4f0/t/5642c682e4b0b633d4fcc1fd/1447216776499/](http://static1.squarespace.com/static/55fa0341e4b06660c65bd4f0/t/5642c682e4b0b633d4fcc1fd/1447216776499/)"><em>Design
    Council’s Double Diamond, img source: <a href="http://static1.squarespace.com/static/55fa0341e4b06660c65bd4f0/t/5642c682e4b0b633d4fcc1fd/1447216776499/">http://static1.squarespace.com/static/55fa0341e4b06660c65bd4f0/t/5642c682e4b0b633d4fcc1fd/1447216776499/</a></em></p><p><img
    src="https://cdn-images-1.medium.com/max/2884/1*tglMHE4gRVlLrryuBlFYYg.png" alt="IDEO
    HCD process, img source: [https://cdn.evbuc.com/eventlogos/160332149/designthinkingphases.png](https://cdn.evbuc.com/eventlogos/160332149/designthinkingphases.png)"><em>IDEO
    HCD process, img source: <a href="https://cdn.evbuc.com/eventlogos/160332149/designthinkingphases.png">https://cdn.evbuc.com/eventlogos/160332149/designthinkingphases.png</a></em></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*VmGEltnPDMNMHhQ7OdXWgw.png" alt="Stanford
    d.school Design Thinking process, img source: [http://dschool.stanford.edu/wp-content/uploads/2012/02/steps-730x345.png](http://dschool.stanford.edu/wp-content/uploads/2012/02/steps-730x345.png)"><em>Stanford
    d.school Design Thinking process, img source: <a href="http://dschool.stanford.edu/wp-content/uploads/2012/02/steps-730x345.png">http://dschool.stanford.edu/wp-content/uploads/2012/02/steps-730x345.png</a></em></p><h3>Understanding
    people</h3><p>According to <a href="http://www.jnd.org">Don Norman</a>, the human
    centred design process starts with a good understanding of people and the needs
    that the design is intended to meet. Various companies, organisations and educational
    institutions have taken on this challenge and have therefore come up with models
    in order to provide structure to the process of human centred design or design
    thinking.</p><h3>Chilli Con Carne and the Double Diamond</h3><p>When you cook
    a chilli con carne for the first time, you might start off with a recipe that
    appeals to you. Once you have burned your tongue a couple of times, you either
    go easy on the spices, or you even spice it up as you can’t get enough of the
    burning. Generally speaking, you tweak the original recipe to your own needs and
    taste.</p><blockquote><h1>…tweak the original recipe to your own needs and taste…</h1></blockquote><p>That’s
    what I have done to the design process during my previous months trying to master
    <a href="https://www.hyperisland.com/programs-and-courses/ma-digital-experience-design">Digital
    Experience Design</a> at <a href="undefined">Hyper Island</a>.</p><p>As a starting
    point for my dish, I am using the Double Diamond process, originally released
    by the <a href="http://www.designcouncil.org.uk">British Design Council</a>. I
    like this framework for its structure, clarity and dynamic.</p><h3>Point of departure
    and basics</h3><p>The core question in almost any creative or design project is
    how to get from point A – “Don’t know” or “Could be” – to point B – “Do know”
    or “Should be”. This process might seem finite and straightforward at first sight.</p><p>In
    reality, it is a never ending process, as creativity is the habit of continually
    doing things in new ways to make a positive difference to our life (Hyper Island,
    2016).</p><blockquote><h1>…creativity is the habit of continually doing things
    in new ways to make a positive difference to our life (Hyper Island, 2016).</h1></blockquote><p>The
    Double Diamond is a structured design approach to tackle challenges in four phases:</p><ol><li><p><strong>Discover
    /Research</strong>— insight into the problem (diverging)</p></li><li><p><strong>Define/Synthesis</strong>
    — the area to focus upon (converging)</p></li><li><p><strong>Develop/ Ideation</strong>—
    potential solutions (diverging)</p></li><li><p><strong>Deliver /Implementation</strong>—
    solutions that work (converging)</p></li></ol><p>Phases of this process are either
    <strong>diverging or converging</strong>. During a <strong>diverging phase</strong>,
    you try to <strong>open up</strong> as much as possible without limiting yourself,
    whereas a <strong>converging phase</strong> focuses on <strong>condensing and
    narrowing</strong> your findings or ideas.</p><p>If you google the Double Diamond
    you are bound to find various interpretations and also varying wordings. I am
    going to stick to the version above as its wording allows flexibility and agility
    in its application in my opinion. Or in other words, it is the most appealing
    recipe to me.</p><p>The four phases of the Double Diamond may be simplified and
    merged into two main stages of the process.</p><ul><li><p>*<em>Stage 1 — Doing
    the right thing (Diamond 1 — Discover and Define)*</em>Whatever you do, you ought
    to look for the right problem to solve or the right question to ask before you
    try to do so. This is all about what you do.</p></li><li><p>*<em>Stage 2 — Doing
    things right (Diamond 2 — Develop and Deliver)*</em>Once you have found the right
    question to answer or the right problem to solve, you want to make sure that you
    do this the right way. This is all about how you do it.</p></li></ul><p><img src="https://cdn-images-1.medium.com/max/7680/1*X2PkalIp21_rEnCVayJOAA.png"
    alt=""></p><p>The following paragraphs provide you with a step-to-step approach
    for each phase.</p><h2>Stage 1 — Doing the right thing (Diamond 1 — Discover and
    Define)</h2><p>This phase is split into <em>Discover/Research</em> and <em>Define/Synthesis</em>.</p><h3>Discover
    / Research</h3><ol><li><p><strong>Rip the brief</strong> (the usual starting point
    of your challenge) — Try to question the brief or your initial question by challenging
    every part of it and evaluating fields of interests. List as many elements as
    you can, find characteristics, define areas of interest and extremes, list places,
    people (personas), experiences that are related and can be explored.</p></li><li><p>Before
    you dive into your research, *<em>cluster your findings into topics *</em>to get
    an overview and you might have to limit yourself in terms of the scope you want
    to research.</p></li><li><p>Dive into your <strong>research</strong>. Apply <strong>primary</strong>
    (field) and <strong>secondary</strong> (desk) research methods. <a href="http://www.designkit.org/methods">Here
    is an extensive list of research methods by ideo.org.</a></p></li></ol><p>*<em>As
    a result, *</em>you ought to end up with a huge pile of unstructured research
    findings.</p><h3>Define / Synthesis</h3><p>In order to make sense of your findings,
    you want to synthesise your research by applying the following steps:</p><ol><li><p><strong>Download</strong>
    (summarise your raw findings and share them with your team) all your research.</p></li><li><p><strong>Cluster
    learnings</strong> and similarities to themes.</p></li><li><p><strong>Find insights</strong>
    (insights are the dormant truth about the consumer’s motivations, wishes or frustrations
    regarding a specific topic)build opportunity areas (a phrasing of the potential
    area of action).</p></li><li><p><strong>Create HMW questions</strong> (A so called
    “how might we...” question that makes a tangible statement of what is to be done
    or solved within the area of action).</p></li></ol><p><img src="https://cdn-images-1.medium.com/max/7680/1*x7BTI1g3rRdswA6hrkMxWQ.png"
    alt=""></p><p>*<em>As a result, *</em>you ought to come up with a revamped brief
    (final brief, HMW-question) that either clarifies or details the initial brief
    challenge or even contradicts it.</p><h2>Stage 2 — Doing things right (Diamond
    2 — Develop and Deliver)</h2><p>This phase is split into <em>Develop/Ideation</em>
    and <em>Deliver/Implementation</em>.</p><h3>Develop / Ideation</h3><p>As you have
    deduced the actual question to solve or challenge, you start ideating.</p><ol><li><p><strong>Ideation</strong>This
    is the fun part and as it is part of a diverging phase. You should restrain from
    limiting yourself and approach ideation with an open mind. Do not judge during
    ideation. Apply a “yes, and…” rather than a “no…” or “yes, but…” mentality. Let
    anything happen at this point and build upon each other’s ideas. There are tonnes
    of creative ideation tools and methods out there. I am not going into detail here.</p></li><li><p><strong>Evaluation</strong>
    Towards the end of an ideation phase, evaluate your ideas and select your favourite
    ones. Two tools that come in handy are dot-votings (each team member votes for
    ideas) or impact/feasibility matrices (a matrix that puts feasibility in relation
    to a potential impact of an idea).</p></li></ol><p><strong>As a result, *<em>you
    ought to end up with one or a small number of *</em>ideas</strong> you want to
    later prototype and test, in order to find the best answer or solution to your
    initial question or problem.</p><h3>Deliver / Implementation</h3><p>Once you have
    come up with potential solutions (set of ideas), you want to evaluate the final
    one and the way it needs to be implemented or executed. In order to so, you may
    apply an agile approach consisting of three steps:</p><ol><li><p><strong>Build/Prototype</strong></p></li><li><p><strong>Test/Analyse</strong></p></li><li><p><strong>Iterate/Repeat</strong></p></li></ol><p>Aim
    for MVPs — minimum viable products/prototypes, that offer enough tangibility to
    find out whether they solve the initial problem or answers the initial question.</p><p><strong>As
    a result, *<em>you ought to be able to *</em>go “out”</strong> with your final
    proposal, product, answer or solution.</p><p><img src="https://cdn-images-1.medium.com/max/7680/1*G_q8cc4uz2DwOWTRAMog2w.png"
    alt=""></p><p>Once you have done so you might go back to start and do it all over
    again because there are always things to be improved.</p><p>Remember: Creativity
    is the habit of continually doing things in new ways to make a positive difference
    to our life (Hyper Island, 2016).</p><h2>One more… wait… two, three more things</h2><p>This
    article or guide is by no means concluding and doesn’t claim to be the one and
    only approach or way to do it.</p><p>This revamped Double Diamond is just ONE
    and my personal approach. It’s not the ONE AND ONLY approach and it is here to
    be challenged, questioned and iterated upon.</p><p><img src="https://cdn-images-1.medium.com/max/7680/1*plChYNkaj7TWsLPImkB41A.png"
    alt=""></p><p>Depending on your role and a project, the size of the diamonds may
    also vary. Meaning that there might be challenges or projects, in which you solely
    focus or emphasis on one part of the Double Diamond. Furthermore, this process
    is not linear. In reality, you need to be prepared to be agile and go back and
    forth at any point.</p><p>This article also focuses on the general structure of
    the process rather than all the individual tools and methods that may be applied
    to it.</p><p>In the end, it is a framework anyone may or may not apply. It has
    helped me and guided me through the design process.</p><p>Nevertheless and at
    some point you will be stuck in the fog, and you will feel lost in the process.
    It’s normal, deal with it and trust the process.</p><p><strong>Two follow-up posts
    to this article:</strong></p><p>Here is an updated version of the framework released
    in Feb 2018. The update includes various adjustments in the process, a new visualization
    and free .pdf and .jpg downloads:<a href="https://medium.com/@dan.nessler/how-to-solve-problems-applying-a-uxdesign-designthinking-hcd-or-any-design-process-from-scratch-v2-aa16e2dd550b"><strong>How
    to solve problems applying a UXdesign Designthinking HCD or any Design Process
    from scratch v2</strong><em>In 2016, I set out to take on and rethink the Design
    Process. It was my attempt at making sense of it but what happened went far beyond…</em>medium.com</a></p><p>A
    critical reflection and my process:<a href="https://medium.com/digital-experience-design/how-to-fuck-up-the-design-thinking-process-and-make-it-right-dc2cb7a00dca"><strong>How
    to rethink the Design Thinking process and make it right</strong><em>This is about
    how this article and model have come together and a critical reflection on it…</em>medium.com</a></p><p>An
    approach at mashing-up the Double Diamond with project management methods as multiply
    asked:<a href="https://medium.com/@dan.nessler/how-to-mash-up-and-benefit-from-pm-and-hcd-ux-design-thinking-89ea28f47a63"><strong>How
    to mash-up and benefit from PM and HCD, UX &amp; Design Thinking</strong><em>Ever
    struggled with managing your projects or PMs trying to do so? Well, there is an
    app… hmm… or something different…</em>medium.com</a></p><h3>Feel free to recommend
    this post, share it, follow me or get in touch with me on <a href="http://www.dannessler.com">http://www.dannessler.com</a></h3>'
  :author: Digital Experience Design
  :topic: design
- :url: https://medium.muz.li/gestalt-principles-in-ui-design-6b75a41e9965?source=search_post
  :title: Gestalt principles in UI design.
  :content: <p>How to become a master manipulator of Visual Communication.</p><p><img
    src="https://cdn-images-1.medium.com/max/7816/1*lXzT7FsUZ7KmYFwIdrsZHA.jpeg" alt=""></p><p>Have
    you ever looked at the sky noticing an unusually shaped cloud, resembling a familiar
    animal or an object? Have you ever wondered, why or how you make this association
    just by looking at a fluffy, blob of gas? It’s all because of how your <strong>brain</strong>
    works!</p><p><img src="https://cdn-images-1.medium.com/max/4000/1*SZT0rc5aFfgPlP_pOxJ46Q.png"
    alt=""></p><p>Your brain is always trying to make sense of the world by comparing
    previous experiences or visual patterns and <strong>connecting the dots</strong>.
    It has its own “weird” way of perceiving shape and form, grouping information,
    fill in the gaps to <strong>draw the big picture</strong>.</p><p>Having an understanding
    how your brain works will help you <strong>become a wiser designer</strong>; master
    manipulator of Visual Communication. It can help you determine which visual elements
    are most effective in any given situation, so you can use them to influence perception,
    direct attention and cause behavioural change. Something particularly useful when
    it comes to goal-oriented, problem-solving, intuitive design; <strong>User Interface
    design</strong>.</p><blockquote><p>“Great designers understand the powerful role
    that psychology plays in visual perception. What happens when someone’s eye meets
    your design creations? How does their mind react to the message your piece is
    sharing?”  — Laura Busche, Brand Content Strategist at Autodesk</p></blockquote><p>It’s
    clear by now, visual <strong>design and psychology are linked</strong> and can
    influence one another. Gestalt principles can help us understand and control these
    links.</p><h2>What is Gestalt?</h2><p>Gestalt (form, shape in German) is a group
    of visual perception principles developed by German psychologists in 1920s. It
    is built on the theory that “an organized whole, is perceived as greater than
    the sum of its parts”.</p><blockquote><h1>“The whole is other than the sum of
    the parts.”</h1><h1>— Kurt Koffka</h1></blockquote><p>The Gestalt principles attempt
    to describe how people perceive visual elements when certain conditions apply.
    <strong>They are built on four key ideas:</strong></p><h3><strong>Emergence</strong></h3><p>People
    tend to identify elements first in their general outlined form. Our brain recognises
    a simple, well-defined object quicker than a detailed one.</p><p><img src="https://cdn-images-1.medium.com/max/3040/1*d4ZjN7fxnyrZoS0Qj8oIOA.jpeg"
    alt=""></p><h3><strong>Reification</strong></h3><p>People can recognise objects
    even when there are parts of them missing. Our brain matches what we see with
    familiar patterns stored in our memory and fills in the gaps.</p><p><img src="https://cdn-images-1.medium.com/max/3042/1*LBpeuxUs-chS8ngQnQQ0_A.jpeg"
    alt=""></p><h3><strong>Multi-Stability</strong></h3><p>People will often interpret
    ambiguous objects in more than one ways. Our brains will bounce back and forth
    between the alternatives seeking certainty. As a result, one view will become
    more dominant while the other one will get harder to see.</p><p><img src="https://cdn-images-1.medium.com/max/3042/1*yVUZpugpVxhrwYtd7xVsfA.jpeg"
    alt=""></p><h3><strong>Invariance</strong></h3><p>People can recognise simple
    objects independently of their rotation, scale and translation. Our brain can
    perceive objects from different perspectives, despite their different appearance.</p><p><img
    src="https://cdn-images-1.medium.com/max/3042/1*HfC_M2psENePJ23lIZ5eMg.jpeg" alt=""></p><p><strong>Here’re
    the Gestalt principles which can inform today’s UI design.</strong></p><h2>Proximity</h2><p>Elements
    arranged close to each other are perceived as more related than those placed further
    apart. This way different elements are viewed mainly as a group rather than as
    individual elements.</p><p><img src="https://cdn-images-1.medium.com/max/2280/1*rb6h4RwbjHPjQl2qRLntHA.png"
    alt=""></p><h3><strong>How does the Proximity principle apply to UI design?</strong></h3><p>We
    can use the Proximity principle in UI design for grouping similar information,
    organising content and decluttering layouts. Its correct use will have a positive
    impact on visual communication and user experience.</p><p>As the principle states,
    items that are related should stay close to each other, while the unrelated items
    should stay further apart. White space plays a vital role here as it creates contrast
    guiding the users’ eyes in the intended direction. White space can boost visual
    hierarchy and information flow, contributing in easy to read and scan layouts.
    It will help users achieve their goals faster and delve deeper into the content.</p><p><img
    src="https://cdn-images-1.medium.com/max/4016/1*HepksZwz04AfFDQTWRCRNw.jpeg" alt=""></p><p><em>We
    can apply the Proximity principle pretty much everywhere from navigation, cards,
    galleries and banners to lists, body text and pagination.</em></p><h2>Common Region</h2><p>Similarly
    to the Proximity principle, elements placed within the same region are perceived
    as grouped.</p><p><img src="https://cdn-images-1.medium.com/max/2280/1*VxBcEZmTiwn6GhzMZTcyIw.png"
    alt=""></p><h3>How does the Common Region principle apply to UI design?</h3><p>The
    Common Region principle is particularly useful. It can help with information grouping
    and content organisation, but it can also achieve content separation or act as
    a focal point. It boosts hierarchy, scanability and assists in promoting information.</p><p>The
    Common Region principle can hold together many different elements keeping them
    unified within larger groups. We can achieve it with the use of line, colour,
    shape and shadow. It can often be used to bring elements into the foreground,
    indicating interaction or importance.</p><p><img src="https://cdn-images-1.medium.com/max/4016/1*v8mRsx28je9GFlIasdMPgQ.jpeg"
    alt=""></p><p><em>A good Common Region example would be the card UI pattern; a
    well defined rectangular space with different bits of information presented as
    one. Banners and tables are good examples as well.</em></p><h2>Similarity</h2><p>Elements
    sharing similar visual characteristics are perceived to be more related than those
    not sharing similar characteristics.</p><p><img src="https://cdn-images-1.medium.com/max/2280/1*qnR1RWW8tN-OUfzlUR2ggQ.png"
    alt=""></p><h3>How does the Similarity principle apply to UI design?</h3><p>We
    tend to perceive similar to each other elements as grouped or a pattern. We also
    might think that they serve the same purpose. Similarity can help us with organising
    and classifying objects within a group and linking them with a specific meaning
    or function.</p><p>There are different ways of making elements perceived as being
    similar, and thus, related. These include similarity of colour, size, shape, texture,
    dimension, and orientation; with some of them being more strongly communicative
    than others (ex. colour &gt; size &gt; shape). When Similarity occurs, an object
    can get emphasised by being different from the rest; this is called ‘Anomaly’
    and can be used to create contrast or visual weight. It can draw the user’s attention
    to a specific piece of content (focal point) while assisting with scanability,
    discoverability and the overall flow.</p><p><img src="https://cdn-images-1.medium.com/max/4016/1*J1xJVNgjX5gxZ0FSJWgDKw.jpeg"
    alt=""></p><p><em>We can use the principle of Similarity in navigation, links,
    buttons, headings, call to actions and more.</em></p><h2>Closure</h2><p>A group
    of elements are often perceived to be a single recognisable form or figure. The
    Closure also occurs when an object is incomplete, or parts of it are not enclosed.</p><p><img
    src="https://cdn-images-1.medium.com/max/2280/1*LxCr2o4bLGzzZpYp3tPtFw.png" alt=""></p><h3>How
    does the Closure principle apply to UI design?</h3><p>As the Closure principle
    states, when presented with the right amount of information, our brain will jump
    to conclusions by filling in the gaps and creating a unified whole. This way we
    can decrease the number of elements needed to communicate information, reducing
    complexity and making designs more engaging. Closure can help us minimise visual
    noise and convey a message, reinforcing a concept within a pretty small space.</p><p><img
    src="https://cdn-images-1.medium.com/max/5664/1*akm90Vz-q4eahMEWmnXa3Q.png" alt=""></p><p><em>We
    can use the Closure principle in Iconography, where simplicity helps with communicating
    meaning, swiftly and clearly.</em></p><h2>Symmetry</h2><p>Symmetrical elements
    tend to perceived as belonging together regardless of their distance, giving us
    a feeling of solidity and order.</p><p><img src="https://cdn-images-1.medium.com/max/2280/1*Y9SGHHx9Q2Dg5R6CUzIVlA.png"
    alt=""></p><h3>How does the symmetry principle apply in UI design?</h3><p>Symmetrical
    elements are simple, harmonious and visually pleasing. Our eyes seek those attributes
    along with order and stability, to make sense of the world. For this reason, Symmetry
    is a useful tool for communicating information quickly and efficiently. Symmetry
    feels comfortable helping us focus on what’s important.</p><p>Symmetrical compositions
    are satisfying, but they can also get a bit dull and static. Visual symmetry tends
    to be more dynamic, and interesting. Adding an asymmetrical element to an otherwise
    symmetrical design can help with drawing attention while making an impression;
    something useful for any point of interest or a Call To Action, for example. Symmetry,
    along with a healthy amount of asymmetry is important in any design.</p><p><img
    src="https://cdn-images-1.medium.com/max/4016/1*EoFv3rd9OddikEdgXa59jA.jpeg" alt=""></p><p><em>It’s
    good to use Symmetry for portfolios, galleries, product displays, listings, navigation,
    banners, and any content-heavy page.</em></p><h2>Continuation</h2><p>Elements
    arranged in a line or a soft curve are perceived to be more related than those
    arranged randomly or in a harsh line.</p><p><img src="https://cdn-images-1.medium.com/max/2280/1*qiXDOZnWm_NFprHEcDEp8w.png"
    alt=""></p><h3>How does the Continuity principle apply in UI design?</h3><p>Elements
    following a continuous line are perceived as grouped. The smoother the line segments,
    the more we see them as a unified shape; our mind prefers the path of least resistance.</p><p>Continuity
    helps us interpret direction and movement through a composition. It takes place
    when aligning elements and it can help our eyes move smoothly through the page,
    assisting with legibility. The Continuity principle strengthens the perception
    of grouped information, creating order and guiding users through different content
    segments. Disruption of continuity can signal the end of a section drawing attention
    to a new piece of content.</p><p><img src="https://cdn-images-1.medium.com/max/4016/1*_rR4aKL8rNoO9NshNMyTOA.jpeg"
    alt=""></p><p><em>The linear arrangement of rows and columns are good examples
    of Continuity. We can use them in menus and sub-menus, lists, product arrangements,
    carousels, services or process/progress displays.</em></p><h2>Common Fate</h2><p>Elements
    moving towards the same direction are perceived as more related than those moving
    in different directions, or not moving at all.</p><p><img src="https://cdn-images-1.medium.com/max/2280/1*idl16iEtKFaMKbIuxn-GaA.png"
    alt=""></p><h3>How does the Common Fate principle apply in UI design?</h3><p>Regardless
    of how far apart are the elements or how dissimilar they might appear, if they
    are moving or changing together, they are perceived as related. This effect can
    take place even when movement is implied, by other visual elements.</p><p>The
    Common Fate principle is more potent when elements move synchronised; in the same
    direction and at the same time and speed. It can help with grouping relevant information
    and linking actions with results. The disruption of a synchronised movement can
    grab users’ attention and direct it to a specific element or feature. It can also,
    establish relationships between different groups or states.</p><p><img src="https://cdn-images-1.medium.com/max/4016/1*MepRPVH5VEPv4fgJsETHDg.jpeg"
    alt=""></p><p><em>We can use the Common Fate principle in expandable menus, accordions,
    tool-tips, product sliders, parallax scrolls and swiping indicators.</em></p><h2>Conclusion</h2><p>User
    Interface Design isn’t all about pretty pixels and sparkly graphics. It’s mainly
    about communication, performance and convenience. Gestalt principles are always
    current helping us achieve these goals; creating a pleasant experience for the
    users and a great success for the business.</p><p>*If you enjoyed this article
    or find it useful, please clap and share it so more people can benefit from it.
    *❤</p><p>*<em>You might also like my article on <a href="https://medium.muz.li/how-to-design-with-intention-5fee5f39e163">how
    to design with intention</a>, an easy plan for action for even more successful
    designs.</em></p><p><img src="https://cdn-images-1.medium.com/max/2140/1*kBBb0Yj_PHq8r-ynU9bwJw.png"
    alt=""></p>
  :author: Muzli - Design Inspiration
  :topic: design
- :url: https://medium.com/@hellostanley/design-doesnt-scale-4d81e12cbc3e?source=search_post
  :title: Design Doesn’t Scale.
  :content: '<p>Design Doesn’t Scale is a statement that has bothered me for the last
    four-years. When I joined Spotify’s design team in 2012, the level of inconsistency
    and fragmentation shocked me. Up-close, the treatment of type, colour, imagery,
    layout, IA, and interactions just didn’t seem to align anywhere. And when I started
    talking about it, I realised the whole team was frustrated too. We concluded that
    the fragmentation in the product was just reflecting the fragmentation in the
    team, that designers spread across so many different projects, timezones and competing
    timetables, just didn’t stand a chance. And, after all, weren’t these factors
    inherent in all modern tech companies anyway? It was then that I first heard myself
    say, “Design Doesn’t Scale”.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*WmTrYFgM1OJASlGK2AuMxQ.jpeg"
    alt=""></p><p>But while this issue unsettled me, I tried my best not to engage
    with it — dismissing it as a lost cause — and focussing on a redesign instead.
    It didn’t work. No matter how happy I was with a design, it was always dulled
    when seen alongside several conflicting design-directions. A year after I joined
    I finally became so frustrated with this issue that I decided to make it my personal
    mission to find a solution. Surely crossing the arms and accepting that design
    doesn’t scale couldn’t be the only answer.</p><p>And so the premise for my quest
    was Design Doesn’t Scale or: How does a team of distributed designers, spread
    across different time-zones, projects and competing objectives ever find a way
    to work together so they can create one coherent experience? Here’s what we discovered.</p><h2>Principles</h2><p>It
    was during a weekly design critique that it became clear we had nothing to align
    on. Our feedback was nothing more than personal opinions based on some new design
    fad. This led to frustration for the designer presenting, and left the team with
    a feeling of uncertainty once the session was over. So in 2013, we decided to
    write some principles to turn this group of individuals into a team with a shared
    point-of-view.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*AWqeTBwnxZ_qE3hEqZwEZQ.png"
    alt="(1) Content First (2) Be Alive (3) Get Familiar (4) Do Less (5) Stay Authentic
    (6) Lagom"><em>(1) Content First (2) Be Alive (3) Get Familiar (4) Do Less (5)
    Stay Authentic (6) Lagom</em></p><p>We’ve since used these principles to align
    our design critiques, shape a collective voice across design in the organisation,
    and as the foundation for the visual realignment we shipped in 2014 — a project
    that held many learnings and worthy of its own article.</p><p><img src="https://cdn-images-1.medium.com/max/7112/1*TNNtgSQ3CtIboOOEZBgFGw.png"
    alt="Spotify 2014 (Project Cat)"><em>Spotify 2014 (Project Cat)</em></p><p>What
    really made the principles work, was that we tailored them to our domain (music)
    and tied them back to our business goals, in terms that would resonate with non-designers.</p><p>Since
    launching them we’ve been exploring ways to make them stickier, for example, reducing
    them to three and making them more inclusive as Experience Principles in collaboration
    with our Marketing team.</p><h2>Guidelines</h2><p>After the visual realignment,
    it soon became clear that the hardest part would be maintaining this new found
    consistency. So in 2014, we created Spotify’s Design Language System, GLUE (a
    Global Language for a Unified Experience), which documented our styles, components,
    and patterns, on a website that was accessible to everyone in the company.</p><p><img
    src="https://cdn-images-1.medium.com/max/5524/1*SQjAZi0C2HYa2-73wqj9xg.png" alt="Version
    1 of Spotify’s Guidelines"><em>Version 1 of Spotify’s Guidelines</em></p><p>For
    the first time we had a shared definition of our interfaces that we could use
    to coordinate its evolution. This not only encouraged consistency and increased
    efficiency, but also created a shared vocabulary between designers and developers,
    so that the label for a colour or type-style could be understood across design-specs
    and code.</p><p>Along with the guidelines, we created UI toolkits for our design
    tools that reflected the same styles and components. This was great for kickstarting
    projects, while also highlighting what didn’t exist and might need to be added
    to the toolkit later. It also forced us to choose which applications (Photoshop
    or Illustrator or Sketch, etc.) we’d support and how we’d share files with one
    another.</p><p>Modularising design in this way has revealed the relationships
    and dependencies that make up our experience, and ultimately make it easier for
    us to collaborate with one another.</p><h2>Glue</h2><p>We soon realised that maintaining
    guidelines and toolkits is a constant effort. So after some convincing, GLUE became
    a dedicated team in 2015, made up of designers and engineers.</p><p><img src="https://cdn-images-1.medium.com/max/7762/1*6YuPfBrFs143biVHJo5ZhA.jpeg"
    alt="Team GLUE doing a mashup of a T-rex and a Superman pose."><em>Team GLUE doing
    a mashup of a T-rex and a Superman pose.</em></p><p>Being a centralised team,
    GLUE can support our distributed designers by facilitating collaboration across
    teams and providing frameworks to evolve the different design needs in the company.
    The engineers on the team extend this work by codifying the core building blocks
    from the guidelines across iOS, Android and Desktop. Providing a technical implementation
    for front-end developers across the organisation.</p><h2>Guild</h2><p>A common
    challenge with a central group is maintaining context, as it’s easy to fall out
    of touch with the current needs of the organisation and find that the solutions
    you’re providing aren’t relevant anymore. To solve this we setup the Design Guild.</p><p>Every
    week, for 1-hour, two-designers from each product mission and the GLUE team, meet
    to share context on whatever they’re working on that will have consequence for
    the others. GLUE might share updates on guidelines, while a feature designer might
    want to align on a new design they’re working on. Often these updates will result
    in a friendly-nod to acknowledge we’re aligned, or a workshop to resolve any conflicts
    in the design direction. This meeting has helped break down silos, encourage collaboration,
    and amplify a shared sense of ownership for the overall experience.</p><h2>Design
    QA</h2><p>Despite all this alignment and coordination, sometimes design bugs still
    get through. To fix this we recently set-up our first Global Design QA. It required
    designers from all our offices (Stockholm, Gothenburg, London, New York, and San
    Francisco) to come together and re-calibrate what our shared definition of quality
    is, including the practices we need to ensure they are upheld. We invited members
    of QA (Quality Assurance) to make sure designers were clear on how best to use
    tools like Jira (a bug ticketing system) and how to test their designs on all
    supported devices. This triggered many discussions, highlighting concerns from
    what kind of design bugs should be captured to how to prioritise them.</p><p><img
    src="https://cdn-images-1.medium.com/max/5664/1*tZ0FtcjEctT2i2Tgc42-cA.jpeg" alt="Snapshot
    from a recent Design QA workshop."><em>Snapshot from a recent Design QA workshop.</em></p><p>But
    perhaps the most fundamental topic we addressed was how we define design quality.
    Which up until then had been pretty much “you know it when you see it”. We decided
    to try a checklist instead. In it we stated that quality means following our guidelines
    and principles, and supporting our core metrics. And that when you need to deviate
    from either you take accountability for updating any affected teams or frameworks.</p><p>Looking
    for more ways to define quality, we recently began asking if a design is “in <strong>TUNE”</strong>,
    an acronym to measure all parts of the experience, including how it <em>feels</em>
    to use Spotify. This is helping to shape a strong narrative around the emotive
    aspects of our experience, and be mindful that the interface is the brand.</p><ul><li><p><strong>T</strong>one.
    Are we using the right kind of tone of voice for our brand?</p></li><li><p><strong>U</strong>sable.
    Is it accessible to everyone?</p></li><li><p><strong>N</strong>ecessary. Is that
    functionality really needed?</p></li><li><p><strong>E</strong>motive. Does it
    feel good to use? Feel like somebody cares?</p></li></ul><p>After the summer,
    we will trial the Global Design QA process as a key step for any designer preparing
    to ship something in a release. Making sure that not only will we Design QA our
    individual work, but all the work that is going live to our customers.</p><p>*<em>And
    this brings me back to today. *</em>Taking stock of the learnings the last few
    years have given me and writing this partial account of all the things that have
    worked for us. And even though I’m aware that this is not a complete journey,
    that many new challenges will arise, and some solutions might become obsolete,
    I am happy to put this personal design demon to rest, knowing that when you invest
    in aligning and co-ordinating designers, design does scale.</p><p>If you’re a
    designer, product owner or manager, and face any of these challenges, I encourage
    you to try the methods above and see if they can help. And you can always reach
    out to me on twitter if you’d like more info or support.</p><h3>Thank you for
    reading : )</h3><p><em>If you enjoyed this, please hit *♡</em> and <a href="https://medium.com/@hellostanley">*Follow</a>*
    below. You can also reach out to me on twitter <a href="http://twitter.com/hellostanley">@hellostanley</a>.*</p>'
  :author: Stanley Wood
  :topic: design
- :url: https://uxdesign.cc/what-every-product-designer-should-take-away-from-lyfts-new-ui-742c9668b067?source=search_post
  :title: What every product designer should take away from Lyft’s new UI
  :content: "<p>It’s as easy as thumb, two, three.</p><p>In most apps, it’s common
    to see a search bar up at the top of the screen. On social media platforms, such
    as Facebook, Instagram, LinkedIn, and even Snapchat, the search bar is at the
    top of almost every main screen. In transportation apps, that style is almost
    ubiquitous.</p><p><img src=\"https://cdn-images-1.medium.com/max/2250/1*mwE7AP0iU1b374Vzy7daGw.png\"
    alt=\"\"></p><p><img src=\"https://cdn-images-1.medium.com/max/2250/1*PUgFcQ7My_6_vJ4IXCmFhQ.png\"
    alt=\"\"></p><p><img src=\"https://cdn-images-1.medium.com/max/2250/1*HHTtmDDi_bZaRVGt7bL-7g.png\"
    alt=\"\"></p><p><img src=\"https://cdn-images-1.medium.com/max/2250/1*jUYZd_Q9FVN564AL_gOSew.png\"
    alt=\"\"></p><p><img src=\"https://cdn-images-1.medium.com/max/2250/1*pFYu7ULCqAlPICagwwm8gw.png\"
    alt=\"\"></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*eaGIjRVe_9oS-hJdvbd8XQ.png\"
    alt=\"You might have noticed Uber moved their search bar down from where it used
    to be: all the way at the top\"><em>You might have noticed Uber moved their search
    bar down from where it used to be: all the way at the top</em></p><p>Why is this?
    <a href=\"https://developer.apple.com/design/human-interface-guidelines/ios/bars/search-bars/\">Apple</a>
    doesn’t suggest that a search bar sit towards the top of an app’s UI, nor does
    the HIG suggest that it should be persistent.</p><p>If you Google why search bars
    are at the top, <a href=\"https://www.quora.com/Why-are-search-bars-at-the-top-and-message-input-boxes-always-at-the-bottom\">a
    Quora post</a> with this exact question pops up. <em>“Users have been trained
    to expect a search (if there is one) at the top. *</em>It’s a convention that
    a designer breaks at their own risk*<em>,</em>” says the top answer.</p><p>A product
    designer at Lyft did exactly this, and in a magnificent way.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*EAbMSikOUxfLg-Eo.jpg\"
    alt=\"\"></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*kip0OgEiyZyY41GV.jpg\"
    alt=\"\"></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*mNCpADeYl6i05UQ8.jpg\"
    alt=\"Notice the diversity of the hands holding the mockups? A perfect example
    of awareness design.\"><em>Notice the diversity of the hands holding the mockups?
    A perfect example of awareness design.</em></p><p>Lyft took a different approach
    with their search bar. Instead of a floating field up top, they added it to an
    overlay towards the bottom-mid section of the screen. This simple change made
    it more accessible for almost 100% of users.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*XyLryHeIdFLbkY6v3e_UiA.gif\"
    alt=\"\"></p><p>Although we don’t think about it too often, a search bar all the
    way at the top of the screen is hard to reach. Especially for users who have smaller
    hands or users who have less flexible hands, reaching up is annoying, mostly because
    the top of the screen is far away from where their fingers sit.</p><p>If you visualize
    most apps, the main content is in the middle or lower-mid area. Tab bars for navigation,
    posts on social media, and keyboards on messaging platforms are all examples of
    important pieces of experiences sitting in a more reachable position.</p><p>Lyft’s
    search bar isn’t at the tippy-top, but it’s not at the way-bottom, it’s in a sweet
    spot for thumbs.</p><p><img src=\"https://cdn-images-1.medium.com/max/NaN/1*QmKvoNyyFSQ4LB3azrAnGQ.png\"
    alt=\"[https://medium.com/@Draward/mobile-reachability-rules-of-thumb-ce37dd0cd3ad](https://medium.com/@Draward/mobile-reachability-rules-of-thumb-ce37dd0cd3ad)\"><em><a
    href=\"https://medium.com/@Draward/mobile-reachability-rules-of-thumb-ce37dd0cd3ad\">https://medium.com/@Draward/mobile-reachability-rules-of-thumb-ce37dd0cd3ad</a></em></p><p>As
    you can see in this graph from 2015, around half of phone users interact one-handed.
    And, as you can see from <a href=\"https://images.indianexpress.com/2014/03/twitter3.jpg\">this
    amazing meme</a> that resurfaces once a year, that’s how people do it. Lyft doesn’t
    make you stretch your thumb one bit; the search bar is in the sweet spot.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/NaN/1*yTWSACECxijHumDGlLFIMg.png\" alt=\"[https://medium.com/@Draward/mobile-reachability-rules-of-thumb-ce37dd0cd3ad](https://medium.com/@Draward/mobile-reachability-rules-of-thumb-ce37dd0cd3ad)\"><em><a
    href=\"https://medium.com/@Draward/mobile-reachability-rules-of-thumb-ce37dd0cd3ad\">https://medium.com/@Draward/mobile-reachability-rules-of-thumb-ce37dd0cd3ad</a></em></p><p>Just
    look at this graph from the same study, half of all search bars are in the “Out
    of Reach” area. Lyft’s is right beneath the thumb in that diagram in the green
    (good) area.</p><h2>How can designers learn from this</h2><p>Look at your UI analytics,
    run user-interviews, look at what elements of the interface users interact most
    frequently. In transportation apps, that usually is the search bar. In social
    media, it might be photos or like-buttons. In shopping apps, it’s probably products.</p><p><strong>Make
    sure your most frequently interacted with elements are the most reachable elements
    of your interface.</strong></p><p>Don’t be afraid to break the mold, someone has
    to do it first. Although you want to make your UI familiar to your user, keep
    in mind how comfortable it is as well.</p><p>Think about the different sizes and
    ages of hands experiencing your interface and the demographics your catering to.
    Ask yourself, “Is my experience adaptable for and aware of the different abilities
    of my users?”</p><p>And finally, don’t become <em>too</em> attached. Styles change,
    new designers might join your company. Remember 3D-ish elements in iOS 6? Welcome
    change, don’t push it away.</p><p>Hey! Enjoyed this article? If you did, hold
    down that \U0001F44F icon (you can go up to 50, you know).</p><p>I’m 17 and just
    getting started, so <a href=\"http://medium.com/@theostrauss\">follow my Medium</a>
    to learn more about design from a new perspective, literally. For the next few
    months, I’m diving into how design will intersect with the future. On this page,
    you’ll see case studies looking into self-driving cars and posts highlighting
    interfaces that are breaking boundaries in the world of UI/UX.</p><p>You can also
    catch me on <a href=\"http://instagram.com/theostrauss\">Instagram</a> and <a
    href=\"http://twitter.com/theodorestrauss\">Twitter</a>!</p><iframe src=\"https://medium.com/media/05d5fd32eda31cbd1b83287606744532\"
    frameborder=0></iframe>"
  :author: UX Collective
  :topic: design
- :url: https://uxdesign.cc/how-to-develop-an-eye-for-design-c5a4c64bb26c?source=search_post
  :title: How to develop an eye for Design
  :content: <p>When I started off in design, I sucked.</p><p>I was obsessed with copying
    pieces of the trending Dribbble shots, but oblivious to how all the pieces worked
    together. If you could see the harsh drop shadows and unnecessary flourish I added
    to things, you would gasp in horror.</p><p>Though I was no product design prodigy,
    I figured out how to quickly hack together the skills I needed. And now I want
    to share one of those lessons with you. Whether or not you’re a designer, this
    exercise will help sharpen your product sense and improve your eye for design.</p><h2><strong>Don’t
    just use apps, study them</strong></h2><p>You develop your design eye by thinking
    as if you were the designer of a product. Open an app you use often and resist
    the urge to start scrolling through content. Instead, I want you to actively focus
    on the screen in front of you. Here are some things to keep in mind:</p><p>*<em>Hierarchy*</em>How
    does the design guide your focus? What information is highlighted? How does color
    and text treatment signal the importance of certain elements?</p><p><strong>Content</strong>What
    specific wording was chosen for this experience? What content is visible and more
    interestingly, what content isn’t? How is spacing used to frame the content?</p><p><strong>Intent</strong>Why
    would someone open this app? What problem does it solve? How could the design
    help to solve that problem even better?</p><p><strong>Audience</strong>Who are
    the people using this product? How might their use cases be different from yours?
    How does the design serve these use cases?</p><h2>Breaking down the app</h2><p>In
    the GIFs below, I’ve deconstructed apps to make it easier to focus on each component.
    You may observe details you didn’t recognize before, as you try to anticipate
    what component will be next within the animation. As you watch each component
    build upon the next, be curious about everything you see and think through the
    choices that had to be made for this product.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*jvooXcxt821Gkk47mAThWQ.gif"
    alt="Airbnb deconstructed"><em>Airbnb deconstructed</em></p><p>Some observations
    to get you started:</p><ul><li><p>The placeholder text in the search bar could
    have just said “Search here” but instead they mention a specific city. Though
    I have no intention of going to London, seeing the possibility of it is exciting.</p></li><li><p>I
    wonder how many iterations they tried with Dates and Guests only being visible
    at a later point in the flow. I’m sure many designs have gone through explorations
    where the Dates aren’t presented until you select a location. This makes me curious
    about how people search and when they introduce filters to their searches.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*vxPld46faXCHFzWXE9CX7Q.gif" alt="Twitter
    deconstructed"><em>Twitter deconstructed</em></p><p>Observations:</p><ul><li><p>Notice
    how the number of Retweets and Likes is bold</p></li><li><p>The time stamp includes
    not just the date, but also the specific time. Why might that be the case? Also,
    notice where the timestamp is shortened elsewhere in the app (e.g. “5h” on Feed
    view or “4/14/18” on Profile view). Think through the different intentions of
    those views.</p></li><li><p>There’s a composer in view to add another tweet and
    the language is specific. It’s not just “Add a Tweet”, it’s “Add another Tweet”.</p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*SuXjx5bGeJxNBO4S3rB8oA.gif" alt="Spotify
    deconstructed"><em>Spotify deconstructed</em></p><p>Observations:</p><ul><li><p>Notice
    how Spotify keeps the playing song in view</p></li><li><p>The content they’ve
    chosen to display for this New Releases view includes new playlists and new albums/singles.</p></li><li><p>The
    playlist New Music Friday has a follower count, while the playlist Release Radar
    does not. Let’s dig into this constraint — because release radar is specific to
    the user, this would not have followers. Someone had to map out all of the content
    use cases and decide on the appropriate subheaders to pair with them.</p></li></ul><h2>Know
    the rules, so you can break em</h2><p>Next time you’re sitting in a Lyft or waiting
    on a friend, open up an app and think through the reasons why the designers chose
    to design it that way. By routinely analyzing other apps, you’ll develop your
    product thinking and get better at designing apps yourself.</p><p>I want to hear
    from you! Feel free to reach out and let me know your thoughts. I’m here to help
    ☺️ And if you want more thoughts on this topic, visit Hack Design and check out
    my lesson on <a href="https://hackdesign.org/lessons/56-closing-the-creative-gap">Closing
    the Creative Gap</a>.</p><iframe src="https://medium.com/media/05d5fd32eda31cbd1b83287606744532"
    frameborder=0></iframe>
  :author: UX Collective
  :topic: design
- :url: https://medium.com/ouna/ouna-shaping-the-future-of-human-resources-e86f6e9336fb?source=search_post---------0
  :title: OUNA- SHAPING THE FUTURE OF HUMAN RESOURCES
  :content: <p>The most valuable resource of many organizations is the human factor
    — the people employed within them. The abilities to source, engage, and retain
    qualified talents are some of the main catalysts in driving the long-term success
    of an organization. With fierce competition for talents across all industries,
    the ability to source suitable talents is a top priority in organizations of all
    sizes.</p><p>Nowadays, the available processes in the market for human resource
    recruiting are imperfect and suffer from various inefficiencies. These processes
    are highly dependent on human judgement, use tools and technologies that don’t
    provide sufficiently accurate matching results for employers and employees, are
    not intuitive, are very costly and timeconsuming, and have low success rates.</p><p>Recruiting
    criteria-matching talents for employment positions is a high-risk process, since
    recruiting the wrong person has the potential to severely damage the productivity
    of teams, lose clients, reduce efficiencies, increase costs, and lower profits.</p><p><strong>OUNA
    will be the first-of-its-kind blockchain-based, peer-to-peer HR assessment and
    recruitment ecosystem</strong>. The core of the OUNA platform is based on a novel
    algorithm, referenced as the “Analyzer”.** The Analyzer is an online Pyramidal
    Assessment tool that is based on 15 years of research and tested in more than
    100 real-life case studies.** During this assessment period, the Analyzer consistently
    generated candidate profiles for recruitment which resulted in an average success
    rate of 86% in compatibility between employers and their employees, validating
    the algorithm’s ability to accurately match employees’ skills with employers’
    requirements. In 2017, the IP for the Analyzer algorithm was acquired by OUNA
    with the aim of establishing the OUNA ecosystem, the first decentralized platform
    for precise peer-to-peer HR recruitment.</p><h2>EMPLOYEES</h2><p>Job-seekers can
    now choose to perform OUNA’s anonymous, global, decentralized Pyramidal Assessment.
    The online assessment utilizes 12 key parameters, and 40 significant skills are
    taken into consideration. The results are a uniquely accurate candidate profile,
    with an average validity of 86% — achieved while the profile remains totally anonymous.
    All this helping employees to identify and strive towards their ideal career destinies.</p><h2>EMPLOYERS</h2><p>By
    utilizing the OUNA platform, employers can now determine the perfect employee
    profile for each of their available positions. Harnessing OUNA’s comprehensive
    candidate assessment abilities, companies can identify those candidates that are
    best suited to their vacancies, enabling these companies to consistently select
    and recruit highly suitable employees — thereby saving time, money, and effort,
    enhancing employee job satisfaction and improving employee retention — ultimately
    enhancing overall company performance and profitability.</p><ol><li><p>Prospective
    candidates log into the OUNA platform and complete the Pyramidal Motivations assessment.</p></li><li><p>The
    results are transformed into unique mathematical profiles, and are added to the
    OUNA database. Processing of the profiles is controlled by Smart Contracts.</p></li><li><p>Employers
    log into the OUNA platform and generate THE IDEAL EMPLOYEE PROFILE by evaluating
    the best performing employees with OUNA’s Pyramidal Motivation Assessment.</p></li><li><p>The
    employer runs this PROFILE through OUNA’s database and identifies the candidate
    profiles that best match their requirements.</p></li></ol><h2>FEATURES</h2><p>OUNA’s
    candidate assessment yields a completely anonymous profile, based only on the
    individual’s skills, motivational factors, and values. OUNA is therefore able
    to be fully committed to the principle of equal opportunity employment. OUNA can
    and will help the struggle against discrimination against a job applicant or an
    employee because of the person’s race, color, religion, sex, national origin,
    age, or disability.</p><h2>ALGORITHM</h2><p>OUNA ecosystem will continue to expand
    as more candidates are added to the OUNA candidate database — and more HR recruiters
    discover the power and advantages of working with OUNA.</p><h2><strong>DATABASE</strong></h2><p>OUNA’s
    candidate database currently includes thousands of profiles, containing comprehensive,
    trustworthy, blockchain-based records of their strengths, motivating factors,
    and ideal work environments.</p><p><strong>To learn more about our project, please
    visit our <a href="https://ouna.io/?c=gVlWDF">website</a>.</strong></p>
  :author: OUNA
  :topic: human
- :url: https://forge.medium.com/if-connection-is-our-core-human-need-then-why-are-we-so-bad-at-it-a904ae486a48?source=search_post---------1
  :title: Connection Is a Core Human Need, But We Are Terrible at It
  :content: '<p>No person is an island, and we need healthy relationships to thrive</p><p><img
    src="https://cdn-images-1.medium.com/max/6256/1*FwqiiczoOlOmmqyvhqoH0Q.jpeg" alt="Illustration:
    Hélène Desplechin/Getty Images"><em>Illustration: Hélène Desplechin/Getty Images</em></p><p>In
    his book *Lost Connections, *Johann Hari talks about his decades of work in the
    fields of trauma and mental health and why he believes that the root of almost
    everything we suffer through is a severed connection we never figured out how
    to repair.</p><p>At one point, Hari talks about an obesity clinic where patients
    who were overweight to the point of medical crisis were put on a supervised liquid
    diet in an effort to try to save their lives. The treatment worked, and many of
    the patients walked out of the clinic hundreds of pounds lighter and with a new
    lease on life—at first. What happened later was a side effect no doctor predicted.
    Some of the patients gained back all the weight and then some. Others endured
    psychotic breaks and one died by suicide.</p><p>After looking into why many of
    these patients had such adverse emotional reactions, the doctors discovered something
    important: The time when each patient began overeating usually correlated with
    a traumatic event they had no other coping mechanism for. Hari summed up the findings
    like this: “What we thought was the problem was very often a symptom of a problem
    that nobody knew anything about.”</p><blockquote><h1>Connection is the experience
    of oneness. It’s having shared experiences, relatable feelings, or similar ideas.</h1></blockquote><p>Of
    course, the implication is not that every single overweight person is suffering
    some kind of subconscious trauma. The point is that many of the ongoing problems
    we cannot resolve are, in fact, symptoms of deeper problems we may not be aware
    of. In fact, Hari analogizes this to the smoke of a burning house: You can keep
    waving away the clouds, but without putting out the fire, your efforts will be
    futile.</p><p>The biggest problem in most people’s lives is trauma, and trauma
    is what creates a damaged ability to connect with others. “Trauma” is not a term
    reserved for the most severe and unrelenting atrocities one can experience. Anytime
    something scares us and we do not get over that fear, trauma is created. When
    we don’t believe we have the resources or abilities to cope with a certain problem
    or stimuli, we create adaptive behaviors to deny or avoid it.</p><p>It’s not the
    trauma itself that causes the most long-term damage; it is how the trauma wreaks
    havoc on the psyche and prevents reintegration into a normal, healthy life where
    other people and unknown situations are seen as benevolent.</p><p>You’ve probably
    heard this before in different ways: The <a href="https://www.huffingtonpost.com/2015/07/09/drug-addiction_n_7765472.html">opposite
    of addiction</a>, is not sobriety, it’s connection. The foremost <a href="https://www.learning-mind.com/sense-of-belonging-happy/">pillar
    of happiness</a> is a sense of belonging and purpose. Cultures that are <a href="https://healthypsych.com/individualist-or-collectivist-how-culture-influences-behavior/">more
    communal</a> are more mentally healthy as a whole. People who are alone often
    <a href="https://www.cbsnews.com/news/loneliness-living-alone-may-lead-to-a-shorter-lifespan/">die
    earlier</a> and get sicker before they do.</p><p>We are a tribal species. There
    is no way around this despite what many highly individualistic cultures may want
    us to believe. No person is an island unto themselves. We are born through connection,
    and it is through connection to others that we accomplish virtually everything
    else in life. We do not just prefer healthy relationships; we need them.</p><p>Connection
    is so important, but it is so often overlooked and there are few resources available
    to teach people how to foster real connection in their lives. But there are a
    few essential ideas that can help.</p><h2>Understand What Connection Is</h2><p>Connection
    is the experience of oneness. It’s having shared experiences, relatable feelings,
    or similar ideas. It is the feeling of belonging to something greater than oneself.</p><p>When
    you’re watching a sporting event with your friends, you’re experiencing connection.
    When you gather with your family for dinner or open up and express your authentic
    feelings to another person or find you have something in common with someone,
    you’re experiencing connection.</p><p>We’ve developed a world designed to create
    more connection than ever before, yet somehow, much of the digital age has severed
    connection or fostered inauthentic connection—which does not work. You cannot
    feign oneness. It is not something you intellectualize. It’s something you feel.</p><h2>Learn
    How to Connect With Others Authentically</h2><p>Authenticity is required for connection.
    The internet and social media do not disconnect us because we are glued to our
    phones at the dinner table but because they increase our ability to be inauthentic.
    They allow us to gloat, edit, filter, and post a highlight reel. We can construct
    a façade of our lives that may or may not be an honest reflection of reality.</p><p>In
    this, we breech connection.</p><p>People who have authentic* *connections over
    social media report having a largely positive view and experience of it. People
    who use it as a genuine way to stay in touch with others don’t report the same
    levels of anxiety and depression associated with its use. The reason people try
    to fake their way into being liked is that they confuse attention for connection—and
    they are not the same thing.</p><h2>Focus on Giving Connection, Not Receiving
    It</h2><p>In order to connect with others, we have to give them our time and honest
    feelings and ideas and have shared experiences and openness. We do not connect
    with others by trying to earn approval, awe, compliments, appreciation, envy,
    or superiority.</p><blockquote><h1>In the process of restoring a connection with
    others, we can realize that we actually create a connection with ourselves.</h1></blockquote><p>Most
    people believe a connection is something they earn by being “good enough” when
    it is really something they develop by being willing enough.</p><p>If healing
    is a return to wholeness, then healing from trauma is remembering that we can
    trust others, we can trust ourselves, and we can trust life. It is the reintegration
    into easiness, calmness, and the willingness to allow life to be as it is rather
    than trying to control how it’s perceived. It is not waiting for others to initiate
    or sustain that connection. It is our own willingness to try again, be vulnerable
    again, show up for others, reach out, and make ourselves an active part of our
    communities and families and friend groups.</p><p>In the process of restoring
    a connection with others, we can realize that we actually create a connection
    with ourselves. In being seen and loved for who we are, how we think, and what
    we feel, we learn it’s okay to be as we are.</p><p>If our core human need is to
    connect with others, then the most important part of healing our emotional wounds
    is allowing ourselves to open up again. It is simply our willingness to show up
    as we are, and our trust that we will be taken care of. It is our discernment
    to give our time and energy to those who respect and cherish it back. And, most
    importantly, it is the knowledge that even if we do have to go through the fires
    of life—as all of us do—we come out the other end stronger, clearer, and more
    ready to appreciate what we have.</p><p>Not unlike the Japanese art of <a href="https://www.lifegate.com/people/lifestyle/kintsugi">kintsugi</a>,
    where broken items are repaired and displayed with pride, our connections and
    reconnections are often strongest where we had to forge them ourselves.</p>'
  :author: 21 Books for a Better You in the 21st Century
  :topic: human
- :url: https://medium.com/the-mission/5-essential-investments-every-human-being-should-make-in-themselves-121771565384?source=search_post---------2
  :title: 5 Essential Investments Every Human Being Should Make In Themselves
  :content: '<p><em>Small things have big consequences. Over time, those consequences
    compound. We are the accumulated momentum of all our choices. Some of those choices
    are binary. Go to the gym or not: that choice in that moment is going to change
    your day. Over time that choice will change your life. We tend to ignore the importance
    of fractional benefit because we lose sight of the concept of the tipping point-
    the little benefit that tips the cup releases a flood of many benefits. It may
    be a 2 percent difference in force or momentum that flips the coin from heads
    to tails, or yes to no. — <a href="undefined">Aubrey Marcus</a></em></p><p>There’s
    no area of your life that’s separate from the others. Your health will impact
    your work. Your work will impact your relationships. Your relationships will impact
    your happiness. Your happiness will impact your performance. It’s an interconnected
    system. And if one of the systems is out whack, the others are inevitably impacted
    by it. The investment with highest ROI is the one you make in yourself, and the
    way you get that ROI is by making the following five essential investments.</p><h2><strong>1.
    PHYSICAL HEALTH</strong></h2><p><img src="https://cdn-images-1.medium.com/max/2800/0*SLQojwVVfFy29lo7."
    alt=""></p><p>At the beginning of this year, I had the misfortune of getting the
    flu. And if you were one of the unfortunate people who experienced this, you know
    it was one of the worst years ever. I was incapacitated for almost the entire
    month of January and was spending entire days in bed. My productivity plummeted.
    I had to cancel interviews for The Unmistakable Creative and didn’t get very much
    writing done. It made me realize just how much we take our health for granted.
    Your health is the engine for the rest of your life. If your health is out whack,
    nothing else really works. Investing in your health produces an ROI in every other
    area of your life. That’s why I placed it first on the list.</p><p>How exactly
    do you invest in your health? It’s not as complicated as it might sound. It comes
    down to three basic pillars: sleep, diet, and exercise.</p><h3><strong>Sleep</strong></h3><p>The
    impact of sleep became apparent to me at the beginning of 2015, when I was at
    a major low point in my life. Sleep deprivation is one of the biggest aggravators
    of depression. And I was stuck in a vicious cycle. I was depressed because I couldn’t
    sleep and I couldn’t sleep because I was depressed. I knew that I had not only
    change the way I slept but make it a priority. Thanks <a href="undefined">Arianna
    Huffington</a>’s book <em>The Sleep Revolution</em> I made some changes that led
    to big improvements.</p><ul><li><p><strong>A Casper Mattress:</strong> I was fortunate
    enough to get a <a href="undefined">Casper</a> mattress because the company sponsored
    multiple episodes of the Unmistakable Creative. After a couple of months of sleeping
    on it, I started noticing a difference anytime I didn’t sleep in my bed. Whether
    it was a hotel, a friend’s place or a night at my parent’s house where I have
    a bedroom, the quality of my sleep was always much better when I slept on the
    Casper. <strong><em>A good mattress is probably the most worthwhile investment
    you can make in the quality of your sleep.</em></strong></p></li><li><p><strong>A
    reduction of Screen Time:</strong> Sometime last year, I found myself going on
    lots of dates with people I met on dating apps. During that time a lot of my good
    habits went to hell. I’d be checking to see if someone responded to my messages,
    sometimes while I was in bed. This didn’t do much for my sleep. Study after study
    has shown that one of the things that’s most disruptive to our sleep is the blue
    light emitted from smartphones, laptops, and tablets. And still, people are scrolling
    through Instagram, swiping right, and checking Facebook, often until right before
    they fall asleep. When I don’t check my phone 2 hours before bed, I always wake
    up the next day with a much better focus. When I do check my phone, the mornings
    are less productive.</p></li><li><p><strong>Soft Sheets:</strong> If you’ve ever
    slept in a hotel bed, you know that it kind of makes you feel like a king. I wanted
    to replicate that experience in my bedroom. When I did a google search, I stumbled
    upon this article by the team at Apartment Therapy. Shortly after, I upgraded
    to 1000-thread count sheets. And I immediately noticed a difference in how I felt.</p></li></ul><p><strong><em>Bonus:
    <a href="http://www.bollandbranch.com">Boll and Branch</a> who happens to be a
    sponsor of ours makes amazing sheets, so amazing that former US Presidents use
    them.</em></strong></p><p>As my friend Mike says, “sleep is the magic elixir.”
    If you improve the quality of your sleep, you’ll improve every other area of your
    life.</p><h3><strong>Diet</strong></h3><p>If your body is an engine, your diet
    is the fuel that makes it run. In his program How to Stay Motivated, Zig Ziglar
    asks a thought-provoking question.</p><blockquote><h1><em>“If you did have a million-dollar
    racehorse, would you let him stay up half the night drinking coffee and booze,
    smoking cigarettes and eating junk food?” Next question: “Would you treat a 10-dollar
    dog or a 5-dollar cat that way? What about a billion-dollar body?”</em></h1></blockquote><p>I’d
    love to tell you that I’m a total health nut. But, I slip up on occasion. I love
    desserts more than you can imagine and have “experimented” with a handful of substances
    that probably aren’t the best thing in the world for me.</p><p>But as I’ve gotten
    older, I’ve started to value the way my body feels more and more. I rarely drink
    to the point of feeling hungover the next day. I don’t eat pastries for breakfast.
    I don’t think it’s a coincidence that I’ve had some of my most significant professional
    accomplishments as I’ve gotten older. As I said in my upcoming book, if you put
    garbage into your body, it’s likely what you’ll produce regarding creative output.</p><p>So
    what exactly does it look like to invest in your diet? There are a couple of simple
    things that you can do.</p><ul><li><p>*<em>Consider using a meal planning service:
    *</em>While meal planning services can sometimes seem costly, the energy you get
    back from eating well can be a solid enough ROI to justify the cost. And if you
    take that same energy and apply to building your company, writing your book, or
    working on a meaningful goal, it goes from being an expense to being an investment.</p></li><li><p>*<em>A
    Good Doctor: *</em>A few months ago I kept stumbling on these ads for <a href="undefined">Forward</a>,
    the doctor’s office of the future. It’s a bit like the Apple Store for Doctor’s
    offices. Every time I saw the ad, I drooled. Unlike a traditional doctor’s office,
    these guys take a data-driven approach to health. Watch the video below, and you
    might find yourself salivating for them to bring it to your city.</p></li><li><p>*<em>Have
    a Healthy food Environment: *</em>I’ve talked before about the 9 environments
    that make up your life. One of the easiest ways to eat healthy is to have an environment
    that is conducive to the person you want to become. One of my weaknesses is chocolate
    lava cakes from Trader Joes and for that matter anything that involves chocolate.
    As one of my dear friends from college once said to me “you shouldn’t trust people
    who don’t like chocolate. That’s weird.” The one pattern I’ve noticed is that
    if I don’t buy it at the grocery store, I don’t worry about eating it. If I do
    buy it at the grocery store, I’ll eat it every night. Simply put, if you want
    to avoid it, leave it out your environment.</p></li></ul><p>I’m no expert on food
    and diet, but I recommend checking out the work of people like <a href="undefined">Darya
    Rose, Ph.D</a> e, Joe Cross, and <a href="undefined">Aubrey Marcus</a> When it
    comes to diet, there’s no one size fits all solution.</p><h3><strong>Exercise</strong></h3><p>My
    dad is almost 70, but you’d never know it to look at him. When I was in college,
    a bouncer at a bar carded him, and we’ve occasionally been mistaken for brothers.
    (see picture below). There are two things that I attribute to his vitality. The
    first is that he has the patience and mindset of a Zen Buddhist. I have no idea
    how, but it never ceases to amaze me. The second is that he is physically active.
    He parks as far as he possibly can from his office at the UC-Riverside campus
    and walks. He walks every evening. And because he’s the unofficial brand ambassador
    for Costco, he even does his evening walks there. As he jokingly says when people
    come over “everything in this house except my wife is from Costco.”</p><p><img
    src="https://cdn-images-1.medium.com/max/8064/1*pAn4p_hDr1B6sEbQFHu-Yw.jpeg" alt=""></p><p>Over
    the course of my life, I’ve become much more physically active. When I started
    surfing ten years ago, I started noticing an immediate improvement in a bunch
    of other areas of my life. Because I wanted to get up and surf early in the morning,
    I’d go home from a bar at 10 pm. I stopped smoking when I drank. And the water
    became my source for inspiration and coming up with ideas for things to write
    about. The keystone habit of surfing created a ripple effect improving every other
    area of my life.</p><p>So how do you invest in exercise?</p><p>*<em>Hire a Trainer/Join
    a Gym: *</em>One of the most common ways to invest in your physical health is
    to hire a trainer. World class athletes don’t get that way by attempting to do
    everything on their own. They work with coaches and trainers.</p><ul><li><p>My
    good friend <a href="undefined">Joseph Logan</a> is almost 50 and hardly looks
    like it. He works with a trainer.</p></li><li><p>When my business partner Brian
    wanted to bulk up, he hired a trainer. You can see the before and after picture
    below.</p></li></ul><p>I asked personal trainers on Facebook about the non-health
    related benefits their clients had received, and these were just a few of the
    responses that came back.</p><ul><li><p>Confidence and courage to divorce her
    husband who was verbally abusive to her.</p></li><li><p>Being able to go off their
    pills for depression (with doctors approval OF COURSE) my training style focuses
    on building self-confidence and empowerment. It’s SO much more than lifting weights
    or losing weight.</p></li><li><p>Mental strength — once people realize they can
    be physically strong, they start going after other life goals as well!</p></li></ul><p>It’s
    the ripple effect of a keystone habit at work. When you invest in your physical
    health, you look better, feel better, and accomplish more in virtually every other
    area of your life. A physical transformation can help you to ultimately become
    the best version of yourself.</p><p><strong>If you hate exercise…</strong></p><p><strong>Develop
    an athletic hobby</strong></p><p>To be completely honest, I hated exercising when
    I was in my early 20’s. I couldn’t stand going to the gym. I saw it as a necessary
    evil. But when I started surfing and snowboarding that completed changed. Exercise
    is simply one of the fringe benefits of these activities because I enjoy them
    so much. If you manage to find a hobby that’s athletic and fall in love with it,
    exercise will go from something you dread to something you look forward to.</p><p>As
    I’ve said before when you’re stuck mentally move physically.</p><h2><strong>2.
    MENTAL HEALTH</strong></h2><p><img src="https://cdn-images-1.medium.com/max/2800/0*WPXuZd6JO9x2NWQK."
    alt=""></p><p><a href="https://medium.com/the-mission/your-state-of-mind-is-one-of-your-most-priceless-assets-1a9659cf1f8a">Your
    state of mind is one of your most priceless assets</a>, and if you want to optimize
    your state of mind, you have to invest in your mental health. No matter what you
    want to accomplish, whether it’s finishing your education, a relationship with
    the opposite sex, or starting a business, the pillar on which it is all built
    is your ability to manage your psychology. Without this one skill, you will always
    be at a disadvantage.</p><p>People often think that as you get more successful,
    this is less necessary. But one of the most telling things <a href="undefined">Sam
    Altman</a> said about the process of building a startup is that it gets worse,
    the more successful you become. The highs get higher, and lows get lower. A world
    in which you have no problems is a delusional reality. And if it weren’t for the
    issues, you’d stop learning and growing. Problems are ultimately just a pain in
    the ass form of education.</p><p>So how do you invest in your mental health?</p><ul><li><p>*<em>Therapy:
    *</em>In my four years at Berkeley, I only ever went to see a therapist once because
    I bought into this ridiculous narrative that therapy was only for crazy people.
    One of the major themes of my piece on what we should have learned in school but
    never did was managing your psychology. When I found myself in a therapist office
    after a break up at the age of 36, I had one thought. “What the hell took me so
    long to get in here? I wish I’d done this years ago.” Therapy is one of the most
    worthwhile investments you can make in your mental health.</p></li><li><p>*<em>Meditation:
    *</em>Meditation is one of the most low-cost, high return investments you can
    make in your mental health. In as little as two minutes a day, you can reduce
    anxiety, increase happiness, and improve your ability to focus. And if that doesn’t
    convince you of its virtues, I was told by an Unmistakable Creative guest, that
    many billionaires credit their ability not to get rattled by market fluctuations
    to their meditation habit.</p></li><li><p>*<em>Medication: *</em>In our new age
    self-help world dictated by life coaches and internet celebrities, medication
    for mental health gets a bad rap. And it’s often got that wrap from people who
    have no direct experience dealing with depression. Personally, I’ve found it to
    make a huge difference in my life. That being said, I would consider it a last
    resort, something you do when nothing else is working.</p></li></ul><p><strong>Happiness
    is a Habit</strong></p><p>And habits require practice. You’re not going to write
    down a gratitude list once, and feel better over the long haul. You’re not going
    to exercise once and feel energized. This is why it’s worth considering things
    like <a href="https://medium.com/the-mission/the-daily-routine-backed-by-science-that-will-make-you-a-happier-person-3f21810da130">this
    daily routine backed by science that will make you a happier person.</a></p><p><em>As
    part of my upcoming book launch, we’re putting together a series of free e-books.
    The first one is the Unmistakable Creative guide to health and happiness which
    you can <a href="https://unmistakablecreative.com/happiness">download here.</a></em></p><h2><strong>3.
    EDUCATION</strong></h2><p><img src="https://cdn-images-1.medium.com/max/2800/0*KgzDnLkYiaiVyYFF."
    alt=""></p><p><em>The iPhone is a traveling university. It’s not cheap-but it’s
    way cheaper than an MBA. There are no tests at the end of the year, and you can
    pick your classes — Aubrey Marcus.</em></p><p>As a society, we tend to confuse
    learning with education. Education is a finite game. You complete a course of
    study, get a diploma, and get passed on to the next one. Learning, on the other
    hand, is an infinite game. It continues long after you finish your formal education.</p><ul><li><p>I’ve
    learned more from reading books than I ever did from my college degree.</p></li><li><p>I’ve
    learned more from building a business than I ever did from getting an MBA.</p></li></ul><p>By
    investing the right amount of time and resources, you can <a href="https://medium.com/the-mission/give-yourself-an-informal-education-that-kicks-the-crap-out-of-your-formal-one-fa886abd8c59">give
    yourself an informal education that kicks the crap out of your formal one</a>.
    With the pace at which the world is changing, the ability to learn is going to
    be essential to our survival in the future.</p><h3><strong>Books</strong></h3><p>Books
    are wonderful in that they are low cost and produce an incredibly high ROI. You
    can buy them dirt cheap on Amazon, or check them out for free from your local
    library. So how exactly do you read more?</p><p>A couple of years ago a mentor
    of mine recommended that I read the 48 Laws of Power. If you’ve ever read any
    of Robert Greene’s books, you know they’re long, well researched and extremely
    detailed. They’re not the kind of books you can sit down and read in the afternoon.
    If I wanted to finish the book, I had to develop a system.</p><p>If I read two
    laws every day, I’d be done with the book in 24 days. After finishing the book,
    I applied a similar system to all other books I read, which has enabled me to
    read 100 books a year. Like any goal, the easiest way to read a book is to break
    it up into the smallest manageable parts. Even if you only read ten pages a day,
    if you do it consistently, you’ll easily develop a reading habit. This is my recommend
    prescription</p><p>1) Start by reading ten pages a day for a week</p><p>2) The
    next week read 20 pages a day</p><p>Eventually, you’ll find that you want to keep
    reading.</p><p><strong>Courses</strong></p><p>When it comes to online courses,
    what you put into them is what you’ll get out of them. If you’re a person who
    completes all the modules, does all the assignments, and takes advantage of access
    to the instructor you’ll get a substantial ROI on your course. The testimonials
    you see on Ramit Sethi’s sales pages are not from people who bought the course
    and didn’t do shit. They’re from people who followed through and took action.If
    you buy a course, and don’t do any of the assignments or go through the material,
    that’s not much different than flushing your money down the toilet.</p><p><strong>Podcasts</strong></p><p>These
    days there’s a podcast for just about everything you want to learn. Whether you
    want to learn a language, build a business, or just get inspired, there’s likely
    a podcast that will help. What I’ve learned from more than 700 people on the Unmistakable
    Creative has far outweighed the value of both my degrees. These are just a few
    of the things I’ve learned.</p><ul><li><p>I got an <a href="https://unmistakablecreative.com/podcast/the-neuroscience-of-goals-with-srini-pillay/">in-depth
    class from a Harvard Neuroscientist in how to accomplish personal and professional
    goals</a>.</p></li><li><p>I’ve learned <a href="https://unmistakablecreative.com/podcast/best-of-confessions-of-a-bank-robber-with-joe-loya/">how
    to change my story from a bank robber</a>.</p></li><li><p>I’ve learned how to
    <a href="https://unmistakablecreative.com/podcast/garrett-gunderson-moving-from-scarcity-to-abundance/">shift
    my mindset from scarcity to abundance</a> because of Garrett Gunderson.</p></li><li><p>I’ve
    learned about <a href="https://unmistakablecreative.com/podcast/nick-notas-foundation-meaningful-connections/">the
    foundations of a meaningful connection</a> from <a href="undefined">Nick Notas</a></p></li><li><p>I’ve
    learned <a href="https://unmistakablecreative.com/podcast/terri-cole-discovering-your-blueprint-to-love-and-boundaries/">how
    to create a blueprint for love and boundaries</a> from Terri Cole.</p></li></ul><p>And
    the list goes on and on.</p><h2><strong>4. PROFESSIONAL DEVELOPMENT</strong></h2><p><img
    src="https://cdn-images-1.medium.com/max/2800/0*RBCsMhG0vDLjkJvR." alt=""></p><p><em>We
    can spend thousands of hours practicing until we master a skill or we can convince
    a world-class practitioner to guide our practice and cut the time to master significantly
    — <a href="undefined">Shane Snow</a></em></p><p>When I look back at the early
    part of my career and the many jobs I’ve been fired from, there’s one thing I
    wish I’d done. And that was invested in my professional development. If you’re
    serious about having a thriving career, you have to invest in your professional
    development.</p><p><strong>Coaches and Mentors</strong></p><p>In his recent TED
    Talk, the prominent surgeon and author Atul Gawande talked about hiring a coach.
    After years of practicing medicine, one thing became apparent to him. There was
    a point at which people stopped getting better at what they do. So he hired one
    of his old medical school professors to coach him during surgery. Despite how
    long he has been practicing medicine, his professor found room for improvement.</p><p>If
    you’ve watched the TV show Billions, you know that Bobby Axelrod has a performance
    psychologist on staff at his hedge fund. At first, it seems ludicrous that a hedge
    fund would have this person on staff. But given the amount of money at stake,
    a one percent difference in performance could make a MASSIVE dent in your bottom
    line.</p><p>Personally, I think every organization should have a peak performance
    coach/psychologist on their staff. Just because someone is a good manager, it
    doesn’t necessarily mean they are a good coach. This is why people like Michael
    Gervais and Todd Herman are so in demand.</p><p>If you want to become great at
    something, and you want to accelerate your progress, hire a coach. I’ve written
    before about the lifelong ROI of coaches and mentors.</p><ul><li><p>When my business
    partner Brian hired Jeremy miner as his sales coach, he managed to get more than
    a 25x return on his investment and develop skills that he’ll utilize for the rest
    of his life.</p></li><li><p>Recently, I had the good fortune of attending Pete
    Vargas’ Stage Execution workshop, which was all about how to build a system for
    getting more speaking gigs. It was one of the most expensive investments I’ve
    ever made in my career. But, it turned out that what almost every testimonial
    said was true. It would have taken me a year to do what I got done in two days.</p></li><li><p>When
    <a href="undefined">Ryan Holiday</a> writes a book (which usually shows up in
    the mail after you’ve finished reading his previous one), he hires an editor outside
    of the publisher. But that editor does far more than edit. He’s effectively a
    coach.</p></li></ul><p>Most people want to find a mentor without necessarily having
    to pay for it. If that’s the case, I recommend you read <a href="https://ryanholiday.net/finding-a-mentor/">this
    piece on finding a mentor</a> by Ryan Holiday. However, it’s worth keeping in
    mind that when you pay for something, you have more skin in the game. When you
    have more skin in the game, you’re going to be much more motivated to get a result
    from your investment.</p><p><strong>Mastermind Groups/Personal Board of Directors</strong></p><p>In
    one of his recent podcasts, Seth Godin referenced a Mastermind group that he and
    Chip Conley were part of while they were in business school. They would meet once
    a week in a room at the Anthropology building on the Stanford Campus. I don’t
    think it’s a coincidence that both Seth and Chip have been incredibly successful
    in their careers.</p><p>Another way you could do this is to form what is known
    as a personal board of directors. This is something I learned about from a Tim
    Ferriss podcast guest. The parameters are quite simple.</p><p>1) Pick a person
    outside your industry who you look up to</p><p>2) Ask if they would be willing
    to meet with you once or twice a year.</p><p><strong>Conferences and Events</strong></p><p>Attending
    conference is rarely about the content of the event. The value of a conference
    is ultimately in the relationships that are formed from it. As a byproduct of
    attending a conference, I’ve managed to get new sponsors for the Unmistakable
    Creative, met amazing podcast guests and more. After having attended some high
    ticket events like Archangel, what I can tell you is that the caliber of the people
    in the room always varies based on the cost of the event. It’s not a coincidence
    that some of the most successful entrepreneurs always seem to be at the same events
    together.</p><p><strong>A Body of Work</strong></p><p>I’ve said before <a href="https://medium.com/the-mission/why-a-body-of-work-has-greater-long-term-value-than-a-resume-a9d0a0fa5c4c">a
    body of work is far more valuable than your resume</a> or your GPA. AS <a href="undefined">Chris
    Sacca</a> has famously said “your GPA only matters to people who have no other
    reason to find you interesting. Building a body of work gives people a reason
    to find you interesting and is a low-cost, high ROI investment in your professional
    development. When I was in college, it used to take thousands of dollars and weeks
    to build a website. Today, thanks to companies like <a href="undefined">Squarespace
    Inc.</a> , you can build a beautiful website in minutes for less than $20 a month.</p><h2><strong>5.
    Your Environment</strong></h2><p>Whether it’s the space you live or work in, the
    clothes you wear, and the car you drive, of all the investments you could make,
    the one you make in your environment will have the highest ROI.</p><blockquote><h1>You
    can’t upgrade one environment and not have it change the others. If you change
    one environment, it will create a ripple effect on every other environment.” —
    Jim Bunch</h1></blockquote><p>The four investments mentioned above are ultimately
    investments in your environment. And your physical environment is the low hanging
    fruit, so let’s talk about how you change that.</p><p><strong>Where You Work/Where
    You Live</strong>: The space in which you work and live has a big impact on everything
    from the way you feel to your day to day behavior. If it is chaotic and cluttered,
    you’ll be more prone to distraction. If it doesn’t inspire you, it will drain
    you.</p><p><strong>Your Car:</strong> You don’t have to drive a fancy or expensive
    car. But if you keep your car immaculate, you’ll notice a big difference in how
    you feel. Remember, every environment is connected.</p><p><strong>Your Clothes/Physical
    Appearance</strong>: Changing the way you dress is one of the fastest ways to
    change the way you feel. Think about how you feel when you’ve showered, shaved,
    had a haircut, and put on your best threads. When it comes to clothes, my philosophy
    is quality over quantity. You buy less stuff, it looks better, and it lasts longer.
    And thanks to companies like <a href="http://www.stitchfix.com">Stitchfix</a>
    you basically have the equivalent of a personal stylist available from your iPhone
    every month.</p><h2><strong>INVESTMENTS DISGUISED AS EXPENSES</strong></h2><p>Sometimes
    investments are disguised as expenses. For example, I spent a decent chunk of
    change on some noise canceling headphones. I know that listening to music when
    I’m writing makes a big difference in my ability to focus. Because I get paid
    to write books, my noise cancellation headphones are an investment in my career.</p><p>I
    come up with my best ideas for new content when I’m either surfing or snowboarding.
    Every year I buy a season pass and take multiple snowboarding trips. I also try
    to take an international surf trip at least every other year. Since these are
    my major sources of inspiration, they aren’t expenses as much as they are investments.</p><p>Last
    year, when I visited my friend Mike Harrington in Colombia, I was stuck on the
    opening to my new book. We ended up watching a documentary about Daft Punk, which
    inspired the opening story for the book. Not a bad return on investment for cashing
    in my points on a credit card.</p><blockquote><h1>Because our life is a series
    of interconnected systems, what appears as an expense in one area of your life
    becomes and investment in another.</h1></blockquote><p>When you invest in each
    of these five areas, you feel better, look better, have better relationships and
    accomplish far more, both professionally and personally.</p><h2>Are you struggling
    with managing your time and attention?</h2><p>I’ve put together a list of interviews
    with productivity experts who can teach you how to master your focus. Just <a
    href="https://fragrant-dream-1562.ck.page/cd9174c7d0">click here.</a></p>'
  :author: Mission.org
  :topic: human
- :url: https://humanparts.medium.com/i-found-naked-pictures-of-myself-on-the-internet-cccb567169be?source=search_post---------3
  :title: I Found Naked Pictures of Myself on the Internet
  :content: '<p>I Found Naked Pictures of Myself on the Internet</p><h3>The comments
    under these photos will stay with me for the rest of my life</h3><p><img src="https://cdn-images-1.medium.com/max/2048/1*5gI7Z05fnsDfHo5lcaeKFQ.jpeg"
    alt="Photo: *Alejandro Cordón/Flickr*"><em>Photo: *Alejandro Cordón/Flickr</em>*</p><p><em>This
    story is part of the <a href="https://humanparts.medium.com/internet-time-machine/home">Internet
    Time Machine</a>, a collection about life online in the 2010s.</em></p><p>About
    a year ago, I found pictures of myself, naked, on the internet.</p><p>I hadn’t
    put them there, I hadn’t consented to have them posted, and I definitely hadn’t
    been prepared for what I read in the comments: Violent and cinematic descriptions
    of rape and abuse juxtaposed against my open mouth and thigh-highs and undone
    bra. My face was clearly and fully visible. I wouldn’t have seen them at all if
    a friend hadn’t tipped me off, the link embedded in a carefully neutral email
    that I appreciated later for its lack of assumption about what I was supposed
    to feel. “You look sexy! Do you know about this?”</p><p>I was 22 in the photos.
    I was posed and smiling for the camera. I’d certainly consented to have them taken
    by a friend, who did my hair and makeup, and perched me on a wooden stool to get
    the best angles. The stool broke at one point and we laughed about it.</p><p>When
    the pictures were taken, I’d already let go of the fantasy of posting them anywhere:
    The anonymity of my AOL chatroom childhood was long gone, replaced by Google image
    search and linked accounts. I shared some of the photos with a few people I trusted.
    I was old enough to comprehend consequences, but not old enough to accept my part
    in avoiding them. Apparently, I’m still not — nor will I ever be — because I refuse
    to accept that I was even remotely at fault for what happened.</p><p>About 20
    NSFW photos of me taken during that shoot were stolen from my computer by a guy
    I knew, a guy I considered a friend, a guy I felt safe around. I found out later
    that he’d put them in a folder on his desktop, alongside numerous other folders
    labeled with the names of numerous other women that he knew. I still don’t know
    what was in those folders. Probably some photos pulled from Facebook, probably
    sometimes more. I called a few of the women and left it up to them what steps
    to take. You can only do so much.</p><p>He posted mine on a site specifically
    for revenge porn and “obtained” (read: stolen) photos, full of drunk girls, sleeping
    girls, girls of questionable age. I’m much more a Gayle Rubin feminist than a
    Catharine MacKinnon one, but the comments written underneath my body made me sick
    to my stomach.</p><p>They were words I might’ve melted to have texted to me or
    mumbled into my hair by a boy I’d chosen with a liberal arts degree and nice hands
    — words like “slut” and “defile” and “slap” and “hard” and “tight.” Context is
    everything. Here those words weren’t mine, weren’t asked for, or enjoyed. They
    weren’t for me.</p><p>After I saw the thread online I felt panicked, then numb,
    then miserable, then afraid. I didn’t know what I was supposed to do. The immediate
    and urgent need seemed to be figuring out who did it, and collecting a confession.
    I was right on the first guess. He wrote me a long and rambling nonapology as
    only a straight white guy can do, full of justification and short on insight.</p><p>I
    had this ridiculous vision of myself in a courtroom, sweating under lights and
    answering questions about whether I’d ever enjoyed rough sex, ever enjoyed being
    watched, ever owned a webcam, ever had an abortion. In the almost-year since this
    happened, revenge porn stories are everywhere, but at the time I felt alone.</p><p>I
    called my friends. I tried being somber, I tried joking, I tried asking for advice.
    I told my mom. I kept waiting to hear the words I thought I might deserve: “You
    flirted with him, didn’t you? Maybe he thought you wanted him to do it. Doesn’t
    your computer have a password?” And, most of all, those awful, useless words we
    hear so often: “Why would you take naked pictures of yourself, anyway?” To the
    credit of everyone I love, I didn’t hear those questions. I heard sympathy and
    support and a clear indication that I was the victim of a crime.</p><p>I went
    to a lawyer who quoted me a retainer that was out of my price range to instigate
    a civil suit, which seemed to be a legal kind of blackmail in which we would try
    to collect money from him (or really, since he didn’t have any, his parents).
    It didn’t feel right. I didn’t want money, I wanted for it not to have happened,
    and nobody could give me that.</p><p>I toyed with the idea of reporting it to
    the police, but at the time the pictures had been stolen I’d been living in a
    different state. I called the police precinct there but they seemed confused and
    skeptical and wanted me to come in. I’d read enough horror stories about <a href="https://www.rollingstone.com/culture/culture-features/how-police-still-fail-rape-victims-97782/">the
    way sexual assault victims are treated</a> to decide that I didn’t want to go
    to the police. Also, I’d have to give them the screenshots.</p><p>Sometimes, when
    I was just about to fall asleep or wake up, I thought about forgiving him. I thought
    about what he wanted when he used my pictures that way, how much he must have
    needed the attention and the admiration of the other messed-up awful assholes
    who lurk on those forums thinking we deserve what we get. I thought about how
    lonely he must have been and how bad he might’ve felt about himself afterward,
    but then I always came back to the comments and I just couldn’t find forgiveness.</p><p>I
    memorized the comments and replayed them while showering, while getting dressed,
    while grocery shopping, while having lunch. I thought that for the rest of my
    life I would remember this as the “before” time. The last time I bought limes
    before I filed the lawsuit. The last time I ate carrot cake before I became The
    Girl Who Was Naked On The Internet.</p><p>A week passed, and then a month passed,
    and then another, and sometimes I felt angry and sometimes I cried but mostly
    I felt stuck. I started to imagine that maybe if I waited, it would just go away.
    That I would just become another one of tens of millions of girls who are naked
    on the internet. Some professionally, some for fun, some for art, some against
    their will, some without their knowledge. In the end I didn’t do anything, and
    eventually, the link became inactive. What was my page is now a blank sea of white.</p><p>Of
    course the pictures aren’t gone. They’re still out there, somewhere, distributed
    innumerably. They could come back at any time. This will never not have happened.</p><p>It’s
    true that in writing this I might be making myself even more vulnerable than he
    made me, that I might be increasing the likelihood of being found someday with
    my 22-year-old legs spread apart. It’s possible that the comments on this piece
    will hurt me further. But I can’t seem to find it in me to regret having the pictures
    taken.</p><p>No, I don’t want or deserve to have identifying information linked
    to them, because I value my personal safety. Yes, I’m publishing this piece anonymously,
    more to protect my family, friends, employers than for any other reason. But I
    refuse to be ashamed of the pictures themselves, of having taken them, or for
    any of my ambivalent and complex desires.</p><p>I will not tell my female friends,
    my little sister, my nieces, or my daughters never to smile for the camera without
    their clothes on. I won’t tell them never to take a selfie. I won’t tell them
    that enjoying your own body and the attention you get for it makes you dirty,
    stupid, slutty, classless, or pathetic. I won’t tell them never to trust the boys
    they like. I won’t tell them that every compliment comes at a price. I won’t tell
    them that it’s possible to police their image online, and that if their photos
    are shared without their consent, it’s their own fault.</p><p>Ten years from now,
    I hope that we’ll talk about that point of view as dismissively as the way we’ve
    begun to talk about abstinence-only sex education and victim-blaming as applied
    to rape. We’ll recognize that online, as in the physical world, the responsibility
    of safety must lie on the person doing the threatening. We’ll stop scolding teenage
    girls for sending pictures to their boyfriends, who disseminate them or use them
    for blackmail years later. We’ll stop using euphemisms like “scandal” and “leak”
    to describe a violation, a crime with a defined victim, an act of violence. We’ll
    place the blame where it belongs.</p><p>Maybe we’ll even recognize that, contrary
    to the fabled belief, our souls aren’t lost or damned when we’re captured on film.
    That for a woman to be seen naked, preserved in time, should never ruin her life
    or end her career or hurt her family. That if she’s of age and wanted to be seen
    that way by those she chose, to shape her image, to show off the parts of her
    body she adores and values, we should do nothing but celebrate it. It’s in the
    comments section where you’ll find the shameful part.</p><p><em>This post originally
    appeared on *xoJane</em>.*</p><p><em>Keep exploring the <a href="https://humanparts.medium.com/internet-time-machine/home">Internet
    Time Machine</a>.</em></p>'
  :author: What Does It Mean to Be a Man?
  :topic: human
- :url: https://medium.com/hackernoon/driverless-hotel-rooms-the-end-of-uber-airbnb-and-human-landlords-e39f92cf16e1?source=search_post---------4
  :title: 'Driverless Hotel Rooms: The End of Uber, Airbnb and Human Landlords'
  :content: '<p>How driverless vehicles can enable ondemand accommodation for one
    night or 1000, and at rates 10x cheaper than your rent bill</p><p><img src="https://cdn-images-1.medium.com/max/3556/1*c3EwrRdygdCqNmGhdJsBCA.png"
    alt=""></p><p>“Good evening ladies and gentlemen, we’re about to begin our descent
    into Sydney. Please fasten your seatbelts and place your trays in the upright
    position. Local time is 8:42pm and a humid 27 degrees. Our flight crew wishes
    you a Happy New Year, and we hope you fly with us again in 2025.”</p><p><em>Screeech</em>.
    You’ve landed. Time to relax those butt cheeks.</p><p>It was only this morning
    you booked this flight, and now you’re on the other side of the planet. <em>Amazing</em>.
    You’re nervous but excited to visit Australia for the first time. One week to
    explore the city and five weeks on a new design project. When that project match
    showed up in your feed you claimed it in two seconds. You’ve already earned 24,000
    $design in the <a href="http://peerism.org/">peerism</a> economy.</p><blockquote><p>Ping.
    “Need a room?”.</p></blockquote><p>You hadn’t booked any accommodation yet. “Yes
    please”, you respond.</p><blockquote><p>“Just out the front, number 420”.</p></blockquote><p>You
    giggle, then follow the augmented directions leading to a sleek driverless hotel
    room. It’s about the size of a mini bus but without the seats, steering wheel
    and engine. A giant transparent panel stretching the length and height of the
    vehicle greets you on approach. The panel opens and you step inside.</p><p>Inside
    is everything you’d expected. On the left, a couch seat that folds into a queen-sized
    bed with the push of a button. To the right, a small kitchenette with electric
    stove, running water, sink, microwave and bar fridge. Behind that is the detachable
    bathroom module with toilet, shower and wash basin.</p><blockquote><p>“Hi there,
    welcome home. Hungry?”</p></blockquote><p>“I could go some pad thai and a beer
    thanks”, you respond.</p><blockquote><p>“That’ll be here in 6 minutes. Want a
    quick tour of the city?”</p></blockquote><p>“Nah early one tonight. Let’s checkout
    Bondi beach tomorrow”, you say.</p><p>Your room begins driving itself towards
    Bondi and a live map displays on one of the side panels. You sit back and relax
    with some Netflix on the other side panel. Exactly 6 minutes later, a drone lands
    on the roof and lowers your order through a compartment in the ceiling. If you
    need to order any package you simply ask the room and a drone arrives; it even
    does laundry!</p><blockquote><p>“Arriving at Bondi Tower 7”.</p></blockquote><p>You
    look up at a lego-like modular skyscraper reaching high above the moonlit clouds.
    Your room docks with an electric skate and is elevated thirty stories up before
    slotting into a window-facing position. One of the side panels opens smoothly
    to reveal a large adjoining living room module.</p><p>Extra modules are optional
    and can be requested ondemand: an extra bed, private gym, spa, snackbar, office
    and more. On various levels of the tower are cafes, restaurants, retail stores,
    entertainment areas, communal kitchens, laundromats, a gym and even a cinema.
    Luxury living at $30 per night.</p><p>You fall asleep as your driverless hotel
    room recharges itself ready to take you on an extensive tour of the city and beaches
    tomorrow. Your six week experience will be personalized to your precise ondemand
    preferences including invites to local communities, events and interest networks.</p><blockquote><p>“Goodnight”.</p></blockquote><p><img
    src="https://cdn-images-1.medium.com/max/4000/1*hcn4fDEfcZMA2gRrSe7t0g.png" alt=""></p><h2>Crisis
    of Car Manufacturing</h2><p>The image above is a <a href="https://goo.gl/maps/Q4JRFA8SJno">screenshot</a>
    of the thousands of new, unsold cars sitting at a dock in a town named Sheerness
    in the United Kingdom. This is one of <a href="https://www.zerohedge.com/news/2014-05-16/where-worlds-unsold-cars-go-die">hundreds
    of locations</a> where new cars sit empty and unused. And while auto manufacturers
    typically keep a 60 day supply, US manufacturers hit a record high of over <a
    href="https://www.msn.com/en-us/money/companies/gm-has-a-huge-supply-of-unsold-cars/ar-AAofFfZ">4
    million unsold vehicles</a> in their inventory in 2016.</p><p>The issue of <a
    href="https://en.wikipedia.org/wiki/Overproduction">overproduction</a> is a common
    crisis in Capitalism where more goods are produced than there are customers to
    consume them. In a free market this should result in prices dropping until the
    excess supply lowers to meet demand. But what typically happens is that manufacturers
    either <a href="http://www.washingtonpost.com/wp-dyn/content/article/2010/07/02/AR2010070203990.html">artificially
    restrict supply</a> or resort to simply <a href="https://fashionunited.com/news/fashion/h-m-accused-of-burning-12-tonnes-of-new-unsold-clothing-per-year/2017101717884">destroying
    the unsold goods</a>.</p><p>Vehicle manufacturing faces a unique challenge with
    oversupply because the production lines are very expensive to initially setup
    and very expensive to stop. When a vehicle production line is down it costs <a
    href="https://www.manufacturing.net/article/2006/03/22000-minute-manufacturing-problem">$22,000–50,000
    per minute</a> in lost revenue and wage costs. So you can bet that if a particular
    car model isn’t selling, they’ll continue to produce until the next year’s model.</p><blockquote><h1>The
    inevitable reality of ondemand self-driving cars poses a huge looming existential
    risk to the entire auto industry.</h1></blockquote><p>With nearly <a href="https://www.statista.com/statistics/281134/number-of-vehicles-in-use-worldwide/">1.3
    billion vehicles</a> on the planet and more than 94 million new cars rolling off
    the production lines each year, the auto industry looks rather similar to a runaway
    <a href="https://wiki.lesswrong.com/wiki/Paperclip_maximizer">AI paperclip maximizer</a>;
    consuming vast resources to sell thousands of various car models, which we then
    <a href="http://www.reinventingparking.org/2013/02/cars-are-parked-95-of-time-lets-check.html">park
    idle for 95% of the time</a>.</p><p>However if ondemand driverless vehicles come
    to fruition then your $10 Uber ride suddenly becomes a sub-$1 ride anywhere in
    the city. At that point the appeal of owning a car will diminish for most of the
    population, thus creating a massive oversupply of unwanted human-driven vehicles.</p><p>Given
    the forecasts of <a href="https://www.weforum.org/agenda/2016/04/the-number-of-cars-worldwide-is-set-to-double-by-2040">2
    billion vehicles on the roads by 2040</a>, and considering driverless vehicles
    need only be idle while recharging, we can roughly calculate that <strong>only
    100 million ondemand driverless vehicles will be required to replace all 2 billion
    human-driven vehicles</strong>.</p><p>In other words, when every auto manufacturer
    begins producing the high-demand self-driving cars <strong>it will take just one
    year to reach oversupply</strong>.</p><p>How and to where will auto manufacturers
    pivot to stay alive?</p><p><img src="https://cdn-images-1.medium.com/max/4000/1*ZhAL4aIrPesLFfxOkb_Swg.png"
    alt="*One of many [IDEO Automobility](https://automobility.ideo.com/moving-spaces/intro)
    Moving Spaces concepts*"><strong>One of many <a href="https://automobility.ideo.com/moving-spaces/intro">IDEO
    Automobility</a> Moving Spaces concepts</strong></p><h2>Modular Driverless Rooms</h2><p>The
    key concept to grasp with driverless cars is that they truly redefine all of our
    assumptions and preconceived notions. Combustion engines are replaced by two small
    electric motors, the dashboard and steering wheel are unnecessary, and safety
    features are redundant when the cars don’t crash.</p><p><strong>Driverless vehicles
    are simply rooms</strong> sitting atop an all-electric drivetrain and rechargeable
    battery pack with a few extra visual, laser or radar sensors.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*aPiXForILincx_vgyGymgQ.png"
    alt="Tesla Powertrain"><em>Tesla Powertrain</em></p><p>In a <a href="https://www.tesla.com/models">Tesla
    Model S</a> there are only <a href="https://www.youtube.com/watch?v=E7Jg1IJ68_g&feature=youtu.be">18
    moving parts</a> compared to the 1500 in an average internal combustion engine
    vehicle. As such it’s predicted that by <a href="https://www.cnbc.com/2016/06/14/electric-vehicles-will-soon-be-cheaper-than-regular-cars-because-maintenance-costs-are-lower-says-tony-seba.html">2025
    all new vehicles produced will be 100% electric</a> and cost much less than the
    cheapest combustion engine vehicles sold today.</p><p>This opens endless possibilities
    to re-imagine vehicles as moving rooms able to cater to a <a href="https://automobility.ideo.com/moving-together/personal-storage">vast
    array</a> of human experiences and activities:</p><ul><li><p>the driverless office</p></li><li><p>the
    driverless boardroom</p></li><li><p>the driverless gym</p></li><li><p>the driverless
    bedroom</p></li><li><p>the driverless bathroom</p></li><li><p>the driverless cafe</p></li><li><p>the
    driverless cinema</p></li><li><p>the driverless shop</p></li></ul><p>These rooms
    need not be used in isolation either. <a href="http://www.next-future-mobility.com/">They</a>
    <a href="https://www.pixmoving.com/">can</a> <a href="https://www.osvehicle.com/">be</a>
    dynamic, modular and interconnected with other driverless rooms via an ondemand
    request. Tap a button or speak a request, and moments later you can have a bathroom
    or gym module drive itself to your location and autonomously connect to the office
    module you’re currently working from.</p><p>When auto manufacturers rapidly meet
    the 100 million vehicle demand for driverless ondemand transport, they will inevitably
    <strong>pivot operations to manufacture driverless modular rooms</strong> that
    cater to specific human experiences. Any auto manufacturer that fails to pivot
    will cease to exist.</p><p><em>Edit [5 days later]: Toyota is pivoting to become
    a driverless room manufacturer with their <a href="https://techcrunch.com/2018/01/08/toyota-launches-dedicated-mobility-services-concept-vehicle/">e-Palette
    drivetrain</a>, to become a “<a href="https://techcrunch.com/2018/01/08/toyotas-mobility-business-shifts-into-high-gear-at-ces/">mobility
    service company</a>”.</em></p><p><img src="https://cdn-images-1.medium.com/max/4000/1*ZDT9Nb9HmfcbQrX00miPDA.png"
    alt=""></p><h2>Lego Skyscrapers + Decentralized City</h2><p>If we assume the technological
    and economic drivers propel our reality towards driverless modular rooms, then
    we’ll inevitably require these to stack vertically in skyscrapers within cities.
    The forces of inertia will always remain, so we wouldn’t expect people to want
    to be constantly moving.</p><p>Ondemand driverless rooms will definitely offer
    the option of going to sleep in one city and waking up in another, or requesting
    add-on modules while in transit to a destination. But as more people adopt this
    way of moving and living in a city, we’d ideally prefer to reduce the number of
    lanes on roads, reduce the number of parking spaces and reduce the environmental
    footprint.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*xZX2pCzyzF2qwNWPQsXuvA.png"
    alt=""></p><p>The best way to achieve this is to route the driverless rooms through
    <a href="https://www.boringcompany.com/">tunnels</a> under the city while in transit,
    and to stack the rooms vertically when stationary. While in transit the rooms
    can connect to other modules like train carriages, and while stationary the rooms
    can connect on all sides.</p><p><strong>Immense vertical skyscrapers can autonomously
    lift these driverless rooms</strong> and their passengers hundreds of meters up,
    where they’re slotted into position before the wall panels open to reveal other
    connected room modules.</p><p>The image to the left is a <a href="https://www.dezeen.com/2017/05/19/pod-vending-machine-haseef-rafiei-3d-printed-housing-modular-homes-mini-living-movies/">pod
    vending machine concept</a> by designer Haseef Rafiei which fantastically conveys
    the vision, though in a fairly industrial architectural design. Imagine a similar
    tower with a modern and luxurious design for driverless hotel rooms and apartments.
    Various levels could include restaurants, nightclubs, retail stores and entertainment.</p><blockquote><h1>What’s
    fascinating about this idea is that driverless hotel rooms are truly no different
    to driverless apartment rooms.</h1></blockquote><p>In today’s reality we think
    of hotels as expensive accommodation intended for a few overnight stays. Hotels
    and Airbnb accommodations are able to charge expensive fees due to their fixed
    and high-demand locations within the city.</p><p>By decoupling accommodation and
    the physical location, we decentralize housing and empower the individual to instantly
    switch to alternative locations. If Bondi Tower 7 is charging a $50 overnight
    fee while Bondi Tower 36 is charging a $10 overnight fee, then your room can haggle
    on your behalf and relocate to the cheapest location that remains within your
    preferences.</p><p>In fact these driverless rooms and “parking” towers can leverage
    blockchain <a href="https://hackernoon.com/tagged/technology">technology</a> to
    <a href="http://www.bbc.com/news/technology-30998361">remove the human landlord</a>
    altogether. Inexpensive, all-electric driverless rooms can roll off the production
    lines at today’s rate of <a href="http://www.carmagazine.co.uk/features/car-culture/two-born-every-minute-inside-nissans-sunderland-factory-car-february-2016/">one
    to two cars per minute</a> and immediately begin housing and transporting humans.</p><p>The
    driverless rooms could own themselves, manage their finances and schedule their
    own maintenance autonomously via smart contracts. Once they’ve paid-off their
    construction costs, they can offer their services at <strong>rental fees just
    enough to cover their low operating costs, but at zero profit</strong>.</p><p>And
    if we scale this vision of the <a href="https://hackernoon.com/tagged/future">future</a>
    out further, why not build entire cities from driverless modular rooms? Beginning
    with a flat and solid surface we could instruct these rooms to behave as building
    blocks which self-assemble into skyscrapers, parks, bridges and everything you
    expect to see in a city.</p><p>Decentralized modular cities could adapt to optimize
    for perfect living conditions that maximize the happiness and creativity of all
    inhabitants.</p><h3>If you enjoyed this, you’ll love my post on <a href="https://medium.com/@nathanwaters/driverless-van-homes-comfort-freedom-below-0-living-costs-part-2-75b5ff4a431a">driverless
    van homes</a>!</h3><p><img src="https://cdn-images-1.medium.com/max/4728/1*rX0nreZPDsrOYqqIUnJdHw.png"
    alt=""></p><iframe src="https://medium.com/media/3c851dac986ab6dbb2d1aaa91205a8eb"
    frameborder=0></iframe>'
  :author: HackerNoon.com
  :topic: human
- :url: https://medium.com/google-design/human-centered-machine-learning-a770d10562cd?source=search_post---------5
  :title: Human-Centered Machine Learning
  :content: '<p>7 steps to stay focused on the user when designing with ML</p><p><em>By
    Josh Lovejoy and Jess Holbrook</em></p><p><img src="https://cdn-images-1.medium.com/max/3840/1*-OtRjI8AyOMXGUmK0gv69A.jpeg"
    alt=""></p><p>Machine learning (ML) is the science of helping computers discover
    patterns and relationships in data instead of being manually programmed. It’s
    a powerful tool for creating personalized and dynamic experiences, and it’s already
    driving everything from Netflix recommendations to autonomous cars. But as more
    and more experiences are built with ML, it’s clear that UXers still have a lot
    to learn about how to make users feel in control of the technology, and not the
    other way round.</p><p>As was the case with the mobile revolution, and the web
    before that, ML will cause us to rethink, restructure, displace, and consider
    new possibilities for virtually every experience we build. In the Google UX community,
    we’ve started an effort called “<strong>human-centered machine learning</strong>”
    (HCML) to help focus and guide that conversation. Using this lens, we look across
    products to see how ML can stay grounded in human needs while solving them in
    unique ways only possible through ML. Our team at Google works with UXers across
    the company to bring them up to speed on core ML concepts, understand how to integrate
    ML into the UX utility belt, and ensure ML and AI are built in inclusive ways.</p><p>If
    you’ve just started working with ML, you may be feeling a little overwhelmed by
    the complexity of the space and the sheer breadth of opportunity for innovation.
    Slow down, give yourself time to get acclimated, and don’t panic. You don’t need
    to reinvent yourself in order to be valuable to your team.</p><p>We’ve developed
    seven points to help designers navigate the new terrain of designing ML-driven
    products. Born out of our work with UX and AI teams at Google (and a healthy dose
    of trial and error), these points will help you put the user first, iterate quickly,
    and understand the unique opportunities ML creates.</p><p>Let’s get started.</p><h2>1.
    Don’t expect Machine learning to figure out what problems to solve</h2><p>Machine
    learning and artificial intelligence have a lot of hype around them right now.
    Many companies and product teams are jumping right into product strategies that
    start with ML as a solution and skip over focusing on a meaningful problem to
    solve.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*1amLc8Z6dlYZRCBvA39Vng.jpeg"
    alt=""></p><p>That’s fine for pure exploration or seeing what a technology can
    do, and often inspires new product thinking. However, if you aren’t aligned with
    a human need, you’re just going to build a very powerful system to address a very
    small — or perhaps nonexistent — problem.</p><p>So our first point is that you
    still need to do all that hard work you’ve always done to find human needs. This
    is all the ethnography, contextual inquiries, interviews, deep hanging out, surveys,
    reading customer support tickets, logs analysis, and getting proximate to people
    to figure out if you’re solving a problem or addressing an unstated need people
    have. Machine learning won’t figure out what problems to solve. We still need
    to define that. As UXers, we already have the tools to guide our teams, regardless
    of the dominant technology paradigm.</p><h2>2. Ask yourself if ML will address
    the problem in a unique way</h2><p>Once you’ve identified the need or needs you
    want to address, you’ll want to assess whether ML can solve these needs in unique
    ways. There are plenty of legitimate problems that <em>don’t</em> require ML solutions.</p><p>A
    challenge at this point in product development is determining which experiences
    require ML, which are meaningfully enhanced by ML, and which do not benefit from
    ML or are even degraded by it. Plenty of products can feel “smart” or “personal”
    without ML. Don’t get pulled into thinking those are only possible with ML.</p><p><img
    src="https://cdn-images-1.medium.com/max/3724/1*URC8DMjzMCrWrzpjIddBVg.png" alt="*Gmail
    looks for phrases including words like “attachment” and “attached” to pop a reminder
    when you may have forgotten an attachment. Heuristics work great here. An ML system
    would most likely catch more potential mistakes but would be far more costly to
    build.*"><strong>Gmail looks for phrases including words like “attachment” and
    “attached” to pop a reminder when you may have forgotten an attachment. Heuristics
    work great here. An ML system would most likely catch more potential mistakes
    but would be far more costly to build.</strong></p><p>We’ve created a set of exercises
    to help teams understand the value of ML to their use cases. These exercises do
    so by digging into the details of what mental models and expectations people might
    bring when interacting with an ML system as well as what data would be needed
    for that system.</p><p>Here are three example exercises we have teams walk through
    and answer about the use cases they are trying to address with ML:</p><blockquote><h1>Describe
    the way a theoretical human “expert” might perform the task today.</h1><h1>If
    your human expert were to perform this task, how would you respond to them so
    they improved for the next time? Do this for all four phases of the <a href="https://en.wikipedia.org/wiki/Confusion_matrix">confusion
    matrix</a>.</h1><h1>If a human were to perform this task, what assumptions would
    the user want them to make?</h1></blockquote><p>Spending just a few minutes answering
    each of these questions reveals the automatic assumptions people will bring to
    an ML-powered product. They are equally good as prompts for a product team discussion
    or as stimuli in user research. We’ll also touch on these a bit later when we
    get into the process of defining labels and training models.</p><p>After these
    exercises and some additional <a href="https://designsprintkit.withgoogle.com/resources/">sketching
    and storyboarding</a> of specific products and features, we then plot out all
    of the team’s product ideas in a handy 2x2:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*KwrGfG_0ivojLfbPsVMIZQ.png"
    alt="Plot ideas in this 2x2. Have the team vote on which ideas would have the
    biggest user impact and which would be most enhanced by an ML solution."><em>Plot
    ideas in this 2x2. Have the team vote on which ideas would have the biggest user
    impact and which would be most enhanced by an ML solution.</em></p><p>This allows
    us to separate impactful ideas from less impactful ones as well as see which ideas
    depend on ML vs. those that don’t or might only benefit slightly from it. You
    should already be partnering with Engineering in these conversations, but if you
    aren’t, this is a great time to pull them in to weigh-in on the ML realities of
    these ideas. Whatever has the greatest user impact and is uniquely enabled by
    ML (in the top right corner of the above matrix) is what you’ll want to focus
    on first.</p><h2>3. Fake it with personal examples and wizards</h2><p>A big challenge
    with ML systems is prototyping. If the whole value of your product is that it
    uses unique user data to tailor an experience to her, you can’t just prototype
    that up real quick and have it feel anywhere near authentic. Also, if you wait
    to have a fully built ML system in place to test the design, it will likely be
    too late to change it in any meaningful way after testing. However, there are
    two user research approaches that can help: using personal examples from participants
    and Wizard of Oz studies.</p><p>When doing user research with early mockups, have
    participants bring in some of their own data — e.g. personal photos, their own
    contact lists, music or movie recommendations they’ve received — to the sessions.
    Remember, you’ll need to make sure you fully inform participants about how this
    data will be used during testing and when it will be deleted. This can even be
    a kind of fun “homework” for participants before the session (people like to talk
    about their favorite movies after all).</p><p>With these examples, you can then
    simulate right and wrong responses from the system. For example, you can simulate
    the system returning the wrong movie recommendation to the user to see how she
    reacts and what assumptions she makes about why the system returned that result.
    This helps you assess the cost and benefits of these possibilities with much more
    validity than using dummy examples or conceptual descriptions.</p><p>The second
    approach that works quite well for testing not-yet-built ML products is conducting
    <a href="https://en.wikipedia.org/wiki/Wizard_of_Oz_experiment">Wizard of Oz studies</a>.
    All the rage at one time, Wizard of Oz studies fell from prominence as a user
    research method over the past 20 years or so. Well, they’re back.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*doAy8yuUHlLo1JbO37jFNg.gif"
    alt="Chat interfaces are one of the easiest experiences to test with a Wizard
    of Oz approach. Simply have a team mate ready on the other side of the chat to
    enter “answers” from the “AI.” (image from: [https://research.googleblog.com/2017/04/federated-learning-collaborative.html](https://research.googleblog.com/2017/04/federated-learning-collaborative.html))"><em>Chat
    interfaces are one of the easiest experiences to test with a Wizard of Oz approach.
    Simply have a team mate ready on the other side of the chat to enter “answers”
    from the “AI.” (image from: <a href="https://research.googleblog.com/2017/04/federated-learning-collaborative.html">https://research.googleblog.com/2017/04/federated-learning-collaborative.html</a>)</em></p><p>Quick
    reminder: Wizard of Oz studies have participants interact with what they believe
    to be an autonomous system, but which is actually being controlled by a human
    (usually a teammate).</p><p>Having a teammate imitate an ML system’s actions like
    chat responses, suggesting people the participant should call, or movies suggestions
    can simulate interacting with an “intelligent” system. These interactions are
    essential to guiding the design because when participants can earnestly engage
    with what they perceive to be an AI, they will naturally tend to form a mental
    model of the system and adjust their behavior according to those models. Observing
    their adaptations and second-order interactions with the system are hugely valuable
    to informing its design.</p><h2>4. Weigh the costs of false positives and false
    negatives</h2><p>Your ML system will make mistakes. It’s important to understand
    what these errors look like and how they might affect the user’s experience of
    the product. In one of the questions in point 2 we mentioned something called
    the <a href="https://en.wikipedia.org/wiki/Confusion_matrix">confusion matrix</a>.
    This is a key concept in ML and describes what it looks like when an ML system
    gets it right and gets it wrong.</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*-QR9WF1n7jkzn4t1u57NNw.gif"
    alt="*The four states of a confusion matrix and what they likely mean for your
    users.*"><strong>The four states of a confusion matrix and what they likely mean
    for your users.</strong></p><p>While all errors are equal to an ML system, not
    all errors are equal to all people. For example, if we had a “is this a human
    or a troll?” classifier, then accidentally classifying a human as a troll is just
    an error to the system. It has no notion of insulting a user or the cultural context
    surrounding the classifications it is making. It doesn’t understand that people
    using the system may be much more offended being accidentally labeled a troll
    compared to trolls accidentally being labeled as people. But maybe that’s our
    people-centric bias coming out. :)</p><p>In ML terms, you’ll need to make conscious
    trade-offs between the <a href="https://en.wikipedia.org/wiki/Precision_and_recall">precision
    and recall</a> of the system. That is, you need to decide if it is more important
    to include all of the right answers even if it means letting in more wrong ones
    (optimizing for recall), or minimizing the number of wrong answers at the cost
    of leaving out some of the right ones (optimizing for precision). For example,
    if you are searching Google Photos for “playground”, you might see results like
    this:</p><p><img src="https://cdn-images-1.medium.com/max/3200/0*JA6ide7VGzj_l4FD."
    alt=""></p><p>These results include a few scenes of children playing, but not
    on a playground. In this case, recall is taking priority over precision. It is
    more important to get all of the playground photos and include a few that are
    similar but not exactly right than it is to only include playground photos and
    potentially exclude the photo you were looking for.</p><h2>5. Plan for co-learning
    and adaptation</h2><p>The most valuable ML systems evolve over time in tandem
    with users’ mental models. When people interact with these systems, they’re influencing
    and adjusting the kinds of outputs they’ll see in the future. Those adjustments
    in turn will change how users interact with the system, which will change the
    models… and so on, in a feedback loop. This can result in “<strong>conspiracy
    theories</strong>” where people form incorrect or incomplete mental models of
    a system and run into problems trying to manipulate the outputs according to these
    imaginary rules. You want to guide users with clear mental models that encourage
    them to give feedback that is mutually beneficial to them and the model.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*whMp785sX1yFEpXz6TbJ1Q.gif" alt="*An
    example of the virtuous cycle is how Gboard continuously evolves to predict the
    user’s next word. The more someone uses the system’s recommendations, the better
    those recommendations get. Image from [*https://research.googleblog.com/2017/05/the-machine-intelligence-behind-gboard.html](https://research.googleblog.com/2017/05/the-machine-intelligence-behind-gboard.html)">*<em>An
    example of the virtuous cycle is how Gboard continuously evolves to predict the
    user’s next word. The more someone uses the system’s recommendations, the better
    those recommendations get. Image from <a href="https://research.googleblog.com/2017/05/the-machine-intelligence-behind-gboard.html">*https://research.googleblog.com/2017/05/the-machine-intelligence-behind-gboard.html</a></em></p><p>While
    ML systems are trained on existing data sets, they will adapt with new inputs
    in ways we often can’t predict before they happen. So we need to adapt our user
    research and feedback strategies accordingly. This means planning ahead in the
    product cycle for longitudinal, high-touch, as well as broad-reach research together.
    You’ll need to plan enough time to evaluate the performance of ML systems through
    quantitative measures of accuracy and errors as users and use cases increase,
    as well as sit with people while they use these systems to understand how mental
    models evolve with every success and failure.</p><p>Additionally, as UXers we
    need to think about how we can get in situ feedback from users over the entire
    product lifecycle to improve the ML systems. Designing interaction patterns that
    make giving feedback easy as well as showing the benefits of that feedback quickly,
    will start to differentiate good ML systems from great ones.</p><p><img src="https://cdn-images-1.medium.com/max/2836/1*cD4Zc1XMRTDG6-oUMt7OdA.png"
    alt="*The Google app asks every once in awhile if a particular card is useful
    right now to get feedback on its suggestions.*"><strong>The Google app asks every
    once in awhile if a particular card is useful right now to get feedback on its
    suggestions.</strong></p><p><img src="https://cdn-images-1.medium.com/max/3924/1*-OxTILETAjm-rZPGzNihhA.png"
    alt="*People can give feedback on Google Search Autocomplete including why predictions
    may be inappropriate.*"><strong>People can give feedback on Google Search Autocomplete
    including why predictions may be inappropriate.</strong></p><h2>6. Teach your
    algorithm using the right labels</h2><p>As UXers, we’ve grown accustomed to wireframes,
    mockups, prototypes, and redlines being our hallmark deliverables. Well, curveball:
    when it comes to ML-augmented UX, there’s only so much we can specify. That’s
    where “labels” come in.</p><p>Labels are an essential aspect of machine learning.
    There are people whose job is to look at tons of content and label it, answering
    questions like “is there a cat in this photo?” And once enough photos have been
    labeled as “cat” or “not cat”, you’ve got a data set you can use to train a model
    to be able to recognize cats. Or more accurately, to be able to predict with some
    confidence level whether or not there’s a cat in a photo it’s never seen before.
    Simple, right?</p><p><img src="https://cdn-images-1.medium.com/max/2048/1*ZtUs_9crXZqBg9O_Nw-A9A.gif"
    alt="*Can you pass this quiz?*"><strong>Can you pass this quiz?</strong></p><p>The
    challenge comes when you venture into territory where the goal of your model is
    to predict something that might feel subjective to your users, like whether or
    not they’ll find an article interesting or a suggested email reply meaningful.
    But models take a long time to train, and getting a data set fully labeled can
    be prohibitively expensive, not to mention that getting your labels wrong can
    have a huge impact on your product’s viability.</p><p>So here’s how to proceed:
    Start by making reasonable assumptions and discussing those assumptions with a
    diverse array of collaborators. These assumptions should generally take the form
    of “for ________ users in ________ situations, we assume they’ll prefer ________
    and not ________.” Then get these assumptions into the hackiest prototype possible
    as quickly as possible in order to start gathering feedback and iterating.</p><p>Find
    experts who can be the best possible teachers for your machine learner — people
    with domain expertise relevant to whatever predictions you’re trying to make.
    We recommend that you actually hire a handful of them, or as a fallback, transform
    someone on your team into the role. We call these folks “Content Specialists”
    on our team.</p><p>By this point, you’ll have identified which assumptions are
    feeling “<strong>truthier</strong>” than others. But before you go big and start
    investing in large-scale data collection and labeling, you’ll want to perform
    a critical second round of validation using examples that have been curated from
    real user data by Content Specialists. Your users should be testing out a high-fidelity
    prototype and perceive that they’re interacting with a legit AI (per point #3
    above).</p><p>With validation in-hand, have your Content Specialists create a
    broad portfolio of hand-crafted examples of what you want your AI to produce.
    These examples give you a roadmap for data collection, a strong set of labels
    to start training models, and a framework for designing large scale labeling protocols.</p><h2>7.
    Extend your UX family, ML is a creative process</h2><p>Think about the worst micro-management
    “feedback” you’ve ever received as a UXer. Can you picture the person leaning
    over your shoulder and nit-picking your every move? OK, now keep that image in
    your mind… and make absolutely certain that you don’t come across like that to
    your engineers.</p><p>There are so many potential ways to approach any ML challenge,
    so as a UXer, getting too prescriptive too quickly may result in unintentionally
    anchoring — and thereby diminishing the creativity of — your engineering counterparts.
    Trust them to use their intuition and encourage them to experiment, even if they
    might be hesitant to test with users before a full evaluation framework is in
    place.</p><p>Machine learning is a much more creative and expressive engineering
    process than we’re generally accustomed to. Training a model can be slow-going,
    and the tools for visualization aren’t great yet, so engineers end up needing
    to use their imaginations frequently when tuning an algorithm (there’s even a
    methodology called “Active Learning” where they manually “tune” the model after
    every iteration). Your job is to help them make great user-centered choices all
    along the way.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*D4Ykl-wS9nHpFY_ibnioGg.jpeg"
    alt="Work together with Engineering, Product, etc. to piece together the right
    experience."><em>Work together with Engineering, Product, etc. to piece together
    the right experience.</em></p><p>So inspire them with examples — decks, personal
    stories, vision videos, prototypes, clips from user research, the works — of what
    an amazing experience could look and feel like, build up their fluency in user
    research goals and findings, and gently introduce them to our wonderful world
    of UX crits, workshops, and <a href="https://designsprintkit.withgoogle.com/">design
    sprints</a> to help manifest a deeper understanding of your product principles
    and experience goals. The earlier they get comfortable with iteration, the better
    it will be for the robustness of your ML pipeline, and for your ability to effectively
    influence the product.</p><h2>Conclusion</h2><p>These are the seven points we
    emphasize with teams in Google. We hope they are useful to you as you think through
    your own ML-powered product questions. As ML starts to power more and more products
    and experiences, let’s step up to our responsibility to stay human-centered, find
    the unique value for people, and make every experience great.</p><h3>Authors</h3><p>Josh
    Lovejoy is a UX Designer in the Research and Machine Intelligence group at Google.
    He works at the intersection of Interaction Design, Machine Learning, and unconscious
    bias awareness, leading design and strategy for Google’s ML Fairness efforts.</p><p>Jess
    Holbrook is a UX Manager and UX Researcher in the Research and Machine Intelligence
    group at Google. He and his team work on multiple products powered by AI and machine
    learning that take a human-centered approach to these technologies.</p><p>Akiko
    Okazaki did the beautiful illustrations.</p>'
  :author: unknown
  :topic: human
- :url: https://medium.com/basic-income/self-driving-trucks-are-going-to-hit-us-like-a-human-driven-truck-b8507d9c5961?source=search_post---------6
  :title: Self-Driving Trucks Are Going to Hit Us Like a Human-Driven Truck
  :content: '<p>Self-Driving Trucks Are Going to Hit Us Like a Human-Driven Truck<center></p><h3>The
    imminent need for basic income in recognition of our machine-driven future</center></h3><p>Late
    last year, I took a road trip with my partner from our home in New Orleans, Louisiana
    to Orlando, Florida and as we drove by town after town, we got to talking about
    <a href="http://www.telegraph.co.uk/technology/google/10829791/Google-very-actively-working-on-self-driving-cars-project.html">the
    potential effects self-driving vehicle technology</a> would have not only on truckers
    themselves, but on all the local economies dependent on trucker salaries. Once
    one starts wondering about this kind of one-two punch to America’s gut, one sees
    the prospects aren’t pretty.</p><p>We are facing the decimation of entire small
    town economies, a disruption the likes of which we haven’t seen since <a href="http://guardianlv.com/2013/08/ghost-towns-and-memories-of-missouris-route-66/">the
    construction of the interstate highway system itself bypassed entire towns</a>.
    If you think this may be a bit of hyperbole… let me back up a bit and start with
    this:</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*FAOTYaCoYpUhjiAe3sjofA.png"
    alt="Source: [NPR](http://www.npr.org/blogs/money/2015/02/05/382664837/map-the-most-common-job-in-every-state?)"><em>Source:
    <a href="http://www.npr.org/blogs/money/2015/02/05/382664837/map-the-most-common-job-in-every-state?">NPR</a></em></p><p><strong>This
    is a map of the most common job in each US state in 2014.</strong></p><p>It should
    be clear at a glance just how dependent the American economy is on truck drivers.
    According to the American Trucker Association, <a href="http://www.alltrucking.com/faq/truck-drivers-in-the-usa/">there
    are 3.5 million professional truck drivers in the US</a>, and an additional 5.2
    million people employed within the truck-driving industry who don’t drive the
    trucks. That’s 8.7 million trucking-related jobs.</p><p>We can’t stop there though,
    because the incomes received by these 8.2 million people create the jobs of others.
    Those 3.5 million truck drivers driving all over the country stop regularly to
    eat, drink, rest, and sleep. Entire businesses have been built around serving
    their wants and needs. Think restaurants and motels as just two examples. So now
    we’re talking about millions more whose employment depends on the employment of
    truck drivers. But we still can’t even stop there.</p><p>Those working in these
    restaurants and motels along truck-driving routes are also consumers within their
    own local economies. Think about what a server spends her paycheck and tips on
    in her own community, and what a motel maid spends from her earnings into the
    same community. That spending creates other paychecks in turn. So now we’re not
    only talking about millions more who depend on those who depend on truck drivers,
    but we’re also talking about entire small town communities full of people who
    depend on all of the above in more rural areas. With any amount of reduced consumer
    spending, these local economies will shrink.</p><p>One further important detail
    to consider is that truck drivers are well-paid. They provide a middle class income
    of <a href="http://www.bls.gov/ooh/Transportation-and-Material-Moving/Heavy-and-tractor-trailer-truck-drivers.htm">about
    $40,000 per year</a>. That’s a higher income than <a href="http://www.whatsmypercent.com/">just
    about half</a> (46%) of all tax filers, including those of married households.
    They are also greatly comprised by those without college educations. Truck driving
    is just about the last job in the country to provide a solid middle class salary
    without requiring a post-secondary degree. Truckers are essentially the last remnant
    of an increasingly impoverished population once gainfully employed in manufacturing
    before those middle income jobs were mostly all shipped overseas.</p><p>If we
    now step back and look at the big national picture, we are potentially looking
    at well over 10 million American workers and their families whose incomes depend
    entirely or at least partially on the incomes of truck drivers, all of whom markedly
    comprise what is left of the American middle class.</p><p>So as long as the outlook
    for US trucking is rosy, we’re fine, right?</p><h3>The Short-Term Job Outlook
    of the American Trucker</h3><p>The trucking industry expects to see <a href="http://www.alltrucking.com/faq/truck-drivers-in-the-usa/">21%
    more truck driving jobs by 2020</a>. They also expect to see an increasing shortfall
    in drivers, with over 100,000 jobs open and unable to find drivers to fill them.
    Higher demand than supply of truckers also points to higher pay, so for at least
    the next five years, the future is looking great for truck drivers. The only thing
    that could put a damper on this would be if the demand for truck drivers were
    to say… drive off a sharp cliff.</p><blockquote><h1><em>That cliff is the self-driving
    truck.</em></h1></blockquote><p>The technology already exists to enable trucks
    to drive themselves. Google shocked the world when it announced its self-driving
    car it had already driven over 100,000 miles without accident. These cars have
    since driven over <a href="https://medium.com/backchannel/the-view-from-the-front-seat-of-the-google-self-driving-car-46fc9f3e6088">1.7
    million miles and have only been involved in 11 accidents</a>, all caused by humans
    and not the computers. And this is <em>mostly within</em> metropolitan areas.</p><blockquote><p>“And
    as you might expect, we see more accidents per mile driven on city streets than
    on freeways; we were hit 8 times in many fewer miles of city driving.” — <em>Chris
    Urmson, director of Google’s self-driving car program</em></p></blockquote><p>So
    according to Google’s experience, the greater danger lies within cities and not
    freeways, and driving <em>between</em> cities involves even fewer technological
    barriers than within them. Therefore, it’s probably pretty safe to say driverless
    freeway travel is even closer to our future horizon of driverless transportation.
    How much closer? It has <em>already</em> happened.</p><blockquote><h1><strong><em>On
    May 6, 2015, the first self-driving truck hit the American road in the state of
    Nevada.</em></strong></h1></blockquote><p><center><iframe width="560" height="315"
    src="https://www.youtube.com/embed/HdSRUG4KTPA" frameborder="0" allowfullscreen></iframe></center></p><p>Self-driving
    trucks are no longer the future. They are the present. <a href="http://www.wired.com/2015/05/worlds-first-self-driving-semi-truck-hits-road/">They’re
    here</a>.</p><blockquote><p>“AU 010.” License plates are rarely an object of attention,
    but this one’s special — the funky number is the giveaway. That’s why Daimler
    bigwig Wolfgang Bernhard and Nevada governor Brian Sandoval are sharing a stage,
    mugging for the phalanx of cameras, together holding the metal rectangle that
    will, in just a minute, be slapped onto the world’s first officially recognized
    self-driving truck.</p></blockquote><p>According to Daimler, these trucks will
    be in a decade-long testing phase, racking up over a million miles before being
    deemed fit for adoption, but the technology isn’t even anything all that new.
    There’s no laser-radar or LIDAR like in <a href="http://www.theverge.com/2014/5/14/5716468/i-took-a-ride-in-a-self-driving-car">Google’s
    self-driving car</a>. It’s just ordinary radar and cameras. The hardware itself
    is already yesterday’s news. They’re just the first ones to throw them into a
    truck and allow truckers to sit back and enjoy the ride, while the truck itself
    does all the driving.</p><p>If the truck needs help, it’ll alert the driver. If
    the driver doesn’t respond, it’ll slowly pull over and wait for further instructions.
    This is nothing fancy. This is not a truck version of KITT from Knight Rider.
    This is just an example of a company and a state government getting out of the
    way of technology and letting it do what it was built to do — <strong>enable us
    to do more with less</strong>. In the case of self-driving trucks, one big improvement
    in particular is fewer accidents.</p><blockquote><p>In 2012 in the US, 330,000
    large trucks were involved in crashes that killed nearly 4,000 people, most of
    them in passenger cars. About 90 percent of those were caused by driver error.</p></blockquote><p><strong>That’s
    like <a href="http://www.statisticbrain.com/911-death-statistics/">one and a half
    9/11s</a> yearly. Human-driven trucks kill people.</strong></p><p>Robot trucks
    will kill far fewer people, if any, because machines don’t get tired. Machines
    don’t get distracted. Machines don’t look at phones instead of the road. Machines
    don’t drink alcohol or do any kind of drugs or involve any number of things that
    somehow contribute to the total number of accidents every year involving trucks.
    For this same reasoning, <a href="http://blogs.wsj.com/venturecapital/2014/11/21/would-air-travel-be-safer-without-pilots-steve-jurvetson-thinks-so/">pilots
    too are bound to be removed from airplanes</a>.</p><p><strong>Humans are dangerous
    behind the wheel of anything.</strong></p><p>Robot trucks also don’t need salaries
    — salaries that stand to go up because fewer and fewer people want to be truckers.
    A company can buy a fleet of self-driving trucks and never pay another human salary
    for driving. The only costs will be upkeep of the machinery. No more need for
    health insurance either. Self-driving trucks will also never need to stop to rest,
    for any reason. Routes will take less time to complete.</p><p>All of this means
    the replacement of truckers is inevitable. It is not a matter of “if”, it’s only
    a matter of “when.” So the question then becomes, how long until millions of truckers
    are freshly unemployed and what happens to them and all the rest of us as a result?</p><h3>The
    Long-Term Job Outlook of the American Trucker</h3><p>First, let’s look at the
    potential time horizons for self-driving cars. Tesla intends to release a software
    update <em>next month</em> that will turn on “autopilot” mode, immediately allowing
    all Tesla Model S drivers to be driven between <a href="http://www.theverge.com/2015/3/19/8257933/tesla-model-s-autopilot-release-date">“San
    Francisco and Seattle without the driver doing anything”</a>, in Elon Musk’s own
    words. The cars actually already have the technology to even drive from “parking
    lot to parking lot”, but that ability will remain unactivated by software.</p><p>Tesla-driven
    humans won’t be able to legally let their cars do all the driving, but who are
    we kidding? There will be Teslas driving themselves, saving lives in the process,
    and governments will need to catch up to make that driving legal. This process
    is already here in 2015. So when will the process end? When will self-driving
    cars conquer our roads?</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*kg2IBv4Rah6It0-u9_B4mA.png"
    alt="Source: [Morgan Stanley](http://www.dailyfinance.com/2014/02/25/morgan-stanleys-utopian-society-will-be-built-by-t/)"><em>Source:
    <a href="http://www.dailyfinance.com/2014/02/25/morgan-stanleys-utopian-society-will-be-built-by-t/">Morgan
    Stanley</a></em></p><p>According to Morgan Stanley, <a href="http://www.dailyfinance.com/2014/02/25/morgan-stanleys-utopian-society-will-be-built-by-t/">complete
    autonomous capability will be here **by 2022</a><strong>, followed by massive
    market penetration **by 2026</strong> and the cars we know and love today then
    entirely extinct in another 20 years thereafter.</p><p>Granted, this is only <a
    href="http://www.driverless-future.com/?page_id=384">one estimate of many</a>
    and it’s all educated guesswork. So here are some other estimates:</p><ul><li><p>Navigant
    Research: “<a href="http://www.navigantresearch.com/newsroom/autonomous-vehicles-will-surpass-95-million-in-annual-sales-by-2035"><strong>By
    2035</strong>, sales of autonomous vehicles will reach 95.4 million annually,
    representing 75% of all light-duty vehicle sales.</a>”</p></li><li><p>IHS Automotive:
    “<a href="http://www.kurzweilai.net/fully-self-driving-cars-expected-by-2030-says-forecast">There
    should be nearly 54 million self-driving cars in use globally <strong>by 2035</strong>.</a>”</p></li><li><p>ABI
    Research: “<a href="https://www.abiresearch.com/press/half-of-new-vehicles-shipping-in-north-america-to-/">Half
    of new vehicles shipping in North America to have driverless, robotic capabilities
    <strong>by 2032</strong>.</a>”</p></li><li><p>Nissan: “<a href="http://www.hybridcars.com/us-likely-to-see-nissans-first-production-autonomous-car-in-2020/"><strong>In
    2020</strong> we’re talking more autonomous drive capability. It’s going to be
    an evolutionary process and 2020 will be the first year to truly see some of these
    capabilities start to be introduced in the vehicle.</a>”</p><blockquote><h1><em>Take
    all of these estimates together, and we’re looking at a window of massive disruption
    starting *</em>somewhere between** <strong>2020 and 2030</strong>.*</h1></blockquote></li></ul><p>There
    is no turning the wheel in prevention of driving off this cliff either. Capitalism
    itself has the wheel now, and what the market wants, the market gets. Competition
    will make sure of it. Tesla and Google are not the only companies looking to develop
    autonomous vehicles. There are others.</p><p>A company named <strong>Veeo Systems</strong>
    is developing vehicles as small as 2-seaters to as large as 70-seat buses, and
    will be testing them <a href="http://observer.com/2015/03/self-driving-cars-will-be-in-30-u-s-cities-by-the-end-of-next-year/">in
    30 US cities by the end of 2016</a>.</p><blockquote><p>At 25 to 40 percent cheaper,
    the cost to ride the driverless public transit vehicles will be significantly
    less expensive than traditional buses and trains… The vehicles are electric, rechargeable
    and could cost as low as $1 to $3 to run per day.</p></blockquote><p><a href="http://www.bloomberg.com/news/articles/2015-02-14/apple-said-to-be-working-on-electric-car-to-challenge-tesla">**Apple
    is also developing its own self-driving car</a>.**</p><blockquote><p><em>The project
    is code-named Titan and the vehicle design resembles a minivan, the Wall Street
    Journal reported… Apple already has technology that may lend itself to an electric
    car and expertise managing a vast supply chain. The company has long researched
    battery technology for use in its iPhones, iPads and Macs. The mapping system
    it debuted in 2012 can be used for navigation…</em></p></blockquote><p><a href="http://money.cnn.com/2015/02/03/technology/innovationnation/uber-self-driving-cars/index.html">**And
    Uber is developing its own self-driving car</a>.**</p><blockquote><p><em>Uber
    said it will develop “key long-term technologies that advance Uber’s mission of
    bringing safe, reliable transportation to everyone, everywhere,” including driverless
    cars, vehicle safety and mapping services.</em></p></blockquote><p>It’s this last
    one that fully intends to transform the transportation landscape. Uber is going
    all-in on self-driving vehicles to the point it wants to <a href="http://citypaper.net/uberdriver/">entirely
    eliminate car ownership</a> as a 20th century relic.</p><blockquote><p>Travis
    Kalanick, the CEO and founder of Uber, said at a conference last year that he’d
    replace human Uber drivers with a fleet of self-driving cars in a second. “You’re
    not just paying for the car — you’re paying for the other dude in the car,” he
    said. “When there’s no other dude in the car, the cost of taking an Uber anywhere
    becomes cheaper than owning a vehicle.” That, he said, will “bring the cost below
    the cost of ownership for everybody, and then <strong>car ownership goes away</strong>.”</p></blockquote><p>That’s
    the potential of self-driving cars —<a href="http://gizmodo.com/the-rise-of-automated-cars-will-thousands-of-jobs-and-n-1702689348">**
    the outright extinction of car ownership</a>**. And with that, the elimination
    of entire industries built up around the existence of car ownership like: mechanics,
    car washes, parking, valets, body shops, rental companies, car insurance, car
    loans, and on and on. Even hugely expensive and capital intensive mass-transit
    infrastructure projects like streetcars and light rail can be dropped in favor
    of vastly cheaper on demand robotic “<a href="http://www.businessinsider.com/how-self-driving-cars-could-solve-new-yorks-traffic-woes-2014-6">transportation
    clouds</a>”, and all those construction and maintenance jobs right along with
    it.</p><p>Big players are already in the game. There are huge savings to be found,
    huge profits to be created. Higher quality and safety is assured. Driverless vehicles
    are coming, and they are coming fast.</p><p>But again, what about <strong>trucks</strong>
    specifically?</p><p>Any realistic time horizon for self-driving trucks needs to
    look at horizons for cars and shift those even further towards the present. Trucks
    only need to be self-driven on highways. They do not need warehouse-to-store autonomy
    to be disruptive. City-to-city is sufficient. At the same time, trucks are almost
    entirely corporate driven. There are market forces above and beyond private cars
    operating for trucks. If there are savings to be found in eliminating truckers
    from drivers seats, <em>which there are</em>, these savings will be sought. It’s
    actually really easy to find these savings right now.</p><p>Wirelessly linked
    truck platoons are as simple as having a human driver drive a truck, with multiple
    trucks without drivers following closely behind. This not only saves on gas money
    (<a href="http://www.peloton-tech.com/about/">7% for only two trucks together</a>),
    but can immediately eliminate half of all truckers if for example 2-truck convoys
    became the norm. There’s no real technical obstacles to this option. It’s a very
    simple use of present technology.</p><p>Basically, the only real barrier to the
    immediate adoption of self-driven trucks is purely legal in nature, not technical
    or economic. With self-driving vehicles currently only road legal in a few states,
    many more states need to follow suit unless autonomous vehicles are made legal
    at the national level. And Sergey Brin of Google has estimated this could happen
    <a href="http://www.telegraph.co.uk/technology/google/10829791/Google-very-actively-working-on-self-driving-cars-project.html">**as
    soon as 2017</a>**. Therefore…</p><blockquote><h1><em>The answer to the big question
    of “When?” for self-driving trucks is that they can essentially hit our economy
    at *</em>any time*<em>.</em></h1></blockquote><h3>The Eve of Massive Social and
    Economic Disruption</h3><p>Main Street USA has already taken a big hit, <a href="https://medium.com/basic-income/how-we-can-transform-americas-broken-economic-system-to-work-for-everyone-ddba38fc328a">and
    increasingly so</a>, over the past few decades. Manufacturing has been shipped
    overseas to areas where labor is far cheaper because costs of living are far cheaper.
    Companies like Walmart have spread everywhere, concentrating a reduced labor force
    into one-stop shopping facilities requiring fewer total workers than what was
    needed with smaller, more numerous, and more widely spread Mom &amp; Pop type
    stores. Companies like Amazon have even further concentrated this even further
    reduced labor force into automated warehouse centers capable of obviating stores
    entirely and shipping directly to consumers.</p><p>All of the above means fewer
    ways of securing employment in fewer places, while commerce has become more geographically
    concentrated and access to money has become increasingly shifted away from the
    bottom and middle of the income spectrum towards the top.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*Ecuvog60xd45Uu3m2Yoe5g.png"
    alt="Source: [Mother Jones](http://www.motherjones.com/politics/2013/09/charts-income-inequality-middle-class-census)"><em>Source:
    <a href="http://www.motherjones.com/politics/2013/09/charts-income-inequality-middle-class-census">Mother
    Jones</a></em></p><p>This is what happens when good-paying jobs are eliminated,
    and that money not spent on wages and salaries instead stays in the hands of owners
    of capital, or is given in smaller amounts to lower-paid employees in lower-wage
    jobs. Inequality grows more and more extreme and our land of opportunity vanishes.
    <a href="http://www.theindychannel.com/decodedc/why-wall-street-is-finally-tackling-income-inequality">**Economic
    growth slows to a crawl</a>**.</p><p>This is where we’re at and this is what we
    face as we look towards a quickly approaching horizon of <a href="http://marshallbrain.com/second-intelligent-species4.htm">**over
    3 million unemployed truckers</a>** <em>and millions more</em> unemployed service
    industry workers in small towns all over the country dependent on truckers as
    consumers of their services.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*vQSgYVSn6xrqOW8NTl7iwA.jpeg"
    alt="Glenrio, TX — Source: [Reader’s Digest](http://www.rd.com/slideshows/ghost-town-pictures/view-all/)"><em>Glenrio,
    TX — Source: <a href="http://www.rd.com/slideshows/ghost-town-pictures/view-all/">Reader’s
    Digest</a></em></p><p>The removal of truckers from freeways will have an effect
    on today’s towns similar to the effects the freeways themselves had on towns decades
    ago that had sprung up around bypassed stretches of early highways. When the construction
    of the interstate highway system replaced <a href="https://en.wikipedia.org/wiki/U.S._Route_66">Route
    66</a>, things changed as drivers drove right on past these once thriving towns.
    The result was <strong>ghost towns</strong> like <a href="http://www.rd.com/slideshows/ghost-town-pictures/view-all/">Glenrio,
    Texas</a>.</p><blockquote><p>With the patience that carved the Grand Canyon over
    eons, nature reclaims Glenrio, where the clock stopped with the bypass of Route
    66. The replacement of Route 66 with a four-lane superhighway that allowed motorists
    to zip past rather than wander through ultimately allowed Glenrio to decline.</p></blockquote><p>With
    self-driving cars and trucks, here again we face the prospect of town after town
    being zipped past by people (if even present) choosing to instead just sleep in
    their computer-driven vehicles. Except this time, there is no new highway being
    made for businesses to relocate closer to and new towns to emerge along. This
    time, <a href="http://www.scottsantens.com/debunking-the-debunking-of-humans-need-not-apply-and-more-the-fallacy-of-the-luddite-fallacy">as
    is true of the effect of technology on jobs</a>, it’s different. This time, there’s
    no need for entire towns to even exist <em>at all</em>.</p><h3>The Road Left to
    Take</h3><p>As close as <a href="http://qz.com/403628/autonomous-cars-will-destroy-millions-of-jobs-and-reshape-the-economy-by-2025/">2025</a>
    — that is in a mere 10 years — our advancing state of technology will begin disrupting
    our economy in ways we can’t even yet imagine. <a href="https://www.youtube.com/watch?v=7Pq-S557XQU">Human
    labor is increasingly unnecessary and even economically unviable compared to machine
    labor</a>. And yet we still insist on money to pay for what our machines are making
    for us. As long as this remains true, <a href="http://www.scottsantens.com/yeah-but-who-is-going-to-pay-for-it-basic-income-alan-watts">we
    must begin providing ourselves the money required to purchase what the machines
    are producing</a>.</p><p>Without a** technological dividend**, <a href="http://www.salon.com/2015/03/17/robert_reich_economic_redistribution_is_our_only_hope_partner/">the
    engine that is our economy will seize,</a> or we will fight against technological
    progress itself in the same way <a href="http://motherboard.vice.com/read/luddites-definition-wrong-labor-technophobe">some
    once destroyed their machine replacements</a>. Without non-work income, we will
    actually fight to keep from being replaced by the technology we built to replace
    us.</p><p>Just as our roads a decade from now will be full of machine drivers
    instead of human drivers, a 21st century economy shall be driven by human <em>consumers</em>,
    not human workers, and these consumers must be freely given their purchasing power.
    If we refuse, if we don’t provide ourselves <a href="https://medium.com/working-life/why-should-we-support-the-idea-of-an-unconditional-basic-income-8a2680c73dd3">**a
    universal and unconditional basic income</a> **soon, the future is going to hit
    us like a truck — a truck driven solely by ourselves.</p><p>To allow this to happen
    would be truly foolish, for what is the entire purpose of technology but to free
    us to pursue all we wish to pursue? Fearing the loss of jobs shouldn’t be a fear
    at all. It should be welcomed. It should be freeing.</p><p>No one should be asking
    what we’re going to do <em>if</em> computers <em>take</em> our jobs.</p><p><strong>We
    should all be asking what we <em>get</em> to do once <em>freed</em> from them.</strong></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*ZFcd_MllGwIvwr3avl7DTQ.jpeg" alt=""></p><p><strong><em>Scott
    Santens writes about basic income on <a href="http://scottsantens.com">his blog</a>.
    You can also follow him here on <a href="https://medium.com/@2noame">Medium</a>,
    on <a href="https://twitter.com/2noame">Twitter</a>, on <a href="https://www.facebook.com/scottsantens">Facebook</a>,
    or on <a href="http://www.reddit.com/user/2noame/">Reddit</a> where he is a moderator
    for the <a href="http://www.reddit.com/r/basicincome/wiki">/r/BasicIncome</a>
    community of over 26,000 subscribers.</em></strong></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*MQShMN1-_-MGQoN7WHI4Lw.png"
    alt=""></p><p><strong><em>This article was written on a crowdfunded monthly basic
    income. If you found value in this article, you can support it along with all
    my advocacy for basic income with <a href="http://www.patreon.com/scottsantens">a
    monthly patron pledge</a> of $1+.</em></strong></p><blockquote><h1><a href="https://patreon.com/invite/xxgw">Are
    you a creative? Become a creator on Patreon</a>. Join me in taking <a href="http://www.patreon.com/scottsantens">the
    BIG Patreon Creator Pledge for basic income</a>.</h1><p><center><strong><em>Special
    thanks to Arjun Banker, Topher Hunt, Keith Davis, Albert Wenger, Larry Cohen,
    Danielle Texeira, Paul Wicks, Liane Gale, Jan Smole, Joe Esposito, Robert F. Greene,
    Martin Jordo, Victor Lau, Shane Gordon, Paolo Narciso, Johan Grahn, Tony DeStefano,
    Andrew Henderson, Erhan Altay, Bryan Herdliska, all my other funders for their
    support, and my amazing partner, Katie Smith.</em></strong></center><center><a
    href="http://www.patreon.com/bePatron?rid=120769&u=296170&patAmt=7.00#/r120769">*Would
    you like to see your name here too?</a><em></center><center>*</em>If you feel
    others need to read this article, please click “Recommend”**</center></p></blockquote>'
  :author: Basic Income
  :topic: human
- :url: https://medium.com/dropbox-design/illustrating-a-more-human-brand-part-1-e1cfe3c28d9?source=search_post---------7
  :title: Illustrating a more human brand (part 1)
  :content: "<p>Illustrating a more human brand (part 1)</p><h3>The history of Dropbox
    brand illustration</h3><p>For years before I joined the Dropbox illustration team,
    I assumed the Dropbox illustrators had it easy. I imagined talented people getting
    to make great work for an organization that believed deeply in the power of illustration.
    I mean, what could be chiller than drawing all day? To a casual observer, it’s
    easy to take for granted the pioneering role Dropbox has played in brand illustration.
    But over the last ten years, there have been a handful of times when illustration
    as a Dropbox hallmark has been in jeopardy. It took nearly eight years of speaking
    up in meeting rooms and drafting late night email essays to fight for illustration’s
    power. This is because illustration has long existed at ground zero of Dropbox’s
    identity crisis: are we consumer or enterprise? Do we speak to those audiences
    in different ways? It’s a historic tension that still hovers over our illustrators
    today.</p><p><img src=\"https://cdn-images-1.medium.com/max/3600/1*dGPuAQHrBS0WkEvbiM5w7Q.jpeg\"
    alt=\"Illustrating a human brand by Brandon Land\"><em>Illustrating a human brand
    by Brandon Land</em></p><p>In December 2016, I received the honor of leading the
    Dropbox illustration team. My first goal has been to understand the decisions
    that were made to cement Dropbox’s artistic legacy. As the illustration team looks
    forward to evolving and pushing the brand forward, I think it’s important that
    we understand the legacy and carry it with us while we advance. In preparation
    for this historical recollection, I had the pleasure of interviewing some of the
    influential creative minds that helped define and prove illustration’s heavyweight
    status. Through these interviews, I found a powerful story about taking giant
    leaps of faith against opposing ideas and data to prove the power of illustration.</p><h2>In
    the beginning, fast and cheap win</h2><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*jTt9TDR5vFF7qfy1.png\"
    alt=\"*First illustration drawn for Dropbox by Jon Ying*\"><strong>First illustration
    drawn for Dropbox by Jon Ying</strong></p><p>Illustration at Dropbox comes from
    very humble beginnings. Jon Ying, who does not consider himself an illustrator,
    drew a piece for a blog post about some bugs they were working on. The image portrayed
    a stick figure chasing after a bug with the intent to smash it to oblivion, and
    it sparked an intensely debated existential question for the company. Who are
    we? Should we be just like all the other respectable companies and play it safe?
    Or should we try something interesting and make a statement? The decision to publish
    the stick figure wasn’t easy, but it was an important decision. Users can be fickle.
    If they didn’t trust that Dropbox was going to take care of their needs, they
    were out. The drawing could actually cost the company. However, Jon believed simple
    universal drawings connected on a human level and inspired empathy when things
    might not be working right. He believed it could even help retain customers through
    some tough times.</p><blockquote><h1>“I made a drawing for an email campaign sent
    to people that recently downgraded from Dropbox Pro. The image we made was a weeping
    PC with a thought bubble with a broken heart inside. People started writing in
    and tweeting to apologize for hurting us by leaving. Many even resubscribed.”
    –Jon Ying</h1></blockquote><p>In the early days of a company, these decisions
    can become hard to untangle, as it’s often two heartfelt, passionate beliefs pitted
    against each other. This decision was hashed out in an absurdly unconventional
    way. It took a long, drawn-out Dance Dance Revolution battle between the two founders.
    It lasted 23 hours straight. No sleeping. No eating. No bathroom breaks. No mercy.
    Ok, not really — it was actually just a meeting, but in that meeting, co-founder
    Arash Ferdowsi passionately fought for Jon Ying’s vision. He believed Jon was
    on to something. After all, in the early days, Jon worked in customer support.
    He was the most connected to the users, and Jon was damn good at connecting with
    an audience at a universally human level.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*Sz6UkEw6WAEiWQlr.png\"
    alt=\"Take your stuff anywhere by Jon Ying\"><em>Take your stuff anywhere by Jon
    Ying</em></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*BAlIC7AFVW0g0HDt.png\"
    alt=\"Keep your files safe by Jon Ying\"><em>Keep your files safe by Jon Ying</em></p><p>Arash
    and Jon’s passionate vision was met with extreme doubt. There were just no data
    or examples to support that the style would be a good decision. At face value,
    what Jon Ying was asking was pretty nuts. If you can think back to nearly a decade
    ago, no one was using illustration in brands like Dropbox, especially not stick
    figure comics. Drew Houston (CEO and co-founder) had good reason to think it was
    a silly idea. But that’s the thing: it <em>was</em> a silly idea. It didn’t take
    itself too seriously. It wasn’t beholden to corporate trends or best practice
    marketing and sales knowledge. It thumbed its nose at being put in a box.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2800/0*hx4fYIiL99h_BYqk.png\" alt=\"Illustration
    by Jon Ying\"><em>Illustration by Jon Ying</em></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*ExNQPgQM247gBne2.png\"
    alt=\"Illustration by Jon Ying\"><em>Illustration by Jon Ying</em></p><p>What
    the style did have, however, was a well-reasoned argument for why it would work.
    Jon’s solution worked well for the biggest realities Dropbox was facing at the
    time. The product was young, it went down almost daily in 2008, and the team needed
    a quick and easy way to communicate with customers in a way that felt like there
    were humans working on the problems. At the time, Dropbox couldn’t afford an illustrator,
    and there was a need for a lot of communication at the time. Jon explains, “There
    actually wasn’t much inspiration or thought that went into the early day illos.
    They were in many ways driven by necessity, chance, then reflection.” In those
    days, debate about using stick figure drawings often resolved itself through the
    classic engineer’s agreement: try it, and if the data didn’t support it, they
    wouldn’t do it again. Fortunately for us, people really responded to Jon’s work.
    They even went so far as to take time out of their days to email about the drawings.
    It was a hit!</p><blockquote><h1>“Dropbox’s brand thinking at the time was, should
    we try doing the gradienty bullshit every other 2008 tech company is doing? No,
    it’s lame. Should we try hiring a full-time illustrator? No, we’re poor. Should
    we just stick with this style for now? Yeah, Jon seems to draw clever stuff, it
    works with the product experience, and we can keep paying Jon the same money for
    doing two jobs. What a schmuck.” –Jon Ying</h1></blockquote><p><img src=\"https://cdn-images-1.medium.com/max/2780/1*KC_CBsFfn-5NsTlSqlCnrg.png\"
    alt=\"Psychobox illustration by Jon Ying\"><em>Psychobox illustration by Jon Ying</em></p><p>As
    the need for illustration grew, one of the next challenges was to draw something
    for the 404 page. This would be the first introduction of illustration inside
    the actual product. The only problem was that Jon didn’t have any drawing supplies
    other than plain ol’ pens. Arash decided the two of them would go to the Walgreens
    downstairs and buy some art supplies. They picked out some colored pencils and
    drawing paper, and <em>voilà</em>, the Dropbox aesthetic was born. Jon drew a
    version of the Dropbox logo <em>à</em> <em>la</em> Escher, and it was a big hit
    internally. However, despite internal praise, there was another roadblock for
    Jon to overcome. Creating silly drawings on the blog or in emails is one thing.
    But putting them in the product? That’s crazy talk! Convention was loud and clear
    that this color pencil drawing of insanity was an unprofessional approach. 404
    pages are a moment of frustration, and Jon was making a joke? The challenge had
    to be raised again: “Do we want to be a company that does this kind of crazy stuff?”</p><blockquote><h1>“The
    early days were all about irreverence. It worked for our users, but perhaps more
    importantly, it attracted the type of employees we wanted at the time. An illustration
    of a raptor, eagle, and shark was used on our jobs page. Many of our early hires
    went on to say ‘your jobs page was different from every other one out there, and
    I saw myself being a part of what you were trying to do.’” –Jon Ying</h1></blockquote><p>At
    this point, you probably see a pattern here. A desire to be innovative or different
    will always meet its counter argument to do what is expect and tested. This debate
    will go on in every company throughout time. However, Jon wasn’t disheartened
    by the debate, and he didn’t take his initial wins for granted. He understood
    illustration would be continually on the chopping block, so Jon took every chance
    he could to build meaning and value around the work that he did. “We weren’t simply
    being irreverent for irreverence’s sake,” Jon remembers. “There were other factors
    of familiarity and approachability that we wanted to capture. A kind of a ‘you
    can do it, too’ spirit we wanted the user to feel.”</p><p>As the style progressed,
    one of the main components of meaning for the work was to connect with people
    in a more personal way. Jon started to build a means of conversation within his
    work by using Easter eggs in the product. These little moments of discovery made
    people say, “Oh, that’s clever.” And more importantly, it invited them to think,
    “I’m clever for getting their reference. I relate to the people who work at Dropbox.”
    Jon had started building relationships and friendships with people through his
    art. There were even times when strangers literally walked up to Dropbox employees
    on the street and gave them a hug. That type of relationship was traditionally
    considered impossible to create with a company.</p><p><img src=\"https://cdn-images-1.medium.com/max/2798/0*cMUIRI3cqxkuN0tI.png\"
    alt=\"Version history by Jon Ying\"><em>Version history by Jon Ying</em></p><p>Jon’s
    philosophy didn’t just stop at an emotional connection. He also built out a philosophy
    for the thinking behind the work. Jon wanted Dropbox’s users to understand the
    imaginative journey one must take to build this type of product, and how hard
    Dropbox employees worked to make it a reality. Dropbox needed users’ trust, and
    that meant sharing a piece of Dropbox’s culture with them. To do that, Jon devised
    a fantasy world where metaphor and pop culture collided to put a fun spin on what
    was ultimately an extremely boring concept — cloud storage. When the need arose
    to communicate about version history, Jon could use a DeLorean from <em>Back to
    the Future</em>. When talking about mobile capabilities, Jon would show characters
    enjoying life with all their files in a kite. He crafted compelling reasons around
    the use of illustration, so illustration would be in a solid position the next
    time it was second-guessed.</p><p><img src=\"https://cdn-images-1.medium.com/max/2800/0*U_wxCRpQ4FRptGmL.png\"
    alt=\"Illustration by Jon Ying\"><em>Illustration by Jon Ying</em></p><p>Jon contributed
    many conceptually interesting illustrations, but he is the type of guy who loves
    to take a new thing head on. Soon enough, he became involved in too many parts
    of the company to keep up with the illustration work needed. It was time to hire
    some new talent. In a serendipitous series of events, Dropbox had recently contracted
    <a href=\"http://ryanputn.am/\">Ryan Putnam</a> to build out a design/illustration
    system for their <a href=\"http://rypearts.com/portfolio/dbx/\">big DBX event</a>.
    His work was amazing, and Dropbox decided to bring Putnam on board to help with
    the giant mountain of work. This is the beginning of what has fondly been referred
    to as the “Putnam era.”</p><h2>Systemizing aesthetics and the feedback process</h2><p><img
    src=\"https://cdn-images-1.medium.com/max/2800/0*HqQTyb-5_C-7QGYj.png\" alt=\"Illustration
    for DBX developer’s conference by Ryan Putnam\"><em>Illustration for DBX developer’s
    conference by Ryan Putnam</em></p><p>Dropbox was growing very quickly. The product
    was a budding success, and the need for talent was massive. If you’ve never been
    part of a small company that’s rapidly growing, let me take a minute to describe
    it to you. It’s insanity. Every task, job, problem, success — it’s all brand-new
    to everyone involved. The entire company is making educated guesses while taking
    on responsibilities they never thought they’d be able to effectively help out
    on. This type of growth is a key component to the revolutionary success of the
    tech industry. People aren’t afraid to make mistakes. They’re encouraged to move
    fast and learn quickly what does and doesn’t work. The tough part managerially
    is that everyone’s opinion on everything is valid. For illustrations, this makes
    for a lot of, “We’ll know it when we see it.” That means every illustration becomes
    a monumental effort of meandering through the darkness. Illustration transforms
    from a delightful part of the brand to a battle zone of opinions. This is the
    chaos that quickly started to manifest around the time Ryan Putnam joined the
    team.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*dTAwvEt0DwTkvJhVcXz7UA.png\"
    alt=\"Cupcake illustration by Ryan Putnam\"><em>Cupcake illustration by Ryan Putnam</em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/0*h8b3O2ha8EM1HczU.png\" alt=\"*Illustration
    by Ryan Putnam*\"><strong>Illustration by Ryan Putnam</strong></p><p><img src=\"https://cdn-images-1.medium.com/max/2800/0*_4aiMCIAVTfCvSxO.png\"
    alt=\"*Illustrations by Ryan Putnam*\"><strong>Illustrations by Ryan Putnam</strong></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2800/0*3dGVVRrkVkNjnl7z.png\" alt=\"*Illustrations
    by Ryan Putnam*\"><strong>Illustrations by Ryan Putnam</strong></p><p>Putnam was
    a generalist, which was perfect for Dropbox at the time. He designed and illustrated
    for products, marketing needs, blogs, internal comms, etc. The sheer volume and
    variety of the design work needed was pretty staggering. Putnam needed to move
    quickly, so he leaned on an illustration style he was most comfortable with. Putnam’s
    style was warm and approachable. It was a logical evolution for the Dropbox brand,
    but at the same time, designers <a href=\"http://byalicelee.com/\">Alice Lee</a>
    and <a href=\"https://twitter.com/house\">Allison House</a> were also creating
    illustrations in their own styles. There was a moment in time where work was made
    in any style an artist wanted. There was minimal oversight because there was so
    much to be done. If it felt good enough, it made it through. There was a lot of
    talented people creating great work. But as it turns out, that’s not a sustainable
    model for a brand. If anything goes with the illustration, then anything also
    goes with the feedback, and chaos started to take root.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*Oyqw1tTwdcX5Vl4d.png\"
    alt=\"*Illustration system design by Ryan Putnam*\"><strong>Illustration system
    design by Ryan Putnam</strong></p><blockquote><h1>“Putnam is a real class act.
    One gets very few opportunities to work with someone as thoughtful, kind, and
    hardworking as him.” –Jon Ying</h1></blockquote><p>Where Dropbox’s illustration
    once had a focused point of view, it was starting to jump all over the place.
    It started to seem like an afterthought as opposed to something deeply integrated
    into the company’s DNA. Putnam understood that if an illustration system lacks
    a strong point of view, then everyone and their dog will impose their uninformed
    opinions. This was causing chaos where a single piece of feedback could set projects
    back or even derail them completely.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*juT4WmqwzpGFESR-.png\"
    alt=\"*Illustration brand guidelines by Putnam*\"><strong>Illustration brand guidelines
    by Putnam</strong></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*1kCz1Musx2N85j9b.png\"
    alt=\"*Illustration brand guidelines by Putnam*\"><strong>Illustration brand guidelines
    by Putnam</strong></p><p>Putnam saw the writing on the wall. Illustration needed
    to be systemized, or it was going to be replaced. He dedicated his tenure at Dropbox
    to building a guide for how illustration was created and measured. This included
    a specific point of view on how the company gave feedback about illustration.
    It turns out that a lot of meetings go into educating people about brand best
    practices. Like, a gross amount. And on top of those meetings, Putnam and the
    team still had to get their actual design work done. At this point, Putnam started
    walking the same path that Jon Ying had to pave in the beginning. To ensure illustration’s
    place in the brand, they had to work twice as hard.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*O6nAllSNveMb3LWR.png\"
    alt=\"*Illustration by Zach Graham*\"><strong>Illustration by Zach Graham</strong></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2740/0*9Kp6r8UkM7VcDZJy.png\" alt=\"*Illustration
    by Zach Graham*\"><strong>Illustration by Zach Graham</strong></p><p>Putnam started
    exploring an aesthetic system that could be scalable as they hired new designers.
    He understood that in order to scale their team, a foundation needed to be created
    for illustrators to work on top of. Dropbox brought in illustrator/designers <a
    href=\"http://zachiszach.tumblr.com/\">Zach Graham</a>, <a href=\"http://justinpervorse.com/\">Justin
    Pervorse</a>, and <a href=\"http://lindaeliasen.com/\">Linda Eliasen</a> to help
    scale the design language. Ultimately, Zach and Putnam dedicated their focus to
    creating an updated brand style that honored Jon Ying’s style while also evolving
    it into a more refined digital style. They created an easy-to-replicate system
    of using objects to tell stories. Often the objects had smiles. Zach jokes, “At
    one point, I think everything had a smile.” People tend to give a nostalgic self-aware
    laugh at the smile period. There was a real mandate for the illustrations to convey
    delight. There was a lot of delight. \U0001F600</p><p><img src=\"https://cdn-images-1.medium.com/max/2800/0*U8XcE8hMP65XpPAS.png\"
    alt=\"Illustrations by Ryan Putnam and Zach Graham\"><em>Illustrations by Ryan
    Putnam and Zach Graham</em></p><p>The emerging system was working. They started
    scaling it out to other products and pressure testing it as a broader language.
    Putnam was able to build a precedent for the work that served as common ground
    for feedback and furthered illustration’s role in the company. This was a major
    win for the company’s ability to understand and communicate ideas through illustration.
    There was one big issue, though. Through the process of systemization, the style
    had lost a key component. It lost its whimsical, conceptual nature. Where Jon
    Ying once strove to never show a folder or file, the style now was primarily object-based.</p><p><img
    src=\"https://cdn-images-1.medium.com/max/2800/0*ANJ2rWv1f8jPGaqM.png\" alt=\"Design
    and illustrations for Dropbox’s now retired product Carousel.\"><em>Design and
    illustrations for Dropbox’s now retired product Carousel.</em></p><p>The contrast
    between a more objective style and purely conceptual pieces is very interesting.
    In Jon’s days, the product was very conceptual. The user’s stuff was now in the
    cloud. People didn’t even know what “the cloud” was. It was brand-new, and the
    company needed to sell why this was something worth moving toward. It was closer
    to a lifestyle connection. Whereas during the Putnam era, people understood the
    cloud, but they needed to understand the practical uses of Dropbox. This meant
    that mentally connecting one’s environment to Dropbox was helpful in showing its
    usability. But ultimately, one or the other wasn’t good enough for the team. They
    constantly thought about what was working and how to take it to the next level.</p><h2>Proof
    of concept</h2><p><img src=\"https://cdn-images-1.medium.com/max/2800/0*F5Fwlz-1nuwb9wi4.png\"
    alt=\"Access denied illustration by Zach Graham\"><em>Access denied illustration
    by Zach Graham</em></p><p>While Dropbox was growing rapidly, new hires were brought
    in from a variety of other successful companies. Leadership got deeper and wider,
    and illustration had a new crop of people to prove itself to. The new illustration
    system was working, but so much changes quickly in startups. They have to zig
    and zag constantly. This meant new hires across the company could only use what
    they had learned from other companies to inform what should happen at Dropbox.
    After all, they were hired for their past successes. The only problem was that
    Dropbox wasn’t like any other company. The people that joined Dropbox wanted to
    work there because it has a certain <em>je ne sais quoi</em>, but they had a hard
    time translating that internal culture to how the brand should sit in the world.
    The company had gone full circle, and illustration was up for another round of
    “survive the chopping block.” Some believed deeply that it was time for Dropbox
    to feel more in line with what other companies were doing. The problem was that
    most companies relied heavily on pictures of boring people just looking at their
    phones in a work scenario. Lame!</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*QQf_VCoySU2NYR7j-HUEUQ.png\"
    alt=\"Fish bowl illustrations by Zach Graham\"><em>Fish bowl illustrations by
    Zach Graham</em></p><p>Illustration had to step up its game. It had to serve as
    an emotional connection that far outweighed what other companies were doing with
    photography. One chance to prove that emotional power arose with the need to create
    a “please don’t downgrade” page. The illustration appeared when users wanted to
    downgrade from a paid plan to the free plan. Dropbox needed something to help
    users understand they get a whole lot of bang for their buck. Zach explains, “I
    wanted to figure out how to make people feel guilty without being an asshole.
    At that time there were smiley faces on everything, and I didn’t want to do that.
    I didn’t want to draw a file crying. It wasn’t going to work.” Zach came up with
    the idea of two differently sized fishbowls. He portrayed the concept of space
    without connecting it to files at all. He wanted you to remember how sad your
    pet would be if they were in a cramped space. You don’t want to be the type of
    person that lives in a cramped space, right? Apparently, people can really relate
    to the emotions of a fish, because it convinced people not to click that final
    “Yes, I’m sure” button. Some say this illustration saved the company millions
    of dollars. Others say, “Whoa, cool, people say it was that much?” Either way,
    I wasn’t able to track down the actual statistic for its success, but its impact
    on the future of illustration was quite significant.</p><p><img src=\"https://cdn-images-1.medium.com/max/2000/0*Uzhm6QugUWYAxUQV.jpg\"
    alt=\"*Illustration about building on top of Dropbox by Zach Graham*\"><strong>Illustration
    about building on top of Dropbox by Zach Graham</strong></p><p>While the fishbowl
    pieces served as the sacrificial lamb on the chopping block, the big debate about
    if we should move away from illustration roared on. Illustration had proven itself
    useful in certain battles, but there was still the question of whether it was
    the right tool to win the war. “The sentiment was that the company needed to grow
    up,” Zach recalls. “I agreed with that sentiment. We did need to grow up. But
    illustration can be conceptually sophisticated, and that’s what I was interested
    in.”</p><p><img src=\"https://cdn-images-1.medium.com/max/2256/0*pUO-dUeCbl8hsoaO.png\"
    alt=\"*Illustration by Zach Graham*\"><strong>Illustration by Zach Graham</strong></p><p>At
    the time, it was difficult to find the right answer between both sides. Although
    there was a tighter system for understanding illustration, there was no clear
    way for other parts of the org to understand what brand was or how it should be
    approached. There wasn’t a brand team at the time. There was just a pool of designers
    working on pretty much everything. While Zach’s conceptual illustrations were
    still proving their worth on the growth and monetization side, it started to become
    clear that there needed to be a defined process for making brand decisions. The
    contrasting ideas about illustration’s worth were not going to solve themselves.</p><blockquote><h1>“What
    we saw that marketing didn’t see yet was that illustration was starting to become
    really popular in brands, and as it was emerging, people were already ripping
    off what we are doing. It was obvious that we were doing something right. So we
    wanted to push that.” –Zach Graham</h1></blockquote><p>Every pillar of the company
    had specific needs, and there wasn’t a clear path for anyone to work alongside
    brand experts to create meaningful work for those needs. They didn’t understand
    that a brand’s major power was that it could make hard-to-understand concepts
    relatable at a gut level. Without brand, decisions boiled down to the hard numbers
    and research coming from marketing and finance. It’s hard to beat those numbers
    with a mere, “Trust me, this will work.” It’s easy to blame one side or the other
    for the rough patch in the relationship, but really both sides were 100 percent
    right in what they were trying to do. They all wanted what was best for Dropbox.
    The real problem was that there was no organizational structure around how they
    could build a brand correctly. Perhaps even more importantly, there wasn’t anyone
    dedicated to educating people about the long-term powers of the brand as a whole.</p><blockquote><h1>“In-the-moment
    decisions often have a disproportionate impact on the future. Drew could’ve said
    no to psychobox. Ryan Putnam could’ve not drawn the cupcake. We could’ve gone
    with colored geometry over broken line. We could’ve switched 100 percent to photos.
    But maintaining our illustrations’ essence is a deliberate tradeoff we’ve fought
    for, because it’s the closest proxy in our brand for the wonder and joy people
    feel when they accomplish things with Dropbox.” –Jon Ying</h1></blockquote><p>As
    with all good two-part stories, I must end part one with a cliffhanger. Will our
    illustrative do-gooders be able to find a better way of working? Is illustration
    at Dropbox doomed? Tune in next time as I tell the tale of the creation of the
    brand studio, demanding bosses, and a whole lot about the conception of our modern-day
    Dropbox illustration style. There might even be Razor scooter battle on the stage
    of the SF Opera! I guess you’ll have to wait and see…</p><p><em>Update: Still
    feel the need for more juicy illustration history? <a href=\"https://medium.com/dropbox-design/illustrating-a-more-human-brand-part-2-d2e9494cc8a3\">We
    published part two here</a>.</em></p><p><em>Want more from the Dropbox Design
    team? Follow our <a href=\"https://medium.com/dropbox-design\">publication</a>,
    <a href=\"https://twitter.com/dropboxdesign\">Twitter</a>, and <a href=\"https://dribbble.com/dropbox\">Dribbble</a>.
    Want to make magic together? <a href=\"https://www.dropbox.com/jobs/design?gh_src=2x3mfd1\">We’re
    hiring</a>!</em></p>"
  :author: Dropbox Design
  :topic: human
- :url: https://humanparts.medium.com/why-don-t-worry-about-money-just-travel-is-the-worst-advice-of-all-time-72d065fb186b?source=search_post---------8
  :title: Why “Don’t Worry About Money, Just Travel” Is The Worst Advice Of All Time
  :content: '<p>Chelsea Fagan<em><a href="https://www.flickr.com/photos/dbl90/">D.
    Zampiron</a></em></p><p>I have an internet acquaintance that I’ve been following
    on social media for a little over two years now, an all-around nice, smart girl
    who blogs and does odd jobs and has recently decided to go back and get a Master’s.
    In Europe. For a degree that, by all reasonable accounts, is probably not going
    to lead to a great job. And she knows this, I think, because she talks about it
    as “an opportunity to learn and expand her mind,” more than any sort of preparation
    for a future career. Which is fine, but the truth of the matter is that she is
    able to enjoy such freedom — to be a wanderer of sorts who enjoys travel, study
    for the sake of study, and long conversations over good dinners — because she
    comes from a good bit of wealth and, if not subsidized entirely, never has to
    worry about her safety net. She won that particular bit of genetic lottery, and
    it’s useless to begrudge her the freedom that fate bestowed on her.</p><p>But
    it <em>is</em> useful — important, even — to begrudge her the attitude that comes
    with it, one that is all too prevalent amongst young people who do not have to
    worry about the foundations of their future financial security: This idea that
    you *must *travel, as some sort of moral imperative, without worrying about something
    as trivial as “money.” The girl in question posts superficially inspiring quotes
    on her lush photos, about dropping everything and running away, or quitting that
    job you hate to start a new life somewhere new, or soaking up the beauty of the
    world while you are young and untethered enough to do so. It’s aspirational porn,
    which serves the dual purpose of tantalizing the viewer with a life they cannot
    have, while making them feel like some sort of failure for not being able to have
    it.</p><p>It’s a way for the upper classes to pat themselves on the back for being
    able to do something that, quite literally, anyone with money can buy. Traveling
    for the sake of travel is not an achievement, nor is it guaranteed to make anyone
    a more cultured, nuanced person. (Some of the most dreadful, entitled tourists
    are the same people who can afford to visit three new countries each year.) But
    someone who has had the extreme privilege (yes, privilege) of getting out there
    and traveling extensively while young is not any better, wiser, or more worthy
    than the person who has stayed home to work multiple jobs to get the *hope *of
    one day landing a job that the traveler will assume is a given. It is entirely
    a game of money and access, and acting as though “worrying about money” on the
    part of the person with less is some sort of trivial hangup only adds profound
    insult to injury.</p><p>I was able to travel, and even though I paid for my life
    abroad with my own work, it was still a result of a healthy amount of privilege.
    I was from a middle-class family who I did not need to support or help financially,
    I knew that I could always slink back to their couch if things didn’t work out,
    and I had managed to accrue a bit of savings while living at home for the few
    months before I left. There are millions of people who have none of these things,
    and even if they wanted to pay for travel on their own, would simply not be able
    to because of the responsibility or poverty they lived with. For even my modest
    ability to see the world, I am eternally grateful.</p><p>And what’s more, I understand
    (perhaps even better after having traveled a good amount) that nothing about your
    ability or inability to travel means anything about you as a person. Some people
    are simply saddled with more responsibilities and commitments, and less disposable
    income, whether from birth or not. And someone needing to stay at a job they may
    not love because they have a family to take care of, or college to pay for, or
    basic financial independence to achieve, does not mean that they don’t have the
    same desire to learn and grow as someone who travels. They simply do not have
    the same options, and are learning and growing in their own way, in the context
    of the life they have. They are learning what it means to work hard, to delay
    gratification, and to better yourself in slow, small ways. This may not be a backpacking
    trip around Eastern Europe, but it would be hard to argue that it builds any less
    character.</p><p>Encouraging that person to “not worry about money,” or to “drop
    everything and follow their dreams,” demonstrates only a profound misunderstanding
    about what “worrying” actually means. What the condescending traveler means by
    “not worrying” is “not making it a priority, or giving it too much weight in your
    life,” because on some level they imagine you are choosing an extra dollar over
    an all-important Experience. But the “worrying” that is actually going on is the
    knowledge that you have no choice *but *to make money your priority, because if
    you don’t earn it — or decide to spend thousands of it on a trip to Southeast
    Asia to find yourself — you could easily be out on the streets. Implying that
    this is in any way a one-or-the-other choice for millions of Americans is as naive
    as it is degrading.</p><p>Everyone needs to forge their own path to financial
    independence and freedom. And perhaps you are lucky enough that your path involves
    a lot of wandering around, taking your time, and trying a bunch of new things
    — because you know that security will be waiting for you at the end of the rainbow.
    That’s fine, and there is no need to feel guilt or shame over your privilege,
    if only because it’s unproductive and helps no one. But to encourage people to
    follow your very rare path, because you feel it is the only way to spiritual enlightenment
    or meaning, makes you an asshole. It makes you the person who posts vapid “inspirational”
    quotes that only apply to a tiny percent of the population who already has all
    the basics covered. And God forbid anyone who needs the money actually *does *follow
    that terrible advice, they won’t be like you, traipsing around South America and
    trying degrees for fun. They will, after their travels are over, be much worse
    off than when they started. And no souvenir keychain is going to make that reality
    sting any less.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*3wopkvEHHT88TI4LYtvjrQ.png"
    alt=""></p><p>Chelsea Fagan is a writer and founder of <a href="http://www.thefinancialdiet.com/">The
    Financial Diet</a>, a blog about personal finance and living better.</p>'
  :author: What Does It Mean to Be a Man?
  :topic: human
- :url: https://medium.com/signal-v-noise/growing-apart-and-losing-touch-is-human-and-healthy-52b5a678fbf5?source=search_post---------9
  :title: Growing apart and losing touch is human and healthy
  :content: "<p>Growing apart and losing touch is human and healthy</p><p>I quit Facebook
    back in 2011 for a lot of reasons, but perhaps the most crucial was to rebel against
    its core mission: Connecting the world. I was over-connected with the world, acquaintances
    and friends from the past, and I wanted out.</p><p>Zuckerberg has repeatedly doubled
    down on the toxic idea that we should only have one self, one persona. That we
    should be the same person in all social circles, lest we be “frauds”.</p><p>I’m
    happy to be a fraud under that definition. I’m not the same person I was in high
    school. Not the same person I was at university. Not the same person I was with
    friends at age 15 as I was with a different group of friends at 21. I’m still
    not the same person with friends in programming as I am with friends in racing
    or with family or old mates from Denmark.</p><p>What allowed me to change and
    prosper was the freedom to grow apart and lose touch with people. It’s hard to
    change yourself if you’re stuck in the same social orbit. There’s a gravitational
    force that pulls you into repeating the same circular pattern over and over again.
    Breaking out of that takes tremendous force.</p><p>In real life, this force is
    mercifully thrust upon you at critical moments for self-discovery and evolution.
    You leave university, and you automatically lose touch with most of the people
    you knew there. It’s not an affront to anyone that this happens. It doesn’t take
    any effort. Everyone accepts that it’s a natural process.</p><p>But Facebook changed
    that. It stunted this natural, gentle process of growing apart and losing touch.
    Now the default is to stay connected with everyone you’ve ever friended forever.
    And to break that connection, you have to actively sever it. Something most people
    don’t like doing, and don’t like having done to them, so it generally doesn’t
    happen.</p><p>Knowing that everything you share will be seen by all these people
    from your past quietly. moderates what you actually share. Becoming someone else
    entails experimenting and failing with new styles and ideas. Not a lot of people
    are so keen to premiere such vulnerable stages of their evolution in front of
    an audience that expects them to be that same person they always were forever.
    I know I wasn’t.</p><p>Neither was I interested in constantly living in the past
    with images and sharing from people whom a natural process would have seen me
    lose that touch with. It felt suffocating on both a conscious and unconscious
    level. Connected in the sense that an anchor is to a boat. A literal drag.</p><p>So
    I pressed the red button and nuked all these synthetic connections from Facebook’s
    orbit in one go.</p><p>It was liberating.</p>"
  :author: Signal v. Noise
  :topic: human
- :url: https://medium.com/the-mission/how-to-become-more-self-aware-in-under-20-minutes-968268c53ffd?source=search_post---------0
  :title: How To Become Ridiculously Self-Aware In 20 Minutes
  :content: <p>Photo by Daria Shevtsova on Unsplash</p><p>Four years ago my sister
    got me something that would dramatically alter the direction of my life.</p><p>In
    fact, it was probably the most influential gift I’ve ever received.</p><p>It would
    help me find my true calling, <a href="https://medium.com/@tomkuegler/how-writing-took-me-from-waiting-tables-to-contributing-at-the-huffington-post-b0402fea2145">become
    a writer at the Huffington Post</a>, and go on a 5-month road trip across America
    by myself.</p><p>You know what it was?</p><p>One of these…</p><p><img src="https://cdn-images-1.medium.com/max/4800/0*RjmtfmCMhe7Y6uuO."
    alt="“A person writing in a life planner with a coffee and a croissant on the
    desk” by [Cathryn Lavery](https://unsplash.com/@cathrynlavery?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>“A
    person writing in a life planner with a coffee and a croissant on the desk” by
    <a href="https://unsplash.com/@cathrynlavery?utm_source=medium&utm_medium=referral">Cathryn
    Lavery</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><p>A
    journal.</p><p>A freaking journal.</p><h2>Here’s 4 Life-Changing Benefits Of Daily
    Journaling</h2><p>You’d think that sitting down and putting pen to paper wouldn’t
    be that life-changing of a practice.</p><p>But trust me, without it you wouldn’t
    be reading this. <a href="https://medium.com/@tomkuegler/what-ive-learned-from-writing-over-500-blog-posts-3258b7cf7068">I
    wouldn’t have 21,000 followers </a>— heck, I wouldn’t even be on Medium.</p><p><center><iframe
    width="560" height="315" src="https://www.youtube.com/embed/xx2R9yV_vs0" frameborder="0"
    allowfullscreen></iframe></center></p><p>So if journaling helped me build a big
    audience online, what can it help you do?</p><p>In this article you’ll learn four
    things..</p><ol><li><p>Why journaling’s the secret to <strong>not getting angry/upset
    much</strong> anymore.</p></li><li><p>How it can show you <em>why certain strategies
    work and don’t work</em>.</p></li><li><p>How writing <strong>can teach you to
    be more “present”</strong> in your everyday life.</p></li><li><p>How journaling
    will help you become <em>incredibly self-aware</em> (the MOST IMPORTANT benefit
    by a long-shot).</p></li></ol><h2>You’ll Stop Getting Angry And Upset</h2><blockquote><p>I
    won’t lie, my first month of journaling was basically just me screaming headfirst
    into a blank book (with my pen).</p></blockquote><p>I was furious at the world.</p><p>Turns
    out I had a lot of anger/frustration to get out, and it showed.</p><p>Then I started
    to notice something..</p><p>I didn’t get angry much anymore. I stopped having
    big showdowns with my friends and actually maintained a mellow sort of mood all
    the time.</p><blockquote><h1>A few weeks later I realized that journaling was
    actually helping me get my frustration out before I could direct it at anybody
    else.</h1></blockquote><p>In short, writing was therapy.</p><p>What a novel idea.</p><p>Pun
    wasn’t intended, but let’s roll with it.</p><h2>You’ll Start Understanding Why
    Certain Strategies Work And Don’t Work</h2><blockquote><p>My <a href="https://findingtom.com/lessons-learned-blogging/">biggest
    quarrel with bloggers</a> these days is that they don’t do enough tweaking. Like,
    if your posts aren’t doing well, maybe you should tweak the headline, the picture,
    the way you write, the formatting, etc. etc.</p></blockquote><p>But they don’t
    do this.</p><p>They just keep doing the same thing over and over again and then
    they wonder why their posts aren’t performing better.</p><blockquote><h1>One of
    my secrets is that I used daily journaling to write down what blog posts I wrote
    that day, how my previous posts performed, and what I think I need to change to
    get more views/fans/highlights/etc.</h1></blockquote><p>That’s all.</p><p>Then
    I came up with ideas, used them, recorded how they impacted future posts, then
    kept getting better and better day-by-day.</p><blockquote><p>Journaling doesn’t
    just have to be about recording your emotional soliloquies on a white page. It
    can be used as a business strategy as well.</p></blockquote><p>This highlights
    a key benefit to journaling that REALLY ties into my last point..it helps you
    <strong>reflect ***(and we don’t do enough of that)</strong><em>.</em>*</p><h2>You’ll
    Actually Live In The Moment More</h2><blockquote><h1>Journaling does this incredible
    fucking thing in that it helps you start to understand how you actually feel about
    friends, family, and co-workers after doing it for a few weeks.</h1></blockquote><p>You
    THINK you know how you feel about these people, but let me assure you that you
    have no freaking clue.</p><blockquote><p>Letting thoughts run through our mind
    can be a visceral experience. We may think back to an old memory, or an old lover,
    or we may think about something that hasn’t happened at all and find ourselves
    in a deep emotional rut because of it.</p></blockquote><p>I call it zoning the
    F out.</p><p>Happens to me all the time.</p><p>Letting your thoughts run through
    your mind is like sifting for gold in a river with your bare hands..</p><blockquote><h1>Something
    incredibly valuable may have been in your hands/possession at some point, but
    you probably never knew it because you don’t have that necessary tools to capture
    it. And like that it’s halfway down the river never to be seen again.</h1></blockquote><p>Journaling
    puts these visceral thoughts on paper so they don’t get away.</p><p>I’m sure you
    can remember a time where you had a conversation with someone and they interrupt
    you and then you can’t remember the REALLY IMPORTANT thing you were about to say
    to them.</p><blockquote><p>Then it bugs you for five minutes and because your
    brain is old now it’s lost forever, never to be seen again.</p></blockquote><p>Same
    thing happens to our thoughts.</p><p>Turns out we have numerous realizations/straight-up
    discoveries about our friends/family that enter and leave our mind in a hurry.</p><blockquote><h1>When
    we write we focus on the details. We write about the little idiosyncrasies of
    an interaction with someone. And most times when journaling we write while the
    interaction is still FRESH in our minds.</h1></blockquote><p>This strengthens
    our observation muscle.</p><p>Then we start looking for little details in our
    next interaction.</p><p>An eyebrow raise. A smile. How they always eat the same
    thing for lunch every day.</p><p>We’re just strengthening that observation muscle
    more and more — it’s something you won’t understand until you start journaling
    for a long time.</p><h2>We Become More Self-Aware</h2><p>Self-awareness is touted
    by self-help gurus like <a href="undefined">Gary Vaynerchuk</a> as one of the
    MOST IMPORTANT traits to have for success.</p><p>Why does journaling increase
    self-awareness?</p><blockquote><h1>Like I said before — letting thoughts run through
    our mind is one thing, but recording them is like stepping in wet concrete.</h1></blockquote><p>The
    outline of our foot is now there forever.</p><blockquote><p>After one month of
    journaling, I stopped getting angry at people. After three months of journaling,
    I knew traveling/adventure was what brought me the most joy. After 8 months of
    journaling, I realized that maybe writing is what I should do for the rest of
    my life.</p></blockquote><p>A lot of people get beaten down by their thoughts.
    Me? I have a full-blown recorded conversation with them. I spar. I find weaknesses
    — flaws. I find opportunities.</p><p>Every time I step in the ring with my mind
    I get hurt, but I find out that much more about myself by the time I’m done.</p><p>Competing
    in a boxing match will always hurt, but there’s also always a winner.</p><p>After
    I got into the habit of daily journaling, I started winning for a change.</p><blockquote><h1>I
    realized I’m actually an ultra-sensitive dude and that maybe I should use that
    instead of shy away from it like “strong male” stereotypes are “supposed” to do.</h1></blockquote><p>I
    realized I’m too loyal. I realized I’m stubborn, and prideful, and a stupid young
    person. I realized I said shit two months ago that I disagreed with later, and
    that caused me to humble myself big time.</p><blockquote><p>It also helped me
    realize that what we believe now isn’t always what we’re going to believe tomorrow.</p></blockquote><p>Feelings
    are like the seasons — they come and go. People come and go. Family normally always
    stays.</p><p>I started getting slapped in the face by life itself. I started getting
    challenged. I started realizing that I don’t have it all together and I realized
    that you just can’t BE somebody else — you have to be yourself and accept that
    you just aren’t like that guy or girl you admire.</p><blockquote><h1>I realized
    all these things — some of the hardest truths about life — alone in a quiet room
    with nothing but a pen and a journal.</h1></blockquote><p>Everybody wants to better
    themselves. They make grand plans to do so and it almost always falls apart.</p><p>I
    promise you the quickest way to bettering yourself is to write.</p><p>If you want
    to speed that up, try writing online.</p><p>Here you aren’t just sparring with
    your mind, you’re sparring with other people’s minds in the comments and they
    aren’t afraid to tell you you’re dead wrong.</p><p>In fact, a lot of people quite
    enjoy it.</p><p>So here’s to writing — the thing that’s made me who I am, and
    the thing that’ll make me who I’ll be tomorrow.</p><blockquote><p><em>Want to
    build an audience of your own on Medium? I have a free 5-day email course called
    “</em><em>Your First 1,000 Followers</em><em>” that will teach you how I did it!
    <a href="https://app.convertkit.com/landing_pages/290945">Sign up for it right
    here</a>.</em></p></blockquote>
  :author: Mission.org
  :topic: self
- :url: https://medium.com/the-mission/how-to-activate-extreme-self-confidence-and-destroy-chronic-anxiety-and-fear-d8c678b16010?source=search_post---------1
  :title: How to Activate Extreme Self-Confidence and Destroy Chronic Anxiety and
    Fear
  :content: '<p>How to Activate Extreme Self-Confidence and Destroy Chronic Anxiety
    and Fear</p><p>When I was growing up, I had virtually no self-confidence.</p><p>A
    chronic stutter had convinced me to keep my mouth shut; better not speak at all
    than speak and get laughed at.</p><p>Heavy pornography usage had eroded my ability
    to connect with people; I would frequently make huge conversational gaffs when
    I’d try to hold a conversation. “<em>Look out, huge butt coming through!</em>”
    I cackled stupidly as a girl I liked walked past me to her seat during a football
    game.</p><p>Do you ever just want to go back in time and…repeatedly smack your
    face with your shoe?</p><p>Most people don’t have high self-confidence. A life
    lived for others and no real effort to improve has left them wildly insecure,
    full of self-doubt and confusion.</p><p>The solution is confidence and self-belief.
    But these aren’t innate gifts, as most people might think. Motivational speaker
    David Schwartz once wrote:</p><blockquote><h1><em>“All confidence is acquired,
    developed. No one is born with confidence. Those people you know who radiate confidence,
    who have conquered worry, have acquired their confidence, every bit of it.”</em></h1></blockquote><p>If
    you want to activate extreme self-confidence and finally eliminate chronic worry
    and anxiety, you need to build it yourself.</p><p>Here’s how.</p><h2>Trade Your
    Mediocre Behaviors For Those of Successful People</h2><blockquote><p>“The key
    to becoming world-class in your endeavors is to build your performance around
    world-class routines.” -Darren Hardy</p></blockquote><p>Most people constantly
    practice mediocre, substandard routines and behaviors.</p><p>There is a distinct
    difference between how successful and unsuccessful people operate. They think,
    speak, and carry themselves very differently.</p><p>Successful people with high
    self-confidence weren’t just born that way — they became that way. NYT Best-Selling
    author Grant Cardone once said, “<em>Success is not something that happens to
    you, it’s something that happens because of you and the actions you take.</em>”</p><p>Success
    and self-confidence must be grown, nurtured, and trained. Anyone from any background,
    regardless of upbringing/social class/ability can cultivate this skill.</p><p>It
    requires deliberate and intentional training, though. Like any skill, it’s grown
    over time. Those who put in the work, get the results.</p><blockquote><h1>To produce
    extraordinary results, you don’t need an unlimited budget; you just need a better
    tool kit.” -Tim Ferriss</h1></blockquote><p>If you want to have the type of confidence,
    focus, and charisma that enables you to achieve your ideal lifestyle, you need
    to model your behavior on others who’ve already succeeded.</p><p>Want 100% financial
    independence? Find a mentor who’s already done it.</p><p>Want to own your business?
    There are dozens of incredible people who teach how to do it online, for free.</p><p>Want
    a strong, healthy body? I think you see where I’m going with this.</p><p>Trade
    in your outdated and unhelpful actions with the actions a successful person would
    do.</p><p>There are people, *right now, *living the life you want. Read their
    stuff. Buy their courses. Follow their instructions.</p><p><strong>If you want
    a different life, you need to do things differently.</strong></p><blockquote><p>“One
    of the greatest turning points in my life occurred when I stopped casually waiting
    for success and started to approach it as a duty, obligation, and responsibility.”
    -Grant Cardone</p></blockquote><p><img src="https://cdn-images-1.medium.com/max/13440/0*U0dCsLdlc7Vsksgf."
    alt="Photo by [Justyn Warner](https://unsplash.com/@justynwarner?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em>Photo
    by <a href="https://unsplash.com/@justynwarner?utm_source=medium&utm_medium=referral">Justyn
    Warner</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><h2>Act
    While You Feel Fear</h2><blockquote><p>“Act while you feel fear rather than waiting
    until you feel unafraid.” -David Richo, How to Be An Adult</p></blockquote><p>The
    world’s top salespeople still dread picking up their phone sometimes.</p><p>The
    world’s most accomplished athletes still get nerves before big games. Bill Russell,
    one of the greatest players in NBA history (winner of 11 championships in 13 years)
    often vomited before big games due to nerves and anxiety.</p><p>When asked about
    how he felt when he released a movie, legendary film director Martin Scorcese
    made this remark:</p><blockquote><h1>“If you don’t get physically ill seeing your
    first rough cut, something is wrong.”</h1></blockquote><p>The world’s top performers
    act while they are afraid.</p><p><strong>Don’t wait until the fear is gone. Act
    while you feel fear.</strong></p><p>I remember being in love with this cute girl
    in middle school. I barely spoke a word to her in class. I was terrified of rejection,
    of stuttering over my words if I revealed my feelings.</p><p>On the <em>last</em>
    day of school, I was determined to tell her. I can still remember how profoundly
    terrified I was as I walked up to her group of friends (why are girls always surrounded
    by an army of friends!) and I nervously asked if I could speak with her alone.</p><p>I
    told her I liked her, and asked if she’d be my girlfriend.</p><p>She said yes.
    I think we awkwardly hugged, and that was it.</p><p>The ending isn’t important
    (we didn’t speak to each other all vacation, and then she broke up with me through
    her friends when school started, OK?).</p><p>But if I had waited until I didn’t
    feel afraid? I would have <em>never</em> talked to her. I would have regretted
    it for years.</p><p>Author Mark Manson once joked, “<em>How do you get rid of
    ‘runner’s block?’ You go for a f</em>cking run.*”</p><p>If you’re scared of something,
    the easiest way to gain confidence is, well…just do it.</p><p>There are some <em>phenomenal</em>
    writers and authors out there that we’ve never heard of — they’re too scared to
    publish. As writer <a href="undefined">Jon Westenberg</a> once wrote: <strong><em>“You
    just have to outrun everyone who doesn’t have the guts to publish their work.”</em></strong></p><p>Act
    while you feel fear. Even if you get unceremoniously dumped, you’ll feel better
    and better.</p><h2>Seek Problems, Don’t Avoid Them</h2><blockquote><p>“One of
    the major differences between successful and unsuccessful people is that successful
    people look for problems to resolve, whereas the latter make every attempt to
    avoid them.” -Grant Cardone</p></blockquote><p>What happens when you avoid problems?</p><p>You
    develop a bad reputation for dumping your work onto somebody else. Your personal
    integrity is chipped away. Fear and anxiety begin brewing; “<em>Will this come
    back to haunt me later?</em>” you wonder. Your peace of mind is lost.</p><p>But
    what happens when you decide to seek problems?</p><p>You become someone with the
    sterling reputation of a “problem-solver.” You attract respect and admiration.
    “<em>The world gives to the givers and takes from the takers,</em>” Adam Grant
    wrote in his book, *Give and Take. *You become someone people trust. Help naturally
    flows to problem-solvers — even if you don’t succeed!</p><p>The reason most people
    struggle with self-confidence is because they’ve proven to themselves over and
    over that they “can’t do it.” They’ve tried eating healthier, exercising, being
    more productive, drinking less, but nothing seems to work.</p><p>If you were a
    business, would a customer trust you’d follow through on your word?</p><p>The
    answer is no for more people. To remedy this, you need to start building trust
    in yourself again. Your word must be your bond. If you say you’ll do something,
    that <em>means</em> something.</p><p>So seek problems out. Give yourself some
    reps. Failure doesn’t matter; Seth Godin once said, “If I fail more times than
    you, I win.”</p><p>What matters is the practice. This builds up your self-confidence
    and self-trust.</p><p><img src="https://cdn-images-1.medium.com/max/11520/0*p_6ci7_R9MpbKAX1."
    alt="[Jordan McQueen](https://unsplash.com/@jordanfmcqueen?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em><a
    href="https://unsplash.com/@jordanfmcqueen?utm_source=medium&utm_medium=referral">Jordan
    McQueen</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><h2>Most
    People Aren’t Self-Confident — So Don’t Do What Most People Do!</h2><blockquote><p>“When
    they zig, you should zag, and you’ll win every time.” -Ramit Sethi, NYT Best-Selling
    author and entrepreneur</p></blockquote><p>Most people aren’t full of confidence
    or self-belief.</p><p>Quite the opposite, in fact. Most people are insanely insecure.
    They are heavily preoccupied in what others think of them. They act to please
    others, and their primary motivations are “keeping up” and “looking cool.”</p><p>Whenever
    I fall into the rhythms that are common or “popular,” I start to feel that fear
    and anxiety again. Things like:</p><ul><li><p>I need to keep up an image on social
    media</p></li><li><p>I need to make sure I have a cool-enough answer at my high
    school reunion for, “So what have you been up to?”</p></li><li><p>I need a better
    haircut so people will admire me fondly</p></li></ul><p>It’s all a game. None
    of it matters. It only leaves you feeling more insecure.</p><p>So if most people
    are insecure, scared, anxious, and fragile…</p><p><strong>Don’t do what other
    people do!</strong></p><p>“<em>If you keep living like the way you are now, you
    will continue to produce the same life you already have</em>,” wrote prolific
    motivational speaker Jim Rohn. If you want a different life, you need to do things
    differently.</p><p>If you want to eliminate your anxiety and fear, then don’t
    look for answers from what author Hal Elrod calls the “Mediocre Majority.” They’re
    just as lost as you are, even if they’re great at pretending they aren’t.</p><p>When
    most people zig one way, you should zag the other way.</p><p>Choose your role
    models carefully. Those with the loudest voices rarely offer the wisest insights.
    In my years in 12-step programs for recovery, getting a “sponsor” (a guide for
    the difficult path ahead) is crucial. The best advice given to me about choosing
    a sponsor was to just <em>find someone who has what you want.</em></p><p>Do you
    want the same insecure, boisterous, superficial life most people have? Or do you
    want the real thing, full of quiet self-confidence and an inner pride?</p><p>Then
    find someone who has what you want, and ignore the rest.</p><h2>What Doesn’t Add
    to Your Healing Subtracts From It</h2><blockquote><p>“If your lifestyle does not
    add to your healing, it will subtract from it.” -Benjamin Foley</p></blockquote><p>Is
    your lifestyle full of positive, supportive, healing influences?</p><p>Or is it
    full of garbage that drags you down and prevents you from growing?</p><p>Most
    people have several negative influences in their life that are dragging them down.
    “All around you is an environment that is trying to pull you down to Second-Class
    Street,” author David Schwartz once said.</p><p>These influences — environment,
    people, media, behaviors — prevent you from evolving into better versions of yourself.
    It’s your responsibility to cut them from your life.</p><p>If it’s not helping
    you, it’s likely hurting you.</p><blockquote><h1>“You cannot hang around negative
    people and expect a positive result.” -Darren Hardy</h1></blockquote><p>Strangely,
    most people try to fill their life with all sorts of “things” to remove the fear.
    But for the most part, more things means more anxiety. It’s more upkeep, more
    debt, and more things draining your attention.</p><p>As my friend <a href="undefined">Niklas
    Goeke</a> once wrote, “<a href="https://medium.com/personal-growth/minimalism-will-not-make-you-happier-627c83c788e8">minimalism
    will not make you happier.</a>” But less stuff is almost always better.</p><p>I
    gave away most of my clothes. I don’t buy “trinkets” or “doo-dads,” things that
    have no real value. Prolific blogger James Altucher claims he only owns “<a href="http://www.businessinsider.com/james-altucher-choose-yourself-author-owns-15-things-2016-8">15
    things</a>,” ensuring his mind is focuses and unencumbered.</p><blockquote><p>“I
    wonder what it is that the more we have, the more we become prisoners at the thought
    of losing it, rather than setting us free.” -Nirmalya Kumar</p></blockquote><p><img
    src="https://cdn-images-1.medium.com/max/11520/0*c7WE-Sg3KOD6docT." alt="[Andressa
    Voltolini](https://unsplash.com/@desnorteeu?utm_source=medium&amp;utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&amp;utm_medium=referral)"><em><a
    href="https://unsplash.com/@desnorteeu?utm_source=medium&utm_medium=referral">Andressa
    Voltolini</a> on <a href="https://unsplash.com?utm_source=medium&utm_medium=referral">Unsplash</a></em></p><h2>In
    Conclusion</h2><p>Most people struggle with big levels of anxiety and fear. It’s
    uncommon to see high levels of self-confidence; people notice the person who is
    secure and comfortable in their own skin.</p><p>You can be that person. Even if
    you’re not there yet, start by modeling your behaviors around people who already
    have what you want.</p><p>Act while you still feel the fear; it’s not going away,
    so act anyway. Trust me — you’ll feel better after.</p><p>Seek problems out. Start
    proving to yourself you can handle problems and you won’t back down.</p><p>Remember
    — most people are full of tremendous anxiety and self-doubt; don’t do what most
    people do!</p><p>If you want to activate extreme self-confidence and eliminate
    anxiety and fear, then start living a new life with new behaviors that will make
    that possible.</p><h2>Ready to Level-Up?</h2><p>If you want to become extraordinary
    and become 10x more effective than you were before, check out my checklist.</p><p><a
    href="https://anthonymoore-ext.clickfunnels.com/get-extraordinary-checklist-optin">Click
    here to get the checklist now!</a></p>'
  :author: Mission.org
  :topic: self
- :url: https://writingcooperative.com/4-ways-to-get-high-paying-writing-work-dont-self-publish-badfa6b07ae2?source=search_post---------2
  :title: 4 ways to get high-paying writing work — don’t self-publish.
  :content: '<p>Photo by Art Lasovsky on Unsplash</p><p>Most creatives don’t understand
    one, simple truth:</p><blockquote><h1>Turning what you love into a business involves
    being good at business.</h1></blockquote><p>I write full-time for a living — a
    luxury I enjoy because I’m just as much of a business person as I am a writer.</p><p>While
    I learned <a href="https://www.thriftbooks.com/w/the-elements-of-style-by-eb-white-william-strunk-jr/249214/?mkwid=s5F8Qd4T0%7cdc&pcrid=70112885352&pkw=&pmt=&plc=&pgrid=21326561472&ptaid=aud-376656233455%3apla-294813786956&gclid=CjwKCAiAy-_iBRAaEiwAYhSlA0Bhq4Nl1GJztND6J4K5s0InbUZravV4C73Axt1kBE-gXkBvD027HRoCuAAQAvD_BwE#isbn=020530902X&idiq=1233221">The
    Elements of Style</a>, I also learned <a href="https://www.amazon.com/Million-Dollar-Consulting-Professionals-Practice/dp/1259588610">Million
    Dollar Consulting</a> (not affiliate links).</p><p>My business acumen said <em>don’t
    listen to the “pros” selling overnight self-publishing success</em>.</p><p>Not
    that I don’t want to self publish — and I’m definitely not condemning it — but,
    without a high number of followers (many thousands) or email subscribers (many
    thousands), self-publishing isn’t likely to earn a livable wage.</p><p>You can
    build a following and email list, and then self-publish profitably. But the likelihood
    that you’ll make money from your first book (immense amount of effort) is extremely
    low.</p><p>Even if you’re a best-seller in some random category no one has ever
    heard of — people don’t search for keywords they’ve never heard of.</p><p>You
    could invest money into ads for your self-published work, but then, you’d likely
    be far in the red before you start to make money. You’d be lucky to break even.</p><p>Or,
    you might write a dynamite book on your first try (highly unlikely) and sell the
    shit out of it without any marketing effort whatsoever (highly unlikely).</p><p>I
    asked myself — <em>would a smart business person gamble all that writing time
    and effort on something so unlikely to pay off?</em></p><h3>A better way to make
    money writing</h3><p>Here are a few mediums I’ve used to generate a significant
    income from my writing. I write or ghostwrite ebooks, blogs, articles, and emails
    for businesses.</p><p>I write for IT/tech companies, but you can choose any niche
    that interests you. I have friends that make money writing for lifestyle companies,
    yoga studios, medical journals, finance firms, law firms, women’s rights orgs,
    etc.</p><p>I was able to build a six-figure writing company with zero professional
    writing experience, zero followers, and zero people on an email list — using the
    tools I’m going to share here.</p><p><strong><em>I have no affiliation with any
    of these tools.</em></strong></p><h2>1. LinkedIn Profinder</h2><p><a href="https://www.linkedin.com/profinder">LinkedIn
    Profinder</a> is one of my favorite tools for finding quality work. You can find
    decent paying gigs with small/medium businesses here. The way it works is that
    you create a profile and enter the type of work you’re looking for (content writing,
    ghostwriting, etc.).</p><p>Then, when companies create proposal requests for those
    types of work, you are notified and can apply to the gig.</p><p>It’s a passive
    medium, meaning, you wait for requests to come to you.</p><h3>Money I made from
    LinkedIn Profinder</h3><p>One-off writing/email project for $3k.</p><h2>2. Contena</h2><p><a
    href="https://www.contena.co/">Contena</a> is a job board that aggregates all
    the writing jobs posted on the web and puts them into one place. You can create
    alerts for yourself for specific job types like how well they pay, what niche,
    etc.</p><h3>Money I made from Contena</h3><p>Client 1: more than 0.25 USD per
    word for more than 6 months. Multiple articles per month. Total earnings about
    $10k.</p><p>Client 2: more than 0.25 USD per word for few projects sporadically
    for a year. Total earnings about $14k.</p><h2>3. Sending your own pitch 2X per
    week</h2><p>This is by far the best way to make money as a writer. Any time a
    company sends out an RFP or posts to a job board, thousands of writers see it
    and apply. If you send a pitch to a company, you’re likely the only person pitching.
    There’s much less competition.</p><p>You need to pitch in bulk. Make it a goal
    to pitch at least 100 companies per week. Ask to write for their blog. Find companies
    in industries you’re interested in writing about (i.e., fitness/lifestyle, tech
    startups, women’s health, etc.).</p><p><a href="https://medium.com/@kayla.lee/20-minute-lead-gen-hacks-that-doubled-my-pipeline-1a03f605009c">I
    wrote this article</a> for salespeople, but writers can use it to learn to send
    pitches in bulk.</p><h3>Money I made from sending a pitch</h3><ul><li><p>7 regular
    clients buying multiple articles/ebooks per month. Monthly income varies from
    $3–6k depending on the number of projects.</p></li><li><p>1 retainer client at
    $2k/mo.</p></li></ul><h2>4. Get the cheapest WeWork (or other coworking space)
    membership</h2><p>If you <a href="https://www.wework.com/workspace/on-demand/we-membership">join
    WeWork for $45/mo</a>nth, you have access to their online platform. This platform
    is full of business connections and leads. I got more clients out of the platform
    than I got by working in the space.</p><h3>Money I made from WeWork app</h3><ul><li>Retainer
    for email writing and marketing. Total yearly earnings is about $20k. I’ve had
    this client for more than 2 years.</li></ul><h2>If you want to write for a living</h2><p>You
    need to be open-minded about the types of work you can do to earn a decent wage.</p><p>A
    lot of writers feel bummed when they read about writers who aren’t as skilled
    making lots of money. But, if you’re a highly-skilled writer, you should be gleeful
    that other, less-skilled writers make more than you. That only means you can earn
    much more.</p><p>If you want to make money writing, you need to read about the
    business of writing. <a href="https://writingcooperative.com/the-tactics-i-used-to-make-4k-my-first-month-as-a-freelance-writer-1aeae9efd35b">Learn
    from the writers who are making money</a>.</p><p><img src="https://cdn-images-1.medium.com/max/2198/1*eLY7z6NuxjwFyI1T-dwXcQ.png"
    alt="Helping each other write better. [**Join us](https://medium.com/p/54901adf5325/)**."><em>Helping
    each other write better. <a href="https://medium.com/p/54901adf5325/">**Join us</a></em><em>.</em></p>'
  :author: The Writing Cooperative
  :topic: self
- :url: https://medium.com/darius-foroux/struggle-with-self-discipline-try-forming-these-habits-168bdc3ae510?source=search_post---------3
  :title: Struggle With Self-Discipline? Try Forming These Habits
  :content: '<p>Without discipline, we give up easily</p><p><img src="https://cdn-images-1.medium.com/max/4096/1*ttO7mV012zJmWraAsjK6Bg.png"
    alt=""></p><p>Self-discipline is the ability to make yourself do things even if
    you <em>don’t</em> want to do them. That’s one of the most important qualities
    in life.</p><p>Especially in 2020, since we’re all forced to work and spend more
    time at home. There’s not much we can do outside of the house. That requires self-discipline.
    <em>A lot</em> of discipline.</p><p>We can’t travel, eat out, shop comfortably,
    watch movies at the cinema, go to concerts, and so forth. And yet, we’re expected
    to behave like good people. We’re expected to work remotely, stay in shape, participate
    in video calls, take online courses, keep in touch with family, you name it.</p><p>Without
    self-discipline, we will revert back to giving up. Because whether you’re aware
    of it or not, we’re all headed towards chaos. That’s the natural direction of
    life.</p><p>We need self-discipline to fight back. But how do you develop it?
    It remains a complex issue, and no one has the answers. Jocko Willink simply says
    that you must do things and <a href="https://dariusforoux.com/good/">not complain.</a>
    I like that, but for us mortals, it’s not that simple.</p><p>One thing I know
    is that it doesn’t happen overnight. I prefer to focus on habits that lead to
    discipline, instead of focusing on self-discipline itself. So here’s a list of
    habits I’ve adopted that made me more disciplined.</p><h2>Hold yourself accountable</h2><p>If
    you say you’re going to do something, <em>do it</em>. And if you can’t, have a
    good reason. That’s the foundation of self-discipline. But you don’t do things
    so you can prove something to <em>others</em>.</p><p>No, you do it for yourself.
    You hold yourself accountable by writing down your goals, intentions, and actions.
    No one is watching. Just be yourself.</p><p>This doesn’t have to be complicated.
    I write down what I want to do every single day in my journal. Then, at the end
    of the day, I look at what I actually did. When your actions match your words,
    you’re on the right track.</p><h2>Be honest in your communication</h2><p>To yourself
    and to others. Honesty is difficult for most of us because it requires humility.
    We’re often afraid of <a href="https://dariusforoux.com/3-steps-to-personal-freedom/">telling
    the truth</a> because we think we look weak.</p><p>But the opposite is true. When
    you’re not honest, people can tell. As a result, no one will take you seriously.
    We all have weaknesses and issues. There’s no need to hide it. There’s also no
    need to play the victim. Simply stick to the truth.</p><p>When you keep on being
    honest with yourself and others, it’s easier to be disciplined. Because it’s not
    the end of the world when we screw up. I have bad days too. I eat junk food. I
    skip my workouts. But I’m honest about it when I do. That brings me back on the
    right path.</p><h2>Set the right example</h2><p>Never expect people to do something
    you’re not doing. And if you’re doing something others are not doing, don’t expect
    them to do it.</p><p>“What’s that?” I know. It sounds like a paradox. It comes
    down to this: Do the right thing and have zero expectations of others. If some
    people don’t want to do that themselves, it’s not your problem. Keep on setting
    the right example. This is one of the biggest cliches in the world, but let your
    actions speak for you.</p><h2>Improve every day</h2><p>Most people don’t have
    the patience and drive to improve. Recently, a person who bought my writing course
    said it was too much work to improve their writing. No kidding?!</p><p>Of course
    it’s hard to improve yourself. That’s why most people don’t do it. I gave that
    person a refund. It’s not for you. There are enough people who <em>do</em> want
    to improve themselves. If you have the will to improve, you don’t have to worry
    about self-discipline.</p><p>But you need to have a reason to improve. Why do
    you want to get better at a skill? What do you want to use it for? Why do you
    want to get in shape? What will you do when you’re fitter?</p><h2>Think on paper</h2><p>Putting
    your thoughts into words helps you to understand yourself and what you’re doing.
    I often come up with an idea that sounds great in my head.</p><p>But then I put
    my idea into words. I start thinking on paper. I simply write down my thought
    process. I start like this: “I have a new idea. It’s…” By the end of the page,
    I know whether it’s useless or not. Often, my behavior is not a matter of self-discipline
    — or a lack of it.</p><p>Sometimes you don’t do something because it’s not the
    right thing to do. So always think on paper. After you’ve scribbled down your
    thoughts, let it rest, and get back to it a few days later.</p><p>Then, you think
    “this is great” or “this is stupid”. Either way, you win. Why? You used your brain
    as a tool.</p><h2>Do what you can</h2><p>Look, life is far from perfect. We will
    never have the perfect circumstances to work. You know, I wish I lived in a mansion
    on the beach. I wish it never rained when I want to go outside. I wish, I wish,
    I wish. It’s all fun and games. But in life, we must do what we can with what
    we have.</p><ul><li><p>Tired? Do what you can.</p></li><li><p>Fired? Do what you
    can.</p></li><li><p>Got to pay your bills? Do what you can.</p></li><li><p>Shitty
    house? Do what you can.</p></li><li><p>No friends? Do what you can.</p></li></ul><p>(Fill
    in your excuse)? <em>Do what you can</em>. <a href="https://dariusforoux.com/good/">Complaining
    is for losers</a> who have <em>zero</em> self-discipline.</p><h2>Look ahead, very
    far ahead</h2><p>It will not always remain summer. Life moves in cycles. Sometimes
    it’s great for a long time. And sometimes it’s bad for a long time. Things happen.
    Economies collapse. Jobs disappear. Natural disasters happen. Pandemics shut down
    life. You name it.</p><p>The best way to deal with all of it is to be prepared.
    Train your body and your mind. Build a cash buffer. <a href="https://dariusforoux.com/financial-and-emotional-freedom/">Get
    rid of excess</a>. Life is very long.</p><h2>Live NOW</h2><p>But none of the above
    means you should <em>always</em> think about the future. Life happens NOW.</p><p>Working
    from home, reading a book, going for a walk, spending time with loved ones; all
    those things happen right now. You’re not helping yourself by being lost in your
    thoughts.</p><p>You only help yourself by being disciplined about living in the
    present. I remind myself of this several times a day.</p><p>Did you know that
    living in the present is a <em>skill</em>? <a href="https://amazon.com/dp/B077NJWFR3">You’ve
    acquired it once you’re aware of your thoughts</a>. That’s all. So next time you’re
    preoccupied, clenching your jaw, and not paying attention to what’s in front of
    you, snap out of it. “Just like that?”</p><p>Yes, just like <em>that</em>. Get
    back to what matters most: The one thing that’s right in front of you.</p><p><em>This
    article was originally published on <a href="https://dariusforoux.com/self-discipline/">DariusForoux.com</a></em></p>'
  :author: The Blog Of Darius Foroux
  :topic: self
- :url: https://medium.com/personal-growth/5-habits-of-highly-self-aware-people-8e0799986e16?source=search_post---------4
  :title: 5 Habits of Highly Self-Aware People
  :content: '<p>You won’t find happiness or success unless you find yourself first</p><p><img
    src="https://cdn-images-1.medium.com/max/2800/1*ragRUR5Zcrlco9o8W-INnA.jpeg" alt="Photo
    by [lehandross](https://www.pexels.com/@lehandross-1253599?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)
    from [Pexels](https://www.pexels.com/photo/woman-holding-disposable-cup-2930722/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels)"><em>Photo
    by <a href="https://www.pexels.com/@lehandross-1253599?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">lehandross</a>
    from <a href="https://www.pexels.com/photo/woman-holding-disposable-cup-2930722/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels">Pexels</a></em></p><p>In
    <a href="https://tim.blog/2020/02/06/brene-brown-striving-self-acceptance-saving-marriages/">a
    recent podcast interview</a> with Tim Ferris, Brene Brown made a fascinating claim:
    <strong>The reason there’s so much hate and unhappiness in the world is because
    people lack self-awareness.</strong></p><p>It’s a bold statement, but the reasoning
    behind it is solid:</p><ul><li><p>We all experience pains and traumas of one kind
    or another as children, leaving us vulnerable and afraid.</p></li><li><p>To protect
    ourselves, we develop ‘emotional armor’ in the form of psychological defense mechanisms.
    We use sarcasm, for example, to avoid being vulnerable.</p></li><li><p>Even though
    these defense mechanisms may have been useful at a young age, by the time we reach
    adulthood, their side effects are seriously sabotaging our lives in the form of
    broken relationships, addictions, narcissism, and even violence.</p></li><li><p>These
    unhelpful behaviors persist and grow because we don’t see them. And so we plod
    along in a daze of unhappy denial, continuing to make ourselves and the people
    around us miserable.</p></li></ul><p>Even if you were fortunate enough not to
    have suffered any major traumas as a child, <strong>everybody has vulnerabilities,
    insecurities, and emotional blindspots.</strong> And at a certain point, it’s
    impossible to grow into higher levels of happiness and success if those insecurities
    — and the defense mechanisms resulting from them — go unaddressed.</p><p>As Tim
    Ferris said in his interview with Brene: *You’re going to suffer either way. The
    only question is whether you do it in the darkness or in the light. *While facing
    up to the bright light of self-awareness isn’t easy, it’s possible for anyone.
    Because…</p><blockquote><h1><em>Fundamentally, self-awareness isn’t a trait you’re
    born with; it’s a set of habits you can learn to cultivate.</em></h1></blockquote><p>In
    my work as a psychologist, I get to see the full spectrum of self-awareness —
    from primitive denial to hard-earned <a href="https://nickwignall.com/self-reflection/">self-reflection</a>
    and wisdom. And among those who have achieved a high level of self-awareness,
    I’ve observed a handful of common habits and practices.</p><p>In the rest of this
    article, we’ll look at these 5 habits of highly self-aware people and learn how
    we can cultivate them in our own lives. Whether your goal is to achieve a little
    more happiness and peace of mind in your life or bolster your performance and
    effectiveness in your work, improving your self-awareness is key.</p><h2>1. They
    listen more than they talk.</h2><p>When it comes to self-awareness, you can’t
    simply think your way into it.</p><p>Of course, there’s nothing wrong with deliberate
    self-reflection. In fact, it probably <em>will</em> facilitate self-awareness
    to a degree. But it won’t be *sufficient *for building self-awareness because
    we’re social creatures who learn primarily through each other.</p><p>From babbling
    out our first words as toddlers to graduating from college, most of our learning
    happens socially — toddlers imitate their parents just as students imitate their
    mentors and advisors. Even the notion of the solitary sage, alone in a tower studying
    dusty tomes is actually highly social — books are other people’s voices and ideas
    made permanent!</p><blockquote><h1><em>The quest for self-knowledge is a fundamentally
    social endeavor.</em></h1></blockquote><p>But simply being around other people
    won’t do the trick. True self-awareness comes from genuine interaction with other
    people, from conversation. But to get there you need to be able to listen. To*
    really* listen. And real listening can be a surprisingly difficult thing to do.</p><p><strong>The
    key to gaining meaningful self-awareness through listening is to manage your own
    thoughts during a conversation.</strong></p><p>It’s hard to truly listen when
    you’re formulating your own ideas and only halfway paying attention to theirs.
    Which means <a href="https://nickwignall.com/good-listener/">building the habit
    of being a good listener</a> is mostly about learning to undo unhelpful habits.</p><p>Practice
    letting go of your own narcissistic impulses and cultivating curiosity instead.
    Ironically, by bending your attention outward, you’re far more likely to stumble
    on something useful about yourself.</p><blockquote><h1><em>Most people do not
    listen with the intent to understand; they listen with the intent to reply.</em></h1><h1><em>―
    Stephen R. Covey</em></h1></blockquote><h2>2. They’re curious about their own
    minds.</h2><p>Self-aware people have a habit of thinking about their own patterns
    of thought.</p><p>Just like a good scientist is curious about the world and lets
    their natural curiosity and observations guide later theorizing and experimentation,
    self-aware people have a curiosity about their own minds and inner world. For
    example:</p><ul><li><p>They find it curious that guilt was the first emotion they
    experienced after getting cut off on the freeway rather than anger or fear.</p></li><li><p>They
    notice a pattern of pessimistic thinking in certain contexts and optimism in others.</p></li><li><p>They
    wonder about the overarching beliefs that motivate their behaviors.</p></li></ul><p>Now,
    before you rush to assume that maybe some people are just more curious and self-reflective,
    while others are more outward focused and practical, let me tell you a little
    bit about my work as a therapist…</p><p><strong>My entire job description basically
    comes down to helping people become more curious about their inner lives.</strong>
    Because when you’re curious you begin to see patterns, and when you see patterns
    you begin to understand, and once you really understand, only then is it possible
    to build lasting change.</p><p>Of course, some people do walk into my office with
    higher and lower levels of baseline self-curiosity. But most of them don’t have
    a ton of it. And yet, we’re still able to make good progress because curiosity
    about oneself is something that can be built with time and practice.</p><p>The
    trick to cultivating self-curiosity is to realize that we’re all naturally curious
    — including about ourselves — but for many people, that innate curiosity has been
    suppressed by a competing <a href="https://nickwignall.com/negative-self-talk/">habit
    of self-criticism</a>.</p><blockquote><h1><em>It’s hard to be curious about yourself
    when you’re constantly judging yourself.</em></h1></blockquote><p>If you want
    to alleviate the overly-judgmental attitude toward your own mind and allow your
    natural curiosity to rise up, practice being more gentle with yourself. Watch
    your habits of self-talk and practice <a href="https://nickwignall.com/cognitive-restructuring/">re-framing
    the way you talk to yourself</a> in gentler, more compassionate terms.</p><p>This
    doesn’t mean becoming irrationally positive and naive. It’s about being realistic
    and kind to yourself. It’s about treating yourself the same way you would treat
    a good friend: with gentleness and honesty.</p><p><a href="https://nickwignall.com/negative-thoughts-self-compassion/">Cultivate
    gentler self-talk</a> and you’ll make space for your natural curiosity to take
    root. And greater self-awareness won’t be far behind.</p><blockquote><h1><em>The
    mind is not a vessel to be filled, but a fire to be kindled.</em></h1><h1><em>―
    Plutarch</em></h1></blockquote><h2>3. They look for emotional blindspots.</h2><p>We
    all have emotional blindspots — parts of our emotional lives that, because they’re
    especially painful, we tend to ignore. Often, we’ve been ignoring them for so
    long that we don’t even know they’re blind spots.</p><p>Here’s an example:</p><p>I
    had a client once, we’ll call James. <strong>James came to see me because he was
    getting into a lot of conflict at work but he didn’t know why.</strong> He knew
    that things were tense at work and often people seemed to not want to work with
    him, but he wasn’t aware of any obvious reason.</p><p>In our first session, James
    told me (half sarcastically) that his boss had told him to be sure and mention
    is “passive-aggressive streak.” I asked James what he thought of that and he simply
    shrugged his shoulders.</p><p>Over the next few meetings, it became clear to me
    that James was experiencing a lot of anger and frustration at work. But interestingly,
    he wasn’t very aware of it. He acknowledged getting “annoyed” from time to time,
    but he never once even used the word “angry” to describe himself at work — even
    though he was often describing a situation where almost anyone would probably
    acknowledge being angry.</p><p>I also learned that <strong>growing up James had
    an alcoholic father who used to rage and be violent when he was drinking.</strong>
    After a few difficult conversations on the topic, James began to see that, because
    he was afraid of turning out like his dad, he had built up the habit of burying
    his anger — sometimes with sarcasm and humor, sometimes with distractions, and
    often by simply calling it by a different name like “stress” or “annoyed,” a common
    issue called <a href="https://nickwignall.com/intellectualized-emotions/">intellectualized
    emotion</a>.</p><p>To his credit, once James realized this connection — that avoiding
    anger was a leftover coping mechanism from childhood that was seriously impacting
    his life — he began making major changes. Most importantly, he acknowledged anger
    as an emotional blindspot and began proactively looking for it. For example, anytime
    he caught himself describing how he felt as “annoyed” or “stressed,” he used that
    as a cue to ask whether there wasn’t really <a href="https://nickwignall.com/secret-life-of-anger/">some
    stronger anger</a> behind those descriptions.</p><p>Not only did this help James
    work out a lot of his issues on the job, but he reported with much pride and enthusiasm
    how it had helped in all sorts of other areas of his life. In particular, he described
    how the habit of looking for emotional blindspots had helped him realize that
    he was also, to a lesser extent, avoiding anxiety in his relationship with his
    wife.</p><p>Whenever he felt anxious in the relationship, he had a habit of withdrawing
    and becoming distant, which was slowly taking a toll on his marriage. But his
    newfound habit of looking for emotional blindspots lead him to this and he was
    able to work through it pretty quickly, the result being a surge in intimacy and
    satisfaction in his marriage.</p><p><strong>It can be scary to even acknowledge
    that you have emotional blind spots, much less have the courage to face up to
    them and investigate them.</strong> But the self-awareness and ultimately freedom
    that comes from doing so can be life-changing.</p><blockquote><h1>Who looks outside,
    dreams; who looks inside, awakes.</h1><h1><em>― Carl Jung</em></h1></blockquote><h2>4.
    They ask for feedback (and take it well).</h2><p>People who are genuinely self-aware
    have the humility to understand that they can’t always see themselves objectively.
    And that often the best way to be more objective about yourself is through the
    lens of other people.</p><p>The trick here is that there is no trick: <strong>If
    you want to see yourself through other people’s eyes you must ask.</strong> It’s
    that simple.</p><ul><li><p>Are you frequently getting into conflict at work? Identify
    a co-worker whom you respect and ask for their honest opinion about the situation.</p></li><li><p>Does
    your spouse keep telling you that you don’t listen? Ask some else in your life
    you’re close to (parent, best friend, mentor) whether you can come across as not
    listening well.</p></li><li><p>Or maybe the situation is more general: Maybe you
    just feel a little dissatisfied with your life and suspect that it has something
    to do with you but you can’t put your finger on it. Again, look for someone in
    your life who knows you well whom you respect and ask them if they see any patterns
    or tendencies that could be a cause.</p></li></ul><p>What gets in the way of most
    of us asking for good feedback is that we’re afraid of getting uncomfortable news:
    We’re afraid to hear that we’re not as good a salesman (or lover) as we think.</p><blockquote><h1><em>Asking
    for feedback isn’t rocket science. But it is scary.</em></h1></blockquote><p>The
    most direct way through this fear is to ask yourself straight-up: <em>Would I
    rather have a small but forceful blast of criticism now or years and decades of
    nagging self-doubt and underhanded criticism that comes from avoiding facing my
    shortcomings?</em></p><p>But even if you steel yourself and decide to ask for
    honest feedback, you have to be ready to take it well. And <strong>taking feedback
    well means managing your defensiveness.</strong></p><p>No matter how self-aware
    or <a href="https://nickwignall.com/emotionally-mature/">emotionally mature</a>
    you think you are, getting criticism always hurts. And anytime we get hurt — physically
    or emotionally — we tend to do one of two things: fight or flee. Either we try
    to overwhelm our own painful feeling by making the other person look bad (fight)
    or we dismiss their feedback out of hand as invalid (flee).</p><p>In either case,
    we’re doing ourselves a double disservice:</p><ol><li><p>You’re not really thinking
    about and absorbing the feedback. And if you’re not doing that, well, what’s the
    point!</p></li><li><p>When you get defensive, you teach other people that you
    can’t take criticism well. This means that in the future when there’s a piece
    of feedback you really need, people in your life are more likely to either withhold
    that feedback or lie and say something to make you feel better because they’re
    afraid of you getting defensive.</p></li></ol><p>To sum up, <strong>one of the
    best ways to learn more about yourself and improve self-awareness is to get objective
    feedback from other people.</strong> But in order to do this, you must be willing
    to tolerate the discomfort of receiving criticism and work to avoid defensiveness
    at all costs.</p><blockquote><h1><em>You can’t achieve excellence in life if you
    fear opinion.</em></h1><h1><em>― Janna Cachola</em></h1></blockquote><h2>5. They
    reflect on their values.</h2><p>Highly self-aware people have a habit of regularly
    reflecting on and considering their values. While they’re always trying to be
    aware of what they might be unconsciously <em>avoiding</em>, they’re also striving
    to be clear about what they <em>want to move toward</em>. But this can be surprisingly
    difficult…</p><p>For one thing, it’s easy to move toward things that look and
    feel important or valuable but may not be, perhaps because the tradeoffs would
    be too great:</p><ul><li><p>Chasing the next promotion or salary bump at work,
    even though it means spending even less time with your family and friends.</p></li><li><p>Enrolling
    in grad school (and taking out another $80K in student loans) because you’re not
    sure what else to do and your parents will be impressed because, hey, more education!</p></li><li><p>Buying
    that new iPhone because it’s awesome and surely it will make you more productive
    even though you’re not saving for retirement at all.</p></li></ul><p>The point
    is, <strong>the line between genuine values and false values can be surprisingly
    thin.</strong> And even if it is clear, the gravity of immediate wants and desires
    is often far stronger than that of long-term values and aspirations. All of which
    means…</p><blockquote><h1><em>It’s essential to regularly clarify what we’re really
    chasing after in life.</em></h1></blockquote><p>I had a client once who, in order
    to make sure her marriage was healthy and going in the right direction, created
    a little ritual with her husband:</p><p><em>Each year on their anniversary, they
    went out to a nice dinner and checked in with each other about A) what they thought
    was going really well in their relationship, B) what they thought needed work,
    and C) what their dreams together were.</em></p><p>It’s a great example of a small
    but powerful habit that increases self-awareness about values and has a real,
    measurable impact on quality of life.</p><p>If this whole discussion of reflecting
    on your values sounds lofty and complex and maybe a little intimidating, start
    with a bucket list. Set aside half an hour some Saturday morning and sit down
    with a nice cup of coffee or tea, a pen, and a blank sheet of paper. And just
    start jotting down things you’d love to accomplish or learn or do or generally
    dream about.</p><p>This is a great exercise to prime the pump on values clarification
    and get you thinking more about what’s really important to you in life. In fact,
    just being aware of your values and reflecting on them from time to time is a
    huge step toward realizing them.</p><blockquote><h1><em>The greater danger for
    most of us lies not in setting our aim too high and falling short; but in setting
    our aim too low, and achieving our mark.</em></h1><h1><em>― Michelangelo Buonarroti</em></h1></blockquote><h2>All
    you need to know</h2><p>Lasting happiness and success require self-awareness.
    If you aren’t aware of the emotional baggage and blind spots holding you back,
    how can you hope to achieve your potential?</p><p>Thankfully, self-awareness is
    a skill that can be cultivated with practice and good habits:</p><p>Listen more
    than you talk.</p><p>Be curious about your own mind.</p><p>Look for your emotional
    blind spots.</p><p>Ask for feedback frequently (and take it well).</p><p>Take
    time to reflect on your values.</p><p><a href="https://nickwignall.com/newsletter/">**Join
    my newsletter to get my newest articles each week →</a>**</p>'
  :author: Personal Growth
  :topic: self
- :url: https://medium.com/better-humans/why-successful-people-choose-self-compassion-over-self-esteem-b89b9c3567c1?source=search_post---------5
  :title: Why Successful People Choose Self-Compassion Over Self-Esteem
  :content: '<p>Self-compassion isn’t about letting yourself off the hook. It’s about
    having a growth mindset that gives you authentic confidence.</p><p><img src="https://cdn-images-1.medium.com/max/3840/1*RQaEvu_FycpP_LQ2LbsGCA.jpeg"
    alt="Credit: Artem Bali via Pexels ([link](https://www.pexels.com/photo/woman-wearing-green-sunglasses-749156/))"><em>Credit:
    Artem Bali via Pexels (<a href="https://www.pexels.com/photo/woman-wearing-green-sunglasses-749156/">link</a>)</em></p><p>For
    the past six years, I’ve been obsessed with the topic of confidence — how to get
    it, how to raise it, and how to keep it. My preoccupation grew out of fierce battles
    with insecurity while growing up, and out of learning to navigate life as a <a
    href="https://medium.com/s/story/the-secret-life-of-a-highly-sensitive-person-e5e49ab4918b">highly
    sensitive person</a> who feels everything more intensely.</p><p>My obsession really
    took hold when I noticed a strikingly similar pattern among my coaching clients.
    Smart and highly accomplished people, they also had thoughts like:</p><blockquote><h1>“I’m
    falling behind in my career.”</h1><h1>“No matter how much I do, it’s never enough.”</h1><h1>“I
    want to start a business, but I fear looking foolish.”</h1></blockquote><p>Anyone
    who has tried to embark on a professional or personal goal is familiar with this
    voice of the inner critic — the one that says things like “you’re not good enough,”
    “this is a stupid idea,” or “nothing will ever work out.”</p><p>Common advice
    tells us to push these concerns away. We’re encouraged to keep hustling, try harder,
    and do better. If you’re like me, that voice is also cautionary. It says if you
    stop pushing to achieve more, you’ll lose your edge, your status, your income,
    and more. Cue <a href="https://en.wikipedia.org/wiki/Cognitive_distortion">catastrophic
    thinking</a>!</p><p>It’s hard to quiet that voice because it speaks <em>some</em>
    truth. Failing to work on your weaknesses leads to blind spots at best and <a
    href="https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect">delusional
    overconfidence</a> on the opposite extreme. There’s also nothing wrong with wanting
    to be confident and ambitious.</p><p>Problems arise, however, when we try to achieve
    happiness solely by raising our self-esteem, which can be fragile. Too often,
    this approach leads to needless suffering and self-criticism.</p><p>The good news
    it that it’s possible to be driven <em>and</em> find inner peace. <strong>You
    do this by cultivating <em>self-compassion</em> instead of striving after higher
    <em>self-esteem</em>.</strong></p><h2>Why Self-Esteem is Not the Key to Confidence</h2><p>Self-esteem
    is <a href="https://en.wikipedia.org/wiki/Self-esteem">defined as</a> your feelings
    about yourself (positive or negative), as well as how you think other people value
    you and feel towards you. In other words, you’re influenced by how you think the
    outside world sees you.</p><p>In order to keep your self-esteem high, you must
    look around and size up your progress versus your peers. These constant comparisons
    trigger stress. The body’s natural fight-or-flight response <a href="http://self-compassion.org/the-physiology-of-self-compassion/">kicks
    in</a>, just as if we we’re being attacked — only it’s all in our head (and our
    heart).</p><p>High-achievers have even more at stake. If you have achieved some
    success, <a href="https://www.verywellmind.com/what-is-cognitive-dissonance-2795012">you
    must work to maintain an image</a> of being competent and effective. This is a
    precarious position. You may perceive any mistake, setback, or flaw as a failure,
    rather than a natural consequence of growth. If you become overly dependent on
    achievement, approval, or praise, your self-esteem can becomes fragile, as if
    it’s a roller-coaster going up and down in response to external circumstances.</p><p>Many
    people try to motivate themselves to be more confident by judging themselves harshly
    (<em>I *</em>need** to be doing better. I <strong>should</strong> be further along
    by now*). If you hold yourself to exacting standards, your negative self-talk
    may be particularly vitriolic. For example, all through my academic years, I can
    remember berating myself for “only getting an A” and telling myself “you should’ve
    earned an A+”. Many top students share this struggle: going on to achieve great
    things, yet facing internal battles. Psychologists call this “<a href="https://www.medicinenet.com/duck_syndrome/article.htm">Duck
    Syndrome</a>”—the appearance of being placid, but with hidden flailing underwater
    to stay afloat. Your accomplishments look good on the outside, but inside there’s
    turmoil.</p><p>Using self-criticism as a motivator is usually ingrained at a young
    age, whether through the school system, societal messages about success, or even
    by <a href="https://melodywilding.com/how-to-overcome-impostor-syndrome/">growing
    up in a home with demanding caregivers</a>. But negative self-talk is not an effective
    way to motivate yourself.</p><p>In her book <a href="https://www.amazon.com/Willpower-Instinct-Self-Control-Works-Matters/dp/1583335080/ref=as_li_ss_tl?ie=UTF8&linkCode=ll1&tag=mewilm-20&linkId=59db08bdf9327c91f8181e0fbd4b93fd">*The
    Willpower Instinct</a><em>, Stanford professor Kelly McGonigal summarizes the
    findings, saying that *</em>“study after study shows that self-criticism is consistently
    associated with less motivation and worse self-control.”** In fact, it shifts
    the brain into <a href="https://www.ncbi.nlm.nih.gov/pubmed/19770047">a state
    of inhibition</a>, which prevents us from taking action to reach our goals.</p><p>Research
    also suggests that self-esteem may not be the confidence-boosting panacea it’s
    always been cracked up to be. Following the “self-esteem movement” of the 1980’s
    and 1990’s, a sweeping meta-analysis <a href="http://assets.csom.umn.edu/assets/71496.pdf">concluded
    </a>that there was no proof of high self-esteem improving academic achievement,
    job success, or health outcomes.</p><p>After observing these downsides of self-esteem
    and self-criticism, psychologists set out in search of a better solution. Now
    a growing body of research points toward <em>self-compassion</em> as a path to
    resiliency and emotional strength.</p><h2>What is self-compassion?</h2><p>Recall
    a time when you encouraged a friend, coached a co-worker, or soothed a child.
    It’s likely that you felt empathy for the person — not pity — and tried to acknowledge
    that life is messy, imperfect, and sometimes filled with pain. Self-compassion
    involves applying this sense of warm, positive regard towards yourself.</p><p>Dr.
    Kristin Neff is an associate professor at the University of Texas Austin, and
    the foremost researcher on self-compassion. She defines the concept <a href="http://self-compassion.org/the-three-elements-of-self-compassion-2/">this
    way</a>:</p><blockquote><h1><strong>Instead of mercilessly judging and criticizing
    yourself for various inadequacies or shortcomings, self-compassion means you are
    kind and understanding when confronted with personal failings — after all, who
    ever said you were supposed to be perfect?</strong></h1></blockquote><p>Self-compassion,
    as defined by Neff, has three key components:</p><ul><li><p>*<em>Self-kindness
    *</em>— being supportive of yourself; treating yourself as you would a family
    member or friend.</p></li><li><p><strong>Common humanity</strong>—an antidote
    for isolation; understanding that everyone makes mistakes and you’re not alone;
    recognizing that suffering is a universal experience.</p></li><li><p><strong>Mindfulness</strong>—observing
    your thoughts and emotions with nonjudgmental awareness; being present in the
    moment even when negative feelings arise.</p></li></ul><p>While self-esteem is
    fixated on how you feel about yourself positively or negatively, self-compassion
    is about having understanding for wherever you’re at right now and embracing a
    full range of thoughts, emotions, and reactions — without judging them as right
    or wrong. It’s about recognizing that your inner voice is trying to protect you,
    and shifting your self-talk to be benevolent, not punishing.</p><p>Why build skills
    for greater self-compassion? Simply put, because it works. Self-compassion gives
    you greater confidence, makes you more resilient, and fosters authentic growth
    in your abilities.</p><h2>The Benefits of Self-Compassion</h2><p>Self-compassion
    <a href="http://self-compassion.org/wp-content/uploads/2016/12/Self-Criticism.pdf">is
    associated with</a> a number of mental health and performance-enhancing benefits,
    including:</p><ul><li><p>Lower levels of depression, anxiety, and rumination.</p></li><li><p>Greater
    ability to cope with negative emotions.</p></li><li><p>More positive emotions
    like happiness, wisdom, and connectedness.</p></li><li><p>Increased optimism.</p></li><li><p>Showing
    more personal initiative.</p></li></ul><p>High-achievers, take note of this final
    point: self-compassionate people are <em>more likely</em> to take action and reach
    their goals. In particular, <a href="http://self-compassion.org/wp-content/uploads/2016/06/Dunne-et-al_2016.pdf">research
    shows</a> that inducing self-compassion helps people stick to a diet, stop smoking,
    and find intrinsic motivation to exercise for fun.</p><p>The biggest misconception
    about self-compassion is that it undermines motivation. When first introduced
    to the concept, many people fear that being kinder and gentler to themselves will
    make them lazy. They fear losing their ambitious drive and competitive edge. The
    opposite is true. Self-compassion is strongly <a href="https://greatergood.berkeley.edu/article/item/the_five_myths_of_self_compassion">associated
    with emotional resilience</a>. Self-compassionate people fear failure less, and
    when they do face setbacks, they are more likely to try again.</p><h2>How to develop
    more self-compassion</h2><p>Interested to see how self-compassionate you are?
    You can take an evidence-based assessment <a href="http://self-compassion.org/test-how-self-compassionate-you-are/">on
    Neff’s website here</a>.</p><p>No matter where you fall on the spectrum, we could
    all stand to be kinder to ourselves sometimes. Here are some science-backed ways
    to boost your self-compassion today:</p><h3>Watch your words</h3><p>For the next
    week, take notice of how often you use words like <em>always</em>, <em>should</em>,
    and <em>never</em>—often indicators of self-criticism. Raising your mindful awareness
    is the first step towards cultivating a more balanced internal dialogue. Changing
    your negative self-talk to be friendlier is a <a href="http://self-compassion.org/exercise-5-changing-critical-self-talk/">core
    skill</a> of self-compassion and can help <a href="https://msutoday.msu.edu/news/2017/talking-to-yourself-in-the-third-person-can-help-you-control-stressful-emotions/">control
    stressful emotions</a>.</p><h3>Try a re-do</h3><p>Take an example of a recent
    situation in which you beat yourself up. Examples might be sending an email to
    the wrong person or botching a work matter. Consider how a self-compassionate
    response would differ. This is a form of <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3278301/">cognitive
    reappraisal</a>. What would you say to a friend or family member who made the
    same mistake?</p><h3>Write a letter to yourself</h3><p>One <a href="https://www.tandfonline.com/doi/abs/10.1080/15298868.2013.840332#.U_J8W7xdWnA">study</a>
    found that adults who wrote a <a href="https://ggia.berkeley.edu/practice/self_compassionate_letter">compassionate
    letter</a> to themselves for one week experienced significantly less distress
    and large increases in happiness for six months. To write a ‘compassionate letter’,
    take something you are unhappy about with yourself, and express acceptance, understanding,
    and encouragement for yourself about it. You might pretend that you’re someone
    who loves you unconditionally—what would they say to you?</p><p>If journaling
    is not your thing, you could also use a tool like <a href="https://www.futureme.org/">FutureSelf</a>
    to practice processing your hopes, dreams, and fears in a more compassionate way.</p><h3>Learn
    to stabilize</h3><p>Overwhelming or painful emotions may arise as you try to be
    kinder to yourself, a phenomenon that <a href="http://self-compassion.org/tips-for-practice/">Neff
    refers to as backdrafting</a>. You may recall times when you felt ignored, rejected,
    or invalidated. Fears came rushing up. When this happens, it’s important to catch
    yourself before you fall back into old habits of using self-criticism as a motivator.
    Instead, create some distance to observe your reactions, using a mindfulness technique
    developed by psychologist Tara Brach: <a href="https://www.mindful.org/tara-brach-rain-mindfulness-practice/">RAIN</a>,
    which stands for Recognize, Allow, Investigate, Natural Loving Awareness. The
    steps to practice RAIN, from <a href="https://www.mindful.org/tara-brach-rain-mindfulness-practice/">Brach’s
    article for Mindful Magazine</a>, are:</p><blockquote><h1><strong>R</strong>ecognize**
    what is going on** — Acknowledge your thoughts and feelings in the moment. <a
    href="https://www.ncbi.nlm.nih.gov/pubmed/17576282">Label them</a>.</h1><h1>Allow
    the experience to be there; just as it is — Pause. Relax your body and your mind.
    Breathe.</h1><h1>Investigate with interest and care — Get curious. Ask questions
    like, “What is this reaction telling me? What do I need most right now?”</h1><h1>Natural
    Loving Awareness—not identifying with the experience. “This practice of non-identification
    means that our sense of who we are is not fused with any limiting emotions, sensations,
    or stories.”</h1></blockquote><p>You can also learn to stabilize by reminding
    yourself to use healthy, realistic self-talk and shift perspecitve. Practice gratitude.
    Recall past times you’ve overcome challenges. Remind yourself of <a href="http://www.apa.org/pubs/journals/releases/psp-pspi0000018.pdf">life’s
    simple pleasures</a>, like a hug, the blue sky on a clear day, or your favorite
    smell.</p><h3>Meditate</h3><p>Neff’s <a href="http://self-compassion.org/category/exercises/#exercises">website
    includes a vast set of guided meditations and other exercises</a> to help you
    work through challenging emotions and develop inner calm.</p><p>Meditation is
    a <a href="https://academic.oup.com/scan/article/8/1/85/1694475">well-known</a>
    method to improve your ability to handle situations in a more rational way. While
    we normally think of this kind of emotional control in terms of regulating outbursts
    with others, it can also help us avoid tendencies to dump or rage at ourselves
    internally.</p><h2>Keep practicing to reap the rewards</h2><p>Like any skill,
    developing self-compassionate takes time and deliberate practice.</p><p>Truthfully,
    it’s a lesson I have to remind myself of frequently. I’ve internalized reframing,
    especially as a valuable strategy to spot my unhelpful stories and acknowledge
    my inner voice, without slipping into comparison and self-criticism. But, I still
    slip into funks now and then. I’m human, after all (which, if you’re paying attention,
    is self-compassion in action!)</p><p>While it’s important to be patient and understanding
    with yourself throughout the process, self-compassion also entails responsibility
    and <a href="https://www.theatlantic.com/health/archive/2016/05/why-self-compassion-works-better-than-self-esteem/481473/">gentle-but-pragmatic
    firmness</a>.</p><p>Self-compassion is not about letting yourself off the hook.
    It’s recognizing that you have the ability to improve and understand the science
    that shows accepting yourself works far better than hating yourself — especially
    if you want to achieve big goals.</p>'
  :author: Better Humans
  :topic: self
- :url: https://forge.medium.com/want-to-improve-your-self-awareness-answer-these-20-questions-94e2f341ec81?source=search_post---------6
  :title: Want To Improve Your Self-Awareness? Answer These 20 Questions
  :content: '<p>‘Knowing yourself is the beginning of all wisdom,’ Aristotle said</p><p><img
    src="https://cdn-images-1.medium.com/max/4242/1*yroVo-5kdH7xybiWsYsuCA.jpeg" alt="Photo:
    Chalabala/Getty Images"><em>Photo: Chalabala/Getty Images</em></p><p>It’s not
    exactly a revelation that self-awareness is a key component of success. In fact,
    we’ve been extolling its importance for thousands of years. The Greek philosopher
    Aristotle, who lived between 384 and 322 BC, once said, “Knowing yourself is the
    beginning of all wisdom.”</p><p>Truly knowing yourself requires serious effort.
    But unfortunately, there’s no set path to self-awareness, no standardized steps
    you can take to reach it.</p><p>That said, taking some time to examine yourself
    — your skills, your desires, your motivations — helps. It’s a way to do the work
    of getting to know yourself better.</p><p>In an effort to become more self-aware
    in my own life, I developed a list of 20 questions to reflect on:</p><ol><li><p>What
    am I good at?</p></li><li><p>What am I so-so at?</p></li><li><p><a href="https://forge.medium.com/when-youre-truly-good-at-your-job-you-want-to-hear-the-ways-you-suck-at-it-6f4ba163d89e">What
    am I bad at?</a></p></li><li><p>What makes me tired?</p></li><li><p>What is the
    most important thing in my life?</p></li><li><p>Who are the most important people
    in my life?</p></li><li><p>How much sleep do I need?</p></li><li><p>What stresses
    me out?</p></li><li><p>What relaxes me?</p></li><li><p>What’s my definition of
    success?</p></li><li><p><a href="https://forge.medium.com/at-work-are-you-an-integrator-or-a-segmenter-a52dd40b7aa0">What
    type of worker am I?</a></p></li><li><p>How do I want others to see me?</p></li><li><p>What
    makes me sad?</p></li><li><p>What makes me happy?</p></li><li><p>What makes me
    angry?</p></li><li><p>What type of person do I want to be?</p></li><li><p>What
    type of friend do I want to be?</p></li><li><p>What do I think about myself?</p></li><li><p>What
    things do I value in life?</p></li><li><p>What makes me afraid?</p></li></ol><p>If
    you want to try it for yourself, answer with the first thing that pops up in your
    mind, and don’t think too hard about the meaning behind a question. Everyone interprets
    them differently. That’s the point.</p><p>Your initial answers aren’t even that
    important. What matters more is that the questions get you thinking, especially
    those that might be <a href="https://forge.medium.com/uncomfortable-truths-about-life-i-never-should-have-ignored-6dfef09059ba">difficult
    or uncomfortable to answer</a>, like “What am I bad at?”</p><p>Now comes the most
    critical part: reasoning. Use the thoughts you’ve assembled to improve your life
    by applying what Aristotle called “logos” — the capacity for rational speech.
    Historian Paul Rahe <a href="https://books.google.com/books?id=Zymp_kM33ZcC&pg=PA21#v=onepage&q&f=false">explained</a>
    the concept of logos best in his book <em>Republics Ancient and Modern</em>. “For
    Aristotle, logos is something more refined than the capacity to make private feelings
    public,” he wrote. “It makes it possible for him to perceive and make clear to
    others through reasoned discourse the difference between what is advantageous
    and what is harmful…”</p><p>That’s what you’re doing in your quest for self-awareness:
    trying to uncover which things about yourself are advantageous and which are harmful.</p><p><strong>Now
    what?</strong></p><p>Once you have an idea of what those things are, act on them.
    Double down on the advantageous stuff and start eliminating the harmful stuff,
    as much as you can. Do more things that make you happy or things you’re good at.
    Avoid things that make you unhappy or things you’re bad at.</p><p>That’s it. That’s
    knowing yourself.</p><p>Don’t take this process too literally. Relationships,
    for example, can make you both happy and sad. That doesn’t mean you should avoid
    getting close to anyone or ditch any relationships that involve sadness. Instead,
    try to avoid the specific things that make your relationships bad — things like
    selfishness, lying, lack of empathy, etc.</p><p>How do you practice logos in daily
    life? Here are some ideas:</p><ul><li><p>*<em>Read philosophy. *</em>If you don’t
    know where to start, I recommend reading a book like <em>The Story of Philosophy</em>
    by Will Durant. Philosophy is reasoning, so if you read more works by philosophers,
    you’ll learn more about how to present and work through ideas.</p></li><li><p>*<em>Become
    neutral in discussions with people. *</em>Don’t just try to prove a point. Always
    try to reason from different points of view.</p></li><li><p><a href="https://forge.medium.com/a-beginners-guide-to-keeping-a-journal-e8db9d0f150f">**Journal,
    and follow through</a> on your thoughts.** Always ask yourself, “Why?” For example:
    John made me mad. Why? Because he lied. Why? Because he didn’t want to upset me.
    Why? Because he cares about me.</p></li><li><p>*<em>Talk, talk, talk. *</em>With
    friends, colleagues, mentors, coaches. Just by vocalizing your feelings, you discover
    new things about yourself. Especially when you talk with people who ask questions
    that make you think.</p></li></ul><p>There you go. That’s my process for self-awareness.
    Introspection is difficult because you must be honest with yourself, and most
    of us prefer to lie because the truth is scary. But since I’ve begun practicing
    self-awareness more deliberately, my life has massively improved.</p><p>Knowing
    yourself makes living easier.</p>'
  :author: 21 Books for a Better You in the 21st Century
  :topic: self
- :url: https://medium.com/@edwardsullivan/11-things-i-would-tell-my-21-year-old-self-a451c7276b04?source=search_post---------7
  :title: 11 Bits of Advice I Would Tell My 21 Year Old Self
  :content: '<p>Costa Rica, 1996</p><p>Today is my 41st Birthday. And while some people
    think I still live like I’m in college, I’ve actually learned a few things in
    my first two decades of adulthood. Here is some advice I wish I got at 21 — or
    at 31. Or even yesterday, because it’s a daily practice to remember this stuff.</p><p>Dear
    Edward,</p><ol><li><p><strong>The Best Places Aren’t In the Guidebook.</strong>
    There are those moments when life asks you to say YES to the unknown. Some of
    my most wonderful memories of traveling around the globe began with a simple decision
    — should I be open to the unknown or not? When we try to plan everything out,
    we preclude the limitless possibilities. Like the time a couple guys I’d just
    met and I trusted a Costa Rican fisherman to take us an hour up the coast to a
    “playa bonita” he said he knew. We ended up having a mile-long stretch of virgin
    beach and one of the sweetest little surf breaks in the world all to ourselves
    for the better part of a week. All because we trusted in the unknown.</p></li><li><p><strong>Get
    Reality Checks from Those Who See Your Highest Self.</strong> Years ago I took
    a job as an international political consultant. I traveled the globe making more
    money than I ever thought possible providing campaign strategy advice to presidential
    candidates of foreign nations. The money and power went to my head, and I started
    to treat people poorly. It took my best friend from college sitting me down and
    telling me I was “turning into a total DB” before I saw what was happening to
    me. Your best friends know the best you. Listen to them.</p></li><li><p><strong>Wear
    Well Made Shoes and Suits That Fit.</strong> Ok, this might seem superficial,
    especially after #2, but bear with me. Like many young men, I went through a phase
    of wearing XL everything — in spite of weighing 165 lbs. This lasted until my
    late 20’s when I bought my first tailored suit and real leather shoes. The difference
    in how I felt and how people regarded me was not subtle. It was like putting on
    10 years of stature and prestige. So, don’t waste money on cheap suits and shoes.
    You’ll just look…cheap. Instead, get 2 impeccable suits (1 navy blue, 1 dark gray/charcoal)
    and two pairs of Italian or English shoes (1 brown, 1 black), and wear the hell
    out of them. <strong>ProTip</strong>: Wear the brown shoes with the blue suit,
    and the black shoes with the gray suit, for god’s sake.</p></li><li><p><strong>Cancel
    Meetings You’re Not Ready For.</strong> In one sense, we’re never truly “ready”
    for any meeting. We all need to take risks and just go for it. This isn’t about
    those meetings. This is about those meetings you really shouldn’t be having because
    too much is at stake and you might totally blow it. When I was 25 I had an important
    meeting with a member of Congress at 8am on a Friday. Unfortunately, Thursday
    night got away from a colleague and me, and I showed up to the meeting in no condition
    to be speaking to anyone. If you are going to lose more ground by having the meeting
    than by canceling, just cancel.</p></li><li><p>*<em>Talk to the Pretty Girl. *</em>Or
    the handsome boy. Or the VC you want to raise money from. Or the TV personality
    you always admired. I wasted years of my life not talking to the people I really
    wanted to get to know. I told myself stories in my head that they’d never want
    to talk to me. That I wasn’t cool enough, handsome enough, funny enough, smart
    enough. And then I realized that all those people were thinking the same thing
    about themselves. So, I started being more proactive. I talked to the pretty girl
    at the party. I told the TV personality I admired him and wanted to work for him.
    And sure, sometimes I got turned down, but most often, I got exactly what I was
    looking for — a date, a job, etc. Because life is sending you perfect pitches
    all the time. All you have to do is swing the bat.</p></li><li><p><strong>Ignore
    the Haters.</strong> Sadly, there will always be people who don’t love themselves
    enough to love you. There will always people who see how you choose to live, where
    you travel, or what you’ve done and feel competitive with you. Heck, there are
    even those who imagine what you’ve done and who you are, and hate you for the
    image of you they have. Ignore them. All of them.</p></li><li><p>*<em>Copy People
    You Admire. *</em>When I was 26, I was doing research on the new motorcycle I
    had purchased, and I read about a couple traveling around the world on their honeymoon
    on my exact model of bike. I was so inspired, I decided to do a similar trip.
    Within 6 months, I had quit my job running an environmental non-profit and drove
    south. <a href="https://web.archive.org/web/20111218222155/http://www.edsgonesouth.com/">The
    travel blog I wrote about my trip</a> ended up in Forbes and the Guardian, and
    inspired thousands more people to do a similar trip. Of course, there’s also the
    other side of the coin — don’t emulate people you don’t admire. Sometimes people
    seem like they have it all — like they should be good examples to follow. They
    have the wealth and influence you want, and a lot of other people try to emulate
    them. But something about them doesn’t feel right to you. Maybe it’s their business
    ethics. Maybe it’s how they treat women or their families. Just trust your gut
    and stay away from them. Far away.</p></li><li><p><strong>If You Lead (Well),
    They Will Follow.</strong> I’ve learned that there are those people who demand
    respect, and those who command it. Demanding respect is leading poorly. It’s driven
    by self interest and fear of being judged or undermined. Commanding respect is
    leading through action and example. It is humble and is driven by a higher purpose.
    While leading well may also be nerve wracking, the fear that comes up is worry
    that others might not be well served by your leadership, not that your image might
    be tarnished. Just remember that in 99% of situations, people are looking for
    leadership. They are looking for selfless leaders. Give them the leadership they
    seek — in the interest of serving their interests — and they will follow.</p></li><li><p>*<em>Figure
    Out Your Unfair Advantage. *</em>We all have something we are naturally amazing
    at. Some people pick up the guitar or a paint brush and make art from the first
    try. Others can put into simple prose the huge ideas we can’t seem to get out
    of our heads. And still others can negotiate a business deal so well everyone
    feels like they need a cigarette once it’s over. Whatever you do so well that
    few others can match you, do more of it. My skill-set is two fold — 1) I help
    people get honest with themselves and put words, intention, and action behind
    their dreams, and 2) I can create a vision and motivate teams to bring great things
    to life. So, today, I’m both a coach and an entrepreneur. But I didn’t know that
    for a long time. I tried being a number of other careers before this one. And
    I have no regrets. All of those experiences simply made me even better at what
    I do today.</p></li><li><p><strong>Choose Friends Who Dream Big, But Don’t Compete
    with Them.</strong> Friends who make big plans for themselves will push you to
    make big plans for yourself. Spend more time with those people. On the other hand,
    friends who think small will discourage your big dreams because frankly, no one
    likes being left behind. Spend less time with those people. But don’t EVER compare
    where you are today to where other people are. We all have our own timeline. We
    all have our own luck. Admire the success of your friends. Emulate it if you can.
    But don’t be jealous of it. Jealousy is the fastest way to lose the people you
    want to be closest to.</p></li><li><p>*<em>Build Your Dreams, or Someone Else
    Will Pay You to Build Theirs. *</em>Those people whom you admire most, the ones
    who have built companies, won elected office, recorded hit songs, etc… They didn’t
    get there by working for someone else. Sure, we all serve someone, whether it
    be customers, constituencies, or fans, but at the end of the day, you won’t leave
    the impact you want in this world by punching the clock for someone else. So,
    take the time you need working for mentors to learn your trade, but some time
    before you feel fully ready, set out on your own. Start a new firm. Launch a new
    start-up. Record a solo album. Just do it. And when you fail — which you will
    the first time or two — just get up and do it again. Because as they say, “<em>Success
    is going from failure to failure without losing your enthusiasm.”</em></p></li></ol><p>Love
    ya, kid.</p><h2>If you liked this story (even a little), please click the little
    heart below. It will help other people read it, and it will mean a lot to me.</h2><p><em>Edward
    Sullivan is the founder and head coach at <a href="http://leadwell.co">LeadWell.co</a>
    — a boutique coaching and training organization that helps start-up CEOs and corporate
    executives navigate the challenges of leadership with authenticity. With offices
    in San Francisco and New York, LeadWell helps leaders and their teams optimize
    their performance and overcome obstacles to growth. He can be reached at <a href="mailto:edward@leadwell.co">edward@leadwell.co</a>.</em></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*K-gBKESfw7VdXINXE6Z4iw.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*Rp4dAQfFd6Oex9_DzSH_YA.png" alt=""></p><p><img
    src="https://cdn-images-1.medium.com/max/3312/1*iM98ThbP-dRKnNQUt99dZA.png" alt=""></p>'
  :author: Edward Sullivan
  :topic: self
- :url: https://medium.com/accelerated-intelligence/self-made-billionaire-there-are-three-levels-of-reality-and-most-people-are-stuck-in-level-one-ad5a1bf5ad76?source=search_post---------8
  :title: 'Self-Made Billionaire: There Are Three Levels Of Reality, And Most People
    Are Stuck In Level One…'
  :content: '<p>Photo by NASA on Unsplash</p><h3><em>The brutal truth is that most
    people aren’t even aware of Level 2 or 3</em></h3><p>One commonality of great
    thinkers, CEOs, and entrepreneurs throughout history is that they see reality
    on a deeper level. This helps them figuratively play chess while everyone else
    plays checkers.</p><p>This realization slowly came to me as I spent thousands
    of hours over the last few years reading, watching, and listening to everything
    from many of history’s wisest business leaders, from <a href="https://medium.com/the-mission/how-one-life-hack-from-a-self-made-billionaire-leads-to-exceptional-success-a0b21fc34048">Charlie
    Munger</a>, <a href="https://medium.com/@michaeldsimmons/how-elon-musk-learns-faster-and-better-than-everyone-else-a010a4f586ef">Elon
    Musk</a>, <a href="https://medium.com/the-mission/the-number-one-predictor-of-career-success-according-to-network-science">Steve
    Jobs</a>, <a href="https://medium.com/the-mission/8-things-that-self-made-billionaires-do-differently-26399196feb3">Warren
    Buffett</a>, and <a href="https://medium.com/the-mission/forget-about-the-10-000-hour-rule-7b7a39343523">Jeff
    Bezos</a> to <a href="https://medium.com/the-mission/forget-about-the-10-000-hour-rule-7b7a39343523">Thomas
    Edison</a> and <a href="https://medium.com/@michaeldsimmons/why-constant-learners-all-embrace-the-5-hour-rule-8836f554da1">Benjamin
    Franklin</a> (<a href="https://medium.com/@michaeldsimmons">all of whom I have
    written about</a>).</p><p>Over and over, I thought I understood their words, and
    then later, when I revisited them, I realized there was a whole other layer I
    had missed. The experience was like looking at this image below, seeing only one
    thing and then realizing it is both a picture of a duck <em>and</em> a bunny.</p><p>See
    it?</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*SjlM8jtn99UlJ3e9."
    alt=""></p><p>This all brings me to self-made billionaire, entrepreneur, investor,
    and polymath Ray Dalio. Dalio is the founder of Bridgewater Associates, the largest
    hedge fund in the world, and his approach to and results from uncovering and using
    <a href="https://medium.com/the-mission/how-to-tell-if-someone-is-truly-smart-or-just-average-a2f0bcac5db2">deep
    principles and mental models</a> is unparalleled. Over the last 40 years, Dalio
    has meticulously identified and stress-tested a set of universal, success principles,
    and then created detailed step-by-step systems that his 1,500-person team uses
    to make management and investment decisions. This year, he effectively open-sourced
    everything with the release of his book, <a href="https://www.amazon.com/gp/product/1501124021/ref=as_li_tl?ie=UTF8&tag=lrc1981-20&camp=1789&creative=9325&linkCode=as2&creativeASIN=1501124021&linkId=4189b58412d81443082f38c1504c74b1">Principles:
    Life and Work</a>.</p><p>This chart below from Dalio’s book is like the duck/bunny
    image. On one level, it’s a simple chart like any other chart. On another level,
    it’s profound and speaks to the three levels of reality that Dalio sees.</p><p><img
    src="https://cdn-images-1.medium.com/max/2128/0*9kwfmBLESKfdXGJw." alt="Source:
    [Principles: Life and Work](https://www.amazon.com/gp/product/1501124021/ref=as_li_tl?ie=UTF8&amp;tag=lrc1981-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=1501124021&amp;linkId=4189b58412d81443082f38c1504c74b1)
    by Ray Dalio"><em>Source: <a href="https://www.amazon.com/gp/product/1501124021/ref=as_li_tl?ie=UTF8&tag=lrc1981-20&camp=1789&creative=9325&linkCode=as2&creativeASIN=1501124021&linkId=4189b58412d81443082f38c1504c74b1">Principles:
    Life and Work</a> by Ray Dalio</em></p><p>Understanding these three levels of
    reality is critical because the better you build a map of how reality works, and
    the more you’re open to improving that map, the more successful you’ll be.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/0*r4-2E8aaVzahvK-k." alt="Source:
    [Principles: Life and Work](https://www.amazon.com/gp/product/1501124021/ref=as_li_tl?ie=UTF8&amp;tag=lrc1981-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=1501124021&amp;linkId=4189b58412d81443082f38c1504c74b1)
    by Ray Dalio"><em>Source: <a href="https://www.amazon.com/gp/product/1501124021/ref=as_li_tl?ie=UTF8&tag=lrc1981-20&camp=1789&creative=9325&linkCode=as2&creativeASIN=1501124021&linkId=4189b58412d81443082f38c1504c74b1">Principles:
    Life and Work</a> by Ray Dalio</em></p><p>Let’s dive into Dalio’s three levels
    of reality…</p><h2><strong>Reality Level 1: Getting Stuff Done</strong></h2><p>Most
    people operate in this realm. The output of a good sales call is a closed sale.
    The outcome of a good meeting is the resolution of a specific problem. Conversely,
    a bad sales call is one that doesn’t result in a new customer. A bad meeting is
    one that decides nothing.</p><p>This level of reality is essentially about getting
    stuff done: creating a to-do list from most important to least important and then
    kicking butt right on down the list. Dalio calls this layer of reality the blizzard
    because lots of things are constantly coming at you from different directions,
    and it’s hard to get clarity on what really matters.</p><p>Dalio’s book is not
    written on this level. Most books are.</p><h2><strong>Reality Level 2: Principles</strong></h2><p>To
    people like Dalio, the value of an activity isn’t just its immediate result, but
    also the underlying principles at play. The principles you learn in any situation
    are often more valuable than the immediate result, because you can apply them
    for the rest of your life across all areas to make better decisions.</p><p>For
    example, let’s say you’re a salesperson. At Level 2, each sales call is an opportunity
    to learn about related principles on multiple levels:</p><p><img src="https://cdn-images-1.medium.com/max/3200/0*_ejWk2FHmpXFwU8m."
    alt="Source: [Michael Simmons](https://medium.com/@michaeldsimmons)"><em>Source:
    <a href="https://medium.com/@michaeldsimmons">Michael Simmons</a></em></p><p>As
    you move down toward <a href="https://medium.com/the-mission/how-to-tell-if-someone-is-truly-smart-or-just-average-a2f0bcac5db2">fundamental
    mental models</a> of what selling is and how it works, you gets closer to principles
    that are more timeless and universal.</p><p>Once you reach the “timeless and universal”
    level, you can apply a principle or mental model to exponentially more situations.
    And this is the key here. Once you reach an understanding of a mental model, you
    have a tool that can apply in many situations now and in the future to help you
    be more efficient, get more done, make better decisions, have better relationships,
    become more successful, and become more impactful.</p><p>Let’s take Stephen Covey’s
    fundamental principle of ‘Seek first to understand and then to be understood’
    as an example. This principle can help you sell a product, but it can also help
    you be a better parent, have a happier marriage, enjoy deeper friendships, and
    get along with people of different cultures, faiths, and political backgrounds.
    <strong>If you’re interested in learning more about the value of fundamental principles
    and mental models, I wrote about it in <a href="https://medium.com/the-mission/how-to-tell-if-someone-is-truly-smart-or-just-average-a2f0bcac5db2">How
    To Tell If Someone Is Truly Smart Or Just Average</a>.</strong></p><p>So let’s
    say you have a sales call where the prospect doesn’t buy from and become a customer.
    If you operated from Level 1 of reality, this call would be a painful waste of
    time. To Dalio, at Level 2, it would be a learning opportunity because of his
    following core principle:</p><blockquote><p>“Pain + Reflection = Progress.”</p></blockquote><p>As
    he explains:</p><blockquote><p>“There’s so much more that you can learn from mistakes
    because they give you a loud signal. Rewards keep you doing the same things, and
    so you don’t grow from successes… Mistakes, if you can deal with them the right
    way, with reflection is where the growth comes from.”</p></blockquote><p>Dalio’s
    approach is counterintuitive on two levels. First, society typically judges success
    by first-order results (i.e., immediate sales), not second-order ones (i.e., improving
    the system that makes sales). Secondly, our natural reaction to pain is to resist
    it and react emotionally. Dalio has built systems, tools, and habits that help
    him move toward pain, react logically and objectively, and engage in thoughtful
    disagreement rather than arguments, which I’ll explain later in the article. While
    we all intellectually understand that we can learn from pain, I’ve never come
    across someone who is as systematic and committed to it as Dalio.</p><p>While
    Level 1 of reality is a blizzard, Level 2 is more like standing on a mountaintop
    in a clear sky looking down at the blizzard.</p><p><img src="https://cdn-images-1.medium.com/max/3200/0*rkghOYTGRU-WW_N4."
    alt="Source: [Michael Simmons](https://medium.com/@michaeldsimmons)"><em>Source:
    <a href="https://medium.com/@michaeldsimmons">Michael Simmons</a></em></p><p>And
    because you have this wider aperture on life, you’re able to see connections more
    naturally. Dalio explains:</p><blockquote><p>“With time and experience, I came
    to see each encounter as ‘another one of those’ that I could approach more calmly
    and analytically, like a biologist might approach an encounter with a threatening
    creature in the jungle: first identifying its species and then, drawing on his
    prior knowledge about its expected behaviors, reacting appropriately. When I was
    faced with types of situations I had encountered before, I drew on the principles
    I had learned for dealing with them. But when I ran into ones I hadn’t seen before,
    I would be painfully surprised. Studying all those painful first-time encounters,
    I learned that even if they hadn’t happened to me, most of them had happened to
    other people in other times and places, which gave me a healthy respect for history,
    a hunger to have a universal understanding of how reality works, and the desire
    to build timeless and universal principles for dealing with it.”</p></blockquote><p>While
    we all learn from our experiences at some level, what separates Dalio is two things.
    First, he doesn’t just pull from his own seven decades of personal experience.
    He attempts to pull from all experiences of recorded history*<em>. *</em>This
    approach gives him a tremendous advantage as investor because some financial cycles
    happen every few months or few years, but other cycles only happen every few decades
    or every century. With Dalio’s wider lens, he can see those patterns. Our own
    personal experiences are a drop in the ocean of humanity’s experiences through
    all time.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*9kqoeotrehwfVwt4."
    alt="Source: [Michael Simmons](https://medium.com/@michaeldsimmons)"><em>Source:
    <a href="https://medium.com/@michaeldsimmons">Michael Simmons</a></em></p><p>Secondly,
    he doesn’t just learn from his experience reactively and unconsciously. He is
    extremely deliberate. This is important because of the <a href="https://medium.com/the-mission/why-the-smartest-people-are-constant-learners-eb0f90559fec">OK
    Plateau</a> — most people learn quickly in new situations, but soon plateau after
    they’re “good enough” and never get better with more experience. This has been
    heavily studied in the professional world, and it’s evident in our daily lives.
    Has driving more made you a better driver? Has typing more made you a better typist?</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/0*TenZx2POX49xJ7jR." alt=""></p><p>I
    go into what I mean by “deliberate” in Level 3, as this is where the magic happens.</p><h2><strong>Reality
    Level 3: Algorithms</strong></h2><p>This is the point at which Dalio’s teachings
    started to blow my mind. It’s also the level which <a href="https://www.newyorker.com/magazine/2011/07/25/mastering-the-machine">causes
    the most controversy in the media</a>. Dalio has systematically taken his principles
    and turned them into algorithms in computers that he uses to make better investing
    and people decisions.</p><p><img src="https://cdn-images-1.medium.com/max/2000/0*MuRQmGYa5fEBGaiC."
    alt="Source: [Michael Simmons](https://medium.com/@michaeldsimmons)"><em>Source:
    <a href="https://medium.com/@michaeldsimmons">Michael Simmons</a></em></p><p>What
    does that mean in practice? For one, Dalio’s company, Bridgewater, has <a href="https://seminal.lpages.co/ray-dalio-dictionary/?utm_source=Medium&utm_medium=article&utm_campaign=14&utm_content=CTA1">developed
    several apps that employees use to make better decisions</a>. One of them is called
    the Pain Button. Here’s how it works:</p><p><img src="https://cdn-images-1.medium.com/max/3200/0*xzpz998CT-Z-G0Ov."
    alt=""></p><p>In building these apps and collecting the data from them, Bridgewater
    may have built the largest database of team interaction ever in the history of
    mankind.</p><p>Bridgewater, of course, doesn’t just focus on employee emotions,
    but also on their investments. Starting in the 1970s, Dalio created investment
    algorithms and turned them into code. Over time, he improved the code in two ways:</p><ul><li><p>As
    he and his team learned more principles, they turned those into algorithms, and
    then turned those into code.</p></li><li><p>He and his team stress-tested the
    algorithms using historical data. In other words, he fed historical data into
    the program. Then, he let his algorithm run loose to see what decisions it would’ve
    made in that historical context. With the gift of hindsight, he was able to see
    the actual amount of money the algorithm would’ve made or lost without risking
    a penny.</p></li><li><p>With the results from stress-testing, he and his team
    refined the principles, algorithms, and code.</p></li></ul><p>As Bridgewater got
    better and better results, they trusted the system more and more, and started
    using it to help make real-world investment decisions. Over time, the algorithms
    have become effective enough for Bridgewater to trust its decisions 98 percent
    of the time.</p><p>In short, at Level 3, Dalio doesn’t just let the general principles
    of Level 2 remain general principles. He systematically understands how the principles
    interact with each other to create specific results in the world:</p><blockquote><p>“Visualizing
    complex systems as machines, figuring out the cause-effect relationships within
    them, writing down the principles for dealing with them, and feeding them into
    a computer so the computer could ‘make decisions’ for me all became standard practices.”</p></blockquote><p>Dalio’s
    approach sparks controversy among many: “What about the chaos and randomness of
    life? You can’t reduce complex decisions or dynamics between people into engineering
    problems!” This is where it’s important to understand that Dalio doesn’t claim
    to have a perfect machine that does everything perfectly without humans. Dalio
    views his machine as a trusted advisor to human decision-making.</p><p>Naturally,
    Dalio has immense financial and human resources to build his machines. But we
    can still learn from and emulate his approach. For example, Dalio’s approaches
    have had a huge impact on me in two ways:</p><ul><li><p>After reading his work,
    I realized I had a pervasive pattern of ignoring painful problems or only dealing
    with them once they blew up. So, I started logging problems, doing a weekly root
    cause analysis conversation with my wife, with myself, and with our team.</p></li><li><p>Rather
    than just being a writer, our company created an idea machine where we systematically
    found principles of how quality ideas are created and how they spread. We stress-tested
    those principles with <a href="https://medium.com/the-mission/forget-about-the-10-000-hour-rule-7b7a39343523">lots
    of experimentation</a>, and then built systems and tools to help the process.
    Starting with very little profile and no list, my writing has been seen nearly
    15 million times across platforms in the last 3 years with just a few dozen articles.</p></li></ul><h2><strong>Putting
    It All Together: Rethinking Productivity</strong></h2><p>We all just have 24 hours
    in a day. Yet some people move much closer toward their goals than others. In
    other words, they get more value from each experience they have. The learning
    value that Dalio gets from every moment is exponentially greater than the average
    person.</p><p>In order to unlock this value, Dalio focuses on three levels of
    reality while most people focus on just one. He also thinks about his time differently.
    Rather than just focusing the day around getting stuff done, throughout his career
    he has focused on constant and deliberate learning. I call this tendency for many
    of the busiest, most successful leaders to spend at least 5 hours or more per
    week learning the <a href="https://medium.com/@michaeldsimmons/bill-gates-warren-buffett-and-oprah-all-use-the-5-hour-rule-308f528b6363">5-hour
    rule</a>.</p><p>Dalio’s approach means he gets less done in a day, but gets drastically
    more done in his life. This happens because the value of operating on Levels 2
    &amp; 3 <a href="https://medium.com/the-mission/why-successful-people-spend-10-hours-a-week-on-compound-time-79d64d8132a8">compound
    over time</a>. After 40 years of living at all three levels of reality, Dalio
    has built up an incredibly powerful legacy:</p><ul><li><p>*<em>Core principles
    *</em>he has shared in his book <a href="https://www.amazon.com/gp/product/1501124021/ref=as_li_tl?ie=UTF8&tag=lrc1981-20&camp=1789&creative=9325&linkCode=as2&creativeASIN=1501124021&linkId=4189b58412d81443082f38c1504c74b1">Principles</a>,
    which is reverberating throughout society to millions of people.</p></li><li><p><strong>An
    investing machine</strong> that can be run without him that has generated tens
    of billions of dollars so far and likely hundreds of billions in the future.</p></li><li><p><strong>A
    management machine</strong> that has helped Bridgewater scale to 1,500-plus employees
    that any company could use.</p></li></ul><p>When most people ask themselves how
    they can take their life to the next level, they often think about new skills
    they could start or bad habits they could stop. This is Level 1 thinking. It works,
    but only so far.</p><p>By understanding the different levels of reality, we can
    all break through the glass ceilings in our life and <a href="https://medium.com/the-mission/if-you-dont-want-to-regret-your-life-30-years-later-make-this-one-choice-right-now-1cc137516df0">realize
    more of our latent potential and leave a legacy</a>.</p><h2><strong>Want to get
    started with Dalio’s approach?</strong></h2><p>In order to use principles and
    mental models, we must first collect and learn how to use the most valuable ones.
    I’ve learned from personal experience that it literally takes years to develop
    true mastery of these. Therefore, I created two resources for you:</p><h3><strong>Resource
    #1: Free Mental Model Course (For Newbies)</strong></h3><p>If you’re just learning
    about mental models for the first time, my free email course will help you get
    started. My team and I have spent dozens of hours creating it. Inside, you’ll
    learn the models that these billionaires use to make business and investing decisions
    — tools you can apply immediately to your life and business. You’ll also learn
    how to naturally use these models in your everyday life.</p><p><a href="https://seminal.lpages.co/charlie-munger-mini-course-article-12-medium/?utm_source=Medium&utm_medium=article&utm_campaign=14&utm_content=CTA2">**Sign
    up for the free mini-course here &gt;&gt;</a>**</p><h3><strong>Resource #2: Mental
    Model Of The Month Club (For Those Who Want Mastery)</strong></h3><p>If you’re
    already convinced of the power of mental models and want to deliberately set about
    mastering them, then this resource is for you. It’s the program I wish I’d had
    when I was just getting started with mental models.</p><p>Here’s how it works:</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/0*MNzgI_sqLv6j_pnm." alt=""></p><ul><li><p>Every
    month, you’ll master one new mental model.</p></li><li><p>We’ll focus on the most
    powerful and universal models first.</p></li><li><p>We’ll provide you with a condensed
    and simple Mastery Manual (think: Cliff’s Notes) to help you deeply understand
    the model and integrate it into your life.</p></li></ul><p>Each master manual
    includes:</p><ul><li><p>A 101 Overview of the mental model (why it’s important,
    how it works, its vocabulary, etc.)</p></li><li><p>An Advanced Overview that includes
    a more nuanced explanation.</p></li><li><p>Hacks you can use immediately to apply
    that mental model to every area of your life and career. These hacks are based
    on my personal experience and are crowdsourced as well.</p></li><li><p>Exercises
    and templates you can use on a daily basis to integrate the lessons in the manual
    and achieve maximum results in your life.</p></li><li><p>A Facebook community
    where you can meet other mental model collectors and learn from one another.</p></li></ul><h3><strong>To
    learn more about the program or to sign up, <a href="https://www.mentalmodelclub.com/mental-model-club-v2.html?utm_source=Medium&utm_medium=article&utm_campaign=14&utm_content=CTA3">visit
    the Mental Model Of The Month Overview page</a>.</strong></h3><p><strong><em>This
    article was written with love and care using the <a href="https://medium.com/accelerated-intelligence/the-1-mental-model-for-writers-who-want-to-write-high-quality-viral-content-43ecf0d4ec05">blockbuster
    mental model</a>.</em></strong></p>'
  :author: Accelerated Intelligence
  :topic: self
- :url: https://medium.com/free-code-camp/to-self-doubting-developers-are-you-good-enough-13de8ebdf53a?source=search_post---------9
  :title: 'To self-doubting developers: are you good enough?'
  :content: "<p>Does any of the following sound familiar?</p><p>You constantly worry
    that you are not good enough.</p><p>Look at the developers around you. They seem
    to have everything together. Their code is cleaner than yours. They debug much
    faster than you do. They merely glance at documentation before knowing what they
    need. They are confident. They enjoy coding.</p><p>But you, you are worried. You
    worry that you don’t know enough about the framework and the language you are
    using. You worry about introducing bugs. You worry about catching up with the
    hottest technologies. You worry that you are not talented enough. Things don’t
    come naturally to you. You think to yourself: “Maybe I’m not meant to be a developer.”</p><p>If
    any of these self-doubting thoughts sounds familiar to you, you are not alone.
    Google “self-doubt developers”, and you will find over 2 million results in less
    than a second.</p><h2><strong>I was you.</strong></h2><p>For a period of time,
    I also experienced intense self-doubt, wondering if I would ever “make it”. <a
    href=\"https://www.sihui.io/from-hello-world-to-facebook-airbnb-salesforce/\">It
    happened in college when I was practicing and preparing for job interviews. Each
    day, those algorithm problems made me feel like a complete failure. I was stressed
    and worried, as much as you might be now.</a></p><p><a href=\"https://www.sihui.io/from-hello-world-to-facebook-airbnb-salesforce/\">Eventually,
    my practice paid off and I received multiple job offers from prestigious tech
    companies.</a> Along the way, I learnt two important lessons that changed my view
    of programming and eliminated my self-doubting thoughts. I’m sharing them with
    you now. Hopefully, they help.</p><h2>Lesson #1: Learning programming is exactly
    the same as building muscles</h2><p>To learn to play soccer, you need to go to
    the field and play. To build stronger muscles, you need to go to the gym and lift
    those weights. To learn programming, you need to sit down and code.</p><p>After
    lifting weights, you will feel sore and tired the next day. When stuck on a programming
    problem, your brain will (literally) hurt and you will get frustrated.</p><p>You
    won’t give up working out simply because of feeling sore. You know it’s part of
    the process. But when you get stuck while programming, you might start doubting
    yourself, wondering if you are talented enough. Because: (1) you think getting
    stuck is your fault, (2) others make it seemed effortless.</p><h3><strong>1. Getting
    stuck is part of the process.</strong></h3><p>Maybe no one has told you that,
    but it’s absolutely normal to get stuck during programming. It happens even to
    senior developers. A big part of programming is about figuring out why what you
    expected to happen didn’t happen. If you agree that expecting a child to be able
    to walk the first time he or she stands up is absurd, why would you expect the
    first draft of your code to run perfectly without any bugs?</p><p>I remember times
    when <a href=\"https://twitter.com/sihui_io/status/940813707646513152\">I got
    stuck for so long that I wanted to bang my head against a wall</a>. I know it’s
    hard and frustrating (especially when dealing with issues related to dev environments).
    But hang in there. Dig into the issue. Ask Google. Ask a friend. Take a walk.
    You will eventually solve it and move on. And as you gain more experience, you
    will gradually get stuck less.</p><p>Next time you get stuck, don’t give yourself
    a hard time. Remind yourself it’s not your fault. It’s normal. It’s part of the
    process.</p><p><strong>PS — Setting up a dev environment might be the most difficult
    part of programming.</strong></p><p>It’s very common to get stuck and spend days
    on setting up a development environment. These are moments that might crush your
    soul. You try to follow the instructions step by step. But random errors keep
    showing up in every single step. The instructions make it seem easy, but it’s
    not. It’s not your fault getting stuck. 99.99% of the people reading that tutorial
    get stuck. The remaining 0.01% are the lucky ones who happen to have the exact
    same operating system setup as the instructor.</p><p>It’s unfortunate that the
    first step of learning to program is also the most frustrating and soul-crushing
    part. When you see errors you can’t understand, just copy the exact error message
    and Google it. (Putting quotes around the error message or just search the first
    half of the message might help.) Try different solutions until you find the one
    that works. And move on.</p><p>Pardon me for repeating: *<em>getting stuck at
    this stage is not your fault. We ALL do. *</em>And I promise programming will
    become a lot more fun once you get past this stage.</p><h3><strong>2. We confuse
    “</strong>genetically** smart” with “appeared smart because the person has spent
    tons of time on related subjects”**</h3><p>During my last semester in college,
    my friends were amazed by how well I did in the Advanced Data Structures &amp;
    Algorithms class. I made it seem effortless while they were struggling.</p><p>What
    they didn’t know was that months before the class, to prepare for interviews,
    <a href=\"https://www.sihui.io/from-hello-world-to-facebook-airbnb-salesforce/\">I
    had spent countless hours practicing coding challenges, which covered the exact
    same topics as the class: dynamic programming, depth-first search, breadth-first
    search, etc. **It appeared effortless only because I had already been through
    these struggles.</a>**</p><p>When I first self-taught these concepts, I would
    spend hours staring at a problem and couldn’t figure it out. When I gave up and
    looked up solutions online, I struggled to understand them. When I finally did,
    I felt even more frustrated because I doubted I would ever be smart enough to
    come up with such a solution myself.</p><p>Sometimes even when I encountered the
    exact same problem again, I might’ve still had no clue on how to approach it.
    I would get so stressed that I had to take long hot showers to calm myself down.</p><p>So
    believe me when I say that I know how it feels to doubt yourself and worry that
    you can’t make it. I have been there before. And I can assure you that you are
    not alone. Many great developers have been through the same thing. (Here is <a
    href=\"https://devchat.tv/ruby-rogues/271-rr-problems-new-developers-dont-realize-they-have-and-hidden-tradeoffs-to-coding-decisions-developers-have-to-make-with-justin-weiss\">a
    podcast about this topic</a>.)</p><p>Next time you are struggling while people
    around you are excelling, don’t think it’s because you are not talented enough.
    Most likely, they just have more exposure to the subject, or similar subjects,
    than you. Their brains have built up the “muscles” to handle this type of subject.
    After you get through your current struggles, you will appear smart and effortless
    as well.</p><p><strong>It’s all about reps and sets.</strong></p><p>You build
    muscles by exercising them. The more effort you put in, the longer you train,
    the stronger you become. Learning programming has the exact same process. The
    more time you spend coding, the more proficient you will be. You reap what you
    sow.</p><h2>Lesson #2: Focus on your craft, not you</h2><p>Stop thinking about
    how good or how bad of a programmer you are. If you are in the bottom 5% of your
    team, you want to get better. If you are in the top 5%, you still want to get
    better. No matter how good or bad you are, there are always people in front of
    you and people behind you. So why waste time thinking about it?</p><p>Instead,
    focus on your craft. Stop asking how good you are. Ask how good your code is.
    How can you make it better, faster, more readable? Surround yourself with engineers
    you admire. Read their code. How is it different than yours? What are the trade-offs
    they are making?</p><p>If you already work as a software engineer, someone is
    paying you to write code. You should pause and reflect on it, as it means a lot:
    someone either believes in your coding skill or sees your potential. The only
    way to live up to that potential is to focus on your craft and improve it relentlessly.</p><h2>Action
    Item: Start keeping track of small wins</h2><p>When was the last time you got
    stuck and weren’t sure if you could solve the problem? How did you eventually
    solve it?</p><p>Open a new Google Doc and write it down.</p><p>Next time you doubt
    yourself, take a look at the doc and remind yourself: if you could solve that
    last problem, you will solve this one as well.</p><p>Use the doc to keep track
    of challenging problems you overcame and what you learned from them. Always, always
    celebrate these small wins!</p><p>Leave a comment and share the last time you
    got stuck to remind those who are currently struggling that they are not alone.
    \U0001F643</p><p>Want to read about my career in tech? Check out my <a href=\"http://www.sihui.io/category/career/\">other
    articles</a>.</p><p>Have other questions related to programming?</p><p>Please
    shoot me an email: sihui@sihui.io</p><iframe src=\"https://medium.com/media/a2db2183acc0ba9beb40c7812638de94\"
    frameborder=0></iframe>"
  :author: freeCodeCamp.org
  :topic: self
- :url: https://medium.com/swlh/300-awesome-free-things-e07b3cd5fd5b?source=search_post---------0
  :title: "+300 Awesome Free Things for Entrepreneurs and Startups"
  :content: '<p>Check it out on: GROWTH SUPPLY</p><p>+300 AWESOME FREE THINGS FOR
    ENTREPRENEURS &amp; STARTUPS</p><p><em>Curated on +50 tech blogs &amp; websites
    such as TNW, Buffer Blog, Product Hunt, Angellist, Pickcrew, Betalist, etc.</em></p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*lqvdybYOXnAvDmCAtRbPzw.png" alt="Icon
    by Five by Five [http://thenounproject.com/term/business/38242/](http://thenounproject.com/term/business/38242/)"><em>Icon
    by Five by Five <a href="http://thenounproject.com/term/business/38242/">http://thenounproject.com/term/business/38242/</a></em></p><h2>→
    Business + Marketing ←</h2><blockquote><p>A. FREE WEBSITE + LOGO + HOSTING + INVOICING</p></blockquote><ul><li><p><a
    href="https://www.logaster.com/">**Logaster</a>*<em>: *Professional online logo
    maker &amp; generator.</em></p></li><li><p><a href="http://html5up.net/">**HTML5
    UP:</a> **<em>Responsive HTML5 and CSS3 site templates.</em></p></li><li><p><a
    href="http://bootswatch.com/">**Bootswatch:</a> **<em>Free themes for Bootstrap.</em></p></li><li><p><a
    href="http://templated.co/">**Templated:</a> **<em>A collection of 845 free CSS
    &amp; HTML5 site templates.</em></p></li><li><p><a href="https://wordpress.org/">**Wordpress.org</a>
    | <a href="https://wordpress.com/">Wordpress.com</a>: **<em>Create your new website
    for free.</em></p></li><li><p><a href="http://strikingly.com">**Strikingly:</a>
    **<em>Free, unlimited mobile optimized websites for strikingly domains.</em></p></li><li><p><a
    href="https://withoomph.com/">**Withoomph</a>: **<em>Beautiful logos designed
    instantly.</em></p></li><li><p><a href="http://www.hipsterlogogenerator.com/">**Hipster
    Logo Generator:</a> **<em>It’s Hip, It’s Current, It’s Stylish, It’s Hipster.</em></p></li><li><p><a
    href="http://www.squarespace.com/logo/">**Squarespace Free Logo:</a> **<em>You
    can download free low-res version for free.</em></p></li><li><p><a href="https://www.hive.im/">**Hive:</a>
    **<em>First free unlimited cloud service in the world.</em></p></li><li><p><a
    href="http://invoiceto.me/">**Invoice to me</a>: **<em>Free Invoice Generator.</em></p></li><li><p><a
    href="https://www.free-invoice-generator.com/">**Free Invoice Generator</a>: **<em>Alternative
    free invoice generator.</em></p></li><li><p><a href="http://slimvoice.co/">**Slimvoice:</a>
    **<em>Insanely simple invoices.</em></p><blockquote><p>B. FREE BUSINESS / PROJECT
    NAME GENERATORS</p></blockquote></li><li><p><a href="http://thenameapp.com/">**The
    Name App</a>: **<em>Find an available name for your brilliant idea.</em></p></li><li><p><a
    href="http://www.naminum.com/">**Naminum:</a> **<em>Discover a perfect company
    name.</em></p></li><li><p><a href="http://shortdomainsearch.com/">**Short Domain
    Search:</a> **<em>Find short, available single-word domain names.</em></p></li><li><p><a
    href="http://wordoid.com/">**Wordoid:</a> **<em>Pick a short and catchy name for
    your business.</em></p></li><li><p><a href="http://www.hipsterbusiness.name/">**Hipster
    Business Name:</a> **<em>Hipster business name generator.</em></p></li><li><p><a
    href="http://impossibility.org/">**Impossibility</a>: **<em>The best domain name
    generator ever.</em></p></li><li><p><a href="http://www.leandomainsearch.com/">**Lean
    Domain Search</a>: **<em>Find a domain name for your website in seconds.</em></p></li><li><p><a
    href="https://domainr.com/">**Domainr:</a>** <em>Fast, free, domain name search,
    short URLs.</em></p><blockquote><p>C. WRITING / BLOGGING</p></blockquote></li><li><p><a
    href="http://www.hemingwayapp.com/">**Hemingway:</a> **<em>Hemingway App makes
    your writing bold and clear.</em></p></li><li><p><a href="https://free.grammarly.com/">**Grammarly:</a>
    **<em>Finds &amp; corrects mistakes of your writing.</em></p></li><li><p><a href="https://medium.com/">**Medium:</a>
    **<em>Everyone’s stories and ideas.</em></p></li><li><p><a href="http://www.zenpen.io/">**ZenPen:</a>
    **<em>The minimal writing tool of web.</em></p></li><li><p><a href="http://liber.io/">**Liberio:</a>
    **<em>Simple eBook creation and publishing right from Google Drive.</em></p></li><li><p><a
    href="https://wordpress.org/plugins/editorial-calendar/">**Editorial Calendar:</a>
    **<em>See all your posts, drag &amp; drop to manage your blog.</em></p></li><li><p><a
    href="https://www.storywars.net/">**Story Wars:</a> **<em>Writing stories together.</em></p></li><li><p><a
    href="http://www.aminstitute.com/headline/">**Headline Analyzer:</a> **<em>Emotional
    marketing value headline analyzer.</em></p></li><li><p><a href="https://wordpress.org/plugins/wp-hide-post/">**WP
    Hide Post:</a> **<em>Control the visibility of items on your blog.</em></p></li><li><p><a
    href="https://wordpress.org/plugins/social-locker/">**Social Locker:</a> **<em>Ask
    visitors “to pay” for your content with a tweet, etc.</em></p></li><li><p><a href="http://e.ggtimer.com/">**Egg
    Timer:</a> **<em>Set a time and bookmark it for repeated use.</em></p><blockquote><p>D.
    FIND (TRENDING) CONTENT (IDEAS)</p></blockquote></li><li><p><a href="http://www.portent.com/tools/title-maker">**Portent:</a>
    **<em>Content idea generator.</em></p></li><li><p><a href="http://www.google.com/trends/hottrends/visualize?pn=p1">**Google
    Trends:</a> **<em>A new way of displaying trending searches.</em></p></li><li><p><a
    href="http://buzzsumo.com/">**Buzzsumo:</a> **<em>Analyze what content performs
    best for any topic or competitor.</em></p></li><li><p><a href="http://www.hubspot.com/blog-topic-generator">**Hubspot
    Blog Topic Generator:</a> **<em>Custom blog ideas.</em></p></li><li><p><a href="http://www.swayy.co/">**Swayy:</a>
    **<em>Discover the most engaging content. Free for 1 dashboard user.</em></p></li><li><p><em>Others:
    <a href="https://plus.google.com/explore/_">***Google+ What’s Hot</a> *</em>|
    <a href="https://twitter.com/">**Twitter Trendin</a>g | <a href="http://www.quora.com/Content-Strategy">Quora</a>
    <strong>| <a href="http://www.reddit.com/">**Reddit</a></strong></p><blockquote><p>E.
    FREE SEO + WEBSITE ANALYZERS</p></blockquote></li><li><p><a href="https://moz.com/researchtools/ose/">**Open
    Site Explorer:</a> **<em>A comprehensive tool for link analysis.</em></p></li><li><p><a
    href="https://ahrefs.com/">**Ahrefs:</a> **<em>Site explorer &amp; backlink checker.</em></p></li><li><p><a
    href="http://www.quicksprout.com/">**Quick Sprout:</a> **<em>Complete analysis
    of your website.</em></p></li><li><p><a href="https://wordpress.org/plugins/wordpress-seo/">**Wordpress
    SEO by Yoast:</a> **<em>Have a fully optimized WordPress site.</em></p></li><li><p><a
    href="http://seositecheckup.com/">**SEO Site Checkup:</a> **<em>Check your website’s
    SEO problems for free.</em></p></li><li><p><a href="https://marketing.grader.com/">**Hubspot
    Marketing Grader:</a> **<em>Grade your marketing.</em></p></li><li><p><a href="http://www.similarweb.com/">**SimilarWeb:</a>
    **<em>Analyze website statistics for any domain.</em></p></li><li><p><a href="http://www.alexa.com/">**Alexa
    Ranking:</a> *<em>A</em>nalytical insights to analyze any site’s rank.*</p></li><li><p><a
    href="https://serps.com/tools/rank_checker">**SERPs Rank Checker:</a> **<em>Free
    keyword rank &amp; SERP checker.</em></p></li><li><p><a href="http://openlinkprofiler.org/">**OpenLinkProfiler:</a>**
    <em>The freshest backlinks, for free.</em></p></li><li><p><a href="http://keywordtool.io/">**Keywordtool.io:</a>
    **<em>Free alternative to Google Keyword Planner.</em></p></li><li><p><em>Google:
    <a href="http://www.google.com/analytics/">***Analytics</a> *</em>| <a href="http://adwords.google.com/keywordplanner">**Keyword
    Planner</a> <strong>| <a href="https://www.google.com/webmasters/tools/home?hl=en">**Webmaster
    Tools</a> **| <a href="http://www.google.com/trends/">**Trends</a></strong></p></li><li><p><a
    href="http://nibbler.silktide.com/">**Nibbler:</a> **<em>Test any website.</em></p></li><li><p><a
    href="http://www.browseo.net/">**Browseo:</a> **<em>How search engines see your
    website.</em></p></li><li><p><a href="http://www.internetmarketingninjas.com/seo-tools/google-sitemap-generator/">**Broken
    Links:</a> **<em>Find broken links, redirects &amp; more.</em></p></li><li><p><a
    href="http://www.copyscape.com/">**Copyscape:</a> **<em>Search for copies of your
    page on the web.</em></p></li><li><p><a href="http://www.woorank.com/">**Woorank:</a>
    **<em>Website review and SEO tool.</em></p></li><li><p><a href="https://developers.google.com/speed/pagespeed/insights/">**Google
    Pagespeed Insights:</a> **<em>Check the performance of your site.</em></p></li><li><p><a
    href="http://tools.pingdom.com/fpt/">**Pingdom Website Speed Test:</a> **<em>Test
    &amp; the load time of a site.</em></p></li><li><p><a href="http://gtmetrix.com/">**GTMetrics:</a>
    **<em>Analyze your page’s speed performance.</em></p></li><li><p><a href="https://moz.com/local/search">**Moz
    Local:</a> **<em>Check your local listings on Google, Bing, and others.</em></p></li><li><p><a
    href="https://www.xml-sitemaps.com/">**XML Sitemaps:</a> **<em>Sitemap generator
    that creates XML &amp; HTML variants.</em></p></li><li><p><a href="http://validator.w3.org/">**W3C
    validator</a>: **<em>Easy-to-use markup validation service.</em></p></li><li><p><a
    href="https://ecommerce.shopify.com/grader">**Shopify E-commerce Report:</a> **<em>Get
    your free Ecommerce report.</em></p><blockquote><p>F. FREE IMAGE OPTIMIZERS</p></blockquote></li><li><p><a
    href="https://tinyjpg.com/">**TinyJPG</a> | <a href="https://tinypng.com/">TinyPNG</a>
    **<em>Compress images.</em></p></li><li><p><a href="https://compressor.io/">**Compressor.io:</a>**
    <em>Optimize and compress your images online.</em></p></li><li><p><a href="https://kraken.io/web-interface">**Kraken:</a>
    **<em>Optimize your images &amp; accelerate your websites.</em></p></li><li><p><a
    href="http://www.imageoptimizer.net/Pages/Home.aspx">**ImageOptimizer:</a> **<em>Resize,
    compress and optimize your image files.</em></p></li><li><p><a href="https://imageoptim.com/">**ImageOptim:</a>
    **<em>Makes images take up less disk space &amp; load faster.</em></p></li><li><p><a
    href="https://wordpress.org/plugins/wp-smushit/">**Smush.it:</a> **<em>Image optimizer
    Wordpress plugin.</em></p><blockquote><p>G. FREE IMAGE EDITORS</p></blockquote></li><li><p><a
    href="https://www.canva.com/">**Canva:</a> **<em>Amazingly simple graphic design
    for bloggers.</em></p></li><li><p><a href="http://apps.pixlr.com/editor/">**Pixlr:</a>**
    <em>Pixlr Editor is a robust browser photo editor.</em></p></li><li><p><a href="https://evernote.com/skitch/">**Skitch:</a>
    **<em>Get your point across with fewer words.</em></p></li><li><p><a href="http://www.easel.ly/">**Easel.ly:</a>
    **<em>Empowers anyone to create &amp; share powerful visuals.</em></p></li><li><p><a
    href="http://www.internetmarketingninjas.com/seo-tools/favicon-generator-crop-images/">**Social
    Image Resizer Tool:</a> **<em>Create optimized images for social media.</em></p></li><li><p><a
    href="https://placeit.net/">**Placeit:</a> **<em>Free product mockups &amp; templates.</em></p></li><li><p><a
    href="http://www.recitethis.com/">**Recite:</a> **<em>Turn a quote into a visual
    masterpiece.</em></p></li><li><p><a href="http://memegenerator.net/">**Meme Generator:</a>
    **<em>The first online meme generator.</em></p><blockquote><p>H. COLLECT &amp;
    SEND EMAILS FOR FREE</p></blockquote></li><li><p><a href="https://wordpress.org/plugins/contact-form-7/">**Contact
    form 7:</a> **<em>Famous Wordpress plugin to collect email addresses.</em></p></li><li><p><a
    href="http://mailchimp.com/">**Mailchimp:</a> **<em>Send 12,000 emails to 2,000
    subscribers for free.</em></p></li><li><p><a href="https://www.manycontacts.com/">**ManyContactsBar:</a>
    **<em>Free contact form sits on top of your website.</em></p></li><li><p><a href="http://hellobar.com">**Hello
    Bar:</a> **<em>Get more email subscribers.</em></p></li><li><p><a href="https://sumome.com/app/list-builder">**Sumome
    List Builder:</a> **<em>Collect email addresses with light box popover.</em></p></li><li><p><a
    href="https://wordpress.org/plugins/dreamgrow-scroll-triggered-box/">**Scroll
    Triggered Box:</a> **<em>Boost your conversion rates — Wordpress only.</em></p></li><li><p><a
    href="http://sumome.com/app/scroll-box">**Sumome Scroll Box:</a> **<em>Capture
    more email addresses, politely.</em></p><blockquote><p>I. FREE SOCIAL MEDIA +
    COMMUNITY MANAGEMENT + SURVEYS</p></blockquote></li><li><p><a href="http://writerack.com/">**WriteRack:</a>
    **<em>The easiest way to blog/tweetstorm on twitter.</em></p></li><li><p><a href="http://www.tryspruce.com/">**Spruce:</a>
    **<em>Make Twitter ready images in seconds.</em></p></li><li><p><a href="http://coschedule.com/click-to-tweet">**Click
    To Tweet:</a> **<em>Get more shares on your content.</em></p></li><li><p><a href="https://www.jotform.com">**JotForm:</a>
    **<em>The easiest way to build online forms</em></p></li><li><p><a href="http://mytweetlinks.com/">**MyTweetLinks:</a>
    **<em>Increases Twitter traffic.</em></p></li><li><p><a href="http://www.latergram.me/">**Latergram</a>:
    **<em>Easily plan &amp; schedule your Instagram posts.</em></p></li><li><p><a
    href="https://wordpress.org/plugins/pinterest-pin-it-button-for-images/">**Wordpress
    Pin it Button for Images:</a> **<em>Add a “Pin It” button.</em></p></li><li><p><a
    href="http://www.sharedcount.com/">**SharedCount:</a> **<em>Track URL shares,
    likes, tweets, and more.</em></p></li><li><p><a href="http://www.justunfollow.com/">**Justunfollow:</a>
    **<em>Follow / unfollow people on Twitter &amp; Instagram.</em></p></li><li><p><a
    href="https://www.socialrank.com/">**SocialRank:</a> **<em>Identify, organize,
    and manage your followers on Twitter.</em></p></li><li><p><a href="http://blog.klout.com/2014/06/klout-browser-extensions/">**Klout:</a>
    **<em>Social media influence score on browser extension.</em></p></li><li><p><a
    href="https://ritetag.com/hashtag-academy/ritetag-browser-extensions-scheduling-productivity">**Ritetag:</a>
    **<em>Instant hashtag analysis.</em></p></li><li><p><a href="https://chrome.google.com/webstore/detail/social-analytics/pgckigmaefoaemjpijdepakcghjkggmg/related">**Social
    Analytics:</a> **<em>Interactions for a URL on most social platforms.</em></p></li><li><p><a
    href="http://crowdriff.com/riffle/">**Riffle:</a> **<em>Full profile and info
    on any Twitter user.</em></p></li><li><p><a href="https://bufferapp.com">**Buffer
    Free Plan:</a> **<em>Schedule posts to Twitter, Facebook, Linkedin, Google+.</em></p></li><li><p><a
    href="https://bitly.com/">**Bitly:</a> **<em>Create, share, and track shortened
    links.</em></p></li><li><p><a href="http://filament.io/flare">**Flament:</a> **<em>A
    free beautiful and customizable sharing bar.</em></p></li><li><p><a href="http://www.addthis.com/">**Addthis:</a>
    **<em>Get more shares, follows and conversions.</em></p></li><li><p><a href="https://sumome.com/app/share">**Sumome
    Share:</a> **<em>Auto-optimizes your share buttons for max traffic.</em></p></li><li><p><a
    href="https://wordpress.org/plugins/digg-digg/installation/">**Digg Digg:</a>
    **<em>Your all in one share buttons plugin.</em></p></li><li><p><a href="https://disqus.com/">**Disqus:</a>
    **<em>Build a community of active readers &amp; commenters.</em></p></li><li><p><a
    href="http://tally.tl/">**Tally:</a> **<em>Create polls in no time.</em></p><blockquote><p>J.
    A/B TESTS &amp; GROWTH HACKING</p></blockquote></li><li><p><a href="http://petithacks.com/">**Petit
    Hacks:</a> **<em>Acquisition, retention, &amp; revenue hacks used by companies.</em></p></li><li><p><a
    href="https://www.optimizely.com">**Optimizely:</a> **<em>One optimization platform
    for websites and mobile apps.</em></p></li><li><p><a href="http://hellobar.com">**Hello
    Bar:</a> **<em>Tool for A/B testing different CTAs &amp; power words.</em></p></li><li><p><a
    href="https://growthhackers.com/">**GrowthHackers:</a> **<em>Unlocking growth.
    Together.</em></p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*DnZ8sZKc1W8ZRYecOWL6rA.png"
    alt="Icon by Simple Icons [http://thenounproject.com/term/web-design/32232/](http://thenounproject.com/term/web-design/32232/)"><em>Icon
    by Simple Icons <a href="http://thenounproject.com/term/web-design/32232/">http://thenounproject.com/term/web-design/32232/</a></em></p><h2>→
    Design + Code ←</h2><blockquote><p>A. FREE DESIGN RESOURCES</p></blockquote><ul><li><p><a
    href="http://freebbble.com/">**Freebbble</a>: **<em>High-quality design freebies
    from Dribbble.</em></p></li><li><p><a href="https://dribbble.com/search?q=freebie">**Dribbble:</a>
    **<em>Dribbble search results for “freebie”. An absolute freebie treasure.</em></p></li><li><p><a
    href="http://graphicburger.com/">**Graphic Burger:</a> **<em>Tasty design resources
    made with care for each pixel.</em></p></li><li><p><a href="http://pixelbuddha.net/">**Pixel
    Buddha:</a> **<em>Free and premium resources for professional community.</em></p></li><li><p><a
    href="http://www.premiumpixels.com/">**Premium Pixels:</a> **<em>Free Stuff for
    Creative Folk.</em></p></li><li><p><a href="http://fribbble.com/">**Fribbble:</a>
    **<em>Free PSD resources by Dribbblers curated by Gilbert Pellegrom.</em></p></li><li><p><a
    href="http://freebiesbug.com/">**Freebiesbug:</a> **<em>Latest free PSDs &amp;
    other resources for designers.</em></p></li><li><p><a href="http://365psd.com/">**365
    Psd:</a> **<em>Download a free psd every day.</em></p></li><li><p><a href="http://dbfreebies.co/">**Dbf:</a>
    **<em>Dribbble &amp; Behance best design freebies.</em></p></li><li><p><a href="https://marvelapp.com/resources/">**Marvel:</a>
    **<em>Free resources from designers we love.</em></p></li><li><p><a href="http://uispace.net/">**UI
    Space:</a> **<em>High quality hand-crafted Freebies for awesome people.</em></p></li><li><p><a
    href="http://www.pixeden.com/free-design-web-resources">**Free Section of Pixeden:</a>
    **<em>Free design resources.</em></p></li><li><p><a href="https://creativemarket.com/free-goods">**Free
    Section of Creative Market:</a> **<em>Freebies coming out every monday.</em></p></li><li><p><a
    href="http://www.teehanlax.com/tools/iphone/">**Teehan+Lax:</a> **<em>DiOS 8 GUI
    PSD (iPhone 6).</em></p></li><li><p><a href="http://www.teehanlax.com/tools/ipad/">**Teehan+Lax:</a>
    **<em>iPad UI PSD.</em></p></li><li><p><a href="http://www.freepik.com/">**Freepik:</a>
    **<em>iFree graphic resources for everyone.</em></p></li><li><p><a href="http://www.techandall.com/">**Tech&amp;All:</a>
    **<em>PSD, Tech News, and other resources for free.</em></p></li><li><p><a href="http://www.invisionapp.com/tethr">**Tethr:</a>
    **<em>The most beautiful IOS design KIT ever.</em></p><blockquote><p>B. COLOR
    PICKERS</p></blockquote></li><li><p><a href="http://www.materialpalette.com/">**Material
    Palette:</a> **<em>Generate &amp; export your Material Design color palette.</em></p></li><li><p><a
    href="http://www.flatuicolorpicker.com/">**New Flat UI Color Picker:</a> **<em>Best
    flat colors for UI design.</em></p></li><li><p><a href="http://flatuicolors.com/">**Flat
    UI Colors:</a> **<em>Beautiful flat colors.</em></p></li><li><p><a href="http://coolors.co/">**Coolors:</a>
    **<em>Super fast color schemes generator for cool designers.</em></p></li><li><p><a
    href="http://bjango.com/mac/skalacolor/">**Skala Color:</a> **<em>An extraordinary
    color picker for designers and developers.</em></p></li><li><p><a href="http://couleursapp.com/">**Couleurs:</a>
    **<em>Simple app for grabbing &amp; tweaking colors you see on screen.</em></p></li><li><p><a
    href="http://www.materialui.co/colors">**Material UI Colors:</a> **<em>Material
    ui color palette for Android, Web &amp; iOS.</em></p></li><li><p><a href="http://colorfulgradients.tumblr.com/">**Colorful
    Gradients:</a> **<em>Gradients automatically created by a computer.</em></p></li><li><p><a
    href="http://briangonzalez.github.io/jquery.adaptive-backgrounds.js/">**Adaptive
    Backgrounds:</a> **<em>Extract dominant colours from images.</em></p></li><li><p><a
    href="http://brandcolors.net/">**Brand Colors:</a> **<em>Colors used by famous
    brands.</em></p></li><li><p><a href="http://paletton.com/">**Paletton:</a> **<em>The
    color scheme designer.</em></p></li><li><p><a href="http://www.0to255.com/">**0
    to 255:</a> **<em>A simple tool that helps web designers find variations of any
    color.</em></p></li><li><p><a href="http://www.colourlovers.com/">**Colour Lovers:</a>
    **<em>Create &amp; share colors, palettes, and patterns.</em></p></li><li><p><a
    href="https://color.adobe.com/create/color-wheel/">**Adobe Color CC:</a> **<em>Color
    combinations from the Kuler community.</em></p></li><li><p><a href="http://bootflat.github.io/color-picker.html">**Bootflat:</a>
    **<em>Perfect colors for flat designs.</em></p></li><li><p><a href="http://hex.colorrrs.com/">**Hex
    Colorrrs:</a> **<em>Hex to RGB converter.</em></p></li><li><p><a href="http://getuicolors.com/">**Get
    UI Colors:</a> **<em>Get awesome UI colors.</em></p></li><li><p><a href="https://www.coleure.com/">**Coleure:</a>
    **<em>Smart color picker.</em></p></li><li><p><a href="http://colllor.com/">**Colllor:</a>
    **<em>Color palette generator.</em></p></li><li><p><a href="https://chrome.google.com/webstore/detail/palette-for-chrome/oolpphfmdmjbojolagcbgdemojhcnlod">**Palette
    for Chrome:</a> **<em>Creates a color palette from any image.</em></p><blockquote><p>C.
    INSPIRATION</p></blockquote></li><li><p><a href="http://www.materialup.com/">**MaterialUp:</a>
    **<em>Daily material design inspiration.</em></p></li><li><p><a href="http://fltdsgn.com/">**FLTDSGN</a>:
    **<em>Daily showcase of the best flat UI design websites and apps.</em></p></li><li><p><a
    href="http://www.siteinspire.com/">**Site Inspire:</a> **<em>Web design inspiration.</em></p></li><li><p><a
    href="http://ui-cloud.com/">**UI Cloud:</a> **<em>The largest user interface design
    database in the world.</em></p></li><li><p><a href="http://www.gomoodboard.com/">**Moodboard:</a>
    **<em>Build a beautiful moodboard and share the result.</em></p></li><li><p><a
    href="http://www.crayon.co/">**Crayon:</a> **<em>The most comprehensive collection
    of marketing designs.</em></p></li><li><p><a href="http://land-book.com/">**Land-Book:</a>
    **<em>Product landing pages gallery.</em></p></li><li><p><a href="http://ocean.ink/">**Ocean:</a>
    **<em>A community of designers sharing feedback.</em></p></li><li><p><a href="https://dribbble.com/">**Dribbble:</a>
    **<em>Show and tell for designers.</em></p></li><li><p><a href="https://www.behance.net/">**Behance:</a>
    **<em>Showcase &amp; discover creative work.</em></p></li><li><p><a href="http://www.pttrns.com/">**Pttrns:</a>
    **<em>Mobile user interface patterns.</em></p></li><li><p><a href="https://www.pinterest.com/warmarc/flat-ui-design/">**Flat
    UI Design:</a> **<em>Useful board I discovered thanks to <a href="https://medium.com/@erikdkennedy/7-rules-for-creating-gorgeous-ui-part-2-430de537ba96">Erik</a>.</em></p></li><li><p><a
    href="http://www.awwwards.com/">**Awwwards:</a> **<em>The awards for design, creativity
    and innovation.</em></p></li><li><p><a href="http://www.thestarterkit.info/">**The
    Starter Kit:</a> **<em>Curated resources for developers and designers.</em></p></li><li><p><a
    href="http://onepagelove.com/">**One Page Love:</a> **<em>Resource for one page
    website inspiration.</em></p></li><li><p><a href="http://www.uiparade.com/">**UI
    Parade:</a> **<em>User interface design tools and design inspiration.</em></p></li><li><p><a
    href="https://www.thebestdesigns.com/">**The Best Designs:</a> **<em>The best
    of web design.</em></p></li><li><p><a href="http://agiledesigners.com/">**Agile
    Designers</a>: **<em>Best resources for designers &amp; developers.</em></p></li><li><p><a
    href="https://niice.co/">**Niice:</a> **<em>A search engine with taste.</em></p><blockquote><p>D.
    FREE STOCK PHOTOGRAPHY</p></blockquote></li><li><p><a href="http://www.sitebuilderreport.com/stock-up">**Stock
    Up:</a> **<em>Best free stock photo websites in one place.</em></p></li><li><p><a
    href="http://www.pexels.com/">**Pexels:</a> **<em>Best free photos in one place.</em></p></li><li><p><a
    href="http://allthefreestock.com/">**All The Free Stock:</a> **<em>Free stock
    images, icons, and videos.</em></p></li><li><p><a href="http://unsplash.com/">**Unsplash:</a>
    **<em>Free (do whatever you want) high-resolution photos.</em></p></li><li><p><a
    href="http://www.splashbase.co/">**Splashbase:</a> **<em>Search &amp; discover
    free, hi res photos &amp; videos.</em></p></li><li><p><a href="http://startupstockphotos.com/">**Startup
    Stock Photos:</a> **<em>Go. Make something.</em></p></li><li><p><a href="http://jaymantri.com/">**Jay
    Mantri:</a> **<em>Free pics. do anything (CC0). Make magic.</em></p></li><li><p><a
    href="http://moveast.me/">**Moveast:</a> **<em>This is a journey of a portuguese
    guy moving east.</em></p></li><li><p><a href="http://travelcoffeebook.com/">**Travel
    Coffee Book:</a> **<em>Sharing beautiful travel moments.</em></p></li><li><p><a
    href="http://www.designerspics.com/">**Designers Pics:</a> **<em>Free photographs
    for your personal &amp; commercial use.</em></p></li><li><p><a href="http://deathtothestockphoto.com/">**Death
    to the Stock Photo:</a> **<em>Free photos sent to you every month.</em></p></li><li><p><a
    href="http://foodiesfeed.com/">**Foodie’s Feed:</a> **<em>Free food pictures in
    hi-res.</em></p></li><li><p><a href="http://mazwai.com/">**Mazwai:</a> **<em>Free
    creative commons HD video clips &amp; footages.</em></p></li><li><p><a href="http://jeshoots.com/">**Jéshoots</a>:
    **<em>New modern free photos.</em></p></li><li><p><a href="http://superfamous.com/">**Super
    Famous:</a> **<em>Photos by Dutch interaction designer Folkert Gorter.</em></p></li><li><p><a
    href="http://picography.co/">**Picography</a>: **<em>Free hi-resolution photos.</em></p></li><li><p><a
    href="http://pixabay.com/">**Pixabay:</a> **<em>Free high quality images.</em></p></li><li><p><a
    href="http://magdeleine.co/">**Magdeleine:</a> **<em>A free high-resolution photo
    every day.</em></p></li><li><p><a href="http://snapographic.com/">**Snapographic:</a>
    **<em>Free stock photos for personal &amp; commercial use.</em></p></li><li><p><a
    href="http://littlevisuals.co/">**Little Visuals:</a> 7 **<em>hi-res images in
    your inbox every 7 days.</em></p></li><li><p><a href="http://splitshire.com/">**Splitshire:</a>
    **<em>Delicious free stock photos.</em></p></li><li><p><a href="http://nos.twnsnd.co/">**New
    Old Stock:</a> **<em>Vintage photos from the public archives.</em></p></li><li><p><a
    href="http://picjumbo.com/">**Picjumbo:</a> **<em>Totally free photos.</em></p></li><li><p><a
    href="http://www.lifeofpix.com/">**Life of Pix:</a> **<em>Free high-resolution
    photos.</em></p></li><li><p><a href="http://www.gratisography.com/">**Gratisography:</a>
    **<em>Free high-resolution photos.</em></p></li><li><p><a href="http://getrefe.com/downloads/category/free/">**Getrefe:</a>
    **<em>Free photos.</em></p></li><li><p><a href="http://www.imcreator.com/free">**IM
    Free:</a> **<em>A curated collection of free resources.</em></p></li><li><p><a
    href="http://cupcake.nilssonlee.se/">**Cupcake:</a> **<em>A photographer’s treat
    by Jonas Nilsson Lee.</em></p></li><li><p><a href="http://thepatternlibrary.com/">**The
    Pattern Library:</a> **<em>Free patterns for your projects.</em></p></li><li><p><a
    href="http://publicdomainarchive.com/">**Public Domain Archive:</a> **<em>New
    100% free stock photos.</em></p></li><li><p><a href="http://isorepublic.com/">**ISO
    Republic:</a> **<em>High-quality, free photos for creatives.</em></p></li><li><p><a
    href="http://stokpic.com/">**Stokpic:</a> **<em>Totally free photos.</em></p></li><li><p><a
    href="http://kaboompics.com/">**Kaboompics:</a> **<em>The best way to get free
    photos.</em></p></li><li><p><a href="http://wefunction.com/category/free-photos/">**Function</a>:
    **<em>Free photo packs.</em></p></li><li><p><a href="http://mmt.li/">**MMT:</a>
    **<em>Free stock photos by Jeffrey Betts.</em></p></li><li><p><a href="http://pjrvs.com/a/photos">**Paul
    Jarvis:</a> **<em>Free high-resolution photos.</em></p></li><li><p><a href="http://lockandstockphotos.com/">**Lock
    &amp; Stock Photos:</a> **<em>Free stock photos for you.</em></p></li><li><p><a
    href="http://www.raumrot.com/10/">**Raumrot:</a> **<em>Free high-resolution picture.</em></p></li><li><p><a
    href="http://photos.bucketlistly.com/">**Bucketlistly:</a> **<em>A free creative
    common collection of travel photos.</em></p></li><li><p>Some more websites: <a
    href="http://www.freedigitalphotos.net/">**Free Digital Photos</a> |<a href="http://morguefile.com/">Morguefile</a>
    | <a href="http://www.publicdomainpictures.net/">Public Domain Pictures</a> |
    <a href="http://www.stockvault.net/">Stockvault</a> | <a href="http://www.imagefree.com/">ImageFree</a>
    | <a href="http://www.dreamstime.com/free-images_pg1">Rgbstock</a> |<a href="http://www.rgbstock.com/">Dreamstime</a>
    | <a href="http://www.freeimages.com/">Free Images</a> | <a href="http://freerangestock.com/">Free
    Range Stock</a> | <a href="http://freephotosbank.com/">Free Photos Bank</a>.**</p></li><li><p><strong><em>Some
    hand-picked some free photo packs:</em></strong></p></li><li><p>→ from <em>Free
    Goodies for Designers: (<a href="http://dealjumbo.com/freebies/the-ultimate-photo-pack-free-version/">***here</a>
    | <a href="http://dealjumbo.com/freebies/people-places-and-things-photo-bundle/">here</a>
    | <a href="http://dealjumbo.com/freebies/24-free-photos-vintage-workshop/">here</a>
    | <a href="http://dealjumbo.com/freebies/30-free-photos-from-kaboompics/">here</a>
    | <a href="http://dealjumbo.com/freebies/12-free-nature-photos/">here</a> | <a
    href="http://dealjumbo.com/freebies/12-free-nature-photos-v-2/">here</a> | <a
    href="http://dealjumbo.com/freebies/12-free-nature-photos-v-3/">here</a> | <a
    href="http://dealjumbo.com/freebies/13-free-geometric-backgroundsshapes/">here</a>
    |<a href="http://dealjumbo.com/freebies/10-free-geometric-backgrounds/">here</a>
    | *</em>and <a href="http://dealjumbo.com/freebies/free-hero-header-presentation-images/">**here</a>.)**,</p></li><li><p><em>→
    from Deal Jumbo: (<a href="http://dealjumbo.com/freebies/the-ultimate-photo-pack-free-version/">***here</a>
    | <a href="http://dealjumbo.com/freebies/people-places-and-things-photo-bundle/">here</a>
    | <a href="http://dealjumbo.com/freebies/24-free-photos-vintage-workshop/">here</a>
    | <a href="http://dealjumbo.com/freebies/30-free-photos-from-kaboompics/">here</a>
    | <a href="http://dealjumbo.com/freebies/12-free-nature-photos/">here</a> | <a
    href="http://dealjumbo.com/freebies/12-free-nature-photos-v-2/">here</a> | <a
    href="http://dealjumbo.com/freebies/12-free-nature-photos-v-3/">here</a> | <a
    href="http://dealjumbo.com/freebies/13-free-geometric-backgroundsshapes/">here</a>
    |<a href="http://dealjumbo.com/freebies/10-free-geometric-backgrounds/">here</a>
    | *</em>and <a href="http://dealjumbo.com/freebies/free-hero-header-presentation-images/">**here</a>.),**</p></li><li><p><em>→
    from Dribbble: (<a href="https://dribbble.com/shots/1659014-Free-Download-Nature-Photo-Pack">***here</a>
    | <a href="https://dribbble.com/shots/1584133-2014-workspace-free-photos">here</a>
    | <a href="https://dribbble.com/shots/1561280-Free-Vintage-Photos">here</a> |
    <a href="https://dribbble.com/shots/1093355-Free-Blurred-Backgrounds">here</a>
    | <a href="https://dribbble.com/shots/609751-8-Backgrounds-Free-download">here</a>
    | <a href="https://dribbble.com/shots/1671186-Hip-Bundle-mockups-collection">here</a>
    | <a href="https://dribbble.com/shots/1789659-Freebie-Friday">here</a> |<a href="https://dribbble.com/shots/1669946-Freebie-Hero-Image">here</a>
    | *</em>and <a href="https://dribbble.com/shots/1619059-His-Mercies-Background-2x">**here</a>.)**,</p></li><li><p><em>→
    from Graphic Burger: (<a href="http://graphicburger.com/wood-forest-free-photos/">***here</a>
    | <a href="http://graphicburger.com/iceland-free-photos-vol-1/">here</a> | <a
    href="http://graphicburger.com/iceland-free-photos-vol-2/">here</a> | <a href="http://graphicburger.com/5-bokeh-backgrounds-vol-1/">here</a>
    | <a href="http://graphicburger.com/3-infinite-wooden-floors/">here</a> | <a href="http://graphicburger.com/5-blurred-backgrounds-vol-1/">here</a>
    | *</em>and <a href="http://graphicburger.com/3-curved-wooden-backdrops-vol-1/">**here</a>.)**</p><blockquote><p>E.
    FREE TYPOGRAPHY</p></blockquote></li><li><p><a href="http://www.typegenius.com/">**TypeGenius:</a>
    **<em>Find the perfect font combo for your next project.</em></p></li><li><p><a
    href="http://www.fontsquirrel.com/">**Font Squirrel:</a> 100**<em>% free commercial
    fonts.</em></p></li><li><p><a href="http://www.fontface.ninja/">**FontFaceNinja:</a>
    **<em>Browser extension to find the web fonts a site uses.</em></p></li><li><p><a
    href="http://www.google.com/fonts">**Google Fonts:</a> **<em>Free, open-source
    fonts optimized for the web.</em></p></li><li><p><a href="http://hellohappy.org/beautiful-web-type/">**Beautiful
    Web Type:</a> **<em>Best typefaces from the Google web fonts directory.</em></p></li><li><p><a
    href="http://www.dafont.com/">**DaFont:</a> **<em>Archive of freely downloadable
    fonts.</em></p></li><li><p><a href="http://www.1001freefonts.com/">**1001 Free
    Fonts:</a> **<em>A huge selection of free fonts.</em></p></li><li><p><a href="http://www.fontpark.net/en/">**FontPark:</a>
    **<em>The web’s largest archive of free fonts.</em></p></li><li><p><a href="http://font-to-width.com/">**Font-to-width:</a>
    **<em>Fit pieces of text snugly within their containers.</em></p><blockquote><p>F.
    FREE ICONS</p></blockquote></li><li><p><a href="http://fontello.com/">**Fontello:</a>
    **<em>Icon fonts generator.</em></p></li><li><p><a href="http://www.flaticon.com/">**Flat
    Icon:</a> **<em>A search engine for 16000+ glyph vector icons.</em></p></li><li><p><a
    href="https://github.com/google/material-design-icons/releases/tag/1.0.0">**Material
    Design Icons:</a> **<em>750 Free open-source glyphs by Google.</em></p></li><li><p><a
    href="http://fortawesome.github.io/Font-Awesome/">**Font Awesome:</a> **<em>The
    iconic font and CSS toolkit.</em></p></li><li><p><a href="http://glyphsearch.com/">**Glyphsearch:</a>
    **<em>Search for icons from other icon databases.</em></p></li><li><p><a href="http://makeappicon.com/">**MakeAppIcon:</a>
    **<em>Generate App Icons of all sizes with a click.</em></p></li><li><p><a href="http://www.endlessicons.com/">**Endless
    Icons:</a> **<em>Free flat icons and creative stuff.</em></p></li><li><p><a href="https://icomoon.io/">**Ico
    Moon:</a> 4000**<em>+ free vector icons, icon generator.</em></p></li><li><p><a
    href="http://thenounproject.com/">**The Noun Project:</a> **<em>Thousands of glyph
    icons from different artists.</em></p></li><li><p><a href="http://perfecticons.com/">**Perfect
    Icons:</a> **<em>A social icon creation tool.</em></p></li><li><p><a href="https://github.com/google/material-design-icons/releases/tag/1.0.0">**Material
    Design Icons:</a> 750 **<em>Free open-source glyphs by Google.</em></p></li><li><p><a
    href="https://www.iconfinder.com/free_icons">**Icon Finder:</a> **<em>Free icon
    section of the website.</em></p></li><li><p><em>Free Round Icons: <a href="http://roundicons.com/doodle-icons-free-set/">***Doodle
    Set</a> | <a href="http://roundicons.com/free-icons/">Flat Set</a> | <a href="http://roundicons.com/free-vector-line-icons-set/">Vector
    Line Set</a></em>*</p></li><li><p><a href="http://iconsweets.com/">**Icon Sweets:</a>
    **<em>60 free vector Photoshop icons.</em></p><blockquote><p>G. FREE USEFUL STUFF</p></blockquote></li><li><p><a
    href="http://uinames.com/">**UI Names:</a> **<em>Generate random names for use
    in designs and mockups.</em></p></li><li><p><a href="http://uifaces.com/">**UI
    Faces:</a> **<em>Find and generate sample avatars for user interfaces.</em></p></li><li><p><a
    href="http://uiblurbs.com/">**UI Blurbs:</a> **<em>Quick user bios for your mockups.</em></p></li><li><p><a
    href="http://copypastecharacter.com/">**Copy Paste Character:</a> **<em>Click
    to copy.</em></p></li><li><p><a href="https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh/details?hl=en">**Window
    Resizer:</a> **<em>See how it looks on various screen resolutions.</em></p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*e9HtOVMvEpwheMXWMMwxBQ.png" alt="Icon
    by Luboš Volkov [http://thenounproject.com/term/check-list/20936/](http://thenounproject.com/term/check-list/20936/)"><em>Icon
    by Luboš Volkov <a href="http://thenounproject.com/term/check-list/20936/">http://thenounproject.com/term/check-list/20936/</a></em></p><h2>→
    Work &amp; Productivity ←</h2><blockquote><p>A. BACKGROUND SOUND TO FOCUS</p></blockquote><ul><li><p><a
    href="http://www.noisli.com/">**Noisli</a>: **<em>Background noise &amp; color
    generator.</em></p></li><li><p><a href="http://noiz.io/">**Noizio:</a> **<em>Ambient
    sound equalizer for relax or productivity.</em></p></li><li><p><a href="http://defonic.com/">**Defonic:</a>
    **<em>Combine the sounds of the world into a melody.</em></p></li><li><p><a href="https://designers.mx/">**Designers.mx:</a>
    **<em>Curated playlists by designers, for designers.</em></p></li><li><p><a href="https://coffitivity.com/">**Coffitivity:</a>
    **<em>Stream the sounds of a coffee shop at work.</em></p><blockquote><p>B. AVOID
    DISTRACTION</p></blockquote></li><li><p><a href="http://selfcontrolapp.com/">**Self
    Control</a>: **<em>Mac: free application to help you avoid distracting websites.</em></p></li><li><p><a
    href="http://getcoldturkey.com/">**Cold Turkey:</a> **<em>Windows: temporarily
    block yourself off of distracting websites.</em></p><blockquote><p>C. ORGANIZE
    &amp; COLLABORATE</p></blockquote></li><li><p><a href="https://trello.com/">**Trello:</a>
    **<em>Keeps track of everything.</em></p></li><li><p><a href="https://evernote.com/">**Evernote:</a>
    **<em>The workspace for your life’s work.</em></p></li><li><p><a href="https://www.dropbox.com">**Dropbox:</a>
    **<em>Free space up to 2GB.</em></p></li><li><p><a href="http://yanado.com/">**Yanado:</a>
    **<em>Tasks management inside Gmail.</em></p></li><li><p><a href="https://www.wetransfer.com/">**Wetransfer:</a>
    **<em>Free transfer up to 2GB.</em></p></li><li><p><a href="http://drp.io/">**Drp.io:</a>
    **<em>Free, fast, private and easy image and file hosting.</em></p></li><li><p><a
    href="http://getpocket.com/">**Pocket:</a> **<em>View later, put it in Pocket.</em></p></li><li><p><a
    href="http://www.mailtoself.com/">**Mailtoself:</a> **<em>An iOS extension to
    mail notes to yourself from any app.</em></p></li><li><p><a href="http://list.ly/">**List.ly:</a>
    **<em>Discover and create great lists.</em></p></li><li><p><a href="https://markticle.com/">**Markticle</a>:
    **<em>Mark your reading progress in articles for later.</em></p><blockquote><p>D.
    DIGITAL NOMADS &amp; REMOTE WORKING</p></blockquote></li><li><p><a href="http://nomadli.st">**Nomadlist:</a>
    **<em>The best cities to live and work remotely.</em></p></li><li><p><a href="http://where-my-nomads.at/">**Where
    Nomads at:</a> **<em>Find digital nomads &amp; travelers all around the world.</em></p></li><li><p><a
    href="http://nomadjobs.com">**Nomad Jobs:</a> **<em>The best remote jobs at the
    best startups.</em></p></li><li><p><a href="http://www.whatsitlikeapp.com/">**What’s
    It Like:</a> **<em>Helping travelers figure out WHEN to go.</em></p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*MOWZlV9gH81DGflyfv1Hzw.png" alt="Icon
    by New Haircut [http://thenounproject.com/term/mark/97562/](http://thenounproject.com/term/mark/97562/)"><em>Icon
    by New Haircut <a href="http://thenounproject.com/term/mark/97562/">http://thenounproject.com/term/mark/97562/</a></em></p><h2>→
    Discover &amp; Learn ←</h2><blockquote><p>A. DISCOVER TOOLS &amp; STARTUPS</p></blockquote><ul><li><p><a
    href="http://www.producthunt.com/">**Product Hunt:</a> **<em>Curation of the best
    new products, every day.</em></p></li><li><p><a href="https://angel.co/">**Angellist:</a>
    **<em>Where the world meets startups.</em></p></li><li><p><a href="http://betalist.com/">**Beta
    List:</a> **<em>Discover and get early access to tomorrow’s startups.</em></p></li><li><p><a
    href="http://startupli.st/">**StartupLi.st:</a> **<em>Find. Follow. Recommend
    startups.</em></p></li><li><p><a href="http://www.startups-list.com/">**Startups
    List:</a> **<em>Collections of the best startups in different places.</em></p></li><li><p><a
    href="http://erlibird.com">**Erli Bird:</a>** <em>Where great new products are
    born.</em></p><blockquote><p>B. BUILD TOGETHER</p></blockquote></li><li><p><a
    href="https://assembly.com/discover">**Assembly:</a> **<em>Co-create new ideas
    no matter where they are.</em></p></li><li><p><a href="https://www.cofounderslab.com/">**CoFoundersLab:</a>
    **<em>Find a co-founder in any city, any industry.</em></p></li><li><p><a href="http://www.founder2be.com/">**Founder2be:</a>
    **<em>Find a co-founder for your startup.</em></p><blockquote><p>C. LEARN</p></blockquote></li><li><p><a
    href="http://www.skillshare.com/">**Skillshare:</a> **<em>Unlock your creativity
    with free online classes &amp; projects.</em></p></li><li><p><a href="https://www.khanacademy.org">**Khan
    Academy:</a> **<em>Free, world-class education for anyone, anywhere.</em></p></li><li><p><a
    href="https://www.coursera.org/">**Coursera:</a> **<em>Free online classes from
    80+ top universities &amp; organizations.</em></p></li><li><p><a href="http://www.codecademy.com/">**Codecademy:</a>
    **<em>Learn to code interactively, for free.</em></p></li><li><p>How to start
    a startup: <a href="https://itunes.apple.com/us/podcast/how-to-start-a-startup/id922398209?mt=2">**As
    an Audio Podcast</a> <strong>or <a href="https://startupclass.co/">**As Online
    Course</a></strong></p></li><li><p><a href="http://startupnotes.org/">**Startup
    Notes:</a> **<em>Startup School invites amazing founders to tell their story.</em></p></li><li><p><a
    href="http://how.co/">**The How:</a> **<em>Learn from entrepreneurs.</em></p></li><li><p><a
    href="http://launchthisyear.com/">**Launch This Year:</a> **<em>Guide to help
    you launch your online business.</em></p></li><li><p><a href="http://closedclub.co/">**Closed
    Club:</a> **<em>Browse shut-down start-ups &amp; learn why they closed down.</em></p></li><li><p><a
    href="http://startuptalks.tv/">**Startup Talks:</a> **<em>A curated collection
    of startup related videos.</em></p></li><li><p><a href="http://rocketship.fm/">**Rocketship.fm:</a>
    **<em>Learn from successful entrepreneurs each week.</em></p></li><li><p><a href="http://resrc.io/">**reSRC.io:</a>
    **<em>All free programming learning resources.</em></p><blockquote><p>D. NEWSLETTERS
    THAT DON’T SUCK</p></blockquote></li><li><p><a href="http://email1k.com/">**Email1K:</a>
    **<em>A free 30 day course to double your email list.</em></p></li><li><p><a href="http://designforhackers.com/">**Design
    for Hackers:</a> 12 **<em>weeks of design learning, right in your inbox.</em></p></li><li><p><a
    href="https://www.startupdigest.com/">**Startup Digest:</a> **<em>Personalized
    newsletter for all things startup in your area.</em></p></li><li><p><a href="http://mattermark.com/app/Newsletter">**Mattermark
    Daily:</a> **<em>Curated newsletter from investors &amp; founders.</em></p></li><li><p><a
    href="http://doubleyourfreelancing.com/free-pricing-course/">**ChargeWhatYou’reWorth:</a>
    **<em>Free course on charging what you’re worth.</em></p></li><li><p><a href="http://www.productpsychology.com/">**Product
    Psychology:</a> **<em>Lessons on User Behavior.</em></p></li><li><p><a href="http://www.theuxnewsletter.com/">**UX
    Newsletter:</a> **<em>Tales of researching, designing, and building.</em></p></li><li><p><a
    href="http://uxdesignweekly.com/">**UX Design Weekly:</a> **<em>Best user experience
    design links every week.</em></p><blockquote><p>E. USEFUL</p></blockquote></li><li><p><a
    href="http://foundrs.com/">**Foundrs:</a> **<em>Co-founder equity calculator.</em></p></li><li><p><a
    href="http://ad-spend-calculator.qwilr.com/">**Ad Spend Calculator:</a> **<em>Should
    my startup pay to advertise?</em></p></li><li><p><a href="http://howmuchtomakeanapp.com/">**HowMuchToMakeAnApp:</a>
    **<em>Calculate the cost of a mobile application.</em></p></li><li><p><a href="http://howmuchtomakeanapp.com/build-a-website-vs-app/">**App
    vs. Website:</a>** <em>Should you build an app or website?</em></p></li><li><p><a
    href="http://pitcherific.com/">**Pitcherific:</a>*** Pitcherific helps you create,
    train, and improve your pitch.*</p><p><em>This post is part of a series of stories
    that explore the fundamentals of entrepreneurship and building your thing.</em></p><p>*<em>1.
    <a href="https://medium.com/swlh/long-term-thinking-is-most-powerful-when-everything-is-falling-apart-4b3649071e60">Long-term
    thinking is most powerful when everything is falling apart</a>*</em>Lessons from
    founders who built their empires over the last decade</p><p>*<em>2. <a href="https://medium.com/swlh/how-quitting-my-corporate-job-for-my-startup-dream-f-cked-my-life-up-3b6b3e29b318">How
    Quitting My Corporate Job for My Startup Dream F*cked My Life Up</a>*</em>Success
    will come slowly. Cash will burn fast.</p><p><strong>3. <a href="https://medium.com/swlh/how-we-got-11-3-million-pageviews-without-the-growth-hacking-bullshit-5e0456dcbe3">How
    we got 11.3 million pageviews without the growth hacking bullsh*t</a></strong>Growth
    begins with words.</p><p>*<em>4. <a href="https://medium.com/swlh/the-single-biggest-reason-most-entrepreneurs-fail-in-2014-4c7e41e013cb">Why
    Most Entrepreneurs Struggle</a>*</em>Don’t start a company unless it’s an obsession.</p><p>*<em>5.
    +300 Awesome Free Things for Entrepreneurs and Startups*</em>A massive list of
    free stuff made by awesome people.</p><p><strong>6. <a href="https://medium.com/swlh/why-i-just-fucking-did-it-8367d34daacf">Why
    I Just Did It</a></strong>And how you can, too.</p></li></ul>'
  :author: The Startup
  :topic: startups
- :url: https://medium.com/signal-v-noise/trickle-down-workaholism-in-startups-a90ceac76426?source=search_post---------1
  :title: Trickle-down workaholism in startups
  :content: '<p>Trickle-down workaholism in startups</p><p>If you want to understand
    why so many startups become infected with unhealthy work habits, or outright workaholism,
    a good place to start your examination is in the attitudes of their venture capital
    investors.</p><p>Consider this Twitter thread involving two famous VCs, Keith
    Rabois and Mark Suster:</p><p><img src="https://cdn-images-1.medium.com/max/3004/1*SeM1rcc1T9Abmrl5VbhHyA.png"
    alt=""></p><p>These sentiments are hardly aberrations. There’s an ingrained mythology
    around startups that not only celebrates burn-out efforts, but damn well requires
    it. It’s the logical outcome of trying to compress a lifetime’s worth of work
    into the abbreviated timeline of a venture fund.</p><p>It’s not hard to understand
    why such a mythology serves the interest of money men who spread their bets wide
    and only succeed when unicorns emerge. Of course they’re going to desire fairytale
    sacrifices. There’s little to no consequence to them if the many fall by the wayside,
    spent to completion trying to hit that home run. Make me rich or die tryin’.</p><p>The
    entrepreneurs who sign up for such pressures may have asked for it. If you, knowing
    their sentiments, ask Rabois or Suster for millions to fund your venture, then
    you probably should expect to have your vacations, weekends, hobbies, family time,
    or outings with the kids questioned.</p><p>But the pressures don’t stop with the
    person who signs the term sheet. That shit trickles down. In fact, it’s likely
    to amplify as it rolls down the hill, like a snowball gathering mass. Because
    once the millions have cleared, and the headcount has been boosted, it’s usually
    other people who actually have to make good on those exponential expectations.</p><p>The
    sly entrepreneur seeks to cajole their employees with carrots. Organic, locally-sourced
    ones, delightfully prepared by a master chef, of course. In the office. Along
    with all the other pampering and indulgent spoils AT THE OFFICE. The game is to
    make it appear as though employees choose this life for themselves, that they
    just love spending all their waking (and in some cases, even sleeping) hours at
    that damn office.</p><p>And if the <a href="http://www.shmoop.com/brave-new-world/soma-symbol.html">soma</a>-like
    inducements don’t work, there’s always the lofty talk about THE MISSION: We’re
    not just here to capture more attention or steal more privacy in the name of advertising,
    no, we’re connecting the world! Your single-track life has meaning! All your sacrifices
    are for a greater good!</p><p>Yeah, right.</p><p>Not only are these sacrifices
    statistically overwhelmingly likely to be in vain, they’re also completely disproportionate.
    The programmer or designer or writer or even manager that gives up their life
    for a 80+ hour moonshot will comparably-speaking be compensated in bananas, even
    if their lottery coupon should line up. The lion’s share will go to the Scar and
    his hyenas, not the monkeys.</p><p><img src="https://cdn-images-1.medium.com/max/4232/1*ZT-OcDY9-2Hkqde1T15n5Q.png"
    alt="Just listen to teacher / I know it sounds sordid but you’ll be rewarded /
    When at last I am given my dues!"><em>Just listen to teacher / I know it sounds
    sordid but you’ll be rewarded / When at last I am given my dues!</em></p><p>And
    yet so many continue to go along, because they already went this far. Sunk cost
    is an easy theoretical concept, but it’s devilishly hard to put in practice. Which
    is why the yoke of the four-year vesting cliff, the short-exercise window for
    options, and all the other tricks and techniques employed by cap table-designing
    masters are so effective. Once the hook is in, the line and the sinker follows
    easily.</p><p>But it will be in spite of prevailing evidence on the power of sleep,
    recuperation, and sustainable work habits. Whether you’re a top-flight basketball
    player, like Kobe Bryant, whose <a href="https://www.popworkouts.com/kobe-bryant-workout-routine/">off-season
    work schedule</a> is limited to just six hours per day:</p><blockquote><p>The
    Kobe Bryant workout routine features a hefty mix of track work, basketball skills
    and weightlifting. His off-season workout has been called the 666 program because
    he spends 2 hours running, 2 hours on basketball, and 2 hours weightlifting (for
    a total of 6 hours a day, six times a week, for six months).</p></blockquote><p>Or
    his competitor, LeBron James, who frequently gets 12 hours of sleep. Or any of
    the other star athletes who <a href="https://sleep.org/articles/athletes-and-sleep/">prioritize
    their sleep and recuperation</a> as a key component of their performance:</p><blockquote><p>Since
    athletes need more sleep than average people, eight to 10 hours of zzz’s a night
    is recommended, and that’s not just before game day — that’s every evening. After
    all, the more often and more vigorously you use your muscles, the more time it
    takes for your body to repair and rebuild them. Roger Federer and LeBron James
    famously snooze for an average of 12 hours a night, while Usain Bolt, Venus Williams,
    Maria Sharapova, and Steve Nash get up to 10 hours a night. Federer has said,
    “If I don’t sleep 11 to 12 hours per day, it’s not right.</p></blockquote><p>Or
    how about prodigious thinkers and writers, like Trollope, Dickens, or Darwin who
    <a href="http://nautil.us/issue/46/balance/darwin-was-a-slacker-and-you-should-be-too">all
    sought to complete their work within fixed, modest slices of the day, and then
    kept the rest for leisure</a>. Here’s Darwin’s routine:</p><blockquote><p>After
    his morning walk and breakfast, Darwin was in his study by 8 and worked a steady
    hour and a half. At 9:30 he would read the morning mail and write letters. At
    10:30, Darwin returned to more serious work, sometimes moving to his aviary, greenhouse,
    or one of several other buildings where he conducted his experiments. By noon,
    he would declare, “I’ve done a good day’s work,” and set out on a long walk on
    the Sandwalk, a path he had laid out not long after buying Down House. (Part of
    the Sandwalk ran through land leased to Darwin by the Lubbock family.)When he
    returned after an hour or more, Darwin had lunch and answered more letters. At
    3 he would retire for a nap; an hour later he would arise, take another walk around
    the Sandwalk, then return to his study until 5:30, when he would join his wife,
    Emma, and their family for dinner. On this schedule he wrote 19 books, including
    technical volumes on climbing plants, barnacles, and other subjects; the controversial
    Descent of Man; and The Origin of Species, probably the single most famous book
    in the history of science, and a book that still affects the way we think about
    nature and ourselves.</p></blockquote><p>Neither these athletes or these writers
    were giving up anything on whatever contemporaries that may have put in more time,
    more hours, or greater sacrifices. Their contributions to the world were in no
    way diminished by their balanced approach, quite the contrary.</p><p>So don’t
    tell me that there’s something uniquely demanding about building yet another fucking
    startup that dwarfs the accomplishments of The Origin of Species or winning five
    championship rings. It’s bullshit. Extractive, counterproductive bullshit peddled
    by people who either need a narrative to explain their personal sacrifices and
    regrets or who are in a position to treat the lives and wellbeing of others like
    cannon fodder.</p><p>Finally, as way of having my own skin in the game, we’ve
    been running a wonderfully successful business at <a href="https://basecamp.com/?source=svn">Basecamp</a>
    for some fourteen years now. One profitable since the get-go without demanding
    the total consumption of life force from the people working here. Neither from
    Jason nor I, nor from our employees.</p><p>Hell, right now, we’re working <a href="https://github.com/basecamp/handbook/blob/master/benefits-and-perks.md#summer-hours">our
    four-day summer weeks</a> until the end of August. This while servicing over a
    hundred thousand paying customers, stewarding <a href="http://rubyonrails.org">Ruby
    on Rails</a>, <a href="https://m.signalvnoise.com/the-calm-company-our-next-book-d0ed917cc457">writing
    a new book</a>, and ranting with a fervor against the extractive logic of many
    a venture capitalist. Forty hours or less has been plenty to do all of that since
    the beginning, and it’s likely to be plenty for you too.</p><p>Workaholism is
    a disease. We need treatment and coping advice for those afflicted, not cheerleaders
    for their misery.</p><p><em>If the ways of venture capital has you thinking there’s
    gotta be another way, then I invite you to read <a href="https://m.signalvnoise.com/reconsider-41adf356857f">RECONSIDER</a>
    and <a href="https://m.signalvnoise.com/exponential-growth-devours-and-corrupts-c5562fbf131">Exponential
    growth devours and corrupts</a>. The alternative path exists.</em><a href="https://basecamp.com/svn"><strong>Try
    Basecamp free for 30 days</strong><em>Trusted by millions, Basecamp puts everything
    you need to get work done in one streamlined, organized place.</em>basecamp.com</a></p>'
  :author: Signal v. Noise
  :topic: startups
- :url: https://medium.com/swlh/build-a-product-vs-focus-on-growth-addc4d8fa7c2?source=search_post---------2
  :title: Growing Startups When the Product Sucks
  :content: '<p>We have exactly $325,710 left in our bank account.</p><p>The cash
    is burning fast, and we’ve already wasted a big portion of our seed investment
    trying to market a product for which we thought we had already found a product/market
    fit.</p><p><em>“Four out of ten,”</em> shouts Lauren, breaking the silence we’ve
    had for almost twenty minutes in our meeting room.</p><p>Things were finally looking
    promising, with the new version of our product we’ve been testing over the last
    weeks.</p><blockquote><p>“Four out of ten people repurchased our new product!
    And some even brought their friends. Now, imagine we achieved such a high repeat
    rate and word of mouth in all the locations where we’ll be launching.”</p></blockquote><p>Sitting
    today in this meeting room in Singapore and seeing Lauren’s excitement over those
    four out of ten people, I remember, once again, how reading <a href="http://blog.samaltman.com/the-only-way-to-grow-huge">those
    powerful lines</a> from Sam Altman had hit me back in 2013:</p><blockquote><h1>“…
    if you want to be a great company someday, you have to eventually build something
    so good that people will recommend it to their friends-in fact, so good that they
    want to be the first one to recommend it to their friends for the implied good
    taste. No growth hack, brilliant marketing idea, or sales team can save you long
    term if you don’t have a sufficiently good product.”</h1></blockquote><p>I’ve
    helped quite a few startups with growth, but this was probably one of the rare
    ones where the founder’s entire focus was on organic growth, driven by customer
    satisfaction and word of mouth.</p><p>It was really rare, though. Usually, the
    first months at a startup begin with a ‘exploration phase’ where you often hear
    <em>‘oh yes, we just got the first $500K investment, let’s hire as many good people
    as we can and spend the money on exploring growth channels like Facebook ads.’</em></p><p>Then,
    this attitude quickly disappears as the runway gets shorter.</p><p>Soon, things
    get serious and it’s time your HR brings on board an analyst to understand where
    those dollars went and which of those random traction channels brought growth.</p><p>And
    if what starts as a simple analysis turns into a decision to restructure your
    entire startup, the marketing team is likely to be the first to get kicked out
    the door, so those not-yet-fired can make the product work with the rest of the
    cash left in the bank account.</p><p>But why hire and fire fast or focus on growth
    too soon, before understanding whether your product was working in the first place?</p><p>It
    turns out this often-overlooked dilemma is more complicated than it seems.</p><h2>Product
    vs. Growth</h2><p>It’s obvious: The first step to building a great company starts
    with making something worth talking about.</p><p>But what is not so obvious is
    at what stage of building your startup do you understand whether what you’ve made
    is something worth talking about?</p><p>When you’re still small, it’s easy to
    fool yourself (and investors) and bring month-over-month growth by spending money
    on inorganic growth channels such as ads, marketing, or getting featured on TechCrunch.</p><p>But
    as you grow bigger, it gets increasingly difficult to sustain such growth rate
    by buying your way through if the word about your product isn’t spreading organically.</p><p>At
    this stage, you might take different routes, among which also lie these two options:</p><ul><li><p>Step
    back to understand what exactly isn’t working with your product and iterate/pivot
    or have the guts to start over if necessary.</p></li><li><p>To sustain the same
    growth rate, set more aggressive targets for marketing and sales teams.</p><blockquote><h1>“…
    if your product isn’t quite working, but you have to hit these really aggressive
    targets, you end up forcing it… even if you hit the numbers, they won’t be real.
    You spent a lot of money to get there. And what is the point in acquiring all
    those users, if they leave once they see the product?”</h1></blockquote></li></ul><p>That’s
    <a href="http://andrewchen.co/">Andrew Chen</a>, part of the growth team at Uber,
    once again, <a href="https://blog.mixpanel.com/2016/03/16/andrew-chen-and-the-state-of-growth-hacking/">repeating
    that</a>, without a great product, there is no growth.</p><p>And he isn’t alone,
    either. <a href="https://blog.optimizely.com/2015/05/26/slack-marketing-growth/">According
    to Bill Macaitis</a>, the legendary CMO of hyper-growth startup Slack, when measured
    solely on aggressive short-term metrics, the sales and marketing teams then have
    an incentive <em>“to do bad things to people — to put them in those prison landing
    pages and start calling them before they’re ready.”</em></p><p>This is especially
    important for seed-stage startups thinking about how best to position themselves
    for their series A, as they get confused about whether to focus on traction or
    on product.</p><p>According to renowned investor, <a href="https://twitter.com/robgo">Rob
    Go</a>, when startups focus exclusively on a <a href="https://medium.com/startup-traction/traction-vs-product-499ab3900834#.56qabtr2z">growth
    solves (nearly) all problems</a> strategy, things get sacrificed in favor of growth.
    <em>“You might do unscalable, hacky things to get customers. You might do tons
    of stuff manually to fulfil the promise of your service instead of taking more
    time and using more resources to build software. You will probably make decisions
    to sacrifice margin for growth,”</em> he adds.</p><p><img src="https://cdn-images-1.medium.com/max/3000/0*Yw7NQ7cylTIloZ8i.png"
    alt=""></p><h2>But wait, this isn’t a zero-sum game</h2><p>This isn’t either growth
    or product.</p><p>You still need growth or some traction, at the very least, to
    find the few early customers who will use your product and help you understand
    what they want.</p><p>And many founders <a href="https://medium.dave-bailey.com/why-founders-fail-to-market-their-products-f7c15935c81#.60hnfekjf">will
    also confess</a> focusing only on product and ignoring marketing failed their
    startup, never mind <a href="http://www.slideshare.net/HubSpot/jumpstart-inboundmarketingv2/18-YOURE_NOT_ALONEThe_marketing_has">those
    experts</a> recommending why you should start marketing the day you build your
    product.</p><p>In his best-selling book <a href="https://www.amazon.com/Traction-Startup-Achieve-Explosive-Customer/dp/1591848369">Traction</a>,
    DuckDuckGo founder <a href="https://twitter.com/yegg">Gabriel Weinberg</a> points
    to ‘The 50 Percent Rule’ and suggests spending 50 percent of your time on product
    and 50 percent on traction.</p><p>Hence, the problem isn’t focusing on growth.</p><p>The
    problem is focusing on growth too much, too soon.</p><h2>Having the guts to start
    over</h2><p>Airbnb took <a href="https://blog.ycombinator.com/before-you-grow/">almost
    1000 days</a> to find a product people loved. Since then, their organic growth
    via word of mouth has been phenomenal and still continues today.</p><p>Slack,
    referred to today as the startup with <a href="https://techcrunch.com/2016/04/01/rocketship-emoji/">’insane’
    growth</a>, started with games, kept making games <a href="https://growthhackers.com/growth-studies/slack-fastest-growing-b2b-saas-business-ever">for
    four years</a>, failed at <a href="http://firstround.com/review/From-0-to-1B-Slacks-Founder-Shares-Their-Epic-Launch-Strategy/">making
    games</a>, pivoted its entire team toward communications, started building the
    Slack we know today toward the end of 2012, and only by August of 2013 was it
    running in private beta.</p><p>We easily forget building something great takes
    time, and instead, try to <a href="https://medium.com/startup-traction/traction-vs-product-499ab3900834#.xgz7mm1de">staff
    up very quickly</a> the minute money is in the bank, just because the people we
    found available for hire are great, regardless of whether we actually need them
    or have a position to fill.</p><p>Before stepping on the gas aggressively, why
    not measure if what you’ve built is worth talking about?</p><p>Most startups set
    <a href="https://hbr.org/2003/12/the-one-number-you-need-to-grow">Net Promoter
    Score</a> (NPS) as their number-one metric to measure user love. Some startups
    have also <a href="https://www.groovehq.com/blog/net-promoter-score">been sharing
    lessons</a> from sending their survey to measure NPS.</p><p>And next to NPS, a
    few others, <a href="https://blog.optimizely.com/2015/05/26/slack-marketing-growth/">such
    as Slack</a>, also use <a href="https://en.wikipedia.org/wiki/Customer_satisfaction">CSAT</a>
    (customer satisfaction) as long-term metrics.</p><p>As Sam Altman concluded last
    month <a href="https://blog.ycombinator.com/before-you-grow/">in a follow-up post</a>
    he published after three years:</p><blockquote><h1>“Startups are defined by growth,
    but growth isn’t step one in building a great company. If you focus on trying
    to grow before you make a product people love, you are unlikely to succeed…</h1><h1>…so
    if you’re already growing a company around a mediocre product, fix it now. Don’t
    try to avoid the problem by raising capital for growth– the problems will still
    be there, with higher expectations. And if you’re just starting out, take the
    time to build a product your users love, no matter how long it takes. When they
    actively recommend your product to friends, you’re in the right place.”</h1></blockquote><p>Don’t
    hurt your company by focusing on growth too much, too soon.</p><pre><code>*This
    post is part of a series of stories that explore the fundamentals of escaping
    competition and building a business on your own terms in the most cluttered marketplace
    in history.***1. [To build a business empire, own an opinion (not a marketing
    budget)](https://medium.com/swlh/to-build-a-business-empire-own-an-opinion-not-a-marketing-budget-5834db08810c)**The
    goal is not to sell to everybody who needs what you have.**2. [How we got 11.3
    million pageviews without the growth hacking bullsh*t](https://medium.com/swlh/how-we-got-11-3-million-pageviews-without-the-growth-hacking-bullshit-5e0456dcbe3)**Growth
    begins with words.**3. [Don&#39;t build a startup, build a movement](https://medium.com/swlh/dont-build-a-startup-build-a-movement-15c31213168)**How
    to move the masses by going beyond selling just software**4. [How to escape competition
    (and build a business on your own terms)](https://medium.com/swlh/how-to-escape-competition-and-build-a-business-on-your-own-terms-466a305939ab)**A
    practical framework to build your unique selling proposition**5. Growing startups
    when the product sucks**Don’t hurt your company by focusing on growth too much,
    too soon.**6. [How to build a startup empire without selling your freedom](https://medium.com/swlh/how-to-build-a-startup-empire-without-selling-your-freedom-604143b21a61)**Small
    is the new big.**7. [Sell something bigger than your otherwise boring business](https://medium.com/swlh/how-to-sell-something-bigger-than-your-otherwise-boring-business-b08d12666252)**Don’t
    sell boats. Sell time on the water.**8. [Long-term thinking is most powerful when
    everything is falling apart](https://medium.com/swlh/long-term-thinking-is-most-powerful-when-everything-is-falling-apart-4b3649071e60)**Lessons
    from founders who built their empires over the last decade**9. [I can’t tell you
    why our business is growing](https://medium.com/swlh/kill-your-conversion-funnel-9367e461a46f)**Kill
    your conversion funnel.**10. [The consumer isn’t a moron](https://medium.com/swlh/the-consumer-isn-t-a-moron-c0e58ed2baae)**On
    having an obsession for growth before retention.**11. [The future of growing startups](https://medium.com/swlh/the-future-of-startup-marketing-9b2fa0bf1c91)**Growth
    doesn’t happen overnight.</code></pre>'
  :author: The Startup
  :topic: startups
- :url: https://medium.com/@nemild/four-startup-engineering-killers-1fb5c498391d?source=search_post---------3
  :title: 4 Engineering Mistakes That Kill Startups
  :content: '<p>From chasing shiny tech to scaling too soon, beware these common missteps
    that can endanger your company</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*bgeNz76pgL19vrP5Erv9gQ.jpeg"
    alt=""></p><p>In 2016, I gave technical advice to a first-time CEO and entrepreneur
    building a seed-funded food delivery marketplace. In my view, every tech choice
    the company had made under his direction was wrong.</p><p>He believed in “empowering
    the engineer” and let the company’s first engineer choose the framework (Scala/Play)
    because it was what that engineer wanted to use — not because it made sense for
    the company, the company’s use case, or its recruiting pool. Much of the early
    technical work had been outsourced. The company’s product road map was also wildly
    optimistic (building web and mobile concurrently) despite the fact that most of
    the business was still unvalidated. It was a recipe for disaster.</p><p>Startup
    engineering is different from any other type of software engineering. It demands
    short- and medium-term productivity, relative to the “right way” of building systems.
    It values engineers who are able to iterate quickly and are comfortable with hacky
    code. It rewards pragmatism in technology choices versus picking the most hyped
    — or most stable — technology.</p><p>If your startup has yet to find product-market
    fit, here are four common engineering traps to avoid.</p><h2>1. Premature scaling</h2><p>Premature
    scaling — the most common engineering mistake startups make — trades immediate
    productivity for far-off, and often never-realized, benefits. It means dedicating
    time and resources toward large-scale builds when the company is still too small
    to know what might be needed in the future.</p><p>Premature scaling troubles are
    everywhere in startups. In the early 2010s, relational databases were shunned
    partly for the (perceived) infinite scalability of <a href="https://www.nemil.com/mongo/1.html">NoSQL
    databases</a> like MongoDB and Cassandra. The startup productivity benefits of
    <a href="https://martinfowler.com/bliki/MonolithFirst.html">monoliths</a> has
    been lost in the excitement around microservices. For years, Rails has been called
    <a href="http://blog.jaredfriedman.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/">unfit
    for startups</a> because it is slower than other frameworks.</p><iframe src="https://medium.com/media/2655482ab5bf40affc08d47681b8c5f1"
    frameborder=0></iframe><p>Scaling before reaching product-market fit is a waste
    of engineering resources, and can be devastating to early startups, which often
    have little money and few engineers to deliver on huge feature requirements that
    require constant iteration.</p><p>So, if premature scaling is so deadly to startups,
    why does it occur so often?</p><p>First of all, scaling is fun. The initial version
    of Twitter was a simple, monolithic CRUD application. Just a few years in, however,
    Twitter had a panoply of interesting problems: large amounts of data to query,
    a huge cost to downtime, large usage spikes, a huge user base. Adding the scaled
    technologies to address these needs made being an engineer there more exciting
    and attractive to those looking to join the team. That excitement makes scaling
    too early an easy trap for engineering teams to fall into.</p><p>Second, building
    performant systems only seems rational. Some engineers are appalled by hacky systems,
    treating them as though they are a moral failing. This aversion to potentially
    inelegant solutions can be especially hindering for startup engineers who are
    used to working at large tech companies where everything must be done at scale.
    But there’s a reason “do things that don’t scale” is a <a href="http://www.paulgraham.com/ds.html">regular
    missive</a> at Y Combinator, and it applies to engineering as much as it does
    to business processes.</p><p>Technical debt kills fewer early-stage startups than
    you might think. If your company is successful, you’ll often have the money to
    fix all the engineering shortcuts you’ve taken and mistakes you’ve made.</p><p>Third,
    engineering road maps and tools are built around hyperoptimistic views of the
    future. Startup leaders are idealistic about their business growth because, let’s
    face it, they wouldn’t have started their companies otherwise. Even once a company
    hits a product-market fit — that critical milestone when engineering decisions
    need to be reassessed — the danger is still that you’ll overestimate the level
    of scale you’ll need before you actually need it.</p><p>Trying to anticipate those
    future needs before they arise takes valuable resources away from your immediate
    goal: building a product that people <a href="https://www.nemil.com/musings/make-something-people-need.html">need</a>.</p><h2>2.
    Using shiny, untested technology</h2><p>“Shiny” technology is tech that software
    engineers clamor for. It often makes an engineer’s work easier and more enjoyable,
    especially in the extreme short term. But jumping at the chance to use — and rely
    on — the newest, shiniest tech risks missing better options that are the most
    productive for the broader team in the medium term.</p><p>For example, MongoDB’s
    JavaScript-like DSL and JSON data store made writing code an <a href="https://www.nemil.com/mongo/2.html">easier
    experience</a> for JavaScript developers used to relational SQL databases. But
    ease of use should not be the primary metric when choosing a database.</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/0*2tB2589_Haw1UkMQ.png" alt="*Source:
    Karpov, Valeri. [The MEAN Stack: MongoDB, ExpressJS, AngularJS and Node.js](https://www.slideshare.net/mongodb/mongodb2-21677032/7-MEAN_StackWeb_dev_framework_for)
    (Slideshare)*"><strong>Source: Karpov, Valeri. <a href="https://www.slideshare.net/mongodb/mongodb2-21677032/7-MEAN_StackWeb_dev_framework_for">The
    MEAN Stack: MongoDB, ExpressJS, AngularJS and Node.js</a> (Slideshare)</strong></p><p>During
    a job interview, a software engineer once told me that he’d never work at a company
    that didn’t use CoffeeScript. (Today, the debate might be about <a href="https://news.ycombinator.com/item?id=18839008">using
    Elixir</a>.) His refusal to even consider other tools promised problems down the
    line if the right solution was at odds with his preferred programming language.</p><p>New
    technology has issues, too. The failure states are poorly understood, which makes
    it hard to anticipate how things will break. New languages and frameworks don’t
    have libraries, or many engineers who can write in them. This lack of resources
    increases the development effort and makes recruiting new engineers challenging.
    It also means committing your startup’s scarce engineering resources to learning
    something new, instead of creating features that your users value.</p><p>Engineers
    — especially non-founders — want to implement technology that makes them seem
    relevant in the market. While that makes sense for their own interests and skill-building,
    that kind of approach should be worrying as part of a startup plan. In spaces
    like front-end engineering, having engineers chase the current hype cycle could
    mean rewriting the stack every six to 12 months.</p><p>Early-career developers
    can be especially susceptible to choosing new and shiny technology instead of
    tried and tested tools that make the most sense for the project at hand. Until
    you’ve been through a few hype cycles or seen the downsides of choosing the latest
    technology firsthand, it can be easy to be blinded by glossy marketing pushes
    in Hacker News or at “hackathons” and conferences.</p><blockquote><h1>As an engineer
    you’re taking a huge risk joining a startup. Adding hyped-but-unnecessary technology
    to the mix only heightens that risk.</h1></blockquote><p>Just because a technology
    is hyped doesn’t mean it’s appropriate in a startup environment. When teams are
    small, new developers don’t always have the mentorship from seasoned engineers
    to counteract the external media they see.</p><p>Engineers are already taking
    a huge risk in joining a startup. Adding hyped-but-unnecessary technology to the
    mix only heightens that risk.</p><h2>3. Hiring the wrong engineers</h2><p>It’s
    become a bit of a running joke about job descriptions these days, but startups
    often make the mistake of looking for “rock stars” or “ninjas.” They want employees
    with fancy educational credentials and the pixie dust that comes from having a
    team made up of people who’ve been part of other successful companies.</p><p>In
    Silicon Valley, startup job posts favor candidates who use new and shiny technology
    over more pragmatic engineers who can learn the necessary tools quickly. Once
    a company starts looking for these perceived ninjas and rock stars, it sets the
    tone for every subsequent hire.</p><p>The vast number of software engineers don’t
    work for startups, and startup engineering is rarely taught. As such, most engineers
    who join startups don’t come in with the skill set or attitude to succeed in a
    startup environment. Consequently, startups often rely on engineers who aren’t
    a perfect fit for their projects.</p><p>Each of these engineers brings a different
    sort of risk to a startup:</p><ul><li><p><strong>Large company engineers</strong>
    are often used to scaled systems and may not feel comfortable with hacky startup
    code. They’re also much less likely to have been exposed to their users.</p></li><li><p><strong>Elite
    computer scientists</strong> often get bored by the plumbing-type engineering
    typical of early startup tasks, which can lead to overengineering.</p></li><li><p><strong>Junior
    engineers</strong>, who are often attracted to startups, may inject too much shiny,
    new technology or poorly architect their systems.</p></li><li><p><strong>Development
    shops</strong> often favor technologies that let them be productive across many
    clients. These shops have no incentive to learn new tools for a particular client,
    and also don’t have the long-term skin in the game needed to make critical early
    tech decisions.</p></li></ul><p>Startups need to look beyond degrees and fancy
    resumes to find the best engineering candidates for their projects. Ideal engineers
    for early-stage startups are those who are excited about the company’s mission.
    This ensures they’ll stay, even when the company inevitably hits challenges along
    the journey to product-market fit. These engineers have a minimum viable product
    (MVP) mindset and are comfortable with constant iteration. The best startup engineers
    often have a few years of experience in the workforce or on open-source projects
    — they’ve learned how to maintain systems, not just build them.</p><p>Rather than
    seeing particular technologies as silver bullets, great startup engineers favor
    productive tools that meet the medium-term needs of the organization, and see
    technology as a means to solving a problem. They think about the problem space
    (the user’s needs) and how software can be used to solve the problem, rather than
    looking for a problem that a shiny, new technology can solve.</p><p>They need
    to have can-do attitudes and rise to the Herculean challenges in front of them
    while moderating, but not naysaying, the optimism of the product owners. At the
    same time, these engineers need to have empathy and intuition for their users
    because they often play the role of product when iterating.</p><p>One cautionary
    note: Even among startup engineers, the experience gained at each stage of a startup
    is radically different. A startup engineer who is effective in a team of five
    engineers may be terrible in a team of 25. For startups hiring talent, don’t let
    previous experience as part of a successful startup overwhelm the nuance of what
    that person actually did there.</p><h2>4. Problems with product and management</h2><p>Startup
    founders are wildly optimistic. They have to be. But this means that the product
    road map usually exceeds the capabilities of their small teams, leading to too
    much hiring, too much fundraising, and, eventually, burnout. For management, this
    cycle begins to look like the engineers aren’t performing, when it actually means
    that management hasn’t set a clear and narrow vision.</p><p>The “always be pitching”
    mentality of startup founders can give engineering teams a mistaken sense of certainty
    about how their systems should be built, despite the uncertainty that exists in
    the business model. A better approach for startup founders to adopt is to support
    optimistic engineers while developing (internally) pessimistic business leaders,
    with both sides working together to find product-market fit.</p><p>Management
    teams also often turn to engineering advisers — engineers at other successful
    startups — to help guide their new company. Importing these “experts” can cause
    problems when these advisers try to transplant what has worked at their particular
    company to a new startup that they have spent only a few hours trying to understand.</p><p>Finally,
    management needs to recognize that engineers are a critical component of any major
    product decision. Too often, engineering teams are seen as service organizations
    that can be steamrolled when important business decisions arise. Ensuring a healthy
    relationship between product and engineering teams is just one more reason it’s
    critical to have hired the right engineers (see number three).</p><p>Even if you
    avoid these four startup engineering pitfalls, you’ll still be faced with challenges
    aplenty. But, by steering clear of these traps, at least you’ll worry less about
    self-inflicted wounds.</p><p><em>Thanks to Eddie Kim, Andrew Miklas, Shvet Jain,
    Michael Flaxman, Nick DeMonner, Michael Lapinski, and others for spirited debates
    on these issues.</em></p>'
  :author: Nemil Dalal
  :topic: startups
- :url: https://medium.com/signal-v-noise/silicon-valley-arrogance-i-can-tell-you-which-startups-will-succeed-without-even-knowing-what-89aa8ea35d23?source=search_post---------4
  :title: 'Silicon Valley arrogance: “I can tell you which startups will succeed,
    without even knowing what…'
  :content: <p>According to Marissa Mayer, long hours and weekend work (in person)
    will lead to success</p><p>Yesterday I read <a href="http://www.bloomberg.com/features/2016-marissa-mayer-interview-issue/">this
    article about Marissa Mayer</a>. This quote infuriated me (emphasis mine):</p><blockquote><p>My
    husband [the venture capital investor Zachary Bogue] runs a co-working office
    in San Francisco…<strong>And if you go in on a Saturday afternoon, I can tell
    you which startups will succeed, without even knowing what they do.</strong> <strong>Being
    there on the weekend is a huge indicator of success</strong>, mostly because these
    companies just don’t happen. They happen because of really hard work.</p></blockquote><p>I
    read my fair share about the tech world. I haven’t encountered statements this
    utterly arrogant and silly in a while.</p><p>Let’s break down that quote. She’s
    saying…</p><ul><li><p>Weekend work is a leading indicator of being a successful
    company</p></li><li><p>She can predict success based on the people who are physically
    in the office on a weekend</p></li><li><p>She can predict success without knowing
    anything about a company’s business</p></li></ul><p>What in the actual fuck?</p><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*aYtbXi0_izKFIz_0yupuzA.jpeg" alt=""></p><p>This
    idea that someone could “tell you which startups will succeed, without even knowing
    what they do” is so comically arrogant, I honestly can’t tell if she was being
    serious.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*u8jT4qDlFYsNDNPk3ADp7g.png"
    alt=""></p><p>I guess this kind of thinking from Mayer shouldn’t be all that surprising.</p><p>After
    all she’s <a href="http://allthingsd.com/20130222/physically-together-heres-the-internal-yahoo-no-work-from-home-memo-which-extends-beyond-remote-workers/">the
    CEO who banned remote working</a>. To her, working together in person, in the
    office, is the only way to do great work.</p><p>As a refresher, here’s a snippet
    of the leaked memo Yahoo! sent to its employees:</p><blockquote><p>To become the
    absolute best place to work, communication and collaboration will be important,
    so we need to be working side-by-side. That is why it is critical that we are
    all present in our offices. Some of the best decisions and insights come from
    hallway and cafeteria discussions, meeting new people, and impromptu team meetings.
    Speed and quality are often sacrificed when we work from home. We need to be one
    Yahoo!, and that starts with physically being together.</p></blockquote><p>Because
    let’s not forget — being physically present means you are doing your best work!
    Speed and quality can only happen in person! Never mind that many other companies
    have been successful with remote teams.</p><p>So maybe that helps explain why
    Mayer believes she can walk into an office on a Saturday, survey who’s there in
    person, and can declare the winners.</p><p>Because to her, if you’re not there
    physically, you’ve already failed.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*u8jT4qDlFYsNDNPk3ADp7g.png"
    alt=""></p><p>In the same article, Mayer talks about her experience at Google:</p><blockquote><p>The
    other piece that gets overlooked in the Google story is the value of hard work….The
    actual experience was more like, “Could you work 130 hours in a week?” The answer
    is yes, if you’re strategic about when you sleep, when you shower, and how often
    you go to the bathroom…For my first five years, I did at least one all-nighter
    a week, except when I was on vacation — and the vacations were few and far between.</p></blockquote><p>While
    that might sound crazy to most of us, I don’t really have a problem with it.</p><p>She
    was making a decision <em>for herself</em>. She decided to work long hours, pull
    all nighters, and eschew vacations. That’s her call. ¯_(ツ)_/¯</p><p>But it’s not
    OK to imply that kind of work/life <em>imbalance</em> is a key to success for
    others.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*BSBoIk4KydlpJT3zRn3Hrw.jpeg"
    alt=""></p><p>Hey, if someone wants to work *themselves *into the ground, that’s
    up to them.</p><p><strong>But spreading the message that hard work and success
    can only be achieved through long hours and weekend work — that’s not OK</strong>.
    It’s patently false, and it’s already <a href="https://m.signalvnoise.com/eat-sleep-code-repeat-is-such-bullshit-c2a4d9beaaf5">far
    too pervasive</a> in our industry.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*u8jT4qDlFYsNDNPk3ADp7g.png"
    alt=""></p><p>Look, I get it — by every objective measure of Ha Ha! Business Success™(financial,
    title, industry stature), Mayer is insanely successful. She has achieved far more
    in her professional career than I ever will.</p><p>But I also don’t work weekends.
    I don’t work 130 hours a week. I don’t commute to an office.</p><p>My measures
    of success are way different. I goof off with my kids a lot. I read. I watch movies.
    I eat donuts and pizza. I occasionally travel. I sleep 8 hours a night. I’m rarely
    stressed. I revel in being boring and old.</p><p>And I do that all while genuinely
    enjoying my job and the people I work with (who I rarely see in person).</p><p>In
    Mayer’s world, I could never be a success.</p><p><strong>I’ve never been so fucking
    happy to be a failure.</strong></p><p><em>If you liked this post, please do hit
    the *❤️ *button below. I really appreciate it!</em></p><p><em>On weekdays, for
    about 40 hours a week, I help build <a href="https://basecamp.com/?source=svn-89aa8ea35d23">Basecamp
    3</a> and its companion <a href="https://play.google.com/store/apps/details?id=com.basecamp.bc3">Android
    app</a>. And we somehow managed to build it 100% remotely. Check it out!</em></p>
  :author: Signal v. Noise
  :topic: startups
- :url: https://towardsdatascience.com/data-science-for-startups-introduction-80d022a18aec?source=search_post---------5
  :title: 'Data Science for Startups: Introduction'
  :content: '<p>Data Science for Startups: Introduction</p><p>I recently changed industries
    and joined a startup company where I’m responsible for building up a data science
    discipline. While we already had a solid data pipeline in place when I joined,
    we didn’t have processes in place for reproducible analysis, scaling up models,
    and performing experiments. The goal of this series of blog posts is to provide
    an overview of how to build a data science platform from scratch for a startup,
    providing real examples using Google Cloud Platform (GCP) that readers can try
    out themselves.</p><p>This series is intended for data scientists and analysts
    that want to move beyond the model training stage, and build data pipelines and
    data products that can be impactful for an organization. However, it could also
    be useful for other disciplines that want a better understanding of how to work
    with data scientists to run experiments and build data products. It is intended
    for readers with programming experience, and will include code examples primarily
    in R and Java.</p><h3>Why Data Science?</h3><p>One of the first questions to ask
    when hiring a data scientist for your startup is* how will data science improve
    our product*? At <a href="https://angel.co/windfall-data">Windfall Data</a>, our
    product is data, and therefore the goal of data science aligns well with the goal
    of the company, to build the most accurate model for estimating net worth. At
    other organizations, such as a mobile gaming company, the answer may not be so
    direct, and data science may be more useful for understanding how to run the business
    rather than improve products. However, in these early stages it’s usually beneficial
    to start collecting data about customer behavior, so that you can improve products
    in the future.</p><p>Some of the benefits of using data science at a start up
    are:</p><ol><li><p>Identifying key business metrics to track and forecast</p></li><li><p>Building
    predictive models of customer behavior</p></li><li><p>Running experiments to test
    product changes</p></li><li><p>Building data products that enable new product
    features</p></li></ol><p>Many organizations get stuck on the first two or three
    steps, and do not utilize the full potential of data science. The goal of this
    series of blog posts is to show how managed services can be used for small teams
    to move beyond data pipelines for just calculating run-the-business metrics, and
    transition to an organization where data science provides key input for product
    development.</p><h3>Series Overview</h3><p>Here are the topics I am planning to
    cover for this blog series. As I write new sections, I may add or move around
    sections. Please provide comments at the end of this posts if there are other
    topics that you feel should be covered.</p><ol><li><p><strong>Introduction (this
    post): **Provides</strong> **motivation for using data science at a startup and
    provides an overview of the content covered in this series of posts. Similar posts
    include <a href="https://towardsdatascience.com/functions-of-data-science-4afd5341a659">functions
    of data science</a>, <a href="https://medium.com/windfalldata/scaling-data-science-at-windfall-55f5f23698e1">scaling
    data science</a> and <a href="https://towardsdatascience.com/from-games-to-fintech-my-ds-journey-b7169f08b6ad">my
    FinTech journey</a>.</p></li><li><p><a href="https://towardsdatascience.com/data-science-for-startups-tracking-data-4087b66952a1">**Tracking
    Data:</a>** Discusses the motivation for capturing data from applications and
    web pages, proposes different methods for collecting tracking data, introduces
    concerns such as privacy and fraud, and presents an example with Google PubSub.</p></li><li><p><a
    href="https://medium.com/@bgweber/data-science-for-startups-data-pipelines-786f6746a59a">**Data
    pipelines:</a>** Presents different approaches for collecting data for use by
    an analytics and data science team, discusses approaches with flat files, databases,
    and data lakes, and presents an implementation using PubSub, DataFlow, and BigQuery.
    Similar posts include <a href="https://towardsdatascience.com/a-simple-and-scalable-analytics-pipeline-53720b1dbd35">a
    scalable analytics pipeline</a> and <a href="https://towardsdatascience.com/evolution-of-game-analytics-platforms-4b9efcb4a093">the
    evolution of game analytics platforms</a>.</p></li><li><p><a href="https://towardsdatascience.com/data-science-for-startups-business-intelligence-f4a2ba728e75">**Business
    Intelligence:</a>** Identifies common practices for ETLs, automated reports/dashboards
    and calculating run-the-business metrics and KPIs. Presents an example with R
    Shiny and Data Studio.</p></li><li><p><a href="https://towardsdatascience.com/data-science-for-startups-exploratory-data-analysis-70ac1815ddec">**Exploratory
    Analysis</a>:** Covers common analyses used for digging into data such as building
    histograms and cumulative distribution functions, correlation analysis, and feature
    importance for linear models. Presents an example analysis with the <a href="https://cloud.google.com/bigquery/sample-tables">Natality</a>
    public data set. Similar posts include <a href="https://medium.freecodecamp.org/clustering-the-top-1-asset-analysis-in-r-6c529b382b42">clustering
    the top 1%</a> and <a href="https://towardsdatascience.com/10-years-of-data-science-visualizations-af1dd8e443a7">10
    years of data science visualizations</a>.</p></li><li><p><a href="https://medium.com/@bgweber/data-science-for-startups-predictive-modeling-ec88ba8350e9">**Predictive
    Modeling</a>:** Discusses approaches for supervised and unsupervised learning,
    and presents churn and cross-promotion predictive models, and methods for evaluating
    offline model performance.</p></li><li><p><a href="https://medium.com/@bgweber/data-science-for-startups-model-production-b14a29b2f920">**Model
    Production</a>: **Shows how to scale up offline models to score millions of records,
    and discusses batch and online approaches for model deployment. Similar posts
    include <a href="https://blog.twitch.tv/productizing-data-science-at-twitch-67a643fd8c44">Productizing
    Data Science at Twitch</a>, and <a href="https://towardsdatascience.com/productizing-ml-models-with-dataflow-99a224ce9f19">Producizting
    Models with DataFlow</a>.</p></li><li><p><strong>Experimentation:</strong> Provides
    an introduction to A/B testing for products, discusses how to set up an experimentation
    framework for running experiments, and presents an example analysis with R and
    bootstrapping. Similar posts include <a href="https://blog.twitch.tv/a-b-testing-using-googles-staged-rollouts-ea860727f8b2">A/B
    testing with staged rollouts</a>.</p></li><li><p><strong>Recommendation Systems:</strong>
    Introduces the basics of recommendation systems and provides an example of scaling
    up a recommender for a production system. Similar posts include <a href="https://towardsdatascience.com/prototyping-a-recommendation-system-8e4dd4a50675">prototyping
    a recommender</a>.</p></li><li><p><strong>Deep Learning:</strong> Provides a light
    introduction to data science problems that are best addressed with deep learning,
    such as flagging chat messages as offensive. Provides examples of prototyping
    models with the R interface to <a href="https://keras.rstudio.com/">Keras</a>,
    and productizing with the R interface to <a href="https://tensorflow.rstudio.com/tools/cloudml/articles/getting_started.html">CloudML</a>.</p></li></ol><p>The
    series is also available as a book in <a href="https://bgweber.github.io/">web</a>
    and <a href="https://www.amazon.com/dp/1983057975">print</a> formats.</p><h3>Tooling</h3><p>Throughout
    the series, I’ll be presenting code examples built on Google Cloud Platform. I
    choose this cloud option, because GCP provides a number of managed services that
    make it possible for small teams to build data pipelines, productize predictive
    models, and utilize deep learning. It’s also possible to sign up for a free trial
    with GCP and get $300 in credits. This should cover most of the topics presented
    in this series, but it will quickly expire if your goal is to dive into deep learning
    on the cloud.</p><p>For programming languages, I’ll be using R for scripting and
    Java for production, as well as SQL for working with data in BigQuery. I’ll also
    present other tools such as Shiny. Some experience with R and Java is recommended,
    since I won’t be covering the basics of these languages.</p><p><a href="https://www.linkedin.com/in/ben-weber-3b87482/">Ben
    Weber</a> is a data scientist in the gaming industry with experience at Electronic
    Arts, Microsoft Studios, Daybreak Games, and Twitch. He also worked as the first
    data scientist at a FinTech startup.</p>'
  :author: Towards Data Science
  :topic: startups
- :url: https://medium.com/brasil/trezentas-coisas-gratuitas-e-sensacionais-para-empreendedores-e-startups-4d054afd6395?source=search_post---------6
  :title: Trezentas Coisas Gratuitas e Sensacionais para Empreendedores e Startups
  :content: '<p>Uma enorme lista de recursos gratuitos feitos por pessoas geniais</p><p><img
    src="https://cdn-images-1.medium.com/max/6000/1*0GGz4iJ1wqpd45DDHZOpYA.png" alt=""></p><h2>P.S:
    Você já pode ler meu artigo mais recente aqui: <a href="https://medium.com/everything-about-startups-and-entrepreneurship/how-i-got-6-2-million-pageviews-and-144-920-followers-d4d3fa440802">How
    I Got 6.2 Million Pageviews and 144,920 Followers (em inglês)</a></h2><p><em>Free
    hero image: <a href="http://goo.gl/6xLUHt">http://goo.gl/6xLUHt</a></em></p><h2><strong>por
    <a href="https://medium.com/@meseali">Ali Mese</a></strong></h2><blockquote><h1><a
    href="http://medium.com/@meseali">**Me avise</a> **se eu tiver deixado de fora
    algum recurso útil.</h1></blockquote><p><em>Lista selecionada em mais de 50 blogs
    e sites de tecnologia, tais como TNW, Buffer Blog, Product Hunt, AngelList, Pickcrew,
    Betalist, etc.</em></p><p><img src="https://cdn-images-1.medium.com/max/2000/1*lqvdybYOXnAvDmCAtRbPzw.png"
    alt="Ícone por Five by Five [http://thenounproject.com/term/business/38242/](http://thenounproject.com/term/business/38242/)"><em>Ícone
    por Five by Five <a href="http://thenounproject.com/term/business/38242/">http://thenounproject.com/term/business/38242/</a></em></p><h2>→
    Business + Marketing ←</h2><blockquote><p>A. WEBSITE GRATUITO + LOGO + HOSPEDAGEM
    + INVOICES</p></blockquote><ul><li><p><a href="http://html5up.net/">**HTML5 UP:</a>
    **<em>Templates responsivos de HTML5 e CSS3.</em></p></li><li><p><a href="http://bootswatch.com/">**Bootswatch:</a>
    **<em>Temas gratuitos para Bootstrap.</em></p></li><li><p><a href="http://templated.co/">**Templated:</a>
    **<em>Uma coleção de 845 templates gratuitos de CSS &amp; HTML5.</em></p></li><li><p><a
    href="https://wordpress.org/">**Wordpress.org</a> | <a href="https://wordpress.com/">Wordpress.com</a>:
    **<em>Crie seu novo website de graça.</em></p></li><li><p><a href="https://www.strikingly.com/">**Strikingly.com
    Domain:</a> **<em>Um website gratuito para domínios strikingly.com.</em></p></li><li><p><a
    href="https://withoomph.com/">**Withoomph</a>: **<em>Lindos logos desenhados automaticamente.</em></p></li><li><p><a
    href="http://www.hipsterlogogenerator.com/">**Hipster Logo Generator:</a> **<em>É
    legal, moderno e estiloso. É hipster.</em></p></li><li><p><a href="http://www.squarespace.com/logo/">**Squarespace
    Free Logo:</a> **<em>Download gratuito da versão de baixa resolução.</em></p></li><li><p><a
    href="https://www.hive.im/">**Hive:</a> **<em>O primeiro serviço ilimitado de
    armazenamento em nuvem do mundo .</em></p></li><li><p><a href="http://invoiceto.me/">**Invoice
    to me</a>: **<em>Gerador gratuito de invoices.</em></p></li><li><p><a href="https://www.free-invoice-generator.com/">**Free
    Invoice Generator</a>: **<em>Outro gerador gratuito de invoices.</em></p></li><li><p><a
    href="http://slimvoice.co/">**Slimvoice:</a> **<em>Invoices absurdamente simples.</em></p><blockquote><p>B.
    GERADORES DE NOMES PARA NEGÓCIOS E PROJETOS</p></blockquote></li><li><p><a href="http://thenameapp.com/">**The
    Name App</a>: **<em>Encontre um nome disponível para sua brilhante ideia.</em></p></li><li><p><a
    href="http://www.naminum.com/">**Naminum:</a> **<em>Descubra o nome perfeito para
    sua empresa.</em></p></li><li><p><a href="http://shortdomainsearch.com/">**Short
    Domain Search:</a> **<em>Nomes de domínios curtos e com uma só palavra à disposição.</em></p></li><li><p><a
    href="http://wordoid.com/">**Wordoid:</a> **<em>Escolha um nome curto e chamativo
    para o seu negócio.</em></p></li><li><p><a href="http://www.hipsterbusiness.name/">**Hipster
    Business Name:</a> **<em>Gerador de nome de empresas hipsters.</em></p></li><li><p><a
    href="http://impossibility.org/">**Impossibility</a>: **<em>O melhor gerador de
    nomes de domínios de todos os tempos</em></p></li><li><p><a href="http://www.leandomainsearch.com/">**Lean
    Domain Search</a>: **<em>Encontre um nome de domínio para seu site em questão
    de segundos.</em></p></li><li><p><a href="https://domainr.com/">**Domainr:</a>**
    <em>Busca rápida e gratuita de nomes de domínio. URLs curtos.</em></p><blockquote><p>C.
    TEXTOS / BLOGS</p></blockquote></li><li><p><a href="http://www.hemingwayapp.com/">**Hemingway:</a>
    **<em>Este app torna sua escrita em inglês mais clara e impactante.</em></p></li><li><p><a
    href="https://free.grammarly.com/">**Grammarly:</a> **<em>Localiza e corrige erros
    gramaticais em inglês.</em></p></li><li><p><a href="https://medium.com/">**Medium:</a>
    **<em>Traga suas histórias e ideias.</em></p></li><li><p><a href="http://www.zenpen.io/">**ZenPen:</a>
    **<em>Um processador de texto mínimo na web.</em></p></li><li><p><a href="http://liber.io/">**Liberio:</a>
    **<em>Criação e publicação de ebooks, direto do Google Drive.</em></p></li><li><p><a
    href="https://wordpress.org/plugins/editorial-calendar/">**Editorial Calendar:</a>
    **<em>Veja todos seus posts. Arraste e solte para organizar o seu blog.</em></p></li><li><p><a
    href="https://www.storywars.net/">**Story Wars:</a> **<em>Escreva histórias coletivamente.</em></p></li><li><p><a
    href="http://www.aminstitute.com/headline/">**Headline Analyzer:</a> **<em>Analisa
    o valor de marketing emocional de manchetes (em inglês).</em></p></li><li><p><a
    href="https://wordpress.org/plugins/wp-hide-post/">**WP Hide Post:</a> **<em>Controle
    a visibilidade de itens em seu blog.</em></p></li><li><p><a href="https://wordpress.org/plugins/social-locker/">**Social
    Locker:</a> **<em>Peça aos visitantes para “pagar” pelo seu conteúdo com um tweet,
    etc.</em></p></li><li><p><a href="http://e.ggtimer.com/">**Egg Timer:</a>* <strong>Crie</strong>*
    **<em>um timer e salve nos favoritos para usar novamente.</em></p><blockquote><p>D.
    IDEIAS E TENDÊNCIAS DE CONTEÚDO</p></blockquote></li><li><p><a href="http://www.portent.com/tools/title-maker">**Portent:</a>
    **<em>Gerador de ideias de conteúdo (em inglês).</em></p></li><li><p><a href="http://www.google.com/trends/hottrends/visualize?pn=p1">**Google
    Trends:</a> **<em>Uma nova forma de mostrar termos mais buscados.</em></p></li><li><p><a
    href="http://buzzsumo.com/">**Buzzsumo:</a> **<em>Analize qual conteúdo funciona
    melhor (em inglês).</em></p></li><li><p><a href="http://www.hubspot.com/blog-topic-generator">**Hubspot
    Blog Topic Generator:</a> **<em>Ideias personalizáveis para blogs (em inglês).</em></p></li><li><p><a
    href="http://www.swayy.co/">**Swayy:</a> **<em>Descubra o conteúdo mais impactante.
    Grátis para 1 usuário (em inglês).</em></p></li><li><p><em>Outros: <a href="https://plus.google.com/explore/_">***Google+
    Postagens Interessante</a>s *</em>| <a href="https://twitter.com/">**Twitter Trendin</a>g
    | <a href="http://www.quora.com/Content-Strategy">Quora</a> <strong>| <a href="http://www.reddit.com/">**Reddit</a></strong></p><blockquote><p>E.
    SEO GRÁTIS + ANÁLISE DE WEBSITES</p></blockquote></li><li><p><a href="https://moz.com/researchtools/ose/">**Open
    Site Explorer:</a> **<em>Uma ferramenta compreensível para análise de links.</em></p></li><li><p><a
    href="https://ahrefs.com/">**Ahrefs:</a> **<em>Explorador de sites e checagem
    de backlinks.</em></p></li><li><p><a href="http://www.quicksprout.com/">**Quick
    Sprout:</a> **<em>Análise completa do seu website.</em></p></li><li><p><a href="https://wordpress.org/plugins/wordpress-seo/">**Wordpress
    SEO by Yoast:</a> **<em>Otimização total do seu site WordPress.</em></p></li><li><p><a
    href="http://seositecheckup.com/">**SEO Site Checkup:</a> **<em>Verificação gratuita
    dos problemas de SEO do seu site.</em></p></li><li><p><a href="https://marketing.grader.com/">**Hubspot
    Marketing Grader:</a> **<em>Avalie o seu marketing.</em></p></li><li><p><a href="http://www.similarweb.com/">**SimilarWeb:</a>
    **<em>Analise estatísticas de websites para qualquer domínio.</em></p></li><li><p><a
    href="http://www.alexa.com/">**Alexa Ranking:</a> **<em>Ranqueamento e análise
    de websites.</em></p></li><li><p><a href="https://serps.com/tools/rank_checker">**SERPs
    Rank Checker:</a> **<em>Rankings gratuitos de palavras-chaves e checagem de SERP.</em></p></li><li><p><a
    href="http://openlinkprofiler.org/">**OpenLinkProfiler:</a>** <em>Os backlinks
    mais recentes, de graça.</em></p></li><li><p><a href="http://keywordtool.io/">**Keywordtool.io:</a>
    **<em>Uma alternativa gratuita ao Planejador de Palavras-Chave do Google.</em></p></li><li><p><em>Google:
    <a href="http://www.google.com/analytics/">***Analytics</a> *</em>| <a href="http://adwords.google.com/keywordplanner">**Planejador
    de Palavras-Chave</a> <strong>| <a href="https://www.google.com/webmasters/tools/home?hl=en">**Webmaster
    Tools</a> **| <a href="http://www.google.com/trends/">**Trends</a></strong></p></li><li><p><a
    href="http://nibbler.silktide.com/">**Nibbler:</a> **<em>Teste qualquer site.</em></p></li><li><p><a
    href="http://www.browseo.net/">**Browseo:</a> **<em>Como os sites de busca enxergam
    o seu site.</em></p></li><li><p><a href="http://www.internetmarketingninjas.com/seo-tools/google-sitemap-generator/">**Broken
    Links:</a> **<em>Encontre links quebrados, redirecionamentos e outros problemas.</em></p></li><li><p><a
    href="http://www.copyscape.com/">**Copyscape:</a> **<em>Procure cópias da sua
    página na web.</em></p></li><li><p><a href="http://www.woorank.com/">**Woorank:</a>
    **<em>Avaliação de websites e ferramenta de SEO.</em></p></li><li><p><a href="https://developers.google.com/speed/pagespeed/insights/">**Google
    Pagespeed Insights:</a> **<em>Veja a performance do seu site.</em></p></li><li><p><a
    href="http://tools.pingdom.com/fpt/">**Pingdom Website Speed Test:</a> **<em>Testes
    + tempo de carregamento do site.</em></p></li><li><p><a href="http://gtmetrix.com/">**GTMetrics:</a>
    **<em>Analise a velocidade do seu site.</em></p></li><li><p><a href="https://moz.com/local/search">**Moz
    Local:</a> **<em>Veja suas listagens locais no Google, Bing e outros.</em></p></li><li><p><a
    href="https://www.xml-sitemaps.com/">**XML Sitemaps:</a> **<em>Gerador de mapas
    de sites que cria variações em XML &amp; HTML.</em></p></li><li><p><a href="http://validator.w3.org/">**W3C
    validator</a>: **<em>Serviço de validação fácil de usar.</em></p></li><li><p><a
    href="https://ecommerce.shopify.com/grader">**Shopify E-commerce Report:</a> **<em>Obtenha
    um relatório gratuito do seu e-commerce.</em></p><blockquote><p>F. OTIMIZADORES
    DE IMAGENS GRATUITOS</p></blockquote></li><li><p><a href="https://tinyjpg.com/">**TinyJPG</a>
    | <a href="https://tinypng.com/">TinyPNG</a> **<em>Compactação de imagens.</em></p></li><li><p><a
    href="https://compressor.io/">**Compressor.io:</a>** <em>Otimização e compactação
    de imagens online.</em></p></li><li><p><a href="https://kraken.io/web-interface">**Kraken:</a>
    **<em>Otimize suas imagens e acelere seu site.</em></p></li><li><p><a href="http://www.imageoptimizer.net/Pages/Home.aspx">**ImageOptimizer:</a>
    **<em>Redimensione e diminua o tamanho dos seus arquivos de imagem.</em></p></li><li><p><a
    href="https://imageoptim.com/">**ImageOptim:</a> **<em>Faz as imagens ocuparem
    menos espaço em disco, tornando-as mais rápidas de carregar.</em></p></li><li><p><a
    href="https://wordpress.org/plugins/wp-smushit/">**Smush.it:</a> **<em>Plugin
    do Wordpress para otimização de imagens.</em></p><blockquote><p>G. EDITORES DE
    IMAGENS GRATUITOS</p></blockquote></li><li><p><a href="https://www.canva.com/">**Canva:</a>
    **<em>Design gráfico extremamente simples para blogueiros.</em></p></li><li><p><a
    href="http://apps.pixlr.com/editor/">**Pixlr:</a>** <em>O Pixlr Editor é um editor
    de fotos robusto que pode ser acessado no seu browser.</em></p></li><li><p><a
    href="https://evernote.com/skitch/">**Skitch:</a> **<em>Transmita sua mensagem
    com menos palavras.</em></p></li><li><p><a href="http://www.easel.ly/">**Easel.ly:</a>
    **<em>Estimula a criação e compartilhamento de recursos visuais belos.</em></p></li><li><p><a
    href="http://www.internetmarketingninjas.com/seo-tools/favicon-generator-crop-images/">**Social
    Image Resizer Tool:</a> **<em>Crie imagens otimizadas para mídias sociais.</em></p></li><li><p><a
    href="https://placeit.net/">**Placeit:</a> **<em>Modelos e templates grátis para
    produtos.</em></p></li><li><p><a href="http://www.recitethis.com/">**Recite:</a>
    **<em>Transforme uma citação em uma obra de arte visual.</em></p></li><li><p><a
    href="http://memegenerator.net/">**Meme Generator:</a> **<em>O primeiro gerador
    online de memes.</em></p><blockquote><p>H. COLETA &amp; ENVIO DE EMAILS GRÁTIS</p></blockquote></li><li><p><a
    href="https://wordpress.org/plugins/contact-form-7/">**Contact form 7:</a> **<em>Um
    famoso plugin Wordpress para coletar endereços de email.</em></p></li><li><p><a
    href="http://mailchimp.com/">**Mailchimp:</a> **<em>Mande 12.000 emails para 2.000
    assinantes de graça.</em></p></li><li><p><a href="https://www.manycontacts.com/">**ManyContactsBar:</a>
    **<em>Uma barra de contato no topo do seu site.</em></p></li><li><p><a href="http://hellobar.com">**Hello
    Bar:</a> **<em>Consiga mais assinantes para newsletters.</em></p></li><li><p><a
    href="https://sumome.com/app/list-builder">**Sumome List Builder:</a> **<em>Coleta
    de emails com uma caixinha estilo popover.</em></p></li><li><p><a href="https://wordpress.org/plugins/dreamgrow-scroll-triggered-box/">**Scroll
    Triggered Box:</a> **<em>Aumente sua taxa de conversão — Apenas Wordpress.</em></p></li><li><p><a
    href="http://sumome.com/app/scroll-box">**Sumome Scroll Box:</a> **<em>Capture
    mais endereços de email, educadamente.</em></p><blockquote><p>I. MÍDIA SOCIAL
    GRATUITA + GESTÃO DE COMUNIDADES + PESQUISAS</p></blockquote></li><li><p><a href="http://writerack.com/">**WriteRack:</a>
    **<em>A forma mais fácil de blogar/tuitar.</em></p></li><li><p><a href="http://www.tryspruce.com/">**Spruce:</a>
    **<em>Crie imagens prontas para o Twitter em segundos.</em></p></li><li><p><a
    href="http://coschedule.com/click-to-tweet">**Click To Tweet:</a> **<em>Ganhe
    mais compartilhamentos para seu conteúdo.</em></p></li><li><p><a href="http://mytweetlinks.com/">**MyTweetLinks:</a>
    **<em>Aumenta o tráfego no Twitter.</em></p></li><li><p><a href="http://www.latergram.me/">**Latergram</a>:
    **<em>Faça o planejamento e o agendamento dos seus posts no Instagram com facilidade.</em></p></li><li><p><a
    href="https://wordpress.org/plugins/pinterest-pin-it-button-for-images/">**Wordpress
    Pin it Button for Images:</a> **<em>Adicione um botão “Pin It”.</em></p></li><li><p><a
    href="http://www.sharedcount.com/">**SharedCount:</a> **<em>Rastreamento dos compartilhamentos,
    curtidas, tweets e outras métricas de um URL.</em></p></li><li><p><a href="http://www.justunfollow.com/">**Justunfollow:</a>
    **<em>Para seguir / parar de seguir pessoas no Twitter.</em></p></li><li><p><a
    href="https://www.socialrank.com/">**SocialRank:</a> **<em>Identifique, organize
    e gerencie seus seguidores no Twitter.</em></p></li><li><p><a href="http://blog.klout.com/2014/06/klout-browser-extensions/">**Klout:</a>
    **<em>Escore de influência da mídia social em uma extensão para seu navegador.</em></p></li><li><p><a
    href="https://ritetag.com/hashtag-academy/ritetag-browser-extensions-scheduling-productivity">**Ritetag:</a>
    **<em>Análise instantânea de hashtags.</em></p></li><li><p><a href="https://chrome.google.com/webstore/detail/social-analytics/pgckigmaefoaemjpijdepakcghjkggmg/related">**Social
    Analytics:</a> **<em>Interações de um URL na maioria das plataformas sociais.</em></p></li><li><p><a
    href="http://crowdriff.com/riffle/">**Riffle:</a> **<em>Perfil e informações completas
    de um usuário do Twitter.</em></p></li><li><p><a href="https://bufferapp.com">**Buffer
    Free Plan:</a> **<em>Agende posts no Twitter, Facebook, Linkedin, Google+.</em></p></li><li><p><a
    href="https://bitly.com/">**Bitly:</a> **<em>Crie, compartilhe e rastreie links
    reduzidos.</em></p></li><li><p><a href="http://filament.io/flare">**Flament:</a>
    **<em>Uma barra de compartilhamentos gratuita, bela e personalizável.</em></p></li><li><p><a
    href="http://www.addthis.com/">**Addthis:</a> **<em>Consiga mais compartilhamentos,
    seguidores e conversões.</em></p></li><li><p><a href="https://sumome.com/app/share">**Sumome
    Share:</a> **<em>Otimiza automaticamente seus botões de compartilhamento para
    atingir o máximo de tráfego.</em></p></li><li><p><a href="https://wordpress.org/plugins/digg-digg/installation/">**Digg
    Digg:</a> **<em>Plugin para todos seus botões de compartilhamento.</em></p></li><li><p><a
    href="https://disqus.com/">**Disqus:</a> **<em>Construa uma comunidade de leitores
    e comentaristas ativos.</em></p></li><li><p><a href="http://www.typeform.com/">**Typeform:</a>
    **<em>Criação de belas pesquisas online &amp; construção de formulários .</em></p></li><li><p><a
    href="http://tally.tl/">**Tally:</a> **<em>Crie pesquisas rapidamente.</em></p><blockquote><p>J.
    TESTES A/B &amp; GROWTH HACKING</p></blockquote></li><li><p><a href="http://petithacks.com/">**Petit
    Hacks:</a> **<em>Hacks de aquisição, retenção e renda usados por empresas.</em></p></li><li><p><a
    href="https://www.optimizely.com">**Optimizely:</a> **<em>Plataforma de otimização
    para websites e apps.</em></p></li><li><p><a href="http://Write%20better%20content%20and%20have%20a%20fully%20optimized%20WordPress%20site">**Hello
    Bar:</a> **<em>Ferramenta para testes A/B com diferentes CTAs &amp; palavras de
    impacto.</em></p></li><li><p><a href="https://growthhackers.com/">**GrowthHackers:</a>
    **<em>Possibilitando o crescimento. Juntos.</em></p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*DnZ8sZKc1W8ZRYecOWL6rA.png"
    alt="Ícone por Simple Icons [http://thenounproject.com/term/web-design/32232/](http://thenounproject.com/term/web-design/32232/)"><em>Ícone
    por Simple Icons <a href="http://thenounproject.com/term/web-design/32232/">http://thenounproject.com/term/web-design/32232/</a></em></p><h2>→
    Design + Código ←</h2><blockquote><p>A. RECURSOS DE DESIGN GRATUITOS</p></blockquote><ul><li><p><a
    href="http://freebbble.com/">**Freebbble</a>: **<em>Itens grátis de alta qualidade
    no Dribbble.</em></p></li><li><p><a href="https://dribbble.com/search?q=freebie">**Dribbble:</a>
    **<em>Resultados de busca para “freebie” no Dribbble. Um tremendo acervo de freebies.</em></p></li><li><p><a
    href="http://graphicburger.com/">**Graphic Burger:</a> **<em>Saborosos recursos
    de design feitos com carinho em cada pixel.</em></p></li><li><p><a href="http://pixelbuddha.net/">**Pixel
    Buddha:</a> **<em>Recursos gratuitos e recursos premium para profissionais.</em></p></li><li><p><a
    href="http://www.premiumpixels.com/">**Premium Pixels:</a> **<em>Itens grátis
    para criativos.</em></p></li><li><p><a href="http://fribbble.com/">**Fribbble:</a>
    **<em>Recursos gratuitos de PSD feitos pelo pessoal do Dribbble, organizados por
    Gilbert Pellegrom.</em></p></li><li><p><a href="http://freebiesbug.com/">**Freebiesbug:</a>
    **<em>Os mais recentes PSDs gratuitos &amp; outros recursos para designers.</em></p></li><li><p><a
    href="http://365psd.com/">**365 Psd:</a> **<em>Baixe um PSD gratuito por dia.</em></p></li><li><p><a
    href="http://dbfreebies.co/">**Dbf:</a> **<em>Os melhores freebies de design do
    Dribbble e Behance.</em></p></li><li><p><a href="https://marvelapp.com/resources/">**Marvel:</a>
    **<em>Recursos gratuitos dos designers que amamos.</em></p></li><li><p><a href="http://uispace.net/">**UI
    Space:</a> **<em>Freebies de alta qualidade feitos à mão por pessoas geniais.</em></p></li><li><p><a
    href="http://www.pixeden.com/free-design-web-resources">**Free Section of Pixeden:</a>
    **<em>Recursos gratuitos de design.</em></p></li><li><p><a href="https://creativemarket.com/free-goods">**Free
    Section of Creative Market:</a> **<em>Um novo freebie toda segunda-feira.</em></p></li><li><p><a
    href="http://www.teehanlax.com/tools/iphone/">**Teehan+Lax:</a> **<em>DiOS 8 GUI
    PSD (iPhone 6).</em></p></li><li><p><a href="http://www.teehanlax.com/tools/ipad/">**Teehan+Lax:</a>
    **<em>iPad GUI PSD.</em></p></li><li><p><a href="http://www.freepik.com/">**Freepik:</a>
    **<em>Recursos gráficos gratuitos para todos.</em></p></li><li><p><a href="http://www.techandall.com/">**Tech&amp;All:</a>
    **<em>PSD, notícias de tecnologia e outros recursos grátis.</em></p></li><li><p><a
    href="http://www.invisionapp.com/tethr">**Tethr:</a> **<em>O mais lindo kit de
    design para o iOS que existe.</em></p><blockquote><p>B. SELETORES DE CORES</p></blockquote></li><li><p><a
    href="http://www.materialpalette.com/">**Material Palette:</a> **<em>Crie e exporte
    uma paleta de cores Material Design.</em></p></li><li><p><a href="http://www.flatuicolorpicker.com/">**New
    Flat UI Color Picker:</a> **<em>Os melhores tons flat para UI Design.</em></p></li><li><p><a
    href="http://flatuicolors.com/">**Flat UI Colors:</a> **<em>Lindas cores para
    flat design.</em></p></li><li><p><a href="http://coolors.co/">**Coolors:</a> **<em>Um
    gerador de esquemas de cores extremamente rápido.</em></p></li><li><p><a href="http://bjango.com/mac/skalacolor/">**Skala
    Color:</a> **<em>Um extraordinário seletor de cores para designers e desenvolvedores.</em></p></li><li><p><a
    href="http://couleursapp.com/">**Couleurs:</a> **<em>Um aplicativo simples para
    capturar e fazer ajustes nas cores que surgem em sua tela.</em></p></li><li><p><a
    href="http://www.materialui.co/colors">**Material UI Colors:</a> **<em>Paleta
    de cores Material UI para Android, Web &amp; iOS.</em></p></li><li><p><a href="http://colorfulgradients.tumblr.com/">**Colorful
    Gradients:</a> **<em>Gradientes gerados automaticamente por um computador.</em></p></li><li><p><a
    href="http://briangonzalez.github.io/jquery.adaptive-backgrounds.js/">**Adaptive
    Backgrounds:</a> **<em>Faça a extração de cores dominantes das imagens.</em></p></li><li><p><a
    href="http://brandcolors.net/">**Brand Colors:</a> **<em>Cores usadas por marcas
    famosas.</em></p></li><li><p><a href="http://paletton.com/">**Paletton:</a> **<em>O
    designer de esquemas de cores.</em></p></li><li><p><a href="http://www.0to255.com/">**0
    to 255:</a> **<em>Uma ferramenta simples que ajuda webdesigners a encontrar variações
    de qualquer cor.</em></p></li><li><p><a href="http://www.colourlovers.com/">**Colour
    Lovers:</a> **<em>Crie e compartilhe cores, paletas e padrões.</em></p></li><li><p><a
    href="https://color.adobe.com/create/color-wheel/">**Adobe Color CC:</a> **<em>Combinações
    de cores da comunidade Kuler.</em></p></li><li><p><a href="http://bootflat.github.io/color-picker.html">**Bootflat:</a>
    **<em>Cores perfeitas para flat design.</em></p></li><li><p><a href="http://hex.colorrrs.com/">**Hex
    Colorrrs:</a> **<em>Conversor de Hex para RGB.</em></p></li><li><p><a href="http://getuicolors.com/">**Get
    UI Colors:</a> **<em>Cores UI incríveis.</em></p></li><li><p><a href="https://www.coleure.com/">**Coleure:</a>
    **<em>Seletor de cores inteligente.</em></p></li><li><p><a href="http://colllor.com/">**Colllor:</a>
    **<em>Gerador de paletas de cores.</em></p></li><li><p><a href="https://chrome.google.com/webstore/detail/palette-for-chrome/oolpphfmdmjbojolagcbgdemojhcnlod">**Palette
    for Chrome:</a> **<em>Cria uma paleta de cores a partir de uma imagem.</em></p><blockquote><p>C.
    INSPIRAÇÃO</p></blockquote></li><li><p><a href="http://www.materialup.com/">**MaterialUp:</a>
    **<em>Inspiração diária para Material Design.</em></p></li><li><p><a href="http://fltdsgn.com/">**FLTDSGN</a>:
    **<em>Uma exibição diária dos melhores exemplos de flat design em sites e apps.</em></p></li><li><p><a
    href="http://www.siteinspire.com/">**Site Inspire:</a> **<em>Inspirações para
    webdesign.</em></p></li><li><p><a href="http://ui-cloud.com/">**UI Cloud:</a>
    **<em>O maior banco de dados de design de interface no mundo.</em></p></li><li><p><a
    href="http://www.gomoodboard.com/">**Moodboard:</a> **<em>Crie um belo moodboard
    (painel semântico) e compartilhe o resultado.</em></p></li><li><p><a href="http://www.crayon.co/">**Crayon:</a>
    **<em>A mais completa coleção de marketing design.</em></p></li><li><p><a href="http://land-book.com/">**Land-Book:</a>
    **<em>Galeria de landing pages.</em></p></li><li><p><a href="http://ocean.ink/">**Ocean:</a>
    **<em>Uma comunidade de designers que compartilham feedbacks.</em></p></li><li><p><a
    href="https://dribbble.com/">**Dribbble:</a> **<em>Conheça o trabalho de designers.</em></p></li><li><p><a
    href="https://www.behance.net/">**Behance:</a> **<em>Apresente e descubra trabalhos
    criativos.</em></p></li><li><p><a href="http://www.pttrns.com/">**Pttrns:</a>
    **<em>Padrões de interfaces do usuário para dispositivos móveis.</em></p></li><li><p><a
    href="https://www.pinterest.com/warmarc/flat-ui-design/">**Flat UI Design:</a>
    **<em>Um painel útil que descobri graças a <a href="https://medium.com/@erikdkennedy/7-rules-for-creating-gorgeous-ui-part-2-430de537ba96">Erik</a>.</em></p></li><li><p><a
    href="http://www.awwwards.com/">**Awwwards:</a> **<em>A premiação para o design,
    a criatividade e a inovação.</em></p></li><li><p><a href="http://www.thestarterkit.info/">**The
    Starter Kit:</a> **<em>Seleção de recursos para desenvolvedores e designers.</em></p></li><li><p><a
    href="http://onepagelove.com/">**One Page Love:</a> **<em>Um recurso para inspiração
    em sites “one page”.</em></p></li><li><p><a href="http://www.uiparade.com/">**UI
    Parade:</a> **<em>Ferramentas de design de UI + inspiração em design.</em></p></li><li><p><a
    href="https://www.thebestdesigns.com/">**The Best Designs:</a> **<em>O melhor
    do webdesign.</em></p></li><li><p><a href="http://agiledesigners.com/">**Agile
    Designers</a>: **<em>Os melhores recursos para designers e desenvolvedores.</em></p></li><li><p><a
    href="https://niice.co/">**Niice:</a> **<em>Um site de busca com bom gosto.</em></p><blockquote><p>D.
    BANCOS DE IMAGENS GRATUITOS</p></blockquote></li><li><p><a href="http://www.sitebuilderreport.com/stock-up">**Stock
    Up:</a> **<em>Os melhores bancos de imagens gratuitos em um só lugar.</em></p></li><li><p><a
    href="http://www.pexels.com/">**Pexels:</a> **<em>As melhores fotos gratuitas.</em></p></li><li><p><a
    href="http://allthefreestock.com/">**All The Free Stock:</a> **<em>Imagens, ícones
    e vídeos grátis.</em></p></li><li><p><a href="http://unsplash.com/">**Unsplash:</a>
    **<em>Fotos gratuitas em alta resolução (para fazer o que quiser).</em></p></li><li><p><a
    href="http://www.splashbase.co/">**Splashbase:</a> **<em>Pesquise e descubra fotos
    e vídeos gratuitos, em alta resolução.</em></p></li><li><p><a href="http://startupstockphotos.com/">**Startup
    Stock Photos:</a> **<em>Vá. Contribua com algo.</em></p></li><li><p><a href="http://jaymantri.com/">**Jay
    Mantri:</a> **<em>Fotos grátis. Faça o que quiser com elas (CC0). Faça mágica.</em></p></li><li><p><a
    href="http://moveast.me/">**Moveast:</a> **<em>A jornada de um português viajando
    para o Oriente.</em></p></li><li><p><a href="http://travelcoffeebook.com/">**Travel
    Coffee Book:</a> **<em>Compartilhando lindos momentos em viagens.</em></p></li><li><p><a
    href="http://www.designerspics.com/">**Designers Pics:</a> **<em>Fotografias gratuitas
    para uso pessoal e comercial.</em></p></li><li><p><a href="http://deathtothestockphoto.com/">**Death
    to the Stock Photo:</a> **<em>Fotos gratuitas enviadas mensalmente para você.</em></p></li><li><p><a
    href="http://foodiesfeed.com/">**Foodie’s Feed:</a> **<em>Fotos de comida em alta
    resolução, grátis.</em></p></li><li><p><a href="http://mazwai.com/">**Mazwai:</a>
    **<em>Vídeos e filmagens de alta resolução. Creative Commons.</em></p></li><li><p><a
    href="http://jeshoots.com/">**Jéshoots</a>: **<em>Fotos modernas gratuitas.</em></p></li><li><p><a
    href="http://superfamous.com/">**Super Famous:</a> **<em>Fotos do designer de
    interação holandês Folkert Gorter.</em></p></li><li><p><a href="http://picography.co/">**Picography</a>:
    **<em>Fotos gratuitas de alta resolução.</em></p></li><li><p><a href="http://pixabay.com/">**Pixabay:</a>
    **<em>Imagens gratuitas de alta qualidade.</em></p></li><li><p><a href="http://magdeleine.co/">**Magdeleine:</a>
    **<em>Uma foto grátis de alta resolução, todos os dias.</em></p></li><li><p><a
    href="http://snapographic.com/">**Snapographic:</a> **<em>Fotos gratuitas para
    uso pessoal e comercial.</em></p></li><li><p><a href="http://littlevisuals.co/">**Little
    Visuals:</a> **<em>7 imagens de alta resolução na sua caixa postal a cada 7 dias.</em></p></li><li><p><a
    href="http://splitshire.com/">**Splitshire:</a> **<em>Deliciosas fotos gratuitas.</em></p></li><li><p><a
    href="http://nos.twnsnd.co/">**New Old Stock:</a> **<em>Fotos antigas de arquivos
    públicos.</em></p></li><li><p><a href="http://picjumbo.com/">**Picjumbo:</a> **<em>Fotos
    totalmente grátis.</em></p></li><li><p><a href="http://www.lifeofpix.com/">**Life
    of Pix:</a> **<em>Fotos gratuitas de alta resolução.</em></p></li><li><p><a href="http://www.gratisography.com/">**Gratisography:</a>
    **<em>Fotos gratuitas de alta resolução.</em></p></li><li><p><a href="http://getrefe.com/downloads/category/free/">**Getrefe:</a>
    **<em>Fotos gratuitas.</em></p></li><li><p><a href="http://www.imcreator.com/free">**IM
    Free:</a> **<em>Uma coleção selecionada de recursos grátis.</em></p></li><li><p><a
    href="http://cupcake.nilssonlee.se/">**Cupcake:</a> **<em>O deleite de um fotógrafo,
    por Jonas Nilsson Lee.</em></p></li><li><p><a href="http://thepatternlibrary.com/">**The
    Pattern Library:</a> **<em>Padrões gratuitos para seus projetos.</em></p></li><li><p><a
    href="http://publicdomainarchive.com/">**Public Domain Archive:</a> **<em>Fotos
    novas, 100% gratuitas.</em></p></li><li><p><a href="http://isorepublic.com/">**ISO
    Republic:</a> **<em>Fotos de alta qualidade para criativos.</em></p></li><li><p><a
    href="http://stokpic.com/">**Stokpic:</a> **<em>Fotos totalmente grátis.</em></p></li><li><p><a
    href="http://kaboompics.com/">**Kaboompics:</a> **<em>A melhor maneira de conseguir
    fotos gratuitas.</em></p></li><li><p><a href="http://wefunction.com/category/free-photos/">**Function</a>:
    **<em>Pacotes de fotos gratuitas.</em></p></li><li><p><a href="http://mmt.li/">**MMT:</a>
    **<em>Fotos gratuitas, por Jeffrey Betts.</em></p></li><li><p><a href="http://pjrvs.com/a/photos">**Paul
    Jarvis:</a> <em>**Fotos</em>* *<em>gratuitas de alta resolução.</em></p></li><li><p><a
    href="http://lockandstockphotos.com/">**Lock &amp; Stock Photos:</a> **<em>Fotos
    grátis para você.</em></p></li><li><p><a href="http://www.raumrot.com/10/">**Raumrot:</a>
    **<em>Fotografia de alta resolução.</em></p></li><li><p><a href="http://photos.bucketlistly.com/">**Bucketlistly:</a>
    **<em>Uma coleção gratuita (Creative Commons) com fotos de viagens.</em></p></li><li><p>Mais
    alguns sites: <a href="http://www.freedigitalphotos.net/">**Free Digital Photos</a>
    |<a href="http://morguefile.com/">Morguefile</a> | <a href="http://www.publicdomainpictures.net/">Public
    Domain Pictures</a> | <a href="http://www.stockvault.net/">Stockvault</a> | <a
    href="http://www.imagefree.com/">ImageFree</a> | <a href="http://www.dreamstime.com/free-images_pg1">Rgbstock</a>
    |<a href="http://www.rgbstock.com/">Dreamstime</a> | <a href="http://www.freeimages.com/">Free
    Images</a> | <a href="http://freerangestock.com/">Free Range Stock</a> | <a href="http://freephotosbank.com/">Free
    Photos Bank</a>.**</p></li><li><p><strong><em>Alguns pacotes de fotos gratuitas
    escolhidos a dedo:</em></strong></p></li><li><p>→ <em>do Free Goodies for Designers:
    (<a href="http://dealjumbo.com/freebies/the-ultimate-photo-pack-free-version/">***aqui</a>
    | <a href="http://dealjumbo.com/freebies/people-places-and-things-photo-bundle/">aqui</a>
    | <a href="http://dealjumbo.com/freebies/24-free-photos-vintage-workshop/">aqui</a>
    | <a href="http://dealjumbo.com/freebies/30-free-photos-from-kaboompics/">aqui</a>
    | <a href="http://dealjumbo.com/freebies/12-free-nature-photos/">aqui</a> | <a
    href="http://dealjumbo.com/freebies/12-free-nature-photos-v-2/">aqui</a> | <a
    href="http://dealjumbo.com/freebies/12-free-nature-photos-v-3/">aqui</a> | <a
    href="http://dealjumbo.com/freebies/13-free-geometric-backgroundsshapes/">aqui</a>
    |<a href="http://dealjumbo.com/freebies/10-free-geometric-backgrounds/">aqui</a>
    | *</em>e <a href="http://dealjumbo.com/freebies/free-hero-header-presentation-images/">**aqui</a>.)**,</p></li><li><p><em>→
    do Deal Jumbo: (<a href="http://dealjumbo.com/freebies/the-ultimate-photo-pack-free-version/">***aqui</a>
    | <a href="http://dealjumbo.com/freebies/people-places-and-things-photo-bundle/">aqui</a>
    | <a href="http://dealjumbo.com/freebies/24-free-photos-vintage-workshop/">aqui</a>
    | <a href="http://dealjumbo.com/freebies/30-free-photos-from-kaboompics/">aqui</a>
    | <a href="http://dealjumbo.com/freebies/12-free-nature-photos/">aqui</a> | <a
    href="http://dealjumbo.com/freebies/12-free-nature-photos-v-2/">aqui</a> | <a
    href="http://dealjumbo.com/freebies/12-free-nature-photos-v-3/">aqui</a> | <a
    href="http://dealjumbo.com/freebies/13-free-geometric-backgroundsshapes/">aqui</a>
    |<a href="http://dealjumbo.com/freebies/10-free-geometric-backgrounds/">aqui</a>
    | *</em>e <a href="http://dealjumbo.com/freebies/free-hero-header-presentation-images/">**aqui</a>.),**</p></li><li><p><em>→
    do Dribbble: (<a href="https://dribbble.com/shots/1659014-Free-Download-Nature-Photo-Pack">***aqui</a>
    | <a href="https://dribbble.com/shots/1584133-2014-workspace-free-photos">aqui</a>
    | <a href="https://dribbble.com/shots/1561280-Free-Vintage-Photos">aqui</a> |
    <a href="https://dribbble.com/shots/1093355-Free-Blurred-Backgrounds">aqui</a>
    | <a href="https://dribbble.com/shots/609751-8-Backgrounds-Free-download">aqui</a>
    | <a href="https://dribbble.com/shots/1671186-Hip-Bundle-mockups-collection">aqui</a>
    | <a href="https://dribbble.com/shots/1789659-Freebie-Friday">aqui</a> | <a href="https://dribbble.com/shots/1669946-Freebie-Hero-Image">aqui</a>
    | *</em>e <a href="https://dribbble.com/shots/1619059-His-Mercies-Background-2x">**aqui</a>.)**,</p></li><li><p><em>→
    do Graphic Burger: (<a href="http://graphicburger.com/wood-forest-free-photos/">***aqui</a>
    | <a href="http://graphicburger.com/iceland-free-photos-vol-1/">aqui</a> | <a
    href="http://graphicburger.com/iceland-free-photos-vol-2/">aqui</a> | <a href="http://graphicburger.com/5-bokeh-backgrounds-vol-1/">aqui</a>
    | <a href="http://graphicburger.com/3-infinite-wooden-floors/">aqui</a> | <a href="http://graphicburger.com/5-blurred-backgrounds-vol-1/">aqui</a>
    | e<a href="http://graphicburger.com/3-curved-wooden-backdrops-vol-1/">aqui</a>.)</em>*</p><blockquote><p>E.
    TIPOGRAFIA GRATUITA</p></blockquote></li><li><p><a href="http://www.typegenius.com/">**TypeGenius:</a>
    **<em>Encontre a combinação perfeita de fontes para seu próximo projeto.</em></p></li><li><p><a
    href="http://www.fontsquirrel.com/">**Font Squirrel:</a> **<em>Fontes comerciais
    100% gratuitas.</em></p></li><li><p><a href="http://www.fontface.ninja/">**FontFaceNinja:</a>
    **<em>Extensão para o browser que localiza as fontes utilizadas por um site.</em></p></li><li><p><a
    href="http://www.google.com/fonts">**Google Fonts:</a> **<em>Fontes gratuitas
    de código aberto, otimizadas para a web.</em></p></li><li><p><a href="http://hellohappy.org/beautiful-web-type/">**Beautiful
    Web Type:</a> **<em>Os melhores tipos do diretório de fontes do Google.</em></p></li><li><p><a
    href="http://www.dafont.com/">**DaFont:</a> **<em>Um arquivo de fontes gratuitas
    para baixar.</em></p></li><li><p><a href="http://www.1001freefonts.com/">**1001
    Free Fonts:</a> **<em>Uma enorme coleção de fontes gratuitas.</em></p></li><li><p><a
    href="http://www.fontpark.net/en/">**FontPark:</a> **<em>O maior arquivo de fontes
    da web.</em></p></li><li><p><a href="http://font-to-width.com/">**Font-to-width:</a>
    **<em>Acomode trechos de texto em seus respectivos espaços.</em></p><blockquote><p>F.
    ÍCONES GRATUITOS</p></blockquote></li><li><p><a href="http://fontello.com/">**Fontello:</a>
    **<em>Gerador de fontes a partir de ícones.</em></p></li><li><p><a href="http://www.flaticon.com/">**Flat
    Icon:</a> **<em>Um site de busca para mais de 16000 ícones vetorizados.</em></p></li><li><p><a
    href="https://github.com/google/material-design-icons/releases/tag/1.0.0">**Material
    Design Icons:</a> **<em>750 glifos gratuitos e de código aberto. Por Google.</em></p></li><li><p><a
    href="http://fortawesome.github.io/Font-Awesome/">**Font Awesome:</a> **<em>A
    icônica caixa de ferramentas em fontes e CSS.</em></p></li><li><p><a href="http://glyphsearch.com/">**Glyphsearch:</a>
    **<em>Procure por ícones de outros banco de dados.</em></p></li><li><p><a href="http://makeappicon.com/">**MakeAppIcon:</a>
    **<em>Crie ícones de todos os tamanhos para uso em aplicativos com um clique.</em></p></li><li><p><a
    href="http://www.endlessicons.com/">**Endless Icons:</a> **<em>Ícones flat gratuitos
    e itens criativos.</em></p></li><li><p><a href="https://icomoon.io/">**Ico Moon:</a>
    **<em>Mais de 4000 ícones vetorizados gratuitamente + gerador de ícones.</em></p></li><li><p><a
    href="http://thenounproject.com/">**The Noun Project:</a> **<em>Milhares de ícones
    por diferentes artistas.</em></p></li><li><p><a href="http://perfecticons.com/">**Perfect
    Icons:</a> **<em>Uma ferramenta para a criação de ícones de redes sociais.</em></p></li><li><p><a
    href="https://github.com/google/material-design-icons/releases/tag/1.0.0">**Material
    Design Icons:</a> **<em>750 glifos de código aberto, por Google.</em></p></li><li><p><a
    href="https://www.iconfinder.com/free_icons">**Icon Finder:</a> **<em>A seção
    de ícones gratuitos do site.</em></p></li><li><p><em>Ícones redondos gratuitos:
    <a href="http://roundicons.com/doodle-icons-free-set/">***Doodle Set</a> | <a
    href="http://roundicons.com/free-icons/">Flat Set</a> | <a href="http://roundicons.com/free-vector-line-icons-set/">Vector
    Line Set</a></em>*</p></li><li><p><a href="http://iconsweets.com/">**Icon Sweets:</a>
    **<em>60 ícones vetorizados para Photoshop.</em></p><blockquote><p>G. ITENS ÚTEIS
    E GRATUITOS</p></blockquote></li><li><p><a href="http://uinames.com/">**UI Names:</a>
    **<em>Gerador de nomes aleatórios para uso em design de peças e modelos.</em></p></li><li><p><a
    href="http://uifaces.com/">**UI Faces:</a> **<em>Encontre e crie amostras de fotos
    de avatar para interfaces do usuário</em></p></li><li><p><a href="http://uiblurbs.com/">**UI
    Blurbs:</a> **<em>Rápidas biografias de usuários para usar em seus modelos.</em></p></li><li><p><a
    href="http://copypastecharacter.com/">**Copy Paste Character:</a> **<em>Clique
    para copiar.</em></p></li><li><p><a href="https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh/details?hl=en">**Window
    Resizer:</a> **<em>Veja como algo se parece em várias resoluções de tela.</em></p></li></ul><p><img
    src="https://cdn-images-1.medium.com/max/2000/1*e9HtOVMvEpwheMXWMMwxBQ.png" alt="Ícone
    por Luboš Volkov [http://thenounproject.com/term/check-list/20936/](http://thenounproject.com/term/check-list/20936/)"><em>Ícone
    por Luboš Volkov <a href="http://thenounproject.com/term/check-list/20936/">http://thenounproject.com/term/check-list/20936/</a></em></p><h2>→
    Trabalho &amp; Produtividade←</h2><blockquote><p>A. SOM PARA AJUDAR NA CONCENTRAÇÃO</p></blockquote><ul><li><p><a
    href="http://www.noisli.com/">**Noisli</a>: **<em>Ruído de fundo e gerador de
    cores.</em></p></li><li><p><a href="http://noiz.io/">**Noizio:</a> **<em>Equalizador
    de som ambiente para relaxamento e produtividade.</em></p></li><li><p><a href="http://defonic.com/">**Defonic:</a>
    **<em>Junte os sons do mundo para formar uma melodia.</em></p></li><li><p><a href="https://designers.mx/">**Designers.mx:</a>
    **<em>Playlists selecionadas feitas por designers, para designers.</em></p></li><li><p><a
    href="https://coffitivity.com/">**Coffitivity:</a> **<em>Toque os sons de uma
    cafeteria.</em></p><blockquote><p>B. FERRAMENTAS PARA EVITAR DISTRAÇÕES</p></blockquote></li><li><p><a
    href="http://selfcontrolapp.com/">**Self Control</a>: **<em>Mac: aplicativo gratuito
    para ajudá-lo a evitar sites que o distraem.</em></p></li><li><p><a href="http://getcoldturkey.com/">**Cold
    Turkey:</a> **<em>Windows: bloqueie temporariamente os sites que causam distração.</em></p><blockquote><p>C.
    ORGANIZAÇÃO &amp; COLABORAÇÃO</p></blockquote></li><li><p><a href="https://trello.com/">**Trello:</a>
    **<em>Tome nota de tudo.</em></p></li><li><p><a href="https://evernote.com/">**Evernote:</a>
    **<em>O espaço de trabalho da sua vida.</em></p></li><li><p><a href="https://www.dropbox.com">**Dropbox:</a>
    **<em>Espaço gratuito até 2GB.</em></p></li><li><p><a href="http://yanado.com/">**Yanado:</a>
    **<em>Gerenciamento de tarefas dentro do Gmail.</em></p></li><li><p><a href="https://www.wetransfer.com/">**Wetransfer:</a>
    **<em>Transferências gratuitas de arquivos, até 2GB.</em></p></li><li><p><a href="http://drp.io/">**Drp.io:</a>
    **<em>Hospedagem rápida, privada, gratuita e fácil de arquivos e imagens.</em></p></li><li><p><a
    href="http://getpocket.com/">**Pocket:</a> **<em>Veja depois: guarde no Pocket.</em></p></li><li><p><a
    href="http://www.mailtoself.com/">**Mailtoself:</a> **<em>Uma extensão para o
    iOS que envia recados a você de qualquer aplicativo.</em></p></li><li><p><a href="http://list.ly/">**List.ly:</a>
    **<em>Para descobrir e criar grandes listas.</em></p></li><li><p><a href="https://markticle.com/">**Markticle</a>:
    **<em>Marque o progresso da sua leitura de artigos para continuar mais tarde.</em></p><blockquote><p>D.
    NÔMADES DIGITAIS &amp; TRABALHO À DISTÂNCIA</p></blockquote></li><li><p><a href="http://nomadli.st">**Nomadlist:</a>
    **<em>As melhores cidades para viver e trabalhar remotamente.</em></p></li><li><p><a
    href="http://where-my-nomads.at/">**Where Nomads at:</a> **<em>Encontre nômades
    digitais e viajantes do mundo inteiro.</em></p></li><li><p><a href="http://nomadjobs.com">**Nomad
    Jobs:</a> **<em>Os melhores trabalhos à distância nas melhores startups.</em></p></li><li><p><a
    href="http://www.whatsitlikeapp.com/">**What’s It Like:</a> **<em>Ajudando os
    viajantes a decidir QUANDO partir.</em></p></li></ul><p><img src="https://cdn-images-1.medium.com/max/2000/1*MOWZlV9gH81DGflyfv1Hzw.png"
    alt="Ícone por New Haircut [http://thenounproject.com/term/mark/97562/](http://thenounproject.com/term/mark/97562/)"><em>Ícone
    por New Haircut <a href="http://thenounproject.com/term/mark/97562/">http://thenounproject.com/term/mark/97562/</a></em></p><h2>→
    Descoberta &amp; Aprendizado←</h2><blockquote><p>A. FERRAMENTAS DE DESCOBERTA
    &amp; STARTUPS</p></blockquote><ul><li><p><a href="http://www.producthunt.com/">**Product
    Hunt:</a> **<em>Curadoria dos melhores produtos novos, todos os dias.</em></p></li><li><p><a
    href="https://angel.co/">**Angellist:</a> **<em>Onde o mundo encontra startups.</em></p></li><li><p><a
    href="http://betalist.com/">**Beta List:</a> **<em>Descubra e tenha acesso pioneiro
    às startups do futuro.</em></p></li><li><p><a href="http://startupli.st/">**StartupLi.st:</a>
    **<em>Encontre. Siga. Recomende startups.</em></p></li><li><p><a href="http://www.startups-list.com/">**Startups
    List:</a> **<em>Coleções das melhores startups em diferentes locais.</em></p></li><li><p><a
    href="http://erlibird.com">**Erli Bird:</a>** <em>Onde nascem excelentes produtos.</em></p><blockquote><p>B.
    CRIAÇÃO EM EQUIPE</p></blockquote></li><li><p><a href="https://assembly.com/discover">**Assembly:</a>
    **<em>Co-criação de novas ideias, não importa onde estejam.</em></p></li><li><p><a
    href="https://www.cofounderslab.com/">**CoFoundersLab:</a> **<em>Encontre um co-fundador
    em qualquer cidade e qualquer indústria.</em></p></li><li><p><a href="http://www.founder2be.com/">**Founder2be:</a>
    **<em>Encontre um co-fundador para a sua startup.</em></p><blockquote><p>C. APRENDIZADO</p></blockquote></li><li><p><a
    href="http://www.skillshare.com/">**Skillshare:</a> **<em>Liberte sua criatividade
    com aulas e projetos gratuitos na web.</em></p></li><li><p><a href="https://www.khanacademy.org">**Khan
    Academy:</a> **<em>Educação gratuita de nível internacional para qualquer pessoa,
    em qualquer lugar.</em></p></li><li><p><a href="https://www.coursera.org/">**Coursera:</a>
    **<em>Cursos gratuitos pela Internet, oferecidos por mais de 80 universidades
    e instituições de destaque.</em></p></li><li><p><a href="http://www.codecademy.com/">**Codecademy:</a>
    **<em>Aprenda a programar interativamente, de graça.</em></p></li><li><p>Como
    abrir uma startup: <a href="https://itunes.apple.com/us/podcast/how-to-start-a-startup/id922398209?mt=2">**Podcast
    em áudio</a> <strong>ou <a href="https://startupclass.co/">**Curso online</a></strong></p></li><li><p><a
    href="http://startupnotes.org/">**Startup Notes:</a> **<em>Startup Notes convida
    grandes fundadores a contarem suas histórias.</em></p></li><li><p><a href="http://how.co/">**The
    How:</a> **<em>Aprenda com empreendedores</em></p></li><li><p><a href="http://launchthisyear.com/">**Launch
    This Year:</a> **<em>Um guia para ajudá-lo a lançar seu negócio online.</em></p></li><li><p><a
    href="http://closedclub.co/">**Closed Club:</a> **<em>Pesquise startups que encerraram
    suas atividades e aprenda porque fizeram isso.</em></p></li><li><p><a href="http://startuptalks.tv/">**Startup
    Talks:</a> **<em>Uma seleção de vídeos sobre startups.</em></p></li><li><p><a
    href="http://rocketship.fm/">**Rocketship.fm:</a> **<em>Aprenda com empreendedores
    de sucesso toda semana.</em></p></li><li><p><a href="http://resrc.io/">**reSRC.io:</a>
    **<em>Todos os recursos gratuitos para aprender programação.</em></p><blockquote><p>D.
    NEWSLETTERS QUE NÃO SÃO UM SACO</p></blockquote></li><li><p><a href="http://email1k.com/">**Email1K:</a>
    **<em>Um curso grátis de 30 dias para dobrar sua lista de emails</em></p></li><li><p><a
    href="http://designforhackers.com/">**Design for Hackers:</a> **<em>12 semanas
    de aprendizado em design, direto na sua caixa de entrada.</em></p></li><li><p><a
    href="https://www.startupdigest.com/">**Startup Digest:</a> **<em>Uma newsletter
    personalizada para tudo o que é relacionado a startups na sua área.</em></p></li><li><p><a
    href="http://mattermark.com/app/Newsletter">**Mattermark Daily:</a> **<em>Newsletter
    com curadoria de investidores e fundadores de startups.</em></p></li><li><p><a
    href="http://doubleyourfreelancing.com/free-pricing-course/">**ChargeWhatYou’reWorth:</a>
    **<em>Um curso gratuito que lhe ensina a cobrar pelo quanto você vale.</em></p></li><li><p><a
    href="http://www.productpsychology.com/">**Product Psychology:</a> **<em>Lições
    sobre comportamento do usuário.</em></p></li><li><p><a href="http://www.theuxnewsletter.com/">**UX
    Newsletter:</a> **<em>Histórias de pesquisa, design e criação.</em></p></li><li><p><a
    href="http://uxdesignweekly.com/">**UX Design Weekly:</a> **<em>Os melhores links
    sobre experiência do usuário, toda semana.</em></p><blockquote><p>E. UTILIDADES</p></blockquote></li><li><p><a
    href="http://foundrs.com/">**Foundrs:</a> **<em>Calcula a porcentagem destinada
    a cada co-fundador.</em></p></li><li><p><a href="http://ad-spend-calculator.qwilr.com/">**Ad
    Spend Calculator:</a> **<em>A minha startup deve pagar por publicidade?</em></p></li><li><p><a
    href="http://howmuchtomakeanapp.com/">**HowMuchToMakeAnApp:</a> **<em>Calcule
    o custo de um aplicativo móvel.</em></p></li><li><p><a href="http://howmuchtomakeanapp.com/build-a-website-vs-app/">**App
    vs. Website:</a>** <em>Você deve fazer um app ou um site?</em></p></li><li><p><a
    href="http://pitcherific.com/">**Pitcherific:</a>*** Pitcherific lhe ajuda a criar,
    treinar e melhorar seu pitch.*</p><blockquote><h1><strong>Se você gostou do meu
    artigo, significaria muito para mim se você o recomendasse.</strong></h1></blockquote></li></ul><p>Você
    pode me encontrar em <a href="http://alimese.com">meu website</a> ou no <a href="http://facebook.com/alimeseu">Facebook</a>,
    <a href="http://twitter.com/meseali">Twitter</a> ou <a href="http://instagram.com/ali.mese">Instagram</a>.</p><p><em>Gostou
    do texto? Então clique no botão *</em><em>Recommend</em>*<em>, logo abaixo.Fazendo
    isso, você ajuda esta história a ser encontrada por mais pessoas.</em></p><p><em>Não
    tem conta no *Medium</em>? Que tal fazer login <a href="https://medium.com/m/signin?redirect=https%3A%2F%2Fmedium.com%3A443%2F&source=nav_signup">clicando
    aqui</a>? Leva um segundo. Após fazer isso, você pode seguir a publicação oficial
    do Medium Brasil e receber todos os dias nossas atualizações. <a href="https://medium.com/brasil">Clique
    e siga o Medium Brasil</a>. ☺*</p><pre><code>Siga o Medium Brasil | [Twitter](https://twitter.com/MediumBrazil)
    ─ [Facebook](https://www.facebook.com/pages/Medium-Brasil/1468266196766987) ─
    [RSS](https://medium.com/feed/brasil) ─ [Canal oficial](https://medium.com/brasil)</code></pre><p><a
    href="https://medium.com/p/6a3b1e426f3c"><strong>Como eu abri uma startup enquanto
    viajava por 20 países</strong><em>Estou viajando porque é mais barato, mais produtivo
    e mais inspirador do que ficar sentado no mesmo lugar.</em>medium.com</a><a href="https://medium.com/p/58af3e8c9dec"><strong>Guia
    Definitivo de Marketing para Seres Humanos</strong><em>Três lições simples de
    como criar uma marca de verdade impactando positivamente a vida das pessoas.</em>medium.com</a><a
    href="https://medium.com/p/f39dfc9b4629"><strong>Por que Criativos Talentosos
    Estão Deixando sua Agência de Merda</strong><em>“O êxodo de talentos sobre o qual
    ouvíamos muito nas escalas executivas e diretivas agora está descendo para os
    jovens…</em>medium.com</a></p>'
  :author: Medium Brasil
  :topic: startups
- :url: https://thinkgrowth.org/why-successful-startups-stumble-at-40-employees-66312ac70fba?source=search_post---------7
  :title: Why Successful Startups Stumble at 40+ Employees
  :content: "<p>Why Successful Startups Stumble at 40+ Employees</p><p>Last week I
    got a call from Patrick an ex-student I hadn’t heard from for 8 years. He was
    now the CEO of a company and wanted to talk about what he admitted was a “first
    world” problem. Over breakfast he got me up to date on his life since school (two
    non-CEO roles in startups,) but he wanted to talk about his third startup — the
    one he and two co-founders had started.</p><p>“We’re at 70 people, and we’ll do
    $40 million in revenue this year and should get to cash flow breakeven this quarter.
    ”</p><p>It sounded like he was living the dream. I was trying to figure out why
    we were meeting. But then he told me all about the tough decisions, the pivots
    and how he had to fire his best friend he had to do to get to where he was. He
    had been through heck and back.</p><p>“I made it this far,” he said, ”and my board
    agreed they’d bet on me to take it to scale. I’m going to double my headcount
    in the next 3 quarters. The problem is where’s the playbook? There were plenty
    of books for what to do as a startup, and lots of advice of what to do if I was
    running a large public company, but there’s nothing that describes how to deal
    with the issues of growing a company. I feel like I’m just driving without a roadmap.
    What should I be reading/doing?”</p><p>I explained to Patrick that startups go
    through a series of steps before they become a large company.</p><p><img src=\"https://cdn-images-1.medium.com/max/2800/1*oVcUVHqmmRJP86KuN7NHVg.jpeg\"
    alt=\"\"></p><h3><strong>Search</strong></h3><p>In this first step, the goal of
    a startup is to search for a repeatable and scalable business model. It typically
    takes multiple iterations and pivots to find product/market fit — the match between
    what you’re building and who will buy it.</p><p>You’ll realize you’re ready to
    exit the <em>Search</em> step when you have customer validation:</p><ul><li><p>You’ve
    found a sales channel that matches how the customer wants to buy and the costs
    of using that channel are understood</p></li><li><p>Sales (and/or customer acquisition
    in a multi-sided market) becomes achievable by a sales force (or network effect
    or virality) without heroic efforts from the founders</p></li><li><p>Customer
    acquisition and activation are understood and Customer Acquisition Cost (CAC)
    and Life Time Value (LTV) can be estimated for the next 18 months</p><blockquote><h1>Startups
    in <em>Search</em> mode have little process and lots of “do what it takes.” Company
    size is typically less than 40 people and may have been funded with a seed round
    and/or Series A.</h1></blockquote></li></ul><p><strong>Most startups die here.</strong></p><h3><strong>Build</strong></h3><p>At
    about north of 40 people a company needs to change into one that can scale by
    growing customers/users/payers at a rate that allows the company to:</p><ul><li><p>achieve
    positive cash flow (make more money than it spends) and/or</p></li><li><p>generate
    users at a rate that can be monetized…</p><blockquote><h1>Unfortunately as you
    hire more people, the casual, informal “do what it takes” culture, which worked
    so well at less than 40 people becomes chaotic and less effective.</h1></blockquote></li></ul><p>Now
    the organization needs to think about:</p><ul><li><p>culture</p></li><li><p>training</p></li><li><p>product
    management</p></li><li><p>processes and procedures, (i.e. writing the HR manual,
    sales comp plan, expense reports, branding guidelines, etc.)</p></li></ul><p>This
    <em>Build</em> phase typically begin with around 40 employees and will last to
    at least 175 and in some cases up to 700 employees. Venture-backed startups will
    often have a Series C or D or later rounds during this phase.</p><h3><strong>Grow</strong></h3><p>In
    the <em>Grow</em> phase the company has achieved liquidity (an IPO, or has been
    bought or merged into a larger company event) and is growing by repeatable processes.
    The full suite of Key Performance Indicators (KPI’s) processes and procedures
    are in place.</p><p>At this stage, a founder is just lucky if you’re not the ex-CEO.</p><h2><strong>What
    breaks in the Build stage?</strong></h2><p>I pointed out to Patrick that he was
    in the middle of the transition from <em>Search</em> to <em>Build</em>. And I
    suggested that he was lucky to be encountering this problem as a 21st century
    startup rather than one a decade or two ago.</p><p>In the past, when venture-funded
    startups told their investors they’d found a profitable business model, the first
    thing VC’s would do is to start looking for an “operating exec” — usually an MBA
    who would act as the designated “adult” and take over the transition from <em>Search</em>
    to <em>Build</em>. The belief then was that most founders couldn’t acquire the
    skills rapidly enough to steer the company through this phase. The good news is
    that <a href=\"http://a16z.com/\">VC firms are beginning to appreciate</a> the
    value of keeping the founder in place.</p><p>I reminded Patrick that the reality
    is startups are inherently chaotic. As a founder he got the company to the Build
    phase because he was able to think creatively and independently since conditions
    on the ground changed so rapidly that the original well-thought-out business plan
    became irrelevant.</p><p>He managed chaos and uncertainty, and took action rather
    than waiting around for someone on his board to tell him what to do, and his decisions
    kept his company from dying.</p><blockquote><h1>Now Patrick would have to shift
    himself and the company. In this <em>Build</em> phase he was going to have to
    focus on how to thoughtfully start instituting things he took for granted in the
    <em>Search</em> phase.</h1></blockquote><p>He was going to have *build into his
    organization *training, hiring standards, sales processes and compensation programs,
    all the while engineering a culture that still emphasized the value of its people.</p><p>Patrick
    took a bunch of notes, and said, “You know when I figuring out how to search for
    a business model, I read the <a href=\"http://www.amazon.com/gp/product/0984999302/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0984999302&linkCode=as2&tag=wwwsteveblank-20\">Startup
    Owners Manual</a> and <a href=\"http://www.amazon.com/gp/product/0470876417?ie=UTF8&tag=wwwsteveblank-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0470876417\">Business
    Model Generation</a>, but where are the books for this phase? And come to think
    of it, in the <em>Search</em> phase, there are Incubators and Accelerators and
    even your <a href=\"https://steveblank.com/category/nsf-national-science-foundation/\">Lean
    LaunchPad/I-Corps</a> class, to give us practice. What resources are there for
    me to learn how to guide my company through the <em>Build</em> phase?”</p><h3><strong>Surviving
    the build stage</strong></h3><p>I realized Patrick just hit the nail on the head.
    As chaotic as the <em>Search</em> phase is in a startup, you are never alone.
    There are tons of advice and resources. But in the past, the <em>Build</em> phase
    was treated like a smaller version of a large company. Operating execs hired by
    investors used the tools they learned in business school or larger corporations.</p><p>I
    suggested it was time for Patrick to consider four things:</p><ol><li><p>Read
    the sparse but available literature that did exist about this phase. For example,
    <a href=\"http://www.amazon.com/gp/product/0989200507/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0989200507&linkCode=as2&tag=wwwsteveblank-20\">The
    Four Steps to Epiphany</a> Chapter 6, <em>Company Building</em>, Ben Horowitz’s
    <a href=\"http://www.amazon.com/gp/product/0062273205/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0062273205&linkCode=as2&tag=wwwsteveblank-20&linkId=KYWF4Y65PKCUI4O6\">The
    Hard Thing About Hard Things</a> (a series of essays) or Geoff Moore’s classic
    <a href=\"http://www.amazon.com/gp/product/0062292986/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0062292986&linkCode=as2&tag=wwwsteveblank-20&linkId=OABYX3BYINAM6TRY\">Crossing
    the Chasm</a></p></li><li><p>If he already had an advisory board (formal and/or
    informal), add CEO’s who have been through this phase. If not, start one</p></li><li><p>Get
    a one-one CEO coach or join a CEO peer group</p></li><li><p>And potentially the
    most difficult, think about upgrading his board by transitioning out board members
    whose expertise was solely rooted in the *Search *stage</p></li></ol><p>As we
    finished our coffees, Patrick said, “Thanks for the advice, though I wish someone
    had a methodology as simple as the <a href=\"https://hbr.org/2013/05/why-the-lean-start-up-changes-everything/ar/1\">Lean
    Startup</a> for how to scale my company.”</p><h3><strong>Lessons Learned</strong></h3><ul><li><p>Startups
    go from <em>Search</em> to <em>Build</em> to <em>Scale</em></p></li><li><p>The
    <em>Search</em> to <em>Build</em> phase happens ~40 people</p></li><li><p>Very
    different management tools and techniques are needed to guide your company through
    this new phase</p></li><li><p>You need to reset your board and your peer advisers
    to people who know how to manage building a company versus starting one</p></li></ul><h3>Learned
    something? Click the \U0001F44F to say “thanks!” and help others find this article.</h3><p><em>Read
    more Steve Blank posts at <a href=\"https://steveblank.com/2015/02/12/what-do-i-do-now/\">steveblank.com</a>.</em></p><p><img
    src=\"https://cdn-images-1.medium.com/max/2000/1*ucu244GkLSTICnWFq6brYQ.png\"
    alt=\"\"></p>"
  :author: unknown
  :topic: startups
- :url: https://marker.medium.com/why-startups-go-to-hell-at-50-employees-and-four-ways-to-fight-it-dcf8aa06e0fb?source=search_post---------8
  :title: Why Startups Fall Apart at 50 Employees
  :content: '<p>Coaching your business from its teen phase to adulthood</p><p><img
    src="https://cdn-images-1.medium.com/max/13440/1*bvfNJpysOtpWCnr3hZbtSA.jpeg"
    alt="Photo: Luis Alvarez/Getty Images"><em>Photo: Luis Alvarez/Getty Images</em></p><p>Ask
    anyone who’s worked at more than one startup and they’ll probably tell you the
    same thing: Young companies start to go off the rails once they hit 50 employees.
    I call this the “teenager” startup phase, and I’ve been there several times, both
    as an employee and an executive.</p><p>What does this look like?</p><p><strong>Employee
    one through 10:</strong> At a certain point, the original employees stop learning
    new people’s names. They won’t come right out and say it but they start to resent
    having to show yet another noob how to do the same simple things. Their tolerance
    for mistakes, even for the same mistakes they once made themselves, goes into
    the toilet.</p><p><strong>Employee 10 through 25:</strong> The second tier of
    employees then starts to form small, protective cliques. They may occasionally
    drop references to the “good old days.” They place a growing importance on things
    like titles and status. Discussions might start to percolate about adopting the
    title prefix “Senior.”</p><p><strong>Employee 26 through 39:</strong> This is
    the group where power plays start to happen. If the “teens” are going to form
    tribes, the late-twenties and thirties are going to start raising hell against
    the old guard.</p><p><strong>Employees 40 through 49:</strong> WTF is going on?</p><p>While
    this scenario may not be true for every employee in every group, it always happens
    to at least a few people after a startup hits 50 employees. Like I said, I’ve
    been in each group and I’ve exhibited each of these behaviors, so I’m not judging
    here.</p><p>Well, maybe I’m judging a little. But we need to talk about what to
    do when your company feels like it’s going off the rails. We need to get our teenage
    startups out of the house and into the world like functioning adults.</p><p>Hitting
    chaos at 50 employees could mean several positive things. For one, it definitely
    means a company is growing, likely faster than planned. And as long as the growth
    doesn’t get too far out of hand, that’s a good problem to have.</p><p>If growth
    is indeed happening and it’s organic, your company has probably already developed
    an internal culture, lexicon, and set of operations that may not be documented
    but are definitely understood. Communication probably happens more on a face-to-face
    and on-demand basis than in memos and meetings, which means there’s likely not
    a lot of time wasted getting everyone on the same page.</p><p>Chaos is also a
    sign that your company’s executives are spending time building the product, penetrating
    the market, and satisfying customers. They’re probably not hung up on the structure
    of the company itself. But the chaos is also definitely a sign that it’s time
    to start paying attention to this gawky teenager of a company before it rebels
    and runs away.</p><blockquote><h1>Even if everything goes right, things will go
    wrong.</h1></blockquote><p>As any parent knows, there’s no cure for the teenage
    years; we just have to wait it out. There’s an old buzz theme about chaos that
    I hate: “Storming, forming, norming, performing.” It applies here, but I hate
    it because I don’t think it actually helps us.</p><p>We can’t cure chaos. But
    we can put measures in place to survive the storm. Here are the measures I’m most
    familiar with or intrigued by:</p><h2>Do nothing</h2><p>This is a valid option.
    A lot of companies do this until they start losing people. And by “do nothing,”
    I don’t mean doing absolutely nothing. That’s impossible because issues will come
    up and we can’t hide from them. Instead, “doing nothing” means proactively doing
    nothing and then solving each issue as it arises.</p><p>I don’t recommend this
    solution.</p><p>Think about what happens when we start to hand out titles like
    “senior” without rules for how those titles get handed out. Let’s talk about meetings.
    We’ll need rules as to when and how they get created. Otherwise, everyone’s calendar
    will eventually fill up, conference rooms will become scarce, and nothing will
    ever get done. Even things like working remotely need to be considered. If we
    don’t have standards in place, and even if everything goes right, things will
    go wrong. I’m not just talking about abuse here; I’m also talking about how the
    rest of the team can be effective when one or more of their co-workers isn’t in
    the same place.</p><p>Startups are usually scared of becoming stale, corporate,
    or heavy-handed. And I get it: I hate those things too. But at some point, structure
    becomes mandatory and it’s better to be proactive about it.</p><p>*<em>What I’d
    rather do: *</em>Centralize and be transparent. At the very least, create a single
    truth for rules, processes, guidelines, and FAQs. Make sure everyone has access
    to those documents. Then be transparent about why you’re doing things the way
    you do them. This isn’t just about rules; it’s also about the company’s overall
    philosophy.</p><h2>Hire tons of middle managers</h2><p>This is the polar opposite
    of the “do nothing” strategy, and I’d compare it to using a sledgehammer to crack
    a nut. This strategy usually happens way too early in a company’s growth cycle.
    Plus, hiring more people to manage other people means wasting a lot of productivity
    for a little bit of order.</p><p>If we’re hiring managers from outside the company
    because they have experience leading teams at larger companies, they’ll have to
    integrate themselves and learn how we operate before they can be effective. Often
    these people will try to bring their older, larger company’s schema with them,
    which doesn’t fit.</p><p>But if we promote from within, we’re likely burdening
    our best people with something we didn’t hire them for. For example, often a CTO
    will take the best developer and say: “Here, manage the rest of your team for
    50 percent of your time.” Then the developer’s productivity bottoms out on the
    coding side, and the rest of their team becomes resentful on the management side.</p><p>*<em>What
    I’d rather do: *</em>Create owners and team leads instead of bosses. At 50 employees,
    people usually don’t need management. However, things and processes do. This includes
    the product, the front-end development, the hiring, the invoicing, and whatever
    else you can think of. Give various people ownership of those things or make them
    team leads of those processes.</p><h2>Do what that other company did</h2><p>I’m
    all for stealing smart ways of doing things and adopting them as our own. I steal
    bits of Agile for methodology. I nick stuff from Amazon all the time for strategy.
    I really like what Lyft is doing with UX. But do you remember the trend from about
    three years ago when several Silicon Valley companies tried to solve income disparity
    by making everyone’s salary public? Yeah. That was a valid problem but there’s
    no way you can convince me that making every salary public was the solution. That
    strategy may be working for them (or not), but I don’t have any evidence that
    it will work for my company.</p><p>Trendy solutions come and go. Open workspaces
    were all the rage to promote teamwork, then earbuds happened. Unlimited vacation
    is starting to wane as a recruiting tool. On the other side, parental leave for
    work-life balance looks like it will stick. My point is that just because one,
    some, or even most companies are adopting a policy, that doesn’t mean it will
    work for you.</p><p><strong>What I’d rather do:</strong> Divide and experiment.
    Take pieces of policies from different companies and run small experiments to
    see if they’ll work in your environment.</p><h2>Stop hiring and outsource</h2><p>This
    strategy says: Once we hit a certain number of employees, we can stop hiring and
    outsource everything. This could include some clean breaks, like outsourcing all
    of development, all of human resources, or all of support. It could also mean
    adding external resources to internal teams, like consultants and independent
    contractors, offshore teams, and third-party service providers.</p><p>This strategy
    will let you run a tight ship. You can expand and contract on the rocky growth
    road without cutting headcount. On the other hand, 50 employees is usually just
    a stepping stone to 100 employees or 1,000 or sometimes even more than that. There
    are huge risks in having all that knowledge and experience out-of-house.</p><p>This
    strategy is also trickier to implement than it sounds. We’ll have to make surgical
    cuts as we grow and once we hit the 49th employee, what happens next? What happens
    when we find that next awesome hire? Do we need to let someone else go, or should
    we wait for someone to quit?</p><p><strong>What I’d rather do:</strong> Lease
    with the option to buy. A lot of startups bring on contractors and part-timers
    who eventually become employees—but only when there’s enough money, enough runway,
    and enough need for that resource. I built two of my startups that way. Do this
    on a larger scale as you grow, absorbing teams when it makes sense. Run each team
    like an independent organization within the company.</p><p>If there’s a cure for
    chaos at 50 employees, it might have its roots in that last solution. What if
    a company organizational chart didn’t flow vertically from top to bottom but rather
    looked like a series of pods? Those pods could have their own pods if needed.
    Then company leaders would exist as single-person pod with spokes to the larger
    pods.</p><p>Each pod would be run independently, like its own little company within
    the company. Then the outsourced resources could be their own pods, and they could
    come, go, and be absorbed as necessary.</p><p>I don’t know if this strategy would
    work. It might be wild, and it’s certainly hard to put on a sheet of paper. I’m
    sure it comes with its own set of problems. But my point is if we want a cure
    for the chaos of 50 employees, we need to build a different kind of company that
    runs in a unique way from day one.</p><p>And until that happens, we need to keep
    an eye on our teenage startup until it becomes a functioning adult.</p>'
  :author: Remote Work Is Killing the Hidden Trillion-Dollar Office Economy
  :topic: startups
